

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 08 13:38:34 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72  0000                     
    73                           ; Version 2.40
    74                           ; Generated 17/11/2021 GMT
    75                           ; 
    76                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK0
   110  003EEE                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for Reloj_Calendario@Date
   114  003EEE  44                 	db	68
   115  003EEF  41                 	db	65
   116  003EF0  54                 	db	84
   117  003EF1  45                 	db	69
   118  003EF2  3A                 	db	58
   119  003EF3  20                 	db	32
   120  003EF4  30                 	db	48
   121  003EF5  30                 	db	48
   122  003EF6  2F                 	db	47
   123  003EF7  30                 	db	48
   124  003EF8  30                 	db	48
   125  003EF9  2F                 	db	47
   126  003EFA  32                 	db	50
   127  003EFB  30                 	db	48
   128  003EFC  30                 	db	48
   129  003EFD  30                 	db	48
   130  003EFE  00                 	db	0
   131                           
   132                           ;initializer for Reloj_Calendario@Time
   133  003EFF  54                 	db	84
   134  003F00  49                 	db	73
   135  003F01  4D                 	db	77
   136  003F02  45                 	db	69
   137  003F03  3A                 	db	58
   138  003F04  20                 	db	32
   139  003F05  30                 	db	48
   140  003F06  30                 	db	48
   141  003F07  3A                 	db	58
   142  003F08  30                 	db	48
   143  003F09  30                 	db	48
   144  003F0A  3A                 	db	58
   145  003F0B  30                 	db	48
   146  003F0C  30                 	db	48
   147  003F0D  00                 	db	0
   148                           
   149                           	psect	idataBANK1
   150  003E98                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for _buffer_TX
   154  003E98  48                 	db	72
   155  003E99  4F                 	db	79
   156  003E9A  52                 	db	82
   157  003E9B  41                 	db	65
   158  003E9C  3A                 	db	58
   159  003E9D  20                 	db	32
   160  003E9E  78                 	db	120
   161  003E9F  78                 	db	120
   162  003EA0  3A                 	db	58
   163  003EA1  78                 	db	120
   164  003EA2  78                 	db	120
   165  003EA3  20                 	db	32
   166  003EA4  44                 	db	68
   167  003EA5  41                 	db	65
   168  003EA6  54                 	db	84
   169  003EA7  45                 	db	69
   170  003EA8  3A                 	db	58
   171  003EA9  20                 	db	32
   172  003EAA  78                 	db	120
   173  003EAB  78                 	db	120
   174  003EAC  2F                 	db	47
   175  003EAD  78                 	db	120
   176  003EAE  78                 	db	120
   177  003EAF  2F                 	db	47
   178  003EB0  78                 	db	120
   179  003EB1  78                 	db	120
   180  003EB2  20                 	db	32
   181  003EB3  54                 	db	84
   182  003EB4  45                 	db	69
   183  003EB5  4D                 	db	77
   184  003EB6  50                 	db	80
   185  003EB7  3A                 	db	58
   186  003EB8  20                 	db	32
   187  003EB9  78                 	db	120
   188  003EBA  78                 	db	120
   189  003EBB  2C                 	db	44
   190  003EBC  78                 	db	120
   191  003EBD  78                 	db	120
   192  003EBE  20                 	db	32
   193  003EBF  67                 	db	103
   194  003EC0  72                 	db	114
   195  003EC1  61                 	db	97
   196  003EC2  64                 	db	100
   197  003EC3  6F                 	db	111
   198  003EC4  73                 	db	115
   199  003EC5  0D                 	db	13
   200  003EC6  0A                 	db	10
   201  003EC7  00                 	db	0
   202  0000                     _ADCON0	set	4034
   203  0000                     _ADRESL	set	4035
   204  0000                     _ADRESH	set	4036
   205  0000                     _TRISBbits	set	3987
   206  0000                     _ADCON0bits	set	4034
   207  0000                     _SSPCON2bits	set	4037
   208  0000                     _RB5	set	31757
   209  0000                     _RB4	set	31756
   210  0000                     _RB3	set	31755
   211  0000                     _GO	set	32273
   212  0000                     _ADON	set	32272
   213  0000                     _LATCbits	set	3979
   214  0000                     _TRISA	set	3986
   215  0000                     _TRISB	set	3987
   216  0000                     _RB2	set	31754
   217  0000                     _TRISDbits	set	3989
   218  0000                     _TRISCbits	set	3988
   219  0000                     _PIR1bits	set	3998
   220  0000                     _SSPCON2	set	4037
   221  0000                     _SSPCON1bits	set	4038
   222  0000                     _SSPSTATbits	set	4039
   223  0000                     _OSCCONbits	set	4051
   224  0000                     _SSPBUF	set	4041
   225  0000                     _SSPADD	set	4040
   226  0000                     _RCSTAbits	set	4011
   227  0000                     _TXSTAbits	set	4012
   228  0000                     _ADCON2	set	4032
   229  0000                     _ADCON1	set	4033
   230  0000                     _LATDbits	set	3980
   231  0000                     _SPBRG	set	4015
   232  0000                     _BAUDCONbits	set	4024
   233  0000                     _TXREG	set	4013
   234                           
   235                           	psect	smallconst
   236  000800                     __psmallconst:
   237                           	callstack 0
   238  000800  00                 	db	0
   239  000801                     STR_1:
   240  000801  54                 	db	84	;'T'
   241  000802  65                 	db	101	;'e'
   242  000803  6D                 	db	109	;'m'
   243  000804  70                 	db	112	;'p'
   244  000805  65                 	db	101	;'e'
   245  000806  72                 	db	114	;'r'
   246  000807  61                 	db	97	;'a'
   247  000808  74                 	db	116	;'t'
   248  000809  75                 	db	117	;'u'
   249  00080A  72                 	db	114	;'r'
   250  00080B  61                 	db	97	;'a'
   251  00080C  3A                 	db	58	;':'
   252  00080D  00                 	db	0
   253  00080E                     STR_2:
   254  00080E  25                 	db	37
   255  00080F  2E                 	db	46
   256  000810  32                 	db	50	;'2'
   257  000811  66                 	db	102	;'f'
   258  000812  00                 	db	0
   259  000813                     STR_4:
   260  000813  49                 	db	73	;'I'
   261  000814  4E                 	db	78	;'N'
   262  000815  46                 	db	70	;'F'
   263  000816  00                 	db	0
   264  000817                     STR_8:
   265  000817  4E                 	db	78	;'N'
   266  000818  41                 	db	65	;'A'
   267  000819  4E                 	db	78	;'N'
   268  00081A  00                 	db	0
   269  00081B                     STR_5:
   270  00081B  69                 	db	105	;'i'
   271  00081C  6E                 	db	110	;'n'
   272  00081D  66                 	db	102	;'f'
   273  00081E  00                 	db	0
   274  00081F                     STR_9:
   275  00081F  6E                 	db	110	;'n'
   276  000820  61                 	db	97	;'a'
   277  000821  6E                 	db	110	;'n'
   278  000822  00                 	db	0
   279  000823                     STR_12:
   280  000823  6C                 	db	108	;'l'
   281  000824  66                 	db	102	;'f'
   282  000825  00                 	db	0
   283  000826                     STR_3:
   284  000826  43                 	db	67	;'C'
   285  000827  00                 	db	0
   286  000828  00                 	db	0	; dummy byte at the end
   287  0000                     
   288                           ; #config settings
   289                           
   290                           	psect	cinit
   291  003A78                     __pcinit:
   292                           	callstack 0
   293  003A78                     start_initialization:
   294                           	callstack 0
   295  003A78                     __initialization:
   296                           	callstack 0
   297                           
   298                           ; Initialize objects allocated to BANK1 (48 bytes)
   299                           ; load TBLPTR registers with __pidataBANK1
   300  003A78  0E98               	movlw	low __pidataBANK1
   301  003A7A  6EF6               	movwf	tblptrl,c
   302  003A7C  0E3E               	movlw	high __pidataBANK1
   303  003A7E  6EF7               	movwf	tblptrh,c
   304  003A80  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   305  003A82  6EF8               	movwf	tblptru,c
   306  003A84  EE01  F050         	lfsr	0,__pdataBANK1
   307  003A88  EE10 F030          	lfsr	1,48
   308  003A8C                     copy_data0:
   309  003A8C  0009               	tblrd		*+
   310  003A8E  CFF5 FFEE          	movff	tablat,postinc0
   311  003A92  50E5               	movf	postdec1,w,c
   312  003A94  50E1               	movf	fsr1l,w,c
   313  003A96  E1FA               	bnz	copy_data0
   314                           
   315                           ; Initialize objects allocated to BANK0 (32 bytes)
   316                           ; load TBLPTR registers with __pidataBANK0
   317  003A98  0EEE               	movlw	low __pidataBANK0
   318  003A9A  6EF6               	movwf	tblptrl,c
   319  003A9C  0E3E               	movlw	high __pidataBANK0
   320  003A9E  6EF7               	movwf	tblptrh,c
   321  003AA0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   322  003AA2  6EF8               	movwf	tblptru,c
   323  003AA4  EE00  F0BF         	lfsr	0,__pdataBANK0
   324  003AA8  EE10 F020          	lfsr	1,32
   325  003AAC                     copy_data1:
   326  003AAC  0009               	tblrd		*+
   327  003AAE  CFF5 FFEE          	movff	tablat,postinc0
   328  003AB2  50E5               	movf	postdec1,w,c
   329  003AB4  50E1               	movf	fsr1l,w,c
   330  003AB6  E1FA               	bnz	copy_data1
   331                           
   332                           ; Clear objects allocated to BANK1 (80 bytes)
   333  003AB8  EE01  F000         	lfsr	0,__pbssBANK1
   334  003ABC  0E50               	movlw	80
   335  003ABE                     clear_0:
   336  003ABE  6AEE               	clrf	postinc0,c
   337  003AC0  06E8               	decf	wreg,f,c
   338  003AC2  E1FD               	bnz	clear_0
   339                           
   340                           ; Clear objects allocated to BITBANK0 (1 bytes)
   341  003AC4  0100               	movlb	0
   342  003AC6  6BFA               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   343                           
   344                           ; Clear objects allocated to BANK0 (27 bytes)
   345  003AC8  EE00  F0DF         	lfsr	0,__pbssBANK0
   346  003ACC  0E1B               	movlw	27
   347  003ACE                     clear_1:
   348  003ACE  6AEE               	clrf	postinc0,c
   349  003AD0  06E8               	decf	wreg,f,c
   350  003AD2  E1FD               	bnz	clear_1
   351  003AD4                     end_of_initialization:
   352                           	callstack 0
   353  003AD4                     __end_of__initialization:
   354                           	callstack 0
   355  003AD4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   356  003AD6  6EF8               	movwf	tblptru,c
   357  003AD8  0100               	movlb	0
   358  003ADA  EF5B  F018         	goto	_main	;jump to C main() function
   359                           
   360                           	psect	bitbssBANK0
   361  0007D0                     __pbitbssBANK0:
   362                           	callstack 0
   363  0007D0                     _RS:
   364                           	callstack 0
   365  0007D0                     	ds	1
   366                           
   367                           	psect	bssBANK0
   368  0000DF                     __pbssBANK0:
   369                           	callstack 0
   370  0000DF                     floorf@F526:
   371                           	callstack 0
   372  0000DF                     	ds	4
   373  0000E3                     ___fpclassifyf@F465:
   374                           	callstack 0
   375  0000E3                     	ds	4
   376  0000E7                     _nout:
   377                           	callstack 0
   378  0000E7                     	ds	2
   379  0000E9                     _width:
   380                           	callstack 0
   381  0000E9                     	ds	2
   382  0000EB                     _prec:
   383                           	callstack 0
   384  0000EB                     	ds	2
   385  0000ED                     _flags:
   386                           	callstack 0
   387  0000ED                     	ds	2
   388  0000EF                     _i:
   389                           	callstack 0
   390  0000EF                     	ds	1
   391  0000F0                     _day:
   392                           	callstack 0
   393  0000F0                     	ds	1
   394  0000F1                     _month:
   395                           	callstack 0
   396  0000F1                     	ds	1
   397  0000F2                     _year:
   398                           	callstack 0
   399  0000F2                     	ds	1
   400  0000F3                     _seconds:
   401                           	callstack 0
   402  0000F3                     	ds	1
   403  0000F4                     _minutes:
   404                           	callstack 0
   405  0000F4                     	ds	1
   406  0000F5                     _hours:
   407                           	callstack 0
   408  0000F5                     	ds	1
   409  0000F6                     Mostrar_Temperatura@temperatura:
   410                           	callstack 0
   411  0000F6                     	ds	4
   412                           
   413                           	psect	dataBANK0
   414  0000BF                     __pdataBANK0:
   415                           	callstack 0
   416  0000BF                     Reloj_Calendario@Date:
   417                           	callstack 0
   418  0000BF                     	ds	17
   419  0000D0                     Reloj_Calendario@Time:
   420                           	callstack 0
   421  0000D0                     	ds	15
   422                           
   423                           	psect	bssBANK1
   424  000100                     __pbssBANK1:
   425                           	callstack 0
   426  000100                     _dbuf:
   427                           	callstack 0
   428  000100                     	ds	80
   429                           
   430                           	psect	dataBANK1
   431  000150                     __pdataBANK1:
   432                           	callstack 0
   433  000150                     _buffer_TX:
   434                           	callstack 0
   435  000150                     	ds	48
   436                           
   437                           	psect	cstackBANK0
   438  000060                     __pcstackBANK0:
   439                           	callstack 0
   440  000060                     _efgtoa$1470:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x0
   444  000060                     	ds	2
   445  000062                     _efgtoa$1478:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2
   449  000062                     	ds	2
   450  000064                     _efgtoa$1479:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x4
   454  000064                     	ds	2
   455  000066                     efgtoa@t:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x6
   459  000066                     	ds	2
   460  000068                     efgtoa@pp:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x8
   464  000068                     	ds	2
   465  00006A                     efgtoa@ne:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xA
   469  00006A                     	ds	2
   470  00006C                     efgtoa@m:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xC
   474  00006C                     	ds	2
   475  00006E                     efgtoa@ou:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0xE
   479  00006E                     	ds	4
   480  000072                     efgtoa@d:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x12
   484  000072                     	ds	2
   485  000074                     efgtoa@sign:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x14
   489  000074                     	ds	2
   490  000076                     efgtoa@p:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0x16
   494  000076                     	ds	2
   495  000078                     efgtoa@w:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x18
   499  000078                     	ds	2
   500  00007A                     efgtoa@nmode:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x1A
   504  00007A                     	ds	1
   505  00007B                     efgtoa@mode:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x1B
   509  00007B                     	ds	1
   510  00007C                     efgtoa@h:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x1C
   514  00007C                     	ds	4
   515  000080                     efgtoa@l:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x20
   519  000080                     	ds	4
   520  000084                     efgtoa@i:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x24
   524  000084                     	ds	2
   525  000086                     efgtoa@g:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x26
   529  000086                     	ds	4
   530  00008A                     efgtoa@e:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x2A
   534  00008A                     	ds	2
   535  00008C                     efgtoa@n:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x2C
   539  00008C                     	ds	2
   540  00008E                     efgtoa@u:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x2E
   544  00008E                     	ds	4
   545  000092                     vfpfcnvrt@f:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x32
   549  000092                     	ds	4
   550  000096                     vfpfcnvrt@ct:
   551                           	callstack 0
   552                           
   553                           ; 3 bytes @ 0x36
   554  000096                     	ds	3
   555  000099                     vfpfcnvrt@c:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x39
   559  000099                     	ds	1
   560  00009A                     ?_vfprintf:
   561                           	callstack 0
   562  00009A                     vfprintf@fp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x3A
   566  00009A                     	ds	2
   567  00009C                     vfprintf@fmt:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x3C
   571  00009C                     	ds	2
   572  00009E                     vfprintf@ap:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x3E
   576  00009E                     	ds	2
   577  0000A0                     ?_sprintf:
   578                           	callstack 0
   579  0000A0                     sprintf@s:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x40
   583  0000A0                     	ds	2
   584  0000A2                     sprintf@fmt:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x42
   588  0000A2                     	ds	6
   589  0000A8                     sprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x48
   593  0000A8                     	ds	2
   594  0000AA                     sprintf@f:
   595                           	callstack 0
   596                           
   597                           ; 11 bytes @ 0x4A
   598  0000AA                     	ds	11
   599  0000B5                     Mostrar_Temperatura@value_adc:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x55
   603  0000B5                     	ds	2
   604  0000B7                     Mostrar_Temperatura@temp:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x57
   608  0000B7                     	ds	4
   609  0000BB                     ??_main:
   610                           
   611                           ; 1 bytes @ 0x5B
   612  0000BB                     	ds	2
   613  0000BD                     main@cont:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x5D
   617  0000BD                     	ds	2
   618                           
   619                           	psect	cstackCOMRAM
   620  000001                     __pcstackCOMRAM:
   621                           	callstack 0
   622  000001                     ??_LCD_Write_Nibble:
   623  000001                     ??_BCD_a_Decimal:
   624  000001                     ?_strlen:
   625                           	callstack 0
   626  000001                     ?___fpclassifyf:
   627                           	callstack 0
   628  000001                     ?_isupper:
   629                           	callstack 0
   630  000001                     ?_isdigit:
   631                           	callstack 0
   632  000001                     ?_strncmp:
   633                           	callstack 0
   634  000001                     ?_isspace:
   635                           	callstack 0
   636  000001                     ?_ADC_Read:
   637                           	callstack 0
   638  000001                     ?___wmul:
   639                           	callstack 0
   640  000001                     ?___awdiv:
   641                           	callstack 0
   642  000001                     ?___awmod:
   643                           	callstack 0
   644  000001                     ?___fladd:
   645                           	callstack 0
   646  000001                     ?___flmul:
   647                           	callstack 0
   648  000001                     ?___lldiv:
   649                           	callstack 0
   650  000001                     ?___flneg:
   651                           	callstack 0
   652  000001                     ?___fltol:
   653                           	callstack 0
   654  000001                     ?___xxtofl:
   655                           	callstack 0
   656  000001                     I2C_Write@data:
   657                           	callstack 0
   658  000001                     ADC_Read@channel:
   659                           	callstack 0
   660  000001                     ___wmul@multiplier:
   661                           	callstack 0
   662  000001                     ___awdiv@dividend:
   663                           	callstack 0
   664  000001                     ___awmod@dividend:
   665                           	callstack 0
   666  000001                     isdigit@c:
   667                           	callstack 0
   668  000001                     isspace@c:
   669                           	callstack 0
   670  000001                     isupper@c:
   671                           	callstack 0
   672  000001                     fputc@c:
   673                           	callstack 0
   674  000001                     strcpy@dest:
   675                           	callstack 0
   676  000001                     strlen@s:
   677                           	callstack 0
   678  000001                     strncmp@_l:
   679                           	callstack 0
   680  000001                     ___lldiv@dividend:
   681                           	callstack 0
   682  000001                     ___fleq@ff1:
   683                           	callstack 0
   684  000001                     ___flneg@f1:
   685                           	callstack 0
   686  000001                     ___fltol@f1:
   687                           	callstack 0
   688  000001                     ___fladd@b:
   689                           	callstack 0
   690  000001                     ___flmul@b:
   691                           	callstack 0
   692  000001                     ___xxtofl@val:
   693                           	callstack 0
   694  000001                     ___fpclassifyf@x:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x0
   698  000001                     	ds	1
   699  000002                     LCD_Write_Nibble@n:
   700                           	callstack 0
   701  000002                     BCD_a_Decimal@numero:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x1
   705  000002                     	ds	1
   706  000003                     ??_isupper:
   707  000003                     ??_isdigit:
   708  000003                     ??_isspace:
   709  000003                     ??_ADC_Read:
   710  000003                     ??_LCD_Cmd:
   711  000003                     LCD_Print@LCD_Str:
   712                           	callstack 0
   713  000003                     ___wmul@multiplicand:
   714                           	callstack 0
   715  000003                     ___awdiv@divisor:
   716                           	callstack 0
   717  000003                     ___awmod@divisor:
   718                           	callstack 0
   719  000003                     fputc@fp:
   720                           	callstack 0
   721  000003                     strcpy@src:
   722                           	callstack 0
   723  000003                     strlen@a:
   724                           	callstack 0
   725  000003                     strncmp@_r:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x2
   729  000003                     	ds	1
   730  000004                     LCD_Cmd@Command:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x3
   734  000004                     	ds	1
   735  000005                     ??_fputc:
   736  000005                     ??___fpclassifyf:
   737  000005                     ??_strcpy:
   738  000005                     ??_LCD_Print:
   739  000005                     ??_LCD_Begin:
   740  000005                     ??___fltol:
   741  000005                     ??___xxtofl:
   742  000005                     LCD_Goto@row:
   743                           	callstack 0
   744  000005                     ___awdiv@counter:
   745                           	callstack 0
   746  000005                     ___awmod@counter:
   747                           	callstack 0
   748  000005                     ___wmul@product:
   749                           	callstack 0
   750  000005                     strncmp@n:
   751                           	callstack 0
   752  000005                     ___lldiv@divisor:
   753                           	callstack 0
   754  000005                     ___fleq@ff2:
   755                           	callstack 0
   756  000005                     ___fladd@a:
   757                           	callstack 0
   758  000005                     ___flmul@a:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x4
   762  000005                     	ds	1
   763  000006                     ??_LCD_Goto:
   764  000006                     ___awdiv@sign:
   765                           	callstack 0
   766  000006                     ___awmod@sign:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x5
   770  000006                     	ds	1
   771  000007                     ??_strncmp:
   772  000007                     ?_tolower:
   773                           	callstack 0
   774  000007                     _isspace$1557:
   775                           	callstack 0
   776  000007                     ADC_Read@digital:
   777                           	callstack 0
   778  000007                     ___awdiv@quotient:
   779                           	callstack 0
   780  000007                     strcpy@s:
   781                           	callstack 0
   782  000007                     tolower@c:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x6
   786  000007                     	ds	1
   787  000008                     ?_atoi:
   788                           	callstack 0
   789  000008                     LCD_Goto@col:
   790                           	callstack 0
   791  000008                     LCD_Print@i:
   792                           	callstack 0
   793  000008                     atoi@s:
   794                           	callstack 0
   795  000008                     strncmp@l:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x7
   799  000008                     	ds	1
   800  000009                     ??___fladd:
   801  000009                     ??___flmul:
   802  000009                     ??_tolower:
   803  000009                     ??_Establecer_Hora:
   804  000009                     ??___fleq:
   805  000009                     ___fltol@sign1:
   806                           	callstack 0
   807  000009                     ___xxtofl@sign:
   808                           	callstack 0
   809  000009                     ___fpclassifyf@e:
   810                           	callstack 0
   811  000009                     strcpy@d:
   812                           	callstack 0
   813  000009                     ___lldiv@quotient:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x8
   817  000009                     	ds	1
   818  00000A                     ??_atoi:
   819  00000A                     ___fltol@exp1:
   820                           	callstack 0
   821  00000A                     ___xxtofl@exp:
   822                           	callstack 0
   823  00000A                     fputs@s:
   824                           	callstack 0
   825  00000A                     strncmp@r:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x9
   829  00000A                     	ds	1
   830  00000B                     ___xxtofl@arg:
   831                           	callstack 0
   832  00000B                     ___fpclassifyf@u:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0xA
   836  00000B                     	ds	1
   837  00000C                     fputs@fp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0xB
   841  00000C                     	ds	1
   842  00000D                     ___lldiv@counter:
   843                           	callstack 0
   844  00000D                     ___fladd@signs:
   845                           	callstack 0
   846  00000D                     ___flmul@sign:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0xC
   850  00000D                     	ds	1
   851  00000E                     ___fladd@aexp:
   852                           	callstack 0
   853  00000E                     fputs@c:
   854                           	callstack 0
   855  00000E                     atoi@neg:
   856                           	callstack 0
   857  00000E                     I2C_Init@frecuencia:
   858                           	callstack 0
   859  00000E                     ___flmul@grs:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0xD
   863  00000E                     	ds	1
   864  00000F                     ___fladd@bexp:
   865                           	callstack 0
   866  00000F                     fputs@i:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0xE
   870  00000F                     	ds	1
   871  000010                     ___fladd@grs:
   872                           	callstack 0
   873  000010                     atoi@n:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xF
   877  000010                     	ds	1
   878  000011                     ?_pad:
   879                           	callstack 0
   880  000011                     pad@fp:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x10
   884  000011                     	ds	1
   885  000012                     ??_I2C_Init:
   886  000012                     ___flmul@aexp:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x11
   890  000012                     	ds	1
   891  000013                     ___flmul@bexp:
   892                           	callstack 0
   893  000013                     pad@buf:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x12
   897  000013                     	ds	1
   898  000014                     ___flmul@prod:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x13
   902  000014                     	ds	1
   903  000015                     pad@p:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x14
   907  000015                     	ds	2
   908  000017                     ??_pad:
   909                           
   910                           ; 1 bytes @ 0x16
   911  000017                     	ds	1
   912  000018                     ___flmul@temp:
   913                           	callstack 0
   914  000018                     pad@i:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x17
   918  000018                     	ds	2
   919  00001A                     ?___fldiv:
   920                           	callstack 0
   921  00001A                     ?___flsub:
   922                           	callstack 0
   923  00001A                     pad@w:
   924                           	callstack 0
   925  00001A                     ___flge@ff1:
   926                           	callstack 0
   927  00001A                     ___flsub@b:
   928                           	callstack 0
   929  00001A                     ___fldiv@b:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x19
   933  00001A                     	ds	4
   934  00001E                     ___flge@ff2:
   935                           	callstack 0
   936  00001E                     ___flsub@a:
   937                           	callstack 0
   938  00001E                     ___fldiv@a:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x1D
   942  00001E                     	ds	4
   943  000022                     ??___fldiv:
   944  000022                     ??___flge:
   945                           
   946                           ; 1 bytes @ 0x21
   947  000022                     	ds	4
   948  000026                     ___fldiv@rem:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x25
   952  000026                     	ds	4
   953  00002A                     ___fldiv@sign:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x29
   957  00002A                     	ds	1
   958  00002B                     ___fldiv@new_exp:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x2A
   962  00002B                     	ds	2
   963  00002D                     ___fldiv@grs:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x2C
   967  00002D                     	ds	4
   968  000031                     ___fldiv@bexp:
   969                           	callstack 0
   970                           
   971                           ; 1 bytes @ 0x30
   972  000031                     	ds	1
   973  000032                     ___fldiv@aexp:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x31
   977  000032                     	ds	1
   978  000033                     ?_floorf:
   979                           	callstack 0
   980  000033                     floorf@x:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x32
   984  000033                     	ds	4
   985  000037                     ??_floorf:
   986                           
   987                           ; 1 bytes @ 0x36
   988  000037                     	ds	6
   989  00003D                     floorf@m:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x3C
   993  00003D                     	ds	4
   994  000041                     floorf@e:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x40
   998  000041                     	ds	2
   999  000043                     floorf@u:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x42
  1003  000043                     	ds	4
  1004  000047                     ?_efgtoa:
  1005                           	callstack 0
  1006  000047                     efgtoa@fp:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x46
  1010  000047                     	ds	2
  1011  000049                     efgtoa@f:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x48
  1015  000049                     	ds	4
  1016  00004D                     efgtoa@c:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x4C
  1020  00004D                     	ds	1
  1021  00004E                     ??_efgtoa:
  1022                           
  1023                           ; 1 bytes @ 0x4D
  1024  00004E                     	ds	5
  1025  000053                     ?_vfpfcnvrt:
  1026                           	callstack 0
  1027  000053                     vfpfcnvrt@fp:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x52
  1031  000053                     	ds	2
  1032  000055                     vfpfcnvrt@fmt:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x54
  1036  000055                     	ds	2
  1037  000057                     vfpfcnvrt@ap:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x56
  1041  000057                     	ds	2
  1042  000059                     ??_vfpfcnvrt:
  1043                           
  1044                           ; 1 bytes @ 0x58
  1045  000059                     	ds	4
  1046  00005D                     vfprintf@cfmt:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x5C
  1050  00005D                     	ds	2
  1051  00005F                     ??_Mostrar_Temperatura:
  1052                           
  1053                           ; 1 bytes @ 0x5E
  1054  00005F                     	ds	1
  1055                           
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 228 in file "Main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  cont            2   93[BANK0 ] int 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0
  1076 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1078 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1079 ;;Total ram usage:        4 bytes
  1080 ;; Hardware stack levels required when called: 9
  1081 ;; This function calls:
  1082 ;;		_ADC_Init
  1083 ;;		_Establecer_Hora
  1084 ;;		_I2C_Init
  1085 ;;		_LCD_Begin
  1086 ;;		_LCD_Clear
  1087 ;;		_Mostrar_Temperatura
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text0
  1094  0030B6                     __ptext0:
  1095                           	callstack 0
  1096  0030B6                     _main:
  1097                           	callstack 22
  1098  0030B6                     
  1099                           ;Main.c: 230:     I2C_Init(100000);
  1100  0030B6  0EA0               	movlw	160
  1101  0030B8  6E0E               	movwf	I2C_Init@frecuencia^0,c
  1102  0030BA  0E86               	movlw	134
  1103  0030BC  6E0F               	movwf	(I2C_Init@frecuencia+1)^0,c
  1104  0030BE  0E01               	movlw	1
  1105  0030C0  6E10               	movwf	(I2C_Init@frecuencia+2)^0,c
  1106  0030C2  0E00               	movlw	0
  1107  0030C4  6E11               	movwf	(I2C_Init@frecuencia+3)^0,c
  1108  0030C6  ECA0  F01D         	call	_I2C_Init	;wreg free
  1109                           
  1110                           ;Main.c: 231:     LCD_Begin();
  1111  0030CA  EC43  F019         	call	_LCD_Begin	;wreg free
  1112  0030CE                     
  1113                           ;Main.c: 232:     ADC_Init();
  1114  0030CE  ECBF  F01F         	call	_ADC_Init	;wreg free
  1115  0030D2                     
  1116                           ;Main.c: 234:     TRISBbits.RB2 = 0;
  1117  0030D2  9493               	bcf	147,2,c	;volatile
  1118  0030D4                     
  1119                           ;Main.c: 235:     TRISBbits.RB3 = 0;
  1120  0030D4  9693               	bcf	147,3,c	;volatile
  1121  0030D6                     
  1122                           ;Main.c: 236:     TRISBbits.RB4 = 0;
  1123  0030D6  9893               	bcf	147,4,c	;volatile
  1124  0030D8                     
  1125                           ;Main.c: 237:     TRISBbits.RB5 = 0;
  1126  0030D8  9A93               	bcf	147,5,c	;volatile
  1127  0030DA                     
  1128                           ;Main.c: 240:     OSCCONbits.IRCF = 0b111;
  1129  0030DA  0E70               	movlw	112
  1130  0030DC  12D3               	iorwf	211,f,c	;volatile
  1131  0030DE                     
  1132                           ;Main.c: 241:     OSCCONbits.SCS = 0b10;
  1133  0030DE  50D3               	movf	211,w,c	;volatile
  1134  0030E0  0BFC               	andlw	-4
  1135  0030E2  0902               	iorlw	2
  1136  0030E4  6ED3               	movwf	211,c	;volatile
  1137  0030E6                     
  1138                           ;Main.c: 244:     TRISCbits.RC6 = 0;
  1139  0030E6  9C94               	bcf	148,6,c	;volatile
  1140  0030E8                     
  1141                           ;Main.c: 245:     TXSTAbits.TX9 = 0;
  1142  0030E8  9CAC               	bcf	172,6,c	;volatile
  1143  0030EA                     
  1144                           ;Main.c: 246:     TXSTAbits.TXEN = 1;
  1145  0030EA  8AAC               	bsf	172,5,c	;volatile
  1146  0030EC                     
  1147                           ;Main.c: 247:     TXSTAbits.SYNC = 0;
  1148  0030EC  98AC               	bcf	172,4,c	;volatile
  1149  0030EE                     
  1150                           ;Main.c: 248:     TXSTAbits.BRGH = 0;
  1151  0030EE  94AC               	bcf	172,2,c	;volatile
  1152  0030F0                     
  1153                           ;Main.c: 249:     BAUDCONbits.BRG16 = 0;
  1154  0030F0  96B8               	bcf	184,3,c	;volatile
  1155  0030F2                     
  1156                           ;Main.c: 250:     RCSTAbits.SPEN = 1;
  1157  0030F2  8EAB               	bsf	171,7,c	;volatile
  1158  0030F4                     
  1159                           ;Main.c: 251:     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  1160  0030F4  0E0C               	movlw	12
  1161  0030F6  6EAF               	movwf	175,c	;volatile
  1162  0030F8                     l4551:
  1163                           
  1164                           ;Main.c: 256:     {;Main.c: 257:         cont = 400;
  1165  0030F8  0E01               	movlw	1
  1166  0030FA  0100               	movlb	0	; () banked
  1167  0030FC  6FBE               	movwf	(main@cont+1)& (0+255),b
  1168  0030FE  0E90               	movlw	144
  1169  003100  6FBD               	movwf	main@cont& (0+255),b
  1170                           
  1171                           ;Main.c: 258:         while(cont>0)
  1172  003102  EF8C  F018         	goto	l4557
  1173  003106                     l4553:
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;Main.c: 259:         {;Main.c: 260:             Mostrar_Temperatura();
  1177  003106  EC80  F013         	call	_Mostrar_Temperatura	;wreg free
  1178  00310A                     
  1179                           ;Main.c: 261:             cont = cont - 5;
  1180  00310A  0EFB               	movlw	251
  1181  00310C  0100               	movlb	0	; () banked
  1182  00310E  25BD               	addwf	main@cont& (0+255),w,b
  1183  003110  6FBD               	movwf	main@cont& (0+255),b
  1184  003112  0EFF               	movlw	255
  1185  003114  21BE               	addwfc	(main@cont+1)& (0+255),w,b
  1186  003116  6FBE               	movwf	(main@cont+1)& (0+255),b
  1187  003118                     l4557:
  1188                           
  1189                           ; BSR set to: 0
  1190                           ;Main.c: 258:         while(cont>0)
  1191  003118  BFBE               	btfsc	(main@cont+1)& (0+255),7,b
  1192  00311A  EF99  F018         	goto	u5090
  1193  00311E  51BE               	movf	(main@cont+1)& (0+255),w,b
  1194  003120  E106               	bnz	u5091
  1195  003122  05BD               	decf	main@cont& (0+255),w,b
  1196  003124  B0D8               	btfsc	status,0,c
  1197  003126  EF97  F018         	goto	u5091
  1198  00312A  EF99  F018         	goto	u5090
  1199  00312E                     u5091:
  1200  00312E  EF83  F018         	goto	l4553
  1201  003132                     u5090:
  1202  003132                     
  1203                           ; BSR set to: 0
  1204                           ;Main.c: 264:         LCD_Clear();
  1205  003132  ECE4  F01F         	call	_LCD_Clear	;wreg free
  1206  003136                     
  1207                           ;Main.c: 265:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1208  003136  0E06               	movlw	6
  1209  003138  0100               	movlb	0	; () banked
  1210  00313A  6FBC               	movwf	(??_main+1)& (0+255),b
  1211  00313C  0E13               	movlw	19
  1212  00313E  6FBB               	movwf	??_main& (0+255),b
  1213  003140  0EAD               	movlw	173
  1214  003142                     u5117:
  1215  003142  2EE8               	decfsz	wreg,f,c
  1216  003144  D7FE               	bra	u5117
  1217  003146  2FBB               	decfsz	??_main& (0+255),f,b
  1218  003148  D7FC               	bra	u5117
  1219  00314A  2FBC               	decfsz	(??_main+1)& (0+255),f,b
  1220  00314C  D7FA               	bra	u5117
  1221  00314E  D000               	nop2	
  1222  003150                     
  1223                           ;Main.c: 267:         cont = 200;
  1224  003150  0E00               	movlw	0
  1225  003152  0100               	movlb	0	; () banked
  1226  003154  6FBE               	movwf	(main@cont+1)& (0+255),b
  1227  003156  0EC8               	movlw	200
  1228  003158  6FBD               	movwf	main@cont& (0+255),b
  1229                           
  1230                           ;Main.c: 268:         while(cont>0)
  1231  00315A  EFB8  F018         	goto	l4569
  1232  00315E                     l4565:
  1233                           
  1234                           ; BSR set to: 0
  1235                           ;Main.c: 269:         {;Main.c: 270:             Establecer_Hora();
  1236  00315E  ECC6  F01C         	call	_Establecer_Hora	;wreg free
  1237  003162                     
  1238                           ;Main.c: 271:             cont = cont - 5;
  1239  003162  0EFB               	movlw	251
  1240  003164  0100               	movlb	0	; () banked
  1241  003166  25BD               	addwf	main@cont& (0+255),w,b
  1242  003168  6FBD               	movwf	main@cont& (0+255),b
  1243  00316A  0EFF               	movlw	255
  1244  00316C  21BE               	addwfc	(main@cont+1)& (0+255),w,b
  1245  00316E  6FBE               	movwf	(main@cont+1)& (0+255),b
  1246  003170                     l4569:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;Main.c: 268:         while(cont>0)
  1250  003170  BFBE               	btfsc	(main@cont+1)& (0+255),7,b
  1251  003172  EFC5  F018         	goto	u5100
  1252  003176  51BE               	movf	(main@cont+1)& (0+255),w,b
  1253  003178  E106               	bnz	u5101
  1254  00317A  05BD               	decf	main@cont& (0+255),w,b
  1255  00317C  B0D8               	btfsc	status,0,c
  1256  00317E  EFC3  F018         	goto	u5101
  1257  003182  EFC5  F018         	goto	u5100
  1258  003186                     u5101:
  1259  003186  EFAF  F018         	goto	l4565
  1260  00318A                     u5100:
  1261  00318A                     
  1262                           ; BSR set to: 0
  1263                           ;Main.c: 274:         LCD_Clear();
  1264  00318A  ECE4  F01F         	call	_LCD_Clear	;wreg free
  1265  00318E                     
  1266                           ;Main.c: 275:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1267  00318E  0E06               	movlw	6
  1268  003190  0100               	movlb	0	; () banked
  1269  003192  6FBC               	movwf	(??_main+1)& (0+255),b
  1270  003194  0E13               	movlw	19
  1271  003196  6FBB               	movwf	??_main& (0+255),b
  1272  003198  0EAD               	movlw	173
  1273  00319A                     u5127:
  1274  00319A  2EE8               	decfsz	wreg,f,c
  1275  00319C  D7FE               	bra	u5127
  1276  00319E  2FBB               	decfsz	??_main& (0+255),f,b
  1277  0031A0  D7FC               	bra	u5127
  1278  0031A2  2FBC               	decfsz	(??_main+1)& (0+255),f,b
  1279  0031A4  D7FA               	bra	u5127
  1280  0031A6  D000               	nop2	
  1281  0031A8  EF7C  F018         	goto	l4551
  1282  0031AC  EF00  F000         	goto	start
  1283  0031B0                     __end_of_main:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _Mostrar_Temperatura *****************
  1287 ;; Defined at:
  1288 ;;		line 161 in file "Main.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  temp            4   87[BANK0 ] float 
  1293 ;;  value_adc       2   85[BANK0 ] int 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1305 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         1       6       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        7 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 8
  1310 ;; This function calls:
  1311 ;;		_ADC_Read
  1312 ;;		_LCD_Goto
  1313 ;;		_LCD_Print
  1314 ;;		___fldiv
  1315 ;;		___flge
  1316 ;;		___flmul
  1317 ;;		___xxtofl
  1318 ;;		_sprintf
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text1
  1325  002700                     __ptext1:
  1326                           	callstack 0
  1327  002700                     _Mostrar_Temperatura:
  1328                           	callstack 22
  1329  002700                     
  1330                           ;Main.c: 165:     int value_adc = 0;
  1331  002700  0E00               	movlw	0
  1332  002702  0100               	movlb	0	; () banked
  1333  002704  6FB6               	movwf	(Mostrar_Temperatura@value_adc+1)& (0+255),b
  1334  002706  0E00               	movlw	0
  1335  002708  6FB5               	movwf	Mostrar_Temperatura@value_adc& (0+255),b
  1336  00270A                     
  1337                           ; BSR set to: 0
  1338                           ;Main.c: 167:     LCD_Goto(1,1);
  1339  00270A  0E01               	movlw	1
  1340  00270C  6E05               	movwf	LCD_Goto@row^0,c
  1341  00270E  0E01               	movlw	1
  1342  002710  EC07  F01D         	call	_LCD_Goto
  1343  002714                     
  1344                           ;Main.c: 168:     LCD_Print("Temperatura:");
  1345  002714  0E01               	movlw	low STR_1
  1346  002716  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1347  002718  0E08               	movlw	high STR_1
  1348  00271A  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1349  00271C  ECD7  F01A         	call	_LCD_Print	;wreg free
  1350  002720                     
  1351                           ;Main.c: 169:     value_adc = ADC_Read(0);
  1352  002720  0E00               	movlw	0
  1353  002722  6E02               	movwf	(ADC_Read@channel+1)^0,c
  1354  002724  0E00               	movlw	0
  1355  002726  6E01               	movwf	ADC_Read@channel^0,c
  1356  002728  EC2F  F01C         	call	_ADC_Read	;wreg free
  1357  00272C  C001  F0B5         	movff	?_ADC_Read,Mostrar_Temperatura@value_adc
  1358  002730  C002  F0B6         	movff	?_ADC_Read+1,Mostrar_Temperatura@value_adc+1
  1359  002734                     
  1360                           ;Main.c: 170:     temp = value_adc;
  1361  002734  C0B5  F001         	movff	Mostrar_Temperatura@value_adc,___xxtofl@val
  1362  002738  C0B6  F002         	movff	Mostrar_Temperatura@value_adc+1,___xxtofl@val+1
  1363  00273C  0E00               	movlw	0
  1364  00273E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1365  002740  0EFF               	movlw	-1
  1366  002742  6E03               	movwf	(___xxtofl@val+2)^0,c
  1367  002744  6E04               	movwf	(___xxtofl@val+3)^0,c
  1368  002746  0E01               	movlw	1
  1369  002748  EC52  F015         	call	___xxtofl
  1370  00274C  C001  F0B7         	movff	?___xxtofl,Mostrar_Temperatura@temp
  1371  002750  C002  F0B8         	movff	?___xxtofl+1,Mostrar_Temperatura@temp+1
  1372  002754  C003  F0B9         	movff	?___xxtofl+2,Mostrar_Temperatura@temp+2
  1373  002758  C004  F0BA         	movff	?___xxtofl+3,Mostrar_Temperatura@temp+3
  1374  00275C                     
  1375                           ;Main.c: 171:     temp = (temp * 500.0) / 1023.0;
  1376  00275C  0E00               	movlw	0
  1377  00275E  6E05               	movwf	___flmul@a^0,c
  1378  002760  0E00               	movlw	0
  1379  002762  6E06               	movwf	(___flmul@a+1)^0,c
  1380  002764  0EFA               	movlw	250
  1381  002766  6E07               	movwf	(___flmul@a+2)^0,c
  1382  002768  0E43               	movlw	67
  1383  00276A  6E08               	movwf	(___flmul@a+3)^0,c
  1384  00276C  C0B7  F001         	movff	Mostrar_Temperatura@temp,___flmul@b
  1385  002770  C0B8  F002         	movff	Mostrar_Temperatura@temp+1,___flmul@b+1
  1386  002774  C0B9  F003         	movff	Mostrar_Temperatura@temp+2,___flmul@b+2
  1387  002778  C0BA  F004         	movff	Mostrar_Temperatura@temp+3,___flmul@b+3
  1388  00277C  EC95  F00E         	call	___flmul	;wreg free
  1389  002780  C001  F01A         	movff	?___flmul,___fldiv@b
  1390  002784  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
  1391  002788  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
  1392  00278C  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
  1393  002790  0E00               	movlw	0
  1394  002792  6E1E               	movwf	___fldiv@a^0,c
  1395  002794  0EC0               	movlw	192
  1396  002796  6E1F               	movwf	(___fldiv@a+1)^0,c
  1397  002798  0E7F               	movlw	127
  1398  00279A  6E20               	movwf	(___fldiv@a+2)^0,c
  1399  00279C  0E44               	movlw	68
  1400  00279E  6E21               	movwf	(___fldiv@a+3)^0,c
  1401  0027A0  ECAA  F010         	call	___fldiv	;wreg free
  1402  0027A4  C01A  F0B7         	movff	?___fldiv,Mostrar_Temperatura@temp
  1403  0027A8  C01B  F0B8         	movff	?___fldiv+1,Mostrar_Temperatura@temp+1
  1404  0027AC  C01C  F0B9         	movff	?___fldiv+2,Mostrar_Temperatura@temp+2
  1405  0027B0  C01D  F0BA         	movff	?___fldiv+3,Mostrar_Temperatura@temp+3
  1406  0027B4                     
  1407                           ;Main.c: 172:     sprintf(temperatura,"%.2f",temp);
  1408  0027B4  0EF6               	movlw	low Mostrar_Temperatura@temperatura
  1409  0027B6  0100               	movlb	0	; () banked
  1410  0027B8  6FA0               	movwf	sprintf@s& (0+255),b
  1411  0027BA  0E00               	movlw	high Mostrar_Temperatura@temperatura
  1412  0027BC  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1413  0027BE  0E0E               	movlw	low STR_2
  1414  0027C0  6FA2               	movwf	sprintf@fmt& (0+255),b
  1415  0027C2  0E08               	movlw	high STR_2
  1416  0027C4  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1417  0027C6  C0B7  F0A4         	movff	Mostrar_Temperatura@temp,?_sprintf+4
  1418  0027CA  C0B8  F0A5         	movff	Mostrar_Temperatura@temp+1,?_sprintf+5
  1419  0027CE  C0B9  F0A6         	movff	Mostrar_Temperatura@temp+2,?_sprintf+6
  1420  0027D2  C0BA  F0A7         	movff	Mostrar_Temperatura@temp+3,?_sprintf+7
  1421  0027D6  ECFF  F01D         	call	_sprintf	;wreg free
  1422  0027DA                     
  1423                           ;Main.c: 173:     LCD_Goto(6,2);
  1424  0027DA  0E02               	movlw	2
  1425  0027DC  6E05               	movwf	LCD_Goto@row^0,c
  1426  0027DE  0E06               	movlw	6
  1427  0027E0  EC07  F01D         	call	_LCD_Goto
  1428  0027E4                     
  1429                           ;Main.c: 174:     LCD_Print(temperatura);
  1430  0027E4  0EF6               	movlw	low Mostrar_Temperatura@temperatura
  1431  0027E6  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1432  0027E8  0E00               	movlw	high Mostrar_Temperatura@temperatura
  1433  0027EA  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1434  0027EC  ECD7  F01A         	call	_LCD_Print	;wreg free
  1435  0027F0                     
  1436                           ;Main.c: 175:     LCD_Goto(12,2);
  1437  0027F0  0E02               	movlw	2
  1438  0027F2  6E05               	movwf	LCD_Goto@row^0,c
  1439  0027F4  0E0C               	movlw	12
  1440  0027F6  EC07  F01D         	call	_LCD_Goto
  1441  0027FA                     
  1442                           ;Main.c: 176:     LCD_Print("C");
  1443  0027FA  0E26               	movlw	low STR_3
  1444  0027FC  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1445  0027FE  0E08               	movlw	high STR_3
  1446  002800  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1447  002802  ECD7  F01A         	call	_LCD_Print	;wreg free
  1448  002806                     
  1449                           ;Main.c: 179:     if(temp>=32 && temp<=34.9)
  1450  002806  C0B7  F01A         	movff	Mostrar_Temperatura@temp,___flge@ff1
  1451  00280A  C0B8  F01B         	movff	Mostrar_Temperatura@temp+1,___flge@ff1+1
  1452  00280E  C0B9  F01C         	movff	Mostrar_Temperatura@temp+2,___flge@ff1+2
  1453  002812  C0BA  F01D         	movff	Mostrar_Temperatura@temp+3,___flge@ff1+3
  1454  002816  0E00               	movlw	0
  1455  002818  6E1E               	movwf	___flge@ff2^0,c
  1456  00281A  0E00               	movlw	0
  1457  00281C  6E1F               	movwf	(___flge@ff2+1)^0,c
  1458  00281E  0E00               	movlw	0
  1459  002820  6E20               	movwf	(___flge@ff2+2)^0,c
  1460  002822  0E42               	movlw	66
  1461  002824  6E21               	movwf	(___flge@ff2+3)^0,c
  1462  002826  EC5A  F017         	call	___flge	;wreg free
  1463  00282A  A0D8               	btfss	status,0,c
  1464  00282C  EF1A  F014         	goto	u5041
  1465  002830  EF1C  F014         	goto	u5040
  1466  002834                     u5041:
  1467  002834  EF3B  F014         	goto	l4491
  1468  002838                     u5040:
  1469  002838  0E9A               	movlw	154
  1470  00283A  6E1A               	movwf	___flge@ff1^0,c
  1471  00283C  0E99               	movlw	153
  1472  00283E  6E1B               	movwf	(___flge@ff1+1)^0,c
  1473  002840  0E0B               	movlw	11
  1474  002842  6E1C               	movwf	(___flge@ff1+2)^0,c
  1475  002844  0E42               	movlw	66
  1476  002846  6E1D               	movwf	(___flge@ff1+3)^0,c
  1477  002848  C0B7  F01E         	movff	Mostrar_Temperatura@temp,___flge@ff2
  1478  00284C  C0B8  F01F         	movff	Mostrar_Temperatura@temp+1,___flge@ff2+1
  1479  002850  C0B9  F020         	movff	Mostrar_Temperatura@temp+2,___flge@ff2+2
  1480  002854  C0BA  F021         	movff	Mostrar_Temperatura@temp+3,___flge@ff2+3
  1481  002858  EC5A  F017         	call	___flge	;wreg free
  1482  00285C  A0D8               	btfss	status,0,c
  1483  00285E  EF33  F014         	goto	u5051
  1484  002862  EF35  F014         	goto	u5050
  1485  002866                     u5051:
  1486  002866  EF3B  F014         	goto	l4491
  1487  00286A                     u5050:
  1488  00286A                     
  1489                           ;Main.c: 180:     {;Main.c: 181:         RB2 = 0;
  1490  00286A  9481               	bcf	3969,2,c	;volatile
  1491                           
  1492                           ;Main.c: 182:         RB3 = 1;
  1493  00286C  8681               	bsf	3969,3,c	;volatile
  1494                           
  1495                           ;Main.c: 183:         RB4 = 0;
  1496  00286E  9881               	bcf	3969,4,c	;volatile
  1497                           
  1498                           ;Main.c: 184:         RB5 = 0;
  1499  002870  9A81               	bcf	3969,5,c	;volatile
  1500                           
  1501                           ;Main.c: 185:     }
  1502  002872  EF5C  F014         	goto	l215
  1503  002876                     l4491:
  1504                           
  1505                           ;Main.c: 187:     {;Main.c: 188:         if(temp > 34.9)
  1506  002876  0E9A               	movlw	154
  1507  002878  6E1A               	movwf	___flge@ff1^0,c
  1508  00287A  0E99               	movlw	153
  1509  00287C  6E1B               	movwf	(___flge@ff1+1)^0,c
  1510  00287E  0E0B               	movlw	11
  1511  002880  6E1C               	movwf	(___flge@ff1+2)^0,c
  1512  002882  0E42               	movlw	66
  1513  002884  6E1D               	movwf	(___flge@ff1+3)^0,c
  1514  002886  C0B7  F01E         	movff	Mostrar_Temperatura@temp,___flge@ff2
  1515  00288A  C0B8  F01F         	movff	Mostrar_Temperatura@temp+1,___flge@ff2+1
  1516  00288E  C0B9  F020         	movff	Mostrar_Temperatura@temp+2,___flge@ff2+2
  1517  002892  C0BA  F021         	movff	Mostrar_Temperatura@temp+3,___flge@ff2+3
  1518  002896  EC5A  F017         	call	___flge	;wreg free
  1519  00289A  B0D8               	btfsc	status,0,c
  1520  00289C  EF52  F014         	goto	u5061
  1521  0028A0  EF54  F014         	goto	u5060
  1522  0028A4                     u5061:
  1523  0028A4  EF58  F014         	goto	l216
  1524  0028A8                     u5060:
  1525  0028A8                     
  1526                           ;Main.c: 189:         {;Main.c: 190:             RB2 = 1;
  1527  0028A8  8481               	bsf	3969,2,c	;volatile
  1528                           
  1529                           ;Main.c: 191:             RB5 = 0;
  1530  0028AA  9A81               	bcf	3969,5,c	;volatile
  1531                           
  1532                           ;Main.c: 192:         }
  1533  0028AC  EF5A  F014         	goto	l217
  1534  0028B0                     l216:
  1535                           
  1536                           ;Main.c: 194:         {;Main.c: 195:             RB2 = 0;
  1537  0028B0  9481               	bcf	3969,2,c	;volatile
  1538                           
  1539                           ;Main.c: 196:             RB5 = 1;
  1540  0028B2  8A81               	bsf	3969,5,c	;volatile
  1541  0028B4                     l217:
  1542                           
  1543                           ;Main.c: 198:         RB3 = 0;
  1544  0028B4  9681               	bcf	3969,3,c	;volatile
  1545                           
  1546                           ;Main.c: 199:         RB4 = 1;
  1547  0028B6  8881               	bsf	3969,4,c	;volatile
  1548  0028B8                     l215:
  1549                           
  1550                           ;Main.c: 202:     buffer_TX[33] = temperatura[0];
  1551  0028B8  C0F6  F171         	movff	Mostrar_Temperatura@temperatura,_buffer_TX+33
  1552                           
  1553                           ;Main.c: 203:     buffer_TX[34] = temperatura[1];
  1554  0028BC  C0F7  F172         	movff	Mostrar_Temperatura@temperatura+1,_buffer_TX+34
  1555                           
  1556                           ;Main.c: 204:     buffer_TX[36] = temperatura[3];
  1557  0028C0  C0F9  F174         	movff	Mostrar_Temperatura@temperatura+3,_buffer_TX+36
  1558                           
  1559                           ;Main.c: 205:     buffer_TX[37] = temperatura[4];
  1560  0028C4  C0FA  F175         	movff	Mostrar_Temperatura@temperatura+4,_buffer_TX+37
  1561  0028C8                     
  1562                           ;Main.c: 207:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1563  0028C8  0E82               	movlw	130
  1564  0028CA  6E5F               	movwf	??_Mostrar_Temperatura^0,c
  1565  0028CC  0EDE               	movlw	222
  1566  0028CE                     u5137:
  1567  0028CE  2EE8               	decfsz	wreg,f,c
  1568  0028D0  D7FE               	bra	u5137
  1569  0028D2  2E5F               	decfsz	??_Mostrar_Temperatura^0,f,c
  1570  0028D4  D7FC               	bra	u5137
  1571  0028D6  0012               	return		;funcret
  1572  0028D8                     __end_of_Mostrar_Temperatura:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _sprintf *****************
  1576 ;; Defined at:
  1577 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1580 ;;		 -> Mostrar_Temperatura@temperatura(4), 
  1581 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1582 ;;		 -> STR_2(5), 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  f              11   74[BANK0 ] struct _IO_FILE
  1585 ;;  ap              2   72[BANK0 ] PTR void [1]
  1586 ;;		 -> ?_sprintf(2), 
  1587 ;;  ret             2    0        int 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2   64[BANK0 ] int 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         0       8       0       0       0       0       0       0       0
  1598 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1601 ;;Total ram usage:       21 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 7
  1604 ;; This function calls:
  1605 ;;		_vfprintf
  1606 ;; This function is called by:
  1607 ;;		_Mostrar_Temperatura
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text2
  1612  003BFE                     __ptext2:
  1613                           	callstack 0
  1614  003BFE                     _sprintf:
  1615                           	callstack 22
  1616  003BFE  0EA4               	movlw	low (?_sprintf+4)
  1617  003C00  0100               	movlb	0	; () banked
  1618  003C02  6FA8               	movwf	sprintf@ap& (0+255),b
  1619  003C04  0E00               	movlw	high (?_sprintf+4)
  1620  003C06  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1621  003C08  C0A0  F0AA         	movff	sprintf@s,sprintf@f
  1622  003C0C  C0A1  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1623  003C10                     
  1624                           ; BSR set to: 0
  1625  003C10  0E00               	movlw	0
  1626  003C12  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  1627  003C14  0E00               	movlw	0
  1628  003C16  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  1629  003C18                     
  1630                           ; BSR set to: 0
  1631  003C18  0E00               	movlw	0
  1632  003C1A  6FB4               	movwf	(sprintf@f+10)& (0+255),b
  1633  003C1C  0E00               	movlw	0
  1634  003C1E  6FB3               	movwf	(sprintf@f+9)& (0+255),b
  1635  003C20                     
  1636                           ; BSR set to: 0
  1637  003C20  0EAA               	movlw	low sprintf@f
  1638  003C22  6F9A               	movwf	vfprintf@fp& (0+255),b
  1639  003C24  0E00               	movlw	high sprintf@f
  1640  003C26  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
  1641  003C28  C0A2  F09C         	movff	sprintf@fmt,vfprintf@fmt
  1642  003C2C  C0A3  F09D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1643  003C30  0EA8               	movlw	low sprintf@ap
  1644  003C32  6F9E               	movwf	vfprintf@ap& (0+255),b
  1645  003C34  0E00               	movlw	high sprintf@ap
  1646  003C36  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
  1647  003C38  EC6F  F01D         	call	_vfprintf	;wreg free
  1648  003C3C  0100               	movlb	0	; () banked
  1649  003C3E  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  1650  003C40  25A0               	addwf	sprintf@s& (0+255),w,b
  1651  003C42  6ED9               	movwf	fsr2l,c
  1652  003C44  51AE               	movf	(sprintf@f+4)& (0+255),w,b
  1653  003C46  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1654  003C48  6EDA               	movwf	fsr2h,c
  1655  003C4A  0E00               	movlw	0
  1656  003C4C  6EDF               	movwf	indf2,c
  1657  003C4E                     
  1658                           ; BSR set to: 0
  1659  003C4E  0012               	return		;funcret
  1660  003C50                     __end_of_sprintf:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _vfprintf *****************
  1664 ;; Defined at:
  1665 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
  1668 ;;		 -> sprintf@f(11), 
  1669 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  1670 ;;		 -> STR_2(5), 
  1671 ;;  ap              2   62[BANK0 ] PTR PTR void 
  1672 ;;		 -> sprintf@ap(2), 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1675 ;;		 -> STR_2(5), 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  2   58[BANK0 ] int 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1685 ;;      Params:         0       6       0       0       0       0       0       0       0
  1686 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1688 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1689 ;;Total ram usage:        8 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 6
  1692 ;; This function calls:
  1693 ;;		_vfpfcnvrt
  1694 ;; This function is called by:
  1695 ;;		_sprintf
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text3
  1700  003ADE                     __ptext3:
  1701                           	callstack 0
  1702  003ADE                     _vfprintf:
  1703                           	callstack 22
  1704  003ADE                     
  1705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1706  003ADE  C09C  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1707  003AE2  C09D  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1708  003AE6                     
  1709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1710  003AE6  0E00               	movlw	0
  1711  003AE8  0100               	movlb	0	; () banked
  1712  003AEA  6FE8               	movwf	(_nout+1)& (0+255),b
  1713  003AEC  0E00               	movlw	0
  1714  003AEE  6FE7               	movwf	_nout& (0+255),b
  1715                           
  1716                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1717  003AF0  EF8D  F01D         	goto	l4209
  1718  003AF4                     l4207:
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1722  003AF4  C09A  F053         	movff	vfprintf@fp,vfpfcnvrt@fp
  1723  003AF8  C09B  F054         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1724  003AFC  0E5D               	movlw	low vfprintf@cfmt
  1725  003AFE  6E55               	movwf	vfpfcnvrt@fmt^0,c
  1726  003B00  0E00               	movlw	high vfprintf@cfmt
  1727  003B02  6E56               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1728  003B04  C09E  F057         	movff	vfprintf@ap,vfpfcnvrt@ap
  1729  003B08  C09F  F058         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1730  003B0C  EC7C  F00C         	call	_vfpfcnvrt	;wreg free
  1731  003B10  5053               	movf	?_vfpfcnvrt^0,w,c
  1732  003B12  0100               	movlb	0	; () banked
  1733  003B14  27E7               	addwf	_nout& (0+255),f,b
  1734  003B16  5054               	movf	(?_vfpfcnvrt+1)^0,w,c
  1735  003B18  23E8               	addwfc	(_nout+1)& (0+255),f,b
  1736  003B1A                     l4209:
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1740  003B1A  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1741  003B1E  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1742  003B22                     	if	0	;tblptru may be non-zero
  1743  003B22                     	endif
  1744  003B22                     	if	0	;tblptru may be non-zero
  1745  003B22                     	endif
  1746  003B22  0008               	tblrd		*
  1747  003B24  50F5               	movf	tablat,w,c
  1748  003B26  0900               	iorlw	0
  1749  003B28  A4D8               	btfss	status,2,c
  1750  003B2A  EF99  F01D         	goto	u4751
  1751  003B2E  EF9B  F01D         	goto	u4750
  1752  003B32                     u4751:
  1753  003B32  EF7A  F01D         	goto	l4207
  1754  003B36                     u4750:
  1755  003B36                     
  1756                           ; BSR set to: 0
  1757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1758  003B36  C0E7  F09A         	movff	_nout,?_vfprintf
  1759  003B3A  C0E8  F09B         	movff	_nout+1,?_vfprintf+1
  1760  003B3E                     
  1761                           ; BSR set to: 0
  1762  003B3E  0012               	return		;funcret
  1763  003B40                     __end_of_vfprintf:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _vfpfcnvrt *****************
  1767 ;; Defined at:
  1768 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1771 ;;		 -> sprintf@f(11), 
  1772 ;;  fmt             2   84[COMRAM] PTR PTR unsigned char 
  1773 ;;		 -> vfprintf@cfmt(2), 
  1774 ;;  ap              2   86[COMRAM] PTR PTR void 
  1775 ;;		 -> sprintf@ap(2), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  llu             8    0        unsigned long long 
  1778 ;;  ll              8    0        long long 
  1779 ;;  f               4   50[BANK0 ] long long 
  1780 ;;  ct              3   54[BANK0 ] unsigned char [3]
  1781 ;;  vp              3    0        PTR void 
  1782 ;;  cp              3    0        PTR unsigned char 
  1783 ;;  i               2    0        int 
  1784 ;;  done            2    0        int 
  1785 ;;  c               1   57[BANK0 ] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2   82[COMRAM] int 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1795 ;;      Params:         6       0       0       0       0       0       0       0       0
  1796 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1797 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1798 ;;      Totals:        10       8       0       0       0       0       0       0       0
  1799 ;;Total ram usage:       18 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 5
  1802 ;; This function calls:
  1803 ;;		_atoi
  1804 ;;		_efgtoa
  1805 ;;		_fputc
  1806 ;;		_isdigit
  1807 ;;		_isupper
  1808 ;;		_strncmp
  1809 ;;		_tolower
  1810 ;; This function is called by:
  1811 ;;		_vfprintf
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text4
  1816  0018F8                     __ptext4:
  1817                           	callstack 0
  1818  0018F8                     _vfpfcnvrt:
  1819                           	callstack 22
  1820  0018F8                     
  1821                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1822  0018F8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1823  0018FC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1824  001900  CFDE FFF6          	movff	postinc2,tblptrl
  1825  001904  CFDD FFF7          	movff	postdec2,tblptrh
  1826  001908                     	if	0	;tblptru may be non-zero
  1827  001908                     	endif
  1828  001908                     	if	0	;tblptru may be non-zero
  1829  001908                     	endif
  1830  001908  0008               	tblrd		*
  1831  00190A  50F5               	movf	tablat,w,c
  1832  00190C  0A25               	xorlw	37
  1833  00190E  A4D8               	btfss	status,2,c
  1834  001910  EF8C  F00C         	goto	u4611
  1835  001914  EF8E  F00C         	goto	u4610
  1836  001918                     u4611:
  1837  001918  EF79  F00E         	goto	l4165
  1838  00191C                     u4610:
  1839  00191C                     
  1840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1841  00191C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1842  001920  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1843  001924  2ADE               	incf	postinc2,f,c
  1844  001926  0E00               	movlw	0
  1845  001928  22DD               	addwfc	postdec2,f,c
  1846  00192A                     
  1847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1848  00192A  0E00               	movlw	0
  1849  00192C  0100               	movlb	0	; () banked
  1850  00192E  6FEA               	movwf	(_width+1)& (0+255),b
  1851  001930  0E00               	movlw	0
  1852  001932  6FE9               	movwf	_width& (0+255),b
  1853  001934  C0E9  F0ED         	movff	_width,_flags
  1854  001938  C0EA  F0EE         	movff	_width+1,_flags+1
  1855  00193C                     
  1856                           ; BSR set to: 0
  1857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1858  00193C  69EB               	setf	_prec& (0+255),b
  1859  00193E  69EC               	setf	(_prec+1)& (0+255),b
  1860  001940                     
  1861                           ; BSR set to: 0
  1862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1863  001940  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1864  001944  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1865  001948  CFDE FFF6          	movff	postinc2,tblptrl
  1866  00194C  CFDD FFF7          	movff	postdec2,tblptrh
  1867  001950                     	if	0	;tblptru may be non-zero
  1868  001950                     	endif
  1869  001950                     	if	0	;tblptru may be non-zero
  1870  001950                     	endif
  1871  001950  0008               	tblrd		*
  1872  001952  50F5               	movf	tablat,w,c
  1873  001954  0A2E               	xorlw	46
  1874  001956  A4D8               	btfss	status,2,c
  1875  001958  EFB0  F00C         	goto	u4621
  1876  00195C  EFB2  F00C         	goto	u4620
  1877  001960                     u4621:
  1878  001960  EF22  F00D         	goto	l4111
  1879  001964                     u4620:
  1880  001964                     
  1881                           ; BSR set to: 0
  1882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1883  001964  0E00               	movlw	0
  1884  001966  6FEC               	movwf	(_prec+1)& (0+255),b
  1885  001968  0E00               	movlw	0
  1886  00196A  6FEB               	movwf	_prec& (0+255),b
  1887  00196C                     
  1888                           ; BSR set to: 0
  1889                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1890  00196C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1891  001970  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1892  001974  2ADE               	incf	postinc2,f,c
  1893  001976  0E00               	movlw	0
  1894  001978  22DD               	addwfc	postdec2,f,c
  1895  00197A                     
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1898  00197A  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1899  00197E  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1900  001982  CFDE FFF6          	movff	postinc2,tblptrl
  1901  001986  CFDD FFF7          	movff	postdec2,tblptrh
  1902  00198A                     	if	0	;tblptru may be non-zero
  1903  00198A                     	endif
  1904  00198A                     	if	0	;tblptru may be non-zero
  1905  00198A                     	endif
  1906  00198A  0008               	tblrd		*
  1907  00198C  50F5               	movf	tablat,w,c
  1908  00198E  0A2A               	xorlw	42
  1909  001990  A4D8               	btfss	status,2,c
  1910  001992  EFCD  F00C         	goto	u4631
  1911  001996  EFCF  F00C         	goto	u4630
  1912  00199A                     u4631:
  1913  00199A  EFEC  F00C         	goto	l4103
  1914  00199E                     u4630:
  1915  00199E                     
  1916                           ; BSR set to: 0
  1917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1918  00199E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1919  0019A2  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1920  0019A6  2ADE               	incf	postinc2,f,c
  1921  0019A8  0E00               	movlw	0
  1922  0019AA  22DD               	addwfc	postdec2,f,c
  1923                           
  1924                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1925  0019AC  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1926  0019B0  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1927  0019B4  CFDF F059          	movff	indf2,??_vfpfcnvrt
  1928  0019B8  0E02               	movlw	2
  1929  0019BA  26DE               	addwf	postinc2,f,c
  1930  0019BC  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  1931  0019C0  0E00               	movlw	0
  1932  0019C2  22DD               	addwfc	postdec2,f,c
  1933  0019C4  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1934  0019C8  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1935  0019CC  CFDE F0EB          	movff	postinc2,_prec
  1936  0019D0  CFDD F0EC          	movff	postdec2,_prec+1
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1939  0019D4  EF22  F00D         	goto	l4111
  1940  0019D8                     l4103:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1944  0019D8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945  0019DC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946  0019E0  CFDE F008          	movff	postinc2,atoi@s
  1947  0019E4  CFDD F009          	movff	postdec2,atoi@s+1
  1948  0019E8  EC2C  F016         	call	_atoi	;wreg free
  1949  0019EC  C008  F0EB         	movff	?_atoi,_prec
  1950  0019F0  C009  F0EC         	movff	?_atoi+1,_prec+1
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1953  0019F4  EF03  F00D         	goto	l4109
  1954  0019F8                     l4105:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1957  0019F8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1958  0019FC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1959  001A00  2ADE               	incf	postinc2,f,c
  1960  001A02  0E00               	movlw	0
  1961  001A04  22DD               	addwfc	postdec2,f,c
  1962  001A06                     l4109:
  1963  001A06  0ED0               	movlw	208
  1964  001A08  6E59               	movwf	??_vfpfcnvrt^0,c
  1965  001A0A  0EFF               	movlw	255
  1966  001A0C  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  1967  001A0E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1968  001A12  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1969  001A16  CFDE FFF6          	movff	postinc2,tblptrl
  1970  001A1A  CFDD FFF7          	movff	postdec2,tblptrh
  1971  001A1E                     	if	0	;tblptru may be non-zero
  1972  001A1E                     	endif
  1973  001A1E                     	if	0	;tblptru may be non-zero
  1974  001A1E                     	endif
  1975  001A1E  0008               	tblrd		*
  1976  001A20  50F5               	movf	tablat,w,c
  1977  001A22  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  1978  001A24  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  1979  001A26  5059               	movf	??_vfpfcnvrt^0,w,c
  1980  001A28  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1981  001A2A  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1982  001A2C  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1983  001A2E  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1984  001A30  E109               	bnz	u4640
  1985  001A32  0E0A               	movlw	10
  1986  001A34  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1987  001A36  A0D8               	btfss	status,0,c
  1988  001A38  EF20  F00D         	goto	u4641
  1989  001A3C  EF22  F00D         	goto	u4640
  1990  001A40                     u4641:
  1991  001A40  EFFC  F00C         	goto	l4105
  1992  001A44                     u4640:
  1993  001A44                     l4111:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1996  001A44  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1997  001A48  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1998  001A4C  CFDE FFF6          	movff	postinc2,tblptrl
  1999  001A50  CFDD FFF7          	movff	postdec2,tblptrh
  2000  001A54                     	if	0	;tblptru may be non-zero
  2001  001A54                     	endif
  2002  001A54                     	if	0	;tblptru may be non-zero
  2003  001A54                     	endif
  2004  001A54  0008               	tblrd		*
  2005  001A56  50F5               	movf	tablat,w,c
  2006  001A58  6E07               	movwf	tolower@c^0,c
  2007  001A5A  6A08               	clrf	(tolower@c+1)^0,c
  2008  001A5C  EC75  F01E         	call	_tolower	;wreg free
  2009  001A60  5007               	movf	?_tolower^0,w,c
  2010  001A62  0100               	movlb	0	; () banked
  2011  001A64  6F96               	movwf	vfpfcnvrt@ct& (0+255),b
  2012  001A66                     
  2013                           ; BSR set to: 0
  2014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2015  001A66  5196               	movf	vfpfcnvrt@ct& (0+255),w,b
  2016  001A68  B4D8               	btfsc	status,2,c
  2017  001A6A  EF39  F00D         	goto	u4651
  2018  001A6E  EF3B  F00D         	goto	u4650
  2019  001A72                     u4651:
  2020  001A72  EF75  F00D         	goto	l4121
  2021  001A76                     u4650:
  2022  001A76                     
  2023                           ; BSR set to: 0
  2024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2025  001A76  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2026  001A7A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2027  001A7E  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2028  001A82  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2029  001A86  0E01               	movlw	1
  2030  001A88  2659               	addwf	??_vfpfcnvrt^0,f,c
  2031  001A8A  0E00               	movlw	0
  2032  001A8C  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2033  001A8E  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2034  001A92  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2035  001A96                     	if	0	;tblptru may be non-zero
  2036  001A96                     	endif
  2037  001A96                     	if	0	;tblptru may be non-zero
  2038  001A96                     	endif
  2039  001A96  0008               	tblrd		*
  2040  001A98  50F5               	movf	tablat,w,c
  2041  001A9A  6E07               	movwf	tolower@c^0,c
  2042  001A9C  6A08               	clrf	(tolower@c+1)^0,c
  2043  001A9E  EC75  F01E         	call	_tolower	;wreg free
  2044  001AA2  5007               	movf	?_tolower^0,w,c
  2045  001AA4  0100               	movlb	0	; () banked
  2046  001AA6  6F97               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2047  001AA8                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2050  001AA8  5197               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2051  001AAA  B4D8               	btfsc	status,2,c
  2052  001AAC  EF5A  F00D         	goto	u4661
  2053  001AB0  EF5C  F00D         	goto	u4660
  2054  001AB4                     u4661:
  2055  001AB4  EF75  F00D         	goto	l4121
  2056  001AB8                     u4660:
  2057  001AB8                     
  2058                           ; BSR set to: 0
  2059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2060  001AB8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2061  001ABC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2062  001AC0  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2063  001AC4  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2064  001AC8  0E02               	movlw	2
  2065  001ACA  2659               	addwf	??_vfpfcnvrt^0,f,c
  2066  001ACC  0E00               	movlw	0
  2067  001ACE  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2068  001AD0  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2069  001AD4  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2070  001AD8                     	if	0	;tblptru may be non-zero
  2071  001AD8                     	endif
  2072  001AD8                     	if	0	;tblptru may be non-zero
  2073  001AD8                     	endif
  2074  001AD8  0008               	tblrd		*
  2075  001ADA  50F5               	movf	tablat,w,c
  2076  001ADC  6E07               	movwf	tolower@c^0,c
  2077  001ADE  6A08               	clrf	(tolower@c+1)^0,c
  2078  001AE0  EC75  F01E         	call	_tolower	;wreg free
  2079  001AE4  5007               	movf	?_tolower^0,w,c
  2080  001AE6  0100               	movlb	0	; () banked
  2081  001AE8  6F98               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2082  001AEA                     l4121:
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2086  001AEA  0E66               	movlw	102
  2087  001AEC  1996               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2088  001AEE  A4D8               	btfss	status,2,c
  2089  001AF0  EF7C  F00D         	goto	u4671
  2090  001AF4  EF7E  F00D         	goto	u4670
  2091  001AF8                     u4671:
  2092  001AF8  EFBE  F00D         	goto	l4133
  2093  001AFC                     u4670:
  2094  001AFC                     
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2097  001AFC  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2098  001B00  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2099  001B04  CFDE FFF6          	movff	postinc2,tblptrl
  2100  001B08  CFDD FFF7          	movff	postdec2,tblptrh
  2101  001B0C                     	if	0	;tblptru may be non-zero
  2102  001B0C                     	endif
  2103  001B0C                     	if	0	;tblptru may be non-zero
  2104  001B0C                     	endif
  2105  001B0C  0008               	tblrd		*
  2106  001B0E  CFF5 F099          	movff	tablat,vfpfcnvrt@c
  2107  001B12                     
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2110  001B12  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2111  001B16  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2112  001B1A  2ADE               	incf	postinc2,f,c
  2113  001B1C  0E00               	movlw	0
  2114  001B1E  22DD               	addwfc	postdec2,f,c
  2115  001B20                     
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2118  001B20  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2119  001B24  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2120  001B28  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2121  001B2C  0E04               	movlw	4
  2122  001B2E  26DE               	addwf	postinc2,f,c
  2123  001B30  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2124  001B34  0E00               	movlw	0
  2125  001B36  22DD               	addwfc	postdec2,f,c
  2126  001B38  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2127  001B3C  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2128  001B40  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2129  001B44  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2130  001B48  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2131  001B4C  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2132  001B50                     l4129:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2135  001B50  C053  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  2136  001B54  C054  F048         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2137  001B58  C092  F049         	movff	vfpfcnvrt@f,efgtoa@f
  2138  001B5C  C093  F04A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2139  001B60  C094  F04B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2140  001B64  C095  F04C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2141  001B68  C099  F04D         	movff	vfpfcnvrt@c,efgtoa@c
  2142  001B6C  EC15  F004         	call	_efgtoa	;wreg free
  2143  001B70  C047  F053         	movff	?_efgtoa,?_vfpfcnvrt
  2144  001B74  C048  F054         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2145  001B78  EF94  F00E         	goto	l1069
  2146  001B7C                     l4133:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2150  001B7C  0E96               	movlw	low vfpfcnvrt@ct
  2151  001B7E  6E01               	movwf	strncmp@_l^0,c
  2152  001B80  0E00               	movlw	high vfpfcnvrt@ct
  2153  001B82  6E02               	movwf	(strncmp@_l+1)^0,c
  2154  001B84  0E23               	movlw	low STR_12
  2155  001B86  6E03               	movwf	strncmp@_r^0,c
  2156  001B88  0E08               	movlw	high STR_12
  2157  001B8A  6E04               	movwf	(strncmp@_r+1)^0,c
  2158  001B8C  0E00               	movlw	0
  2159  001B8E  6E06               	movwf	(strncmp@n+1)^0,c
  2160  001B90  0E02               	movlw	2
  2161  001B92  6E05               	movwf	strncmp@n^0,c
  2162  001B94  ECD8  F018         	call	_strncmp	;wreg free
  2163  001B98  5001               	movf	?_strncmp^0,w,c
  2164  001B9A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2165  001B9C  A4D8               	btfss	status,2,c
  2166  001B9E  EFD3  F00D         	goto	u4681
  2167  001BA2  EFD5  F00D         	goto	u4680
  2168  001BA6                     u4681:
  2169  001BA6  EF43  F00E         	goto	l4149
  2170  001BAA                     u4680:
  2171  001BAA                     
  2172                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2173  001BAA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2174  001BAE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2175  001BB2  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2176  001BB6  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2177  001BBA  0E01               	movlw	1
  2178  001BBC  2659               	addwf	??_vfpfcnvrt^0,f,c
  2179  001BBE  0E00               	movlw	0
  2180  001BC0  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2181  001BC2  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2182  001BC6  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2183  001BCA                     	if	0	;tblptru may be non-zero
  2184  001BCA                     	endif
  2185  001BCA                     	if	0	;tblptru may be non-zero
  2186  001BCA                     	endif
  2187  001BCA  0008               	tblrd		*
  2188  001BCC  CFF5 F099          	movff	tablat,vfpfcnvrt@c
  2189  001BD0  0EBF               	movlw	191
  2190  001BD2  6E59               	movwf	??_vfpfcnvrt^0,c
  2191  001BD4  0EFF               	movlw	255
  2192  001BD6  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  2193  001BD8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2194  001BDC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2195  001BE0  CFDE FFF6          	movff	postinc2,tblptrl
  2196  001BE4  CFDD FFF7          	movff	postdec2,tblptrh
  2197  001BE8                     	if	0	;tblptru may be non-zero
  2198  001BE8                     	endif
  2199  001BE8                     	if	0	;tblptru may be non-zero
  2200  001BE8                     	endif
  2201  001BE8  0008               	tblrd		*
  2202  001BEA  50F5               	movf	tablat,w,c
  2203  001BEC  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  2204  001BEE  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  2205  001BF0  5059               	movf	??_vfpfcnvrt^0,w,c
  2206  001BF2  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2207  001BF4  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2208  001BF6  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2209  001BF8  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2210  001BFA  E107               	bnz	u4691
  2211  001BFC  0E1A               	movlw	26
  2212  001BFE  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2213  001C00  B0D8               	btfsc	status,0,c
  2214  001C02  EF05  F00E         	goto	u4691
  2215  001C06  EF07  F00E         	goto	u4690
  2216  001C0A                     u4691:
  2217  001C0A  EF21  F00E         	goto	l4143
  2218  001C0E                     u4690:
  2219  001C0E                     
  2220                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2221  001C0E  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2222  001C12  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2223  001C16  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2224  001C1A  0E04               	movlw	4
  2225  001C1C  26DE               	addwf	postinc2,f,c
  2226  001C1E  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2227  001C22  0E00               	movlw	0
  2228  001C24  22DD               	addwfc	postdec2,f,c
  2229  001C26  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2230  001C2A  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2231  001C2E  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2232  001C32  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2233  001C36  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2234  001C3A  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2237  001C3E  EF39  F00E         	goto	l1074
  2238  001C42                     l4143:
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2241  001C42  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2242  001C46  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2243  001C4A  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2244  001C4E  0E04               	movlw	4
  2245  001C50  26DE               	addwf	postinc2,f,c
  2246  001C52  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2247  001C56  0E00               	movlw	0
  2248  001C58  22DD               	addwfc	postdec2,f,c
  2249  001C5A  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2250  001C5E  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2251  001C62  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2252  001C66  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2253  001C6A  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2254  001C6E  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2255  001C72                     l1074:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2258  001C72  0E02               	movlw	2
  2259  001C74  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2260  001C78  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2261  001C7C  26DE               	addwf	postinc2,f,c
  2262  001C7E  0E00               	movlw	0
  2263  001C80  22DD               	addwfc	postdec2,f,c
  2264  001C82  EFA8  F00D         	goto	l4129
  2265  001C86                     l4149:
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2268  001C86  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2269  001C8A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2270  001C8E  CFDE FFF6          	movff	postinc2,tblptrl
  2271  001C92  CFDD FFF7          	movff	postdec2,tblptrh
  2272  001C96                     	if	0	;tblptru may be non-zero
  2273  001C96                     	endif
  2274  001C96                     	if	0	;tblptru may be non-zero
  2275  001C96                     	endif
  2276  001C96  0008               	tblrd		*
  2277  001C98  50F5               	movf	tablat,w,c
  2278  001C9A  0A25               	xorlw	37
  2279  001C9C  A4D8               	btfss	status,2,c
  2280  001C9E  EF53  F00E         	goto	u4701
  2281  001CA2  EF55  F00E         	goto	u4700
  2282  001CA6                     u4701:
  2283  001CA6  EF6C  F00E         	goto	l4159
  2284  001CAA                     u4700:
  2285  001CAA                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2287  001CAA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2288  001CAE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2289  001CB2  2ADE               	incf	postinc2,f,c
  2290  001CB4  0E00               	movlw	0
  2291  001CB6  22DD               	addwfc	postdec2,f,c
  2292  001CB8                     
  2293                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2294  001CB8  0E00               	movlw	0
  2295  001CBA  6E02               	movwf	(fputc@c+1)^0,c
  2296  001CBC  0E25               	movlw	37
  2297  001CBE  6E01               	movwf	fputc@c^0,c
  2298  001CC0  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2299  001CC4  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2300  001CC8  ECAD  F019         	call	_fputc	;wreg free
  2301  001CCC                     l4155:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2304  001CCC  0E00               	movlw	0
  2305  001CCE  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2306  001CD0  0E01               	movlw	1
  2307  001CD2  6E53               	movwf	?_vfpfcnvrt^0,c
  2308  001CD4  EF94  F00E         	goto	l1069
  2309  001CD8                     l4159:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2312  001CD8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2313  001CDC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  001CE0  2ADE               	incf	postinc2,f,c
  2315  001CE2  0E00               	movlw	0
  2316  001CE4  22DD               	addwfc	postdec2,f,c
  2317  001CE6                     
  2318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2319  001CE6  0E00               	movlw	0
  2320  001CE8  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2321  001CEA  0E00               	movlw	0
  2322  001CEC  6E53               	movwf	?_vfpfcnvrt^0,c
  2323  001CEE  EF94  F00E         	goto	l1069
  2324  001CF2                     l4165:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2327  001CF2  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2328  001CF6  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2329  001CFA  CFDE FFF6          	movff	postinc2,tblptrl
  2330  001CFE  CFDD FFF7          	movff	postdec2,tblptrh
  2331  001D02                     	if	0	;tblptru may be non-zero
  2332  001D02                     	endif
  2333  001D02                     	if	0	;tblptru may be non-zero
  2334  001D02                     	endif
  2335  001D02  0008               	tblrd		*
  2336  001D04  50F5               	movf	tablat,w,c
  2337  001D06  6E01               	movwf	fputc@c^0,c
  2338  001D08  6A02               	clrf	(fputc@c+1)^0,c
  2339  001D0A  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2340  001D0E  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2341  001D12  ECAD  F019         	call	_fputc	;wreg free
  2342  001D16                     
  2343                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2344  001D16  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2345  001D1A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2346  001D1E  2ADE               	incf	postinc2,f,c
  2347  001D20  0E00               	movlw	0
  2348  001D22  22DD               	addwfc	postdec2,f,c
  2349  001D24  EF66  F00E         	goto	l4155
  2350  001D28                     l1069:
  2351  001D28  0012               	return		;funcret
  2352  001D2A                     __end_of_vfpfcnvrt:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _strncmp *****************
  2356 ;; Defined at:
  2357 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2360 ;;		 -> vfpfcnvrt@ct(3), 
  2361 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2362 ;;		 -> STR_14(3), 
  2363 ;;  n               2    4[COMRAM] unsigned int 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2366 ;;		 -> STR_14(3), 
  2367 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2368 ;;		 -> vfpfcnvrt@ct(3), 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  2    0[COMRAM] int 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2378 ;;      Params:         6       0       0       0       0       0       0       0       0
  2379 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2380 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2381 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2382 ;;Total ram usage:       11 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_vfpfcnvrt
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text5
  2392  0031B0                     __ptext5:
  2393                           	callstack 0
  2394  0031B0                     _strncmp:
  2395                           	callstack 26
  2396  0031B0  C001  F008         	movff	strncmp@_l,strncmp@l
  2397  0031B4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2398  0031B8  C003  F00A         	movff	strncmp@_r,strncmp@r
  2399  0031BC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2400  0031C0  0605               	decf	strncmp@n^0,f,c
  2401  0031C2  A0D8               	btfss	status,0,c
  2402  0031C4  0606               	decf	(strncmp@n+1)^0,f,c
  2403  0031C6  2805               	incf	strncmp@n^0,w,c
  2404  0031C8  E106               	bnz	u4541
  2405  0031CA  2806               	incf	(strncmp@n+1)^0,w,c
  2406  0031CC  A4D8               	btfss	status,2,c
  2407  0031CE  EFEB  F018         	goto	u4541
  2408  0031D2  EFED  F018         	goto	u4540
  2409  0031D6                     u4541:
  2410  0031D6  EFFA  F018         	goto	l4063
  2411  0031DA                     u4540:
  2412  0031DA  0E00               	movlw	0
  2413  0031DC  6E02               	movwf	(?_strncmp+1)^0,c
  2414  0031DE  0E00               	movlw	0
  2415  0031E0  6E01               	movwf	?_strncmp^0,c
  2416  0031E2  EF42  F019         	goto	l1189
  2417  0031E6                     l4061:
  2418  0031E6  4A08               	infsnz	strncmp@l^0,f,c
  2419  0031E8  2A09               	incf	(strncmp@l+1)^0,f,c
  2420  0031EA  4A0A               	infsnz	strncmp@r^0,f,c
  2421  0031EC  2A0B               	incf	(strncmp@r+1)^0,f,c
  2422  0031EE  0605               	decf	strncmp@n^0,f,c
  2423  0031F0  A0D8               	btfss	status,0,c
  2424  0031F2  0606               	decf	(strncmp@n+1)^0,f,c
  2425  0031F4                     l4063:
  2426  0031F4  C008  FFD9         	movff	strncmp@l,fsr2l
  2427  0031F8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2428  0031FC  50DF               	movf	indf2,w,c
  2429  0031FE  B4D8               	btfsc	status,2,c
  2430  003200  EF04  F019         	goto	u4551
  2431  003204  EF06  F019         	goto	u4550
  2432  003208                     u4551:
  2433  003208  EF31  F019         	goto	l4071
  2434  00320C                     u4550:
  2435  00320C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2436  003210  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2437  003214                     	if	0	;tblptru may be non-zero
  2438  003214                     	endif
  2439  003214                     	if	0	;tblptru may be non-zero
  2440  003214                     	endif
  2441  003214  0008               	tblrd		*
  2442  003216  50F5               	movf	tablat,w,c
  2443  003218  0900               	iorlw	0
  2444  00321A  B4D8               	btfsc	status,2,c
  2445  00321C  EF12  F019         	goto	u4561
  2446  003220  EF14  F019         	goto	u4560
  2447  003224                     u4561:
  2448  003224  EF31  F019         	goto	l4071
  2449  003228                     u4560:
  2450  003228  5005               	movf	strncmp@n^0,w,c
  2451  00322A  1006               	iorwf	(strncmp@n+1)^0,w,c
  2452  00322C  B4D8               	btfsc	status,2,c
  2453  00322E  EF1B  F019         	goto	u4571
  2454  003232  EF1D  F019         	goto	u4570
  2455  003236                     u4571:
  2456  003236  EF31  F019         	goto	l4071
  2457  00323A                     u4570:
  2458  00323A  C008  FFD9         	movff	strncmp@l,fsr2l
  2459  00323E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2460  003242  50DF               	movf	indf2,w,c
  2461  003244  6E07               	movwf	??_strncmp^0,c
  2462  003246  C00A  FFF6         	movff	strncmp@r,tblptrl
  2463  00324A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2464  00324E                     	if	0	;tblptru may be non-zero
  2465  00324E                     	endif
  2466  00324E                     	if	0	;tblptru may be non-zero
  2467  00324E                     	endif
  2468  00324E  0008               	tblrd		*
  2469  003250  50F5               	movf	tablat,w,c
  2470  003252  1807               	xorwf	??_strncmp^0,w,c
  2471  003254  B4D8               	btfsc	status,2,c
  2472  003256  EF2F  F019         	goto	u4581
  2473  00325A  EF31  F019         	goto	u4580
  2474  00325E                     u4581:
  2475  00325E  EFF3  F018         	goto	l4061
  2476  003262                     u4580:
  2477  003262                     l4071:
  2478  003262  C008  FFD9         	movff	strncmp@l,fsr2l
  2479  003266  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2480  00326A  50DF               	movf	indf2,w,c
  2481  00326C  6E07               	movwf	??_strncmp^0,c
  2482  00326E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2483  003272  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2484  003276                     	if	0	;tblptru may be non-zero
  2485  003276                     	endif
  2486  003276                     	if	0	;tblptru may be non-zero
  2487  003276                     	endif
  2488  003276  0008               	tblrd		*
  2489  003278  50F5               	movf	tablat,w,c
  2490  00327A  5C07               	subwf	??_strncmp^0,w,c
  2491  00327C  6E01               	movwf	?_strncmp^0,c
  2492  00327E  6A02               	clrf	(?_strncmp+1)^0,c
  2493  003280  A0D8               	btfss	status,0,c
  2494  003282  0602               	decf	(?_strncmp+1)^0,f,c
  2495  003284                     l1189:
  2496  003284  0012               	return		;funcret
  2497  003286                     __end_of_strncmp:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function _efgtoa *****************
  2501 ;; Defined at:
  2502 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2505 ;;		 -> sprintf@f(11), 
  2506 ;;  f               4   72[COMRAM] PTR struct _IO_FILE
  2507 ;;  c               1   76[COMRAM] unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  u               4   46[BANK0 ] unsigned char 
  2510 ;;  g               4   38[BANK0 ] unsigned char 
  2511 ;;  l               4   32[BANK0 ] unsigned char 
  2512 ;;  h               4   28[BANK0 ] unsigned char 
  2513 ;;  ou              4   14[BANK0 ] unsigned char 
  2514 ;;  n               2   44[BANK0 ] int 
  2515 ;;  e               2   42[BANK0 ] int 
  2516 ;;  i               2   36[BANK0 ] int 
  2517 ;;  w               2   24[BANK0 ] int 
  2518 ;;  p               2   22[BANK0 ] int 
  2519 ;;  sign            2   20[BANK0 ] int 
  2520 ;;  d               2   18[BANK0 ] int 
  2521 ;;  m               2   12[BANK0 ] int 
  2522 ;;  ne              2   10[BANK0 ] int 
  2523 ;;  pp              2    8[BANK0 ] int 
  2524 ;;  t               2    6[BANK0 ] int 
  2525 ;;  mode            1   27[BANK0 ] unsigned char 
  2526 ;;  nmode           1   26[BANK0 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2   70[COMRAM] int 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         7       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2538 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2539 ;;      Totals:        12      50       0       0       0       0       0       0       0
  2540 ;;Total ram usage:       62 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 4
  2543 ;; This function calls:
  2544 ;;		___awdiv
  2545 ;;		___awmod
  2546 ;;		___fladd
  2547 ;;		___fldiv
  2548 ;;		___fleq
  2549 ;;		___flge
  2550 ;;		___flmul
  2551 ;;		___flneg
  2552 ;;		___flsub
  2553 ;;		___fltol
  2554 ;;		___fpclassifyf
  2555 ;;		_floorf
  2556 ;;		_isupper
  2557 ;;		_pad
  2558 ;;		_strcpy
  2559 ;;		_tolower
  2560 ;; This function is called by:
  2561 ;;		_vfpfcnvrt
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text6
  2566  00082A                     __ptext6:
  2567                           	callstack 0
  2568  00082A                     _efgtoa:
  2569                           	callstack 22
  2570  00082A                     
  2571                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2572  00082A  0E00               	movlw	0
  2573  00082C  0100               	movlb	0	; () banked
  2574  00082E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2575  000830  0E00               	movlw	0
  2576  000832  6F74               	movwf	efgtoa@sign& (0+255),b
  2577  000834                     
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2580  000834  C049  F086         	movff	efgtoa@f,efgtoa@g
  2581  000838  C04A  F087         	movff	efgtoa@f+1,efgtoa@g+1
  2582  00083C  C04B  F088         	movff	efgtoa@f+2,efgtoa@g+2
  2583  000840  C04C  F089         	movff	efgtoa@f+3,efgtoa@g+3
  2584  000844                     
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2587  000844  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2588  000846  EF29  F004         	goto	u4020
  2589  00084A  EF27  F004         	goto	u4021
  2590  00084E                     u4021:
  2591  00084E  EF3F  F004         	goto	l3727
  2592  000852                     u4020:
  2593  000852                     
  2594                           ; BSR set to: 0
  2595                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2596  000852  0E00               	movlw	0
  2597  000854  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2598  000856  0E01               	movlw	1
  2599  000858  6F74               	movwf	efgtoa@sign& (0+255),b
  2600  00085A                     
  2601                           ; BSR set to: 0
  2602                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2603  00085A  C086  F001         	movff	efgtoa@g,___flneg@f1
  2604  00085E  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2605  000862  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2606  000866  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2607  00086A  ECF9  F01E         	call	___flneg	;wreg free
  2608  00086E  C001  F086         	movff	?___flneg,efgtoa@g
  2609  000872  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  2610  000876  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  2611  00087A  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  2612  00087E                     l3727:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2615  00087E  0E00               	movlw	0
  2616  000880  0100               	movlb	0	; () banked
  2617  000882  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  2618  000884  0E00               	movlw	0
  2619  000886  6F8C               	movwf	efgtoa@n& (0+255),b
  2620  000888                     
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2623  000888  C0E9  F078         	movff	_width,efgtoa@w
  2624  00088C  C0EA  F079         	movff	_width+1,efgtoa@w+1
  2625  000890                     
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2628  000890  5174               	movf	efgtoa@sign& (0+255),w,b
  2629  000892  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2630  000894  A4D8               	btfss	status,2,c
  2631  000896  EF4F  F004         	goto	u4031
  2632  00089A  EF51  F004         	goto	u4030
  2633  00089E                     u4031:
  2634  00089E  EF58  F004         	goto	l3735
  2635  0008A2                     u4030:
  2636  0008A2                     
  2637                           ; BSR set to: 0
  2638  0008A2  A5ED               	btfss	_flags& (0+255),2,b
  2639  0008A4  EF56  F004         	goto	u4041
  2640  0008A8  EF58  F004         	goto	u4040
  2641  0008AC                     u4041:
  2642  0008AC  EF72  F004         	goto	l3747
  2643  0008B0                     u4040:
  2644  0008B0                     l3735:
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2648  0008B0  5174               	movf	efgtoa@sign& (0+255),w,b
  2649  0008B2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2650  0008B4  A4D8               	btfss	status,2,c
  2651  0008B6  EF5F  F004         	goto	u4051
  2652  0008BA  EF61  F004         	goto	u4050
  2653  0008BE                     u4051:
  2654  0008BE  EF67  F004         	goto	l3739
  2655  0008C2                     u4050:
  2656  0008C2                     
  2657                           ; BSR set to: 0
  2658  0008C2  0E00               	movlw	0
  2659  0008C4  6F61               	movwf	(_efgtoa$1470+1)& (0+255),b
  2660  0008C6  0E2B               	movlw	43
  2661  0008C8  6F60               	movwf	_efgtoa$1470& (0+255),b
  2662  0008CA  EF6B  F004         	goto	l3741
  2663  0008CE                     l3739:
  2664                           
  2665                           ; BSR set to: 0
  2666  0008CE  0E00               	movlw	0
  2667  0008D0  6F61               	movwf	(_efgtoa$1470+1)& (0+255),b
  2668  0008D2  0E2D               	movlw	45
  2669  0008D4  6F60               	movwf	_efgtoa$1470& (0+255),b
  2670  0008D6                     l3741:
  2671                           
  2672                           ; BSR set to: 0
  2673  0008D6  C060  F100         	movff	_efgtoa$1470,_dbuf
  2674  0008DA                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2677  0008DA  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2678  0008DC  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2679  0008DE                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2682  0008DE  0778               	decf	efgtoa@w& (0+255),f,b
  2683  0008E0  A0D8               	btfss	status,0,c
  2684  0008E2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2685  0008E4                     l3747:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2689  0008E4  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2690  0008E8  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2691  0008EC  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2692  0008F0  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2693  0008F4  ECDC  F017         	call	___fpclassifyf	;wreg free
  2694  0008F8  0401               	decf	?___fpclassifyf^0,w,c
  2695  0008FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2696  0008FC  A4D8               	btfss	status,2,c
  2697  0008FE  EF83  F004         	goto	u4061
  2698  000902  EF85  F004         	goto	u4060
  2699  000906                     u4061:
  2700  000906  EFD0  F004         	goto	l3765
  2701  00090A                     u4060:
  2702  00090A  0EBF               	movlw	191
  2703  00090C  6E4E               	movwf	??_efgtoa^0,c
  2704  00090E  0EFF               	movlw	255
  2705  000910  6E4F               	movwf	(??_efgtoa+1)^0,c
  2706  000912  504D               	movf	efgtoa@c^0,w,c
  2707  000914  6E50               	movwf	(??_efgtoa+2)^0,c
  2708  000916  6A51               	clrf	(??_efgtoa+3)^0,c
  2709  000918  504E               	movf	??_efgtoa^0,w,c
  2710  00091A  2650               	addwf	(??_efgtoa+2)^0,f,c
  2711  00091C  504F               	movf	(??_efgtoa+1)^0,w,c
  2712  00091E  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2713  000920  5051               	movf	(??_efgtoa+3)^0,w,c
  2714  000922  E107               	bnz	u4071
  2715  000924  0E1A               	movlw	26
  2716  000926  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2717  000928  B0D8               	btfsc	status,0,c
  2718  00092A  EF99  F004         	goto	u4071
  2719  00092E  EF9B  F004         	goto	u4070
  2720  000932                     u4071:
  2721  000932  EFAA  F004         	goto	l3757
  2722  000936                     u4070:
  2723  000936                     
  2724                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2725  000936  0E00               	movlw	low _dbuf
  2726  000938  0100               	movlb	0	; () banked
  2727  00093A  258C               	addwf	efgtoa@n& (0+255),w,b
  2728  00093C  6E01               	movwf	strcpy@dest^0,c
  2729  00093E  0E01               	movlw	high _dbuf
  2730  000940  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2731  000942  6E02               	movwf	(strcpy@dest+1)^0,c
  2732  000944  0E13               	movlw	low STR_4
  2733  000946  6E03               	movwf	strcpy@src^0,c
  2734  000948  0E08               	movlw	high STR_4
  2735  00094A  6E04               	movwf	(strcpy@src+1)^0,c
  2736  00094C  ECD1  F01D         	call	_strcpy	;wreg free
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2739  000950  EFB7  F004         	goto	l3759
  2740  000954                     l3757:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2743  000954  0E00               	movlw	low _dbuf
  2744  000956  0100               	movlb	0	; () banked
  2745  000958  258C               	addwf	efgtoa@n& (0+255),w,b
  2746  00095A  6E01               	movwf	strcpy@dest^0,c
  2747  00095C  0E01               	movlw	high _dbuf
  2748  00095E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2749  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2750  000962  0E1B               	movlw	low STR_5
  2751  000964  6E03               	movwf	strcpy@src^0,c
  2752  000966  0E08               	movlw	high STR_5
  2753  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2754  00096A  ECD1  F01D         	call	_strcpy	;wreg free
  2755  00096E                     l3759:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2758  00096E  0100               	movlb	0	; () banked
  2759  000970  0EFD               	movlw	253
  2760  000972  2778               	addwf	efgtoa@w& (0+255),f,b
  2761  000974  0EFF               	movlw	255
  2762  000976  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2763  000978                     l3761:
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2766  000978  C047  F011         	movff	efgtoa@fp,pad@fp
  2767  00097C  C048  F012         	movff	efgtoa@fp+1,pad@fp+1
  2768  000980  0E00               	movlw	low _dbuf
  2769  000982  6E13               	movwf	pad@buf^0,c
  2770  000984  0E01               	movlw	high _dbuf
  2771  000986  6E14               	movwf	(pad@buf+1)^0,c
  2772  000988  C078  F015         	movff	efgtoa@w,pad@p
  2773  00098C  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2774  000990  EC12  F01A         	call	_pad	;wreg free
  2775  000994  C011  F047         	movff	?_pad,?_efgtoa
  2776  000998  C012  F048         	movff	?_pad+1,?_efgtoa+1
  2777  00099C  EF1B  F00A         	goto	l983
  2778  0009A0                     l3765:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2781  0009A0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2782  0009A4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2783  0009A8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2784  0009AC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2785  0009B0  ECDC  F017         	call	___fpclassifyf	;wreg free
  2786  0009B4  5001               	movf	?___fpclassifyf^0,w,c
  2787  0009B6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2788  0009B8  A4D8               	btfss	status,2,c
  2789  0009BA  EFE1  F004         	goto	u4081
  2790  0009BE  EFE3  F004         	goto	u4080
  2791  0009C2                     u4081:
  2792  0009C2  EF17  F005         	goto	l3783
  2793  0009C6                     u4080:
  2794  0009C6  0EBF               	movlw	191
  2795  0009C8  6E4E               	movwf	??_efgtoa^0,c
  2796  0009CA  0EFF               	movlw	255
  2797  0009CC  6E4F               	movwf	(??_efgtoa+1)^0,c
  2798  0009CE  504D               	movf	efgtoa@c^0,w,c
  2799  0009D0  6E50               	movwf	(??_efgtoa+2)^0,c
  2800  0009D2  6A51               	clrf	(??_efgtoa+3)^0,c
  2801  0009D4  504E               	movf	??_efgtoa^0,w,c
  2802  0009D6  2650               	addwf	(??_efgtoa+2)^0,f,c
  2803  0009D8  504F               	movf	(??_efgtoa+1)^0,w,c
  2804  0009DA  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2805  0009DC  5051               	movf	(??_efgtoa+3)^0,w,c
  2806  0009DE  E107               	bnz	u4091
  2807  0009E0  0E1A               	movlw	26
  2808  0009E2  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2809  0009E4  B0D8               	btfsc	status,0,c
  2810  0009E6  EFF7  F004         	goto	u4091
  2811  0009EA  EFF9  F004         	goto	u4090
  2812  0009EE                     u4091:
  2813  0009EE  EF08  F005         	goto	l3775
  2814  0009F2                     u4090:
  2815  0009F2                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2817  0009F2  0E00               	movlw	low _dbuf
  2818  0009F4  0100               	movlb	0	; () banked
  2819  0009F6  258C               	addwf	efgtoa@n& (0+255),w,b
  2820  0009F8  6E01               	movwf	strcpy@dest^0,c
  2821  0009FA  0E01               	movlw	high _dbuf
  2822  0009FC  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2823  0009FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2824  000A00  0E17               	movlw	low STR_8
  2825  000A02  6E03               	movwf	strcpy@src^0,c
  2826  000A04  0E08               	movlw	high STR_8
  2827  000A06  6E04               	movwf	(strcpy@src+1)^0,c
  2828  000A08  ECD1  F01D         	call	_strcpy	;wreg free
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2831  000A0C  EFB7  F004         	goto	l3759
  2832  000A10                     l3775:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2835  000A10  0E00               	movlw	low _dbuf
  2836  000A12  0100               	movlb	0	; () banked
  2837  000A14  258C               	addwf	efgtoa@n& (0+255),w,b
  2838  000A16  6E01               	movwf	strcpy@dest^0,c
  2839  000A18  0E01               	movlw	high _dbuf
  2840  000A1A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2841  000A1C  6E02               	movwf	(strcpy@dest+1)^0,c
  2842  000A1E  0E1F               	movlw	low STR_9
  2843  000A20  6E03               	movwf	strcpy@src^0,c
  2844  000A22  0E08               	movlw	high STR_9
  2845  000A24  6E04               	movwf	(strcpy@src+1)^0,c
  2846  000A26  ECD1  F01D         	call	_strcpy	;wreg free
  2847  000A2A  EFB7  F004         	goto	l3759
  2848  000A2E                     l3783:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2851  000A2E  0E00               	movlw	0
  2852  000A30  0100               	movlb	0	; () banked
  2853  000A32  6F8E               	movwf	efgtoa@u& (0+255),b
  2854  000A34  0E00               	movlw	0
  2855  000A36  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2856  000A38  0E80               	movlw	128
  2857  000A3A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2858  000A3C  0E3F               	movlw	63
  2859  000A3E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2862  000A40  0E00               	movlw	0
  2863  000A42  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2864  000A44  0E00               	movlw	0
  2865  000A46  6F8A               	movwf	efgtoa@e& (0+255),b
  2866  000A48                     
  2867                           ; BSR set to: 0
  2868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2869  000A48  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2870  000A4C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2871  000A50  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2872  000A54  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2873  000A58  0E00               	movlw	0
  2874  000A5A  6E05               	movwf	___fleq@ff2^0,c
  2875  000A5C  0E00               	movlw	0
  2876  000A5E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2877  000A60  0E00               	movlw	0
  2878  000A62  6E07               	movwf	(___fleq@ff2+2)^0,c
  2879  000A64  0E00               	movlw	0
  2880  000A66  6E08               	movwf	(___fleq@ff2+3)^0,c
  2881  000A68  EC88  F01B         	call	___fleq	;wreg free
  2882  000A6C  B0D8               	btfsc	status,0,c
  2883  000A6E  EF3B  F005         	goto	u4101
  2884  000A72  EF3D  F005         	goto	u4100
  2885  000A76                     u4101:
  2886  000A76  EFC0  F005         	goto	l3801
  2887  000A7A                     u4100:
  2888  000A7A  EF5C  F005         	goto	l3793
  2889  000A7E                     l3789:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2892  000A7E  C08E  F001         	movff	efgtoa@u,___flmul@b
  2893  000A82  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2894  000A86  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2895  000A8A  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2896  000A8E  0E00               	movlw	0
  2897  000A90  6E05               	movwf	___flmul@a^0,c
  2898  000A92  0E00               	movlw	0
  2899  000A94  6E06               	movwf	(___flmul@a+1)^0,c
  2900  000A96  0E20               	movlw	32
  2901  000A98  6E07               	movwf	(___flmul@a+2)^0,c
  2902  000A9A  0E41               	movlw	65
  2903  000A9C  6E08               	movwf	(___flmul@a+3)^0,c
  2904  000A9E  EC95  F00E         	call	___flmul	;wreg free
  2905  000AA2  C001  F08E         	movff	?___flmul,efgtoa@u
  2906  000AA6  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  2907  000AAA  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  2908  000AAE  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  2909  000AB2                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2911  000AB2  0100               	movlb	0	; () banked
  2912  000AB4  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2913  000AB6  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2914  000AB8                     l3793:
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2917  000AB8  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2918  000ABC  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2919  000AC0  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2920  000AC4  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2921  000AC8  0E00               	movlw	0
  2922  000ACA  6E05               	movwf	___flmul@a^0,c
  2923  000ACC  0E00               	movlw	0
  2924  000ACE  6E06               	movwf	(___flmul@a+1)^0,c
  2925  000AD0  0E20               	movlw	32
  2926  000AD2  6E07               	movwf	(___flmul@a+2)^0,c
  2927  000AD4  0E41               	movlw	65
  2928  000AD6  6E08               	movwf	(___flmul@a+3)^0,c
  2929  000AD8  C08E  F001         	movff	efgtoa@u,___flmul@b
  2930  000ADC  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2931  000AE0  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2932  000AE4  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2933  000AE8  EC95  F00E         	call	___flmul	;wreg free
  2934  000AEC  C001  F01E         	movff	?___flmul,___flge@ff2
  2935  000AF0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2936  000AF4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2937  000AF8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2938  000AFC  EC5A  F017         	call	___flge	;wreg free
  2939  000B00  B0D8               	btfsc	status,0,c
  2940  000B02  EF85  F005         	goto	u4111
  2941  000B06  EF87  F005         	goto	u4110
  2942  000B0A                     u4111:
  2943  000B0A  EF3F  F005         	goto	l3789
  2944  000B0E                     u4110:
  2945  000B0E  EFA7  F005         	goto	l3799
  2946  000B12                     l3795:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2949  000B12  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  2950  000B16  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2951  000B1A  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2952  000B1E  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2953  000B22  0E00               	movlw	0
  2954  000B24  6E1E               	movwf	___fldiv@a^0,c
  2955  000B26  0E00               	movlw	0
  2956  000B28  6E1F               	movwf	(___fldiv@a+1)^0,c
  2957  000B2A  0E20               	movlw	32
  2958  000B2C  6E20               	movwf	(___fldiv@a+2)^0,c
  2959  000B2E  0E41               	movlw	65
  2960  000B30  6E21               	movwf	(___fldiv@a+3)^0,c
  2961  000B32  ECAA  F010         	call	___fldiv	;wreg free
  2962  000B36  C01A  F08E         	movff	?___fldiv,efgtoa@u
  2963  000B3A  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2964  000B3E  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  2965  000B42  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  2966  000B46                     
  2967                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2968  000B46  0100               	movlb	0	; () banked
  2969  000B48  078A               	decf	efgtoa@e& (0+255),f,b
  2970  000B4A  A0D8               	btfss	status,0,c
  2971  000B4C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  2972  000B4E                     l3799:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2975  000B4E  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2976  000B52  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2977  000B56  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2978  000B5A  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2979  000B5E  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  2980  000B62  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2981  000B66  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2982  000B6A  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2983  000B6E  EC5A  F017         	call	___flge	;wreg free
  2984  000B72  A0D8               	btfss	status,0,c
  2985  000B74  EFBE  F005         	goto	u4121
  2986  000B78  EFC0  F005         	goto	u4120
  2987  000B7C                     u4121:
  2988  000B7C  EF89  F005         	goto	l3795
  2989  000B80                     u4120:
  2990  000B80                     l3801:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2993  000B80  C04D  F007         	movff	efgtoa@c,tolower@c
  2994  000B84  6A08               	clrf	(tolower@c+1)^0,c
  2995  000B86  EC75  F01E         	call	_tolower	;wreg free
  2996  000B8A  5007               	movf	?_tolower^0,w,c
  2997  000B8C  0100               	movlb	0	; () banked
  2998  000B8E  6F7B               	movwf	efgtoa@mode& (0+255),b
  2999  000B90                     
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3002  000B90  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  3003  000B94                     
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3006  000B94  0E67               	movlw	103
  3007  000B96  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3008  000B98  A4D8               	btfss	status,2,c
  3009  000B9A  EFD1  F005         	goto	u4131
  3010  000B9E  EFD3  F005         	goto	u4130
  3011  000BA2                     u4131:
  3012  000BA2  EFF9  F005         	goto	l3815
  3013  000BA6                     u4130:
  3014  000BA6                     
  3015                           ; BSR set to: 0
  3016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3017  000BA6  51EB               	movf	_prec& (0+255),w,b
  3018  000BA8  11EC               	iorwf	(_prec+1)& (0+255),w,b
  3019  000BAA  A4D8               	btfss	status,2,c
  3020  000BAC  EFDA  F005         	goto	u4141
  3021  000BB0  EFDC  F005         	goto	u4140
  3022  000BB4                     u4141:
  3023  000BB4  EFE0  F005         	goto	l3811
  3024  000BB8                     u4140:
  3025  000BB8                     
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3028  000BB8  0E00               	movlw	0
  3029  000BBA  6FEC               	movwf	(_prec+1)& (0+255),b
  3030  000BBC  0E01               	movlw	1
  3031  000BBE  6FEB               	movwf	_prec& (0+255),b
  3032  000BC0                     l3811:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3036  000BC0  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  3037  000BC2  EFED  F005         	goto	u4150
  3038  000BC6  51EC               	movf	(_prec+1)& (0+255),w,b
  3039  000BC8  E106               	bnz	u4151
  3040  000BCA  05EB               	decf	_prec& (0+255),w,b
  3041  000BCC  B0D8               	btfsc	status,0,c
  3042  000BCE  EFEB  F005         	goto	u4151
  3043  000BD2  EFED  F005         	goto	u4150
  3044  000BD6                     u4151:
  3045  000BD6  EFF3  F005         	goto	l999
  3046  000BDA                     u4150:
  3047  000BDA                     l3813:
  3048                           
  3049                           ; BSR set to: 0
  3050  000BDA  0E00               	movlw	0
  3051  000BDC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3052  000BDE  0E06               	movlw	6
  3053  000BE0  6F76               	movwf	efgtoa@p& (0+255),b
  3054  000BE2  EF02  F006         	goto	l3821
  3055  000BE6                     l999:
  3056                           
  3057                           ; BSR set to: 0
  3058  000BE6  C0EB  F076         	movff	_prec,efgtoa@p
  3059  000BEA  C0EC  F077         	movff	_prec+1,efgtoa@p+1
  3060  000BEE  EF02  F006         	goto	l3821
  3061  000BF2                     l3815:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3065  000BF2  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  3066  000BF4  EFFE  F005         	goto	u4161
  3067  000BF8  EF00  F006         	goto	u4160
  3068  000BFC                     u4161:
  3069  000BFC  EFED  F005         	goto	l3813
  3070  000C00                     u4160:
  3071  000C00  EFF3  F005         	goto	l999
  3072  000C04                     l3821:
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3076  000C04  0E67               	movlw	103
  3077  000C06  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3078  000C08  A4D8               	btfss	status,2,c
  3079  000C0A  EF09  F006         	goto	u4171
  3080  000C0E  EF0B  F006         	goto	u4170
  3081  000C12                     u4171:
  3082  000C12  EF3A  F006         	goto	l3831
  3083  000C16                     u4170:
  3084  000C16                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3087  000C16  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  3088  000C18  EF19  F006         	goto	u4180
  3089  000C1C  0EFC               	movlw	252
  3090  000C1E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  3091  000C20  0EFF               	movlw	255
  3092  000C22  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3093  000C24  A0D8               	btfss	status,0,c
  3094  000C26  EF17  F006         	goto	u4181
  3095  000C2A  EF19  F006         	goto	u4180
  3096  000C2E                     u4181:
  3097  000C2E  EF38  F006         	goto	l3829
  3098  000C32                     u4180:
  3099  000C32                     
  3100                           ; BSR set to: 0
  3101  000C32  0EFF               	movlw	255
  3102  000C34  6E4E               	movwf	??_efgtoa^0,c
  3103  000C36  0EFF               	movlw	255
  3104  000C38  6E4F               	movwf	(??_efgtoa+1)^0,c
  3105  000C3A  C076  F050         	movff	efgtoa@p,??_efgtoa+2
  3106  000C3E  C077  F051         	movff	efgtoa@p+1,??_efgtoa+3
  3107  000C42  504E               	movf	??_efgtoa^0,w,c
  3108  000C44  2650               	addwf	(??_efgtoa+2)^0,f,c
  3109  000C46  504F               	movf	(??_efgtoa+1)^0,w,c
  3110  000C48  2251               	addwfc	(??_efgtoa+3)^0,f,c
  3111  000C4A  518A               	movf	efgtoa@e& (0+255),w,b
  3112  000C4C  5C50               	subwf	(??_efgtoa+2)^0,w,c
  3113  000C4E  5051               	movf	(??_efgtoa+3)^0,w,c
  3114  000C50  0A80               	xorlw	128
  3115  000C52  6E52               	movwf	(??_efgtoa+4)^0,c
  3116  000C54  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3117  000C56  0A80               	xorlw	128
  3118  000C58  5852               	subwfb	(??_efgtoa+4)^0,w,c
  3119  000C5A  A0D8               	btfss	status,0,c
  3120  000C5C  EF32  F006         	goto	u4191
  3121  000C60  EF34  F006         	goto	u4190
  3122  000C64                     u4191:
  3123  000C64  EF38  F006         	goto	l3829
  3124  000C68                     u4190:
  3125  000C68                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3128  000C68  0E66               	movlw	102
  3129  000C6A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3132  000C6C  EF3A  F006         	goto	l3831
  3133  000C70                     l3829:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3137  000C70  0E65               	movlw	101
  3138  000C72  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3139  000C74                     l3831:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3143  000C74  C076  F06C         	movff	efgtoa@p,efgtoa@m
  3144  000C78  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  3145  000C7C                     
  3146                           ; BSR set to: 0
  3147                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3148  000C7C  0E67               	movlw	103
  3149  000C7E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3150  000C80  A4D8               	btfss	status,2,c
  3151  000C82  EF45  F006         	goto	u4201
  3152  000C86  EF47  F006         	goto	u4200
  3153  000C8A                     u4201:
  3154  000C8A  EF57  F006         	goto	l3839
  3155  000C8E                     u4200:
  3156  000C8E                     
  3157                           ; BSR set to: 0
  3158  000C8E  0E66               	movlw	102
  3159  000C90  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3160  000C92  A4D8               	btfss	status,2,c
  3161  000C94  EF4E  F006         	goto	u4211
  3162  000C98  EF50  F006         	goto	u4210
  3163  000C9C                     u4211:
  3164  000C9C  EF59  F006         	goto	l3841
  3165  000CA0                     u4210:
  3166  000CA0                     
  3167                           ; BSR set to: 0
  3168  000CA0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3169  000CA2  EF57  F006         	goto	u4220
  3170  000CA6  EF55  F006         	goto	u4221
  3171  000CAA                     u4221:
  3172  000CAA  EF59  F006         	goto	l3841
  3173  000CAE                     u4220:
  3174  000CAE                     l3839:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3178  000CAE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3179  000CB0  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3180  000CB2                     l3841:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3184  000CB2  0E66               	movlw	102
  3185  000CB4  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3186  000CB6  A4D8               	btfss	status,2,c
  3187  000CB8  EF60  F006         	goto	u4231
  3188  000CBC  EF62  F006         	goto	u4230
  3189  000CC0                     u4231:
  3190  000CC0  EF82  F006         	goto	l3851
  3191  000CC4                     u4230:
  3192  000CC4                     
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3195  000CC4  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3196  000CC6  EF69  F006         	goto	u4240
  3197  000CCA  EF67  F006         	goto	u4241
  3198  000CCE                     u4241:
  3199  000CCE  EF75  F006         	goto	l3847
  3200  000CD2                     u4240:
  3201  000CD2                     
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3204  000CD2  0E00               	movlw	0
  3205  000CD4  6F8E               	movwf	efgtoa@u& (0+255),b
  3206  000CD6  0E00               	movlw	0
  3207  000CD8  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3208  000CDA  0E80               	movlw	128
  3209  000CDC  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3210  000CDE  0E3F               	movlw	63
  3211  000CE0  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3214  000CE2  0E00               	movlw	0
  3215  000CE4  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3216  000CE6  0E00               	movlw	0
  3217  000CE8  6F8A               	movwf	efgtoa@e& (0+255),b
  3218  000CEA                     l3847:
  3219                           
  3220                           ; BSR set to: 0
  3221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3222  000CEA  0E67               	movlw	103
  3223  000CEC  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3224  000CEE  B4D8               	btfsc	status,2,c
  3225  000CF0  EF7C  F006         	goto	u4251
  3226  000CF4  EF7E  F006         	goto	u4250
  3227  000CF8                     u4251:
  3228  000CF8  EF82  F006         	goto	l3851
  3229  000CFC                     u4250:
  3230  000CFC                     
  3231                           ; BSR set to: 0
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3233  000CFC  518A               	movf	efgtoa@e& (0+255),w,b
  3234  000CFE  276C               	addwf	efgtoa@m& (0+255),f,b
  3235  000D00  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3236  000D02  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3237  000D04                     l3851:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3241  000D04  0E00               	movlw	0
  3242  000D06  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3243  000D08  0E00               	movlw	0
  3244  000D0A  6F84               	movwf	efgtoa@i& (0+255),b
  3245  000D0C                     
  3246                           ; BSR set to: 0
  3247                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3248  000D0C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  3249  000D10  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  3250  000D14  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  3251  000D18  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  3252  000D1C                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3255  000D1C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  3256  000D20  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  3257  000D24  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  3258  000D28  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3261  000D2C  EF13  F007         	goto	l3865
  3262  000D30                     l3857:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3266  000D30  C07C  F01A         	movff	efgtoa@h,___fldiv@b
  3267  000D34  C07D  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3268  000D38  C07E  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3269  000D3C  C07F  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3270  000D40  C08E  F01E         	movff	efgtoa@u,___fldiv@a
  3271  000D44  C08F  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3272  000D48  C090  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3273  000D4C  C091  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3274  000D50  ECAA  F010         	call	___fldiv	;wreg free
  3275  000D54  C01A  F033         	movff	?___fldiv,floorf@x
  3276  000D58  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  3277  000D5C  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  3278  000D60  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  3279  000D64  EC77  F012         	call	_floorf	;wreg free
  3280  000D68  C033  F080         	movff	?_floorf,efgtoa@l
  3281  000D6C  C034  F081         	movff	?_floorf+1,efgtoa@l+1
  3282  000D70  C035  F082         	movff	?_floorf+2,efgtoa@l+2
  3283  000D74  C036  F083         	movff	?_floorf+3,efgtoa@l+3
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3286  000D78  C080  F001         	movff	efgtoa@l,___fltol@f1
  3287  000D7C  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3288  000D80  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3289  000D84  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3290  000D88  ECD7  F016         	call	___fltol	;wreg free
  3291  000D8C  C001  F072         	movff	?___fltol,efgtoa@d
  3292  000D90  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3293  000D94                     
  3294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3295  000D94  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3296  000D98  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3297  000D9C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3298  000DA0  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3299  000DA4  C08E  F005         	movff	efgtoa@u,___flmul@a
  3300  000DA8  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3301  000DAC  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3302  000DB0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3303  000DB4  C080  F001         	movff	efgtoa@l,___flmul@b
  3304  000DB8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3305  000DBC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3306  000DC0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3307  000DC4  EC95  F00E         	call	___flmul	;wreg free
  3308  000DC8  C001  F01E         	movff	?___flmul,___flsub@a
  3309  000DCC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3310  000DD0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3311  000DD4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3312  000DD8  EC98  F01E         	call	___flsub	;wreg free
  3313  000DDC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3314  000DE0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3315  000DE4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3316  000DE8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3317  000DEC                     
  3318                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3319  000DEC  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  3320  000DF0  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3321  000DF4  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3322  000DF8  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3323  000DFC  0E00               	movlw	0
  3324  000DFE  6E1E               	movwf	___fldiv@a^0,c
  3325  000E00  0E00               	movlw	0
  3326  000E02  6E1F               	movwf	(___fldiv@a+1)^0,c
  3327  000E04  0E20               	movlw	32
  3328  000E06  6E20               	movwf	(___fldiv@a+2)^0,c
  3329  000E08  0E41               	movlw	65
  3330  000E0A  6E21               	movwf	(___fldiv@a+3)^0,c
  3331  000E0C  ECAA  F010         	call	___fldiv	;wreg free
  3332  000E10  C01A  F08E         	movff	?___fldiv,efgtoa@u
  3333  000E14  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3334  000E18  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  3335  000E1C  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  3336  000E20                     
  3337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3338  000E20  0100               	movlb	0	; () banked
  3339  000E22  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3340  000E24  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3341  000E26                     l3865:
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3345  000E26  516C               	movf	efgtoa@m& (0+255),w,b
  3346  000E28  5D84               	subwf	efgtoa@i& (0+255),w,b
  3347  000E2A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3348  000E2C  0A80               	xorlw	128
  3349  000E2E  6E4E               	movwf	??_efgtoa^0,c
  3350  000E30  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3351  000E32  0A80               	xorlw	128
  3352  000E34  584E               	subwfb	??_efgtoa^0,w,c
  3353  000E36  A0D8               	btfss	status,0,c
  3354  000E38  EF20  F007         	goto	u4261
  3355  000E3C  EF22  F007         	goto	u4260
  3356  000E40                     u4261:
  3357  000E40  EF98  F006         	goto	l3857
  3358  000E44                     u4260:
  3359  000E44                     
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3362  000E44  C08E  F001         	movff	efgtoa@u,___flmul@b
  3363  000E48  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3364  000E4C  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3365  000E50  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3366  000E54  0E00               	movlw	0
  3367  000E56  6E05               	movwf	___flmul@a^0,c
  3368  000E58  0E00               	movlw	0
  3369  000E5A  6E06               	movwf	(___flmul@a+1)^0,c
  3370  000E5C  0EA0               	movlw	160
  3371  000E5E  6E07               	movwf	(___flmul@a+2)^0,c
  3372  000E60  0E40               	movlw	64
  3373  000E62  6E08               	movwf	(___flmul@a+3)^0,c
  3374  000E64  EC95  F00E         	call	___flmul	;wreg free
  3375  000E68  C001  F080         	movff	?___flmul,efgtoa@l
  3376  000E6C  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  3377  000E70  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  3378  000E74  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  3379  000E78                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3381  000E78  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3382  000E7C  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3383  000E80  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3384  000E84  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3385  000E88  C080  F01E         	movff	efgtoa@l,___flge@ff2
  3386  000E8C  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3387  000E90  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3388  000E94  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3389  000E98  EC5A  F017         	call	___flge	;wreg free
  3390  000E9C  B0D8               	btfsc	status,0,c
  3391  000E9E  EF53  F007         	goto	u4271
  3392  000EA2  EF55  F007         	goto	u4270
  3393  000EA6                     u4271:
  3394  000EA6  EF60  F007         	goto	l3873
  3395  000EAA                     u4270:
  3396  000EAA                     
  3397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3398  000EAA  0E00               	movlw	0
  3399  000EAC  0100               	movlb	0	; () banked
  3400  000EAE  6F80               	movwf	efgtoa@l& (0+255),b
  3401  000EB0  0E00               	movlw	0
  3402  000EB2  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3403  000EB4  0E00               	movlw	0
  3404  000EB6  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3405  000EB8  0E00               	movlw	0
  3406  000EBA  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3409  000EBC  EF89  F007         	goto	l3879
  3410  000EC0                     l3873:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3413  000EC0  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  3414  000EC4  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3415  000EC8  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3416  000ECC  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3417  000ED0  C080  F005         	movff	efgtoa@l,___fleq@ff2
  3418  000ED4  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3419  000ED8  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3420  000EDC  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3421  000EE0  EC88  F01B         	call	___fleq	;wreg free
  3422  000EE4  A0D8               	btfss	status,0,c
  3423  000EE6  EF77  F007         	goto	u4281
  3424  000EEA  EF79  F007         	goto	u4280
  3425  000EEE                     u4281:
  3426  000EEE  EF89  F007         	goto	l3879
  3427  000EF2                     u4280:
  3428  000EF2  0100               	movlb	0	; () banked
  3429  000EF4  B172               	btfsc	efgtoa@d& (0+255),0,b
  3430  000EF6  EF7F  F007         	goto	u4291
  3431  000EFA  EF81  F007         	goto	u4290
  3432  000EFE                     u4291:
  3433  000EFE  EF89  F007         	goto	l3879
  3434  000F02                     u4290:
  3435  000F02                     
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3438  000F02  0E00               	movlw	0
  3439  000F04  6F80               	movwf	efgtoa@l& (0+255),b
  3440  000F06  0E00               	movlw	0
  3441  000F08  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3442  000F0A  0E00               	movlw	0
  3443  000F0C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3444  000F0E  0E00               	movlw	0
  3445  000F10  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3446  000F12                     l3879:
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3449  000F12  C086  F001         	movff	efgtoa@g,___fladd@b
  3450  000F16  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  3451  000F1A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  3452  000F1E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  3453  000F22  C080  F005         	movff	efgtoa@l,___fladd@a
  3454  000F26  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  3455  000F2A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  3456  000F2E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  3457  000F32  EC1C  F00A         	call	___fladd	;wreg free
  3458  000F36  C001  F07C         	movff	?___fladd,efgtoa@h
  3459  000F3A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  3460  000F3E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  3461  000F42  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  3462  000F46                     
  3463                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3464  000F46  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3465  000F4A  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3466  000F4E  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3467  000F52  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3468  000F56  0E00               	movlw	0
  3469  000F58  6E05               	movwf	___flmul@a^0,c
  3470  000F5A  0E00               	movlw	0
  3471  000F5C  6E06               	movwf	(___flmul@a+1)^0,c
  3472  000F5E  0E20               	movlw	32
  3473  000F60  6E07               	movwf	(___flmul@a+2)^0,c
  3474  000F62  0E41               	movlw	65
  3475  000F64  6E08               	movwf	(___flmul@a+3)^0,c
  3476  000F66  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3477  000F6A  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3478  000F6E  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3479  000F72  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3480  000F76  EC95  F00E         	call	___flmul	;wreg free
  3481  000F7A  C001  F01E         	movff	?___flmul,___flge@ff2
  3482  000F7E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3483  000F82  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3484  000F86  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3485  000F8A  EC5A  F017         	call	___flge	;wreg free
  3486  000F8E  A0D8               	btfss	status,0,c
  3487  000F90  EFCC  F007         	goto	u4301
  3488  000F94  EFCE  F007         	goto	u4300
  3489  000F98                     u4301:
  3490  000F98  EFF7  F007         	goto	l3891
  3491  000F9C                     u4300:
  3492  000F9C                     
  3493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3494  000F9C  0100               	movlb	0	; () banked
  3495  000F9E  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3496  000FA0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3497  000FA2                     
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3500  000FA2  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3501  000FA6  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3502  000FAA  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3503  000FAE  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3504  000FB2  0E00               	movlw	0
  3505  000FB4  6E05               	movwf	___flmul@a^0,c
  3506  000FB6  0E00               	movlw	0
  3507  000FB8  6E06               	movwf	(___flmul@a+1)^0,c
  3508  000FBA  0E20               	movlw	32
  3509  000FBC  6E07               	movwf	(___flmul@a+2)^0,c
  3510  000FBE  0E41               	movlw	65
  3511  000FC0  6E08               	movwf	(___flmul@a+3)^0,c
  3512  000FC2  EC95  F00E         	call	___flmul	;wreg free
  3513  000FC6  C001  F06E         	movff	?___flmul,efgtoa@ou
  3514  000FCA  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  3515  000FCE  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  3516  000FD2  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  3517  000FD6                     
  3518                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3519  000FD6  0E66               	movlw	102
  3520  000FD8  0100               	movlb	0	; () banked
  3521  000FDA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3522  000FDC  A4D8               	btfss	status,2,c
  3523  000FDE  EFF3  F007         	goto	u4311
  3524  000FE2  EFF5  F007         	goto	u4310
  3525  000FE6                     u4311:
  3526  000FE6  EFF7  F007         	goto	l3891
  3527  000FEA                     u4310:
  3528  000FEA                     
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3531  000FEA  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3532  000FEC  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3533  000FEE                     l3891:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3536  000FEE  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  3537  000FF2  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  3538  000FF6  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  3539  000FFA  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  3540  000FFE                     
  3541                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3542  000FFE  0E65               	movlw	101
  3543  001000  0100               	movlb	0	; () banked
  3544  001002  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3545  001004  B4D8               	btfsc	status,2,c
  3546  001006  EF07  F008         	goto	u4321
  3547  00100A  EF09  F008         	goto	u4320
  3548  00100E                     u4321:
  3549  00100E  EF0F  F008         	goto	l3897
  3550  001012                     u4320:
  3551  001012                     
  3552                           ; BSR set to: 0
  3553  001012  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  3554  001016  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  3555  00101A  EF13  F008         	goto	l1027
  3556  00101E                     l3897:
  3557                           
  3558                           ; BSR set to: 0
  3559  00101E  0E00               	movlw	0
  3560  001020  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  3561  001022  0E00               	movlw	0
  3562  001024  6F6A               	movwf	efgtoa@ne& (0+255),b
  3563  001026                     l1027:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3567  001026  0E00               	movlw	0
  3568  001028  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3569  00102A  0E00               	movlw	0
  3570  00102C  6F68               	movwf	efgtoa@pp& (0+255),b
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3573  00102E  0E00               	movlw	0
  3574  001030  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  3575  001032  0E00               	movlw	0
  3576  001034  6F66               	movwf	efgtoa@t& (0+255),b
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3579  001036  0E00               	movlw	0
  3580  001038  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3581  00103A  0E00               	movlw	0
  3582  00103C  6F84               	movwf	efgtoa@i& (0+255),b
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3585  00103E  EF0E  F009         	goto	l3947
  3586  001042                     l3899:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3590  001042  C07C  F01A         	movff	efgtoa@h,___fldiv@b
  3591  001046  C07D  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3592  00104A  C07E  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3593  00104E  C07F  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3594  001052  C08E  F01E         	movff	efgtoa@u,___fldiv@a
  3595  001056  C08F  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3596  00105A  C090  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3597  00105E  C091  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3598  001062  ECAA  F010         	call	___fldiv	;wreg free
  3599  001066  C01A  F033         	movff	?___fldiv,floorf@x
  3600  00106A  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  3601  00106E  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  3602  001072  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  3603  001076  EC77  F012         	call	_floorf	;wreg free
  3604  00107A  C033  F080         	movff	?_floorf,efgtoa@l
  3605  00107E  C034  F081         	movff	?_floorf+1,efgtoa@l+1
  3606  001082  C035  F082         	movff	?_floorf+2,efgtoa@l+2
  3607  001086  C036  F083         	movff	?_floorf+3,efgtoa@l+3
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3610  00108A  C080  F001         	movff	efgtoa@l,___fltol@f1
  3611  00108E  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3612  001092  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3613  001096  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3614  00109A  ECD7  F016         	call	___fltol	;wreg free
  3615  00109E  C001  F072         	movff	?___fltol,efgtoa@d
  3616  0010A2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3617  0010A6                     
  3618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3619  0010A6  0100               	movlb	0	; () banked
  3620  0010A8  B9ED               	btfsc	_flags& (0+255),4,b
  3621  0010AA  EF59  F008         	goto	u4331
  3622  0010AE  EF5B  F008         	goto	u4330
  3623  0010B2                     u4331:
  3624  0010B2  EF78  F008         	goto	l3911
  3625  0010B6                     u4330:
  3626  0010B6                     
  3627                           ; BSR set to: 0
  3628  0010B6  5172               	movf	efgtoa@d& (0+255),w,b
  3629  0010B8  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3630  0010BA  A4D8               	btfss	status,2,c
  3631  0010BC  EF62  F008         	goto	u4341
  3632  0010C0  EF64  F008         	goto	u4340
  3633  0010C4                     u4341:
  3634  0010C4  EF78  F008         	goto	l3911
  3635  0010C8                     u4340:
  3636  0010C8                     
  3637                           ; BSR set to: 0
  3638  0010C8  0E67               	movlw	103
  3639  0010CA  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3640  0010CC  A4D8               	btfss	status,2,c
  3641  0010CE  EF6B  F008         	goto	u4351
  3642  0010D2  EF6D  F008         	goto	u4350
  3643  0010D6                     u4351:
  3644  0010D6  EF78  F008         	goto	l3911
  3645  0010DA                     u4350:
  3646  0010DA                     
  3647                           ; BSR set to: 0
  3648  0010DA  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3649  0010DC  EF74  F008         	goto	u4360
  3650  0010E0  EF72  F008         	goto	u4361
  3651  0010E4                     u4361:
  3652  0010E4  EF78  F008         	goto	l3911
  3653  0010E8                     u4360:
  3654  0010E8                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3657  0010E8  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3658  0010EA  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3661  0010EC  EFC2  F008         	goto	l3939
  3662  0010F0                     l3911:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3666  0010F0  5168               	movf	efgtoa@pp& (0+255),w,b
  3667  0010F2  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3668  0010F4  A4D8               	btfss	status,2,c
  3669  0010F6  EF7F  F008         	goto	u4371
  3670  0010FA  EF81  F008         	goto	u4370
  3671  0010FE                     u4371:
  3672  0010FE  EFAB  F008         	goto	l3931
  3673  001102                     u4370:
  3674  001102                     
  3675                           ; BSR set to: 0
  3676  001102  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3677  001104  EF88  F008         	goto	u4380
  3678  001108  EF86  F008         	goto	u4381
  3679  00110C                     u4381:
  3680  00110C  EFAB  F008         	goto	l3931
  3681  001110                     u4380:
  3682  001110                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3685  001110  0E00               	movlw	low _dbuf
  3686  001112  258C               	addwf	efgtoa@n& (0+255),w,b
  3687  001114  6ED9               	movwf	fsr2l,c
  3688  001116  0E01               	movlw	high _dbuf
  3689  001118  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3690  00111A  6EDA               	movwf	fsr2h,c
  3691  00111C  0E2E               	movlw	46
  3692  00111E  6EDF               	movwf	indf2,c
  3693  001120                     
  3694                           ; BSR set to: 0
  3695  001120  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3696  001122  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3697  001124                     
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3700  001124  0778               	decf	efgtoa@w& (0+255),f,b
  3701  001126  A0D8               	btfss	status,0,c
  3702  001128  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3703  00112A                     
  3704                           ; BSR set to: 0
  3705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3706  00112A  0E00               	movlw	0
  3707  00112C  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3708  00112E  0E01               	movlw	1
  3709  001130  6F68               	movwf	efgtoa@pp& (0+255),b
  3710  001132  EFAB  F008         	goto	l3931
  3711  001136                     l3923:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3715  001136  0E00               	movlw	low _dbuf
  3716  001138  258C               	addwf	efgtoa@n& (0+255),w,b
  3717  00113A  6ED9               	movwf	fsr2l,c
  3718  00113C  0E01               	movlw	high _dbuf
  3719  00113E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3720  001140  6EDA               	movwf	fsr2h,c
  3721  001142  0E30               	movlw	48
  3722  001144  6EDF               	movwf	indf2,c
  3723  001146                     
  3724                           ; BSR set to: 0
  3725  001146  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3726  001148  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3727  00114A                     
  3728                           ; BSR set to: 0
  3729                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3730  00114A  0778               	decf	efgtoa@w& (0+255),f,b
  3731  00114C  A0D8               	btfss	status,0,c
  3732  00114E  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3733  001150                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3736  001150  0766               	decf	efgtoa@t& (0+255),f,b
  3737  001152  A0D8               	btfss	status,0,c
  3738  001154  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3739  001156                     l3931:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3743  001156  5166               	movf	efgtoa@t& (0+255),w,b
  3744  001158  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3745  00115A  A4D8               	btfss	status,2,c
  3746  00115C  EFB2  F008         	goto	u4391
  3747  001160  EFB4  F008         	goto	u4390
  3748  001164                     u4391:
  3749  001164  EF9B  F008         	goto	l3923
  3750  001168                     u4390:
  3751  001168                     
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3754  001168  0E00               	movlw	low _dbuf
  3755  00116A  258C               	addwf	efgtoa@n& (0+255),w,b
  3756  00116C  6ED9               	movwf	fsr2l,c
  3757  00116E  0E01               	movlw	high _dbuf
  3758  001170  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3759  001172  6EDA               	movwf	fsr2h,c
  3760  001174  5172               	movf	efgtoa@d& (0+255),w,b
  3761  001176  0F30               	addlw	48
  3762  001178  6EDF               	movwf	indf2,c
  3763  00117A                     
  3764                           ; BSR set to: 0
  3765  00117A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3766  00117C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3767  00117E                     
  3768                           ; BSR set to: 0
  3769                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3770  00117E  0778               	decf	efgtoa@w& (0+255),f,b
  3771  001180  A0D8               	btfss	status,0,c
  3772  001182  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3773  001184                     l3939:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3777  001184  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3778  001188  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3779  00118C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3780  001190  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3781  001194  C08E  F005         	movff	efgtoa@u,___flmul@a
  3782  001198  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3783  00119C  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3784  0011A0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3785  0011A4  C080  F001         	movff	efgtoa@l,___flmul@b
  3786  0011A8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3787  0011AC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3788  0011B0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3789  0011B4  EC95  F00E         	call	___flmul	;wreg free
  3790  0011B8  C001  F01E         	movff	?___flmul,___flsub@a
  3791  0011BC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3792  0011C0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3793  0011C4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3794  0011C8  EC98  F01E         	call	___flsub	;wreg free
  3795  0011CC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3796  0011D0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3797  0011D4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3798  0011D8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3799  0011DC                     
  3800                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3801  0011DC  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  3802  0011E0  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3803  0011E4  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3804  0011E8  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3805  0011EC  0E00               	movlw	0
  3806  0011EE  6E1E               	movwf	___fldiv@a^0,c
  3807  0011F0  0E00               	movlw	0
  3808  0011F2  6E1F               	movwf	(___fldiv@a+1)^0,c
  3809  0011F4  0E20               	movlw	32
  3810  0011F6  6E20               	movwf	(___fldiv@a+2)^0,c
  3811  0011F8  0E41               	movlw	65
  3812  0011FA  6E21               	movwf	(___fldiv@a+3)^0,c
  3813  0011FC  ECAA  F010         	call	___fldiv	;wreg free
  3814  001200  C01A  F08E         	movff	?___fldiv,efgtoa@u
  3815  001204  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3816  001208  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  3817  00120C  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  3818  001210                     
  3819                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3820  001210  0100               	movlb	0	; () banked
  3821  001212  076A               	decf	efgtoa@ne& (0+255),f,b
  3822  001214  A0D8               	btfss	status,0,c
  3823  001216  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3824  001218                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3827  001218  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3828  00121A  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3829  00121C                     l3947:
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3833  00121C  516C               	movf	efgtoa@m& (0+255),w,b
  3834  00121E  5D84               	subwf	efgtoa@i& (0+255),w,b
  3835  001220  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3836  001222  0A80               	xorlw	128
  3837  001224  6E4E               	movwf	??_efgtoa^0,c
  3838  001226  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3839  001228  0A80               	xorlw	128
  3840  00122A  584E               	subwfb	??_efgtoa^0,w,c
  3841  00122C  B0D8               	btfsc	status,0,c
  3842  00122E  EF1B  F009         	goto	u4401
  3843  001232  EF1D  F009         	goto	u4400
  3844  001236                     u4401:
  3845  001236  EF2B  F009         	goto	l3951
  3846  00123A                     u4400:
  3847  00123A                     
  3848                           ; BSR set to: 0
  3849  00123A  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3850  00123C  EF29  F009         	goto	u4411
  3851  001240  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3852  001242  E109               	bnz	u4410
  3853  001244  0E4B               	movlw	75
  3854  001246  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3855  001248  A0D8               	btfss	status,0,c
  3856  00124A  EF29  F009         	goto	u4411
  3857  00124E  EF2B  F009         	goto	u4410
  3858  001252                     u4411:
  3859  001252  EF21  F008         	goto	l3899
  3860  001256                     u4410:
  3861  001256                     l3951:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3865  001256  5168               	movf	efgtoa@pp& (0+255),w,b
  3866  001258  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3867  00125A  A4D8               	btfss	status,2,c
  3868  00125C  EF32  F009         	goto	u4421
  3869  001260  EF34  F009         	goto	u4420
  3870  001264                     u4421:
  3871  001264  EF45  F009         	goto	l3959
  3872  001268                     u4420:
  3873  001268                     
  3874                           ; BSR set to: 0
  3875  001268  A9ED               	btfss	_flags& (0+255),4,b
  3876  00126A  EF39  F009         	goto	u4431
  3877  00126E  EF3B  F009         	goto	u4430
  3878  001272                     u4431:
  3879  001272  EF45  F009         	goto	l3959
  3880  001276                     u4430:
  3881  001276                     
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3884  001276  0E00               	movlw	low _dbuf
  3885  001278  258C               	addwf	efgtoa@n& (0+255),w,b
  3886  00127A  6ED9               	movwf	fsr2l,c
  3887  00127C  0E01               	movlw	high _dbuf
  3888  00127E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3889  001280  6EDA               	movwf	fsr2h,c
  3890  001282  0E2E               	movlw	46
  3891  001284  6EDF               	movwf	indf2,c
  3892  001286                     
  3893                           ; BSR set to: 0
  3894  001286  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3895  001288  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3896  00128A                     l3959:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3900  00128A  0E00               	movlw	low _dbuf
  3901  00128C  258C               	addwf	efgtoa@n& (0+255),w,b
  3902  00128E  6ED9               	movwf	fsr2l,c
  3903  001290  0E01               	movlw	high _dbuf
  3904  001292  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3905  001294  6EDA               	movwf	fsr2h,c
  3906  001296  0E00               	movlw	0
  3907  001298  6EDF               	movwf	indf2,c
  3908  00129A                     
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3911  00129A  0E65               	movlw	101
  3912  00129C  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3913  00129E  A4D8               	btfss	status,2,c
  3914  0012A0  EF54  F009         	goto	u4441
  3915  0012A4  EF56  F009         	goto	u4440
  3916  0012A8                     u4441:
  3917  0012A8  EFBC  F004         	goto	l3761
  3918  0012AC                     u4440:
  3919  0012AC                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3922  0012AC  0E00               	movlw	0
  3923  0012AE  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3924  0012B0  0E4F               	movlw	79
  3925  0012B2  6F84               	movwf	efgtoa@i& (0+255),b
  3926  0012B4                     
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3929  0012B4  0E00               	movlw	low _dbuf
  3930  0012B6  2584               	addwf	efgtoa@i& (0+255),w,b
  3931  0012B8  6ED9               	movwf	fsr2l,c
  3932  0012BA  0E01               	movlw	high _dbuf
  3933  0012BC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3934  0012BE  6EDA               	movwf	fsr2h,c
  3935  0012C0  0E00               	movlw	0
  3936  0012C2  6EDF               	movwf	indf2,c
  3937  0012C4                     
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3940  0012C4  0E00               	movlw	0
  3941  0012C6  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3942  0012C8  0E00               	movlw	0
  3943  0012CA  6F74               	movwf	efgtoa@sign& (0+255),b
  3944  0012CC                     
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3947  0012CC  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3948  0012CE  EF6D  F009         	goto	u4450
  3949  0012D2  EF6B  F009         	goto	u4451
  3950  0012D6                     u4451:
  3951  0012D6  EF75  F009         	goto	l3975
  3952  0012DA                     u4450:
  3953  0012DA                     
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3956  0012DA  0E00               	movlw	0
  3957  0012DC  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3958  0012DE  0E01               	movlw	1
  3959  0012E0  6F74               	movwf	efgtoa@sign& (0+255),b
  3960  0012E2                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3963  0012E2  6D8A               	negf	efgtoa@e& (0+255),b
  3964  0012E4  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3965  0012E6  B0D8               	btfsc	status,0,c
  3966  0012E8  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3967  0012EA                     l3975:
  3968                           
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3971  0012EA  0E00               	movlw	0
  3972  0012EC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3973  0012EE  0E02               	movlw	2
  3974  0012F0  6F76               	movwf	efgtoa@p& (0+255),b
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3977  0012F2  EFA6  F009         	goto	l3987
  3978  0012F6                     l3977:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3982  0012F6  0784               	decf	efgtoa@i& (0+255),f,b
  3983  0012F8  A0D8               	btfss	status,0,c
  3984  0012FA  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3985  0012FC                     
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3988  0012FC  0E00               	movlw	low _dbuf
  3989  0012FE  2584               	addwf	efgtoa@i& (0+255),w,b
  3990  001300  6ED9               	movwf	fsr2l,c
  3991  001302  0E01               	movlw	high _dbuf
  3992  001304  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3993  001306  6EDA               	movwf	fsr2h,c
  3994  001308  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  3995  00130C  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3996  001310  0E00               	movlw	0
  3997  001312  6E04               	movwf	(___awmod@divisor+1)^0,c
  3998  001314  0E0A               	movlw	10
  3999  001316  6E03               	movwf	___awmod@divisor^0,c
  4000  001318  EC30  F01B         	call	___awmod	;wreg free
  4001  00131C  5001               	movf	?___awmod^0,w,c
  4002  00131E  0F30               	addlw	48
  4003  001320  6EDF               	movwf	indf2,c
  4004  001322                     
  4005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4006  001322  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  4007  001326  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4008  00132A  0E00               	movlw	0
  4009  00132C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4010  00132E  0E0A               	movlw	10
  4011  001330  6E03               	movwf	___awdiv@divisor^0,c
  4012  001332  EC75  F01A         	call	___awdiv	;wreg free
  4013  001336  C001  F08A         	movff	?___awdiv,efgtoa@e
  4014  00133A  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  4015  00133E                     
  4016                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4017  00133E  0100               	movlb	0	; () banked
  4018  001340  0776               	decf	efgtoa@p& (0+255),f,b
  4019  001342  A0D8               	btfss	status,0,c
  4020  001344  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  4021  001346                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4024  001346  0778               	decf	efgtoa@w& (0+255),f,b
  4025  001348  A0D8               	btfss	status,0,c
  4026  00134A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4027  00134C                     l3987:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4031  00134C  518A               	movf	efgtoa@e& (0+255),w,b
  4032  00134E  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4033  001350  A4D8               	btfss	status,2,c
  4034  001352  EFAD  F009         	goto	u4461
  4035  001356  EFAF  F009         	goto	u4460
  4036  00135A                     u4461:
  4037  00135A  EF7B  F009         	goto	l3977
  4038  00135E                     u4460:
  4039  00135E                     
  4040                           ; BSR set to: 0
  4041  00135E  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4042  001360  EFBC  F009         	goto	u4470
  4043  001364  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  4044  001366  E106               	bnz	u4471
  4045  001368  0576               	decf	efgtoa@p& (0+255),w,b
  4046  00136A  B0D8               	btfsc	status,0,c
  4047  00136C  EFBA  F009         	goto	u4471
  4048  001370  EFBC  F009         	goto	u4470
  4049  001374                     u4471:
  4050  001374  EF7B  F009         	goto	l3977
  4051  001378                     u4470:
  4052  001378                     
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4055  001378  0784               	decf	efgtoa@i& (0+255),f,b
  4056  00137A  A0D8               	btfss	status,0,c
  4057  00137C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4058  00137E                     
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4061  00137E  5174               	movf	efgtoa@sign& (0+255),w,b
  4062  001380  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4063  001382  A4D8               	btfss	status,2,c
  4064  001384  EFC6  F009         	goto	u4481
  4065  001388  EFC8  F009         	goto	u4480
  4066  00138C                     u4481:
  4067  00138C  EFCE  F009         	goto	l3997
  4068  001390                     u4480:
  4069  001390                     
  4070                           ; BSR set to: 0
  4071  001390  0E00               	movlw	0
  4072  001392  6F63               	movwf	(_efgtoa$1478+1)& (0+255),b
  4073  001394  0E2B               	movlw	43
  4074  001396  6F62               	movwf	_efgtoa$1478& (0+255),b
  4075  001398  EFD2  F009         	goto	l3999
  4076  00139C                     l3997:
  4077                           
  4078                           ; BSR set to: 0
  4079  00139C  0E00               	movlw	0
  4080  00139E  6F63               	movwf	(_efgtoa$1478+1)& (0+255),b
  4081  0013A0  0E2D               	movlw	45
  4082  0013A2  6F62               	movwf	_efgtoa$1478& (0+255),b
  4083  0013A4                     l3999:
  4084                           
  4085                           ; BSR set to: 0
  4086  0013A4  0E00               	movlw	low _dbuf
  4087  0013A6  2584               	addwf	efgtoa@i& (0+255),w,b
  4088  0013A8  6ED9               	movwf	fsr2l,c
  4089  0013AA  0E01               	movlw	high _dbuf
  4090  0013AC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4091  0013AE  6EDA               	movwf	fsr2h,c
  4092  0013B0  C062  FFDF         	movff	_efgtoa$1478,indf2
  4093  0013B4                     
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4096  0013B4  0778               	decf	efgtoa@w& (0+255),f,b
  4097  0013B6  A0D8               	btfss	status,0,c
  4098  0013B8  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4099  0013BA                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4102  0013BA  0784               	decf	efgtoa@i& (0+255),f,b
  4103  0013BC  A0D8               	btfss	status,0,c
  4104  0013BE  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4105  0013C0                     
  4106                           ; BSR set to: 0
  4107  0013C0  0EBF               	movlw	191
  4108  0013C2  6E4E               	movwf	??_efgtoa^0,c
  4109  0013C4  0EFF               	movlw	255
  4110  0013C6  6E4F               	movwf	(??_efgtoa+1)^0,c
  4111  0013C8  504D               	movf	efgtoa@c^0,w,c
  4112  0013CA  6E50               	movwf	(??_efgtoa+2)^0,c
  4113  0013CC  6A51               	clrf	(??_efgtoa+3)^0,c
  4114  0013CE  504E               	movf	??_efgtoa^0,w,c
  4115  0013D0  2650               	addwf	(??_efgtoa+2)^0,f,c
  4116  0013D2  504F               	movf	(??_efgtoa+1)^0,w,c
  4117  0013D4  2251               	addwfc	(??_efgtoa+3)^0,f,c
  4118  0013D6  5051               	movf	(??_efgtoa+3)^0,w,c
  4119  0013D8  E109               	bnz	u4490
  4120  0013DA  0E1A               	movlw	26
  4121  0013DC  5C50               	subwf	(??_efgtoa+2)^0,w,c
  4122  0013DE  A0D8               	btfss	status,0,c
  4123  0013E0  EFF4  F009         	goto	u4491
  4124  0013E4  EFF6  F009         	goto	u4490
  4125  0013E8                     u4491:
  4126  0013E8  EFFC  F009         	goto	l4011
  4127  0013EC                     u4490:
  4128  0013EC                     
  4129                           ; BSR set to: 0
  4130  0013EC  0E00               	movlw	0
  4131  0013EE  6F65               	movwf	(_efgtoa$1479+1)& (0+255),b
  4132  0013F0  0E65               	movlw	101
  4133  0013F2  6F64               	movwf	_efgtoa$1479& (0+255),b
  4134  0013F4  EF00  F00A         	goto	l4013
  4135  0013F8                     l4011:
  4136                           
  4137                           ; BSR set to: 0
  4138  0013F8  0E00               	movlw	0
  4139  0013FA  6F65               	movwf	(_efgtoa$1479+1)& (0+255),b
  4140  0013FC  0E45               	movlw	69
  4141  0013FE  6F64               	movwf	_efgtoa$1479& (0+255),b
  4142  001400                     l4013:
  4143                           
  4144                           ; BSR set to: 0
  4145  001400  0E00               	movlw	low _dbuf
  4146  001402  2584               	addwf	efgtoa@i& (0+255),w,b
  4147  001404  6ED9               	movwf	fsr2l,c
  4148  001406  0E01               	movlw	high _dbuf
  4149  001408  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4150  00140A  6EDA               	movwf	fsr2h,c
  4151  00140C  C064  FFDF         	movff	_efgtoa$1479,indf2
  4152  001410                     
  4153                           ; BSR set to: 0
  4154                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4155  001410  0778               	decf	efgtoa@w& (0+255),f,b
  4156  001412  A0D8               	btfss	status,0,c
  4157  001414  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4158  001416                     
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4161  001416  0E00               	movlw	low _dbuf
  4162  001418  258C               	addwf	efgtoa@n& (0+255),w,b
  4163  00141A  6E01               	movwf	strcpy@dest^0,c
  4164  00141C  0E01               	movlw	high _dbuf
  4165  00141E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4166  001420  6E02               	movwf	(strcpy@dest+1)^0,c
  4167  001422  0E00               	movlw	low _dbuf
  4168  001424  2584               	addwf	efgtoa@i& (0+255),w,b
  4169  001426  6E03               	movwf	strcpy@src^0,c
  4170  001428  0E01               	movlw	high _dbuf
  4171  00142A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4172  00142C  6E04               	movwf	(strcpy@src+1)^0,c
  4173  00142E  ECD1  F01D         	call	_strcpy	;wreg free
  4174  001432  EFBC  F004         	goto	l3761
  4175  001436                     l983:
  4176  001436  0012               	return		;funcret
  4177  001438                     __end_of_efgtoa:
  4178                           	callstack 0
  4179                           
  4180 ;; *************** function _tolower *****************
  4181 ;; Defined at:
  4182 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  c               2    6[COMRAM] int 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    6[COMRAM] int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4196 ;;      Params:         2       0       0       0       0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4198 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4199 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4200 ;;Total ram usage:        6 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 1
  4203 ;; This function calls:
  4204 ;;		_isupper
  4205 ;; This function is called by:
  4206 ;;		_efgtoa
  4207 ;;		_vfpfcnvrt
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text7
  4212  003CEA                     __ptext7:
  4213                           	callstack 0
  4214  003CEA                     _tolower:
  4215                           	callstack 25
  4216  003CEA  0EBF               	movlw	191
  4217  003CEC  6E09               	movwf	??_tolower^0,c
  4218  003CEE  0EFF               	movlw	255
  4219  003CF0  6E0A               	movwf	(??_tolower+1)^0,c
  4220  003CF2  C007  F00B         	movff	tolower@c,??_tolower+2
  4221  003CF6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4222  003CFA  5009               	movf	??_tolower^0,w,c
  4223  003CFC  260B               	addwf	(??_tolower+2)^0,f,c
  4224  003CFE  500A               	movf	(??_tolower+1)^0,w,c
  4225  003D00  220C               	addwfc	(??_tolower+3)^0,f,c
  4226  003D02  500C               	movf	(??_tolower+3)^0,w,c
  4227  003D04  E107               	bnz	u3861
  4228  003D06  0E1A               	movlw	26
  4229  003D08  5C0B               	subwf	(??_tolower+2)^0,w,c
  4230  003D0A  B0D8               	btfsc	status,0,c
  4231  003D0C  EF8A  F01E         	goto	u3861
  4232  003D10  EF8C  F01E         	goto	u3860
  4233  003D14                     u3861:
  4234  003D14  EF93  F01E         	goto	l1199
  4235  003D18                     u3860:
  4236  003D18  0E20               	movlw	32
  4237  003D1A  1007               	iorwf	tolower@c^0,w,c
  4238  003D1C  6E07               	movwf	?_tolower^0,c
  4239  003D1E  5008               	movf	(tolower@c+1)^0,w,c
  4240  003D20  6E08               	movwf	(?_tolower+1)^0,c
  4241  003D22  EF97  F01E         	goto	l1202
  4242  003D26                     l1199:
  4243  003D26  C007  F007         	movff	tolower@c,?_tolower
  4244  003D2A  C008  F008         	movff	tolower@c+1,?_tolower+1
  4245  003D2E                     l1202:
  4246  003D2E  0012               	return		;funcret
  4247  003D30                     __end_of_tolower:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function _isupper *****************
  4251 ;; Defined at:
  4252 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  c               2    0[COMRAM] int 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  2    0[COMRAM] int 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4266 ;;      Params:         2       0       0       0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4268 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4269 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4270 ;;Total ram usage:        6 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_efgtoa
  4276 ;;		_vfpfcnvrt
  4277 ;;		_tolower
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text8
  4282  003DBA                     __ptext8:
  4283                           	callstack 0
  4284  003DBA                     _isupper:
  4285                           	callstack 25
  4286  003DBA  0EBF               	movlw	191
  4287  003DBC  6E03               	movwf	??_isupper^0,c
  4288  003DBE  0EFF               	movlw	255
  4289  003DC0  6E04               	movwf	(??_isupper+1)^0,c
  4290  003DC2  C001  F005         	movff	isupper@c,??_isupper+2
  4291  003DC6  C002  F006         	movff	isupper@c+1,??_isupper+3
  4292  003DCA  5003               	movf	??_isupper^0,w,c
  4293  003DCC  2605               	addwf	(??_isupper+2)^0,f,c
  4294  003DCE  5004               	movf	(??_isupper+1)^0,w,c
  4295  003DD0  2206               	addwfc	(??_isupper+3)^0,f,c
  4296  003DD2  5006               	movf	(??_isupper+3)^0,w,c
  4297  003DD4  E10A               	bnz	u3010
  4298  003DD6  0E1A               	movlw	26
  4299  003DD8  5C05               	subwf	(??_isupper+2)^0,w,c
  4300  003DDA  A0D8               	btfss	status,0,c
  4301  003DDC  EFF2  F01E         	goto	u3011
  4302  003DE0  EFF5  F01E         	goto	u3010
  4303  003DE4                     u3011:
  4304  003DE4  0E01               	movlw	1
  4305  003DE6  EFF6  F01E         	goto	u3020
  4306  003DEA                     u3010:
  4307  003DEA  0E00               	movlw	0
  4308  003DEC                     u3020:
  4309  003DEC  6E01               	movwf	?_isupper^0,c
  4310  003DEE  6A02               	clrf	(?_isupper+1)^0,c
  4311  003DF0  0012               	return		;funcret
  4312  003DF2                     __end_of_isupper:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _strcpy *****************
  4316 ;; Defined at:
  4317 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4320 ;;		 -> dbuf(80), 
  4321 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4322 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4323 ;;		 -> dbuf(80), 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  d               2    8[COMRAM] PTR unsigned char 
  4326 ;;		 -> dbuf(80), 
  4327 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4328 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4329 ;;		 -> dbuf(80), 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  2    0[COMRAM] PTR unsigned char 
  4332 ;; Registers used:
  4333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4339 ;;      Params:         4       0       0       0       0       0       0       0       0
  4340 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4341 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4342 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4343 ;;Total ram usage:       10 bytes
  4344 ;; Hardware stack levels used: 1
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_efgtoa
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text9
  4353  003BA2                     __ptext9:
  4354                           	callstack 0
  4355  003BA2                     _strcpy:
  4356                           	callstack 25
  4357  003BA2  C003  F007         	movff	strcpy@src,strcpy@s
  4358  003BA6  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4359  003BAA  C001  F009         	movff	strcpy@dest,strcpy@d
  4360  003BAE  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4361  003BB2                     l3645:
  4362  003BB2  5007               	movf	strcpy@s^0,w,c
  4363  003BB4  6E05               	movwf	??_strcpy^0,c
  4364  003BB6  5008               	movf	(strcpy@s+1)^0,w,c
  4365  003BB8  6E06               	movwf	(??_strcpy+1)^0,c
  4366  003BBA  4A07               	infsnz	strcpy@s^0,f,c
  4367  003BBC  2A08               	incf	(strcpy@s+1)^0,f,c
  4368  003BBE  C005  FFF6         	movff	??_strcpy,tblptrl
  4369  003BC2  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4370  003BC6  6AF8               	clrf	tblptru,c
  4371  003BC8  C009  FFD9         	movff	strcpy@d,fsr2l
  4372  003BCC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4373  003BD0  4A09               	infsnz	strcpy@d^0,f,c
  4374  003BD2  2A0A               	incf	(strcpy@d+1)^0,f,c
  4375  003BD4  0E07               	movlw	(high __ramtop+-1)
  4376  003BD6  64F7               	cpfsgt	tblptrh,c
  4377  003BD8  D003               	bra	u3847
  4378  003BDA  0008               	tblrd		*
  4379  003BDC  50F5               	movf	tablat,w,c
  4380  003BDE  D005               	bra	u3840
  4381  003BE0                     u3847:
  4382  003BE0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4383  003BE4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4384  003BE8  50E7               	movf	indf1,w,c
  4385  003BEA                     u3840:
  4386  003BEA  6EDF               	movwf	indf2,c
  4387  003BEC  50DF               	movf	indf2,w,c
  4388  003BEE  A4D8               	btfss	status,2,c
  4389  003BF0  EFFC  F01D         	goto	u3851
  4390  003BF4  EFFE  F01D         	goto	u3850
  4391  003BF8                     u3851:
  4392  003BF8  EFD9  F01D         	goto	l3645
  4393  003BFC                     u3850:
  4394  003BFC  0012               	return		;funcret
  4395  003BFE                     __end_of_strcpy:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _pad *****************
  4399 ;; Defined at:
  4400 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4403 ;;		 -> sprintf@f(11), 
  4404 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4405 ;;		 -> dbuf(80), 
  4406 ;;  p               2   20[COMRAM] int 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  w               2   25[COMRAM] int 
  4409 ;;  i               2   23[COMRAM] int 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2   16[COMRAM] int 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4419 ;;      Params:         6       0       0       0       0       0       0       0       0
  4420 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4421 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4422 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4423 ;;Total ram usage:       11 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 3
  4426 ;; This function calls:
  4427 ;;		_fputc
  4428 ;;		_fputs
  4429 ;;		_strlen
  4430 ;; This function is called by:
  4431 ;;		_efgtoa
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           	psect	text10
  4436  003424                     __ptext10:
  4437                           	callstack 0
  4438  003424                     _pad:
  4439                           	callstack 22
  4440  003424                     
  4441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4442  003424  0100               	movlb	0	; () banked
  4443  003426  A1ED               	btfss	_flags& (0+255),0,b
  4444  003428  EF18  F01A         	goto	u3731
  4445  00342C  EF1A  F01A         	goto	u3730
  4446  003430                     u3731:
  4447  003430  EF24  F01A         	goto	l3603
  4448  003434                     u3730:
  4449  003434                     
  4450                           ; BSR set to: 0
  4451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4452  003434  C013  F00A         	movff	pad@buf,fputs@s
  4453  003438  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4454  00343C  C011  F00C         	movff	pad@fp,fputs@fp
  4455  003440  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4456  003444  ECBB  F01E         	call	_fputs	;wreg free
  4457  003448                     l3603:
  4458                           
  4459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4460  003448  BE16               	btfsc	(pad@p+1)^0,7,c
  4461  00344A  EF29  F01A         	goto	u3741
  4462  00344E  EF2B  F01A         	goto	u3740
  4463  003452                     u3741:
  4464  003452  EF31  F01A         	goto	l3607
  4465  003456                     u3740:
  4466  003456  C015  F01A         	movff	pad@p,pad@w
  4467  00345A  C016  F01B         	movff	pad@p+1,pad@w+1
  4468  00345E  EF35  F01A         	goto	l962
  4469  003462                     l3607:
  4470  003462  0E00               	movlw	0
  4471  003464  6E1B               	movwf	(pad@w+1)^0,c
  4472  003466  0E00               	movlw	0
  4473  003468  6E1A               	movwf	pad@w^0,c
  4474  00346A                     l962:
  4475                           
  4476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4477  00346A  0E00               	movlw	0
  4478  00346C  6E19               	movwf	(pad@i+1)^0,c
  4479  00346E  0E00               	movlw	0
  4480  003470  6E18               	movwf	pad@i^0,c
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4483  003472  EF47  F01A         	goto	l3613
  4484  003476                     l3609:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4487  003476  0E00               	movlw	0
  4488  003478  6E02               	movwf	(fputc@c+1)^0,c
  4489  00347A  0E20               	movlw	32
  4490  00347C  6E01               	movwf	fputc@c^0,c
  4491  00347E  C011  F003         	movff	pad@fp,fputc@fp
  4492  003482  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4493  003486  ECAD  F019         	call	_fputc	;wreg free
  4494  00348A                     
  4495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4496  00348A  4A18               	infsnz	pad@i^0,f,c
  4497  00348C  2A19               	incf	(pad@i+1)^0,f,c
  4498  00348E                     l3613:
  4499                           
  4500                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4501  00348E  501A               	movf	pad@w^0,w,c
  4502  003490  5C18               	subwf	pad@i^0,w,c
  4503  003492  5019               	movf	(pad@i+1)^0,w,c
  4504  003494  0A80               	xorlw	128
  4505  003496  6E17               	movwf	??_pad^0,c
  4506  003498  501B               	movf	(pad@w+1)^0,w,c
  4507  00349A  0A80               	xorlw	128
  4508  00349C  5817               	subwfb	??_pad^0,w,c
  4509  00349E  A0D8               	btfss	status,0,c
  4510  0034A0  EF54  F01A         	goto	u3751
  4511  0034A4  EF56  F01A         	goto	u3750
  4512  0034A8                     u3751:
  4513  0034A8  EF3B  F01A         	goto	l3609
  4514  0034AC                     u3750:
  4515  0034AC                     
  4516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4517  0034AC  0100               	movlb	0	; () banked
  4518  0034AE  B1ED               	btfsc	_flags& (0+255),0,b
  4519  0034B0  EF5C  F01A         	goto	u3761
  4520  0034B4  EF5E  F01A         	goto	u3760
  4521  0034B8                     u3761:
  4522  0034B8  EF68  F01A         	goto	l3617
  4523  0034BC                     u3760:
  4524  0034BC                     
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4527  0034BC  C013  F00A         	movff	pad@buf,fputs@s
  4528  0034C0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4529  0034C4  C011  F00C         	movff	pad@fp,fputs@fp
  4530  0034C8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4531  0034CC  ECBB  F01E         	call	_fputs	;wreg free
  4532  0034D0                     l3617:
  4533                           
  4534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4535  0034D0  C013  F001         	movff	pad@buf,strlen@s
  4536  0034D4  C014  F002         	movff	pad@buf+1,strlen@s+1
  4537  0034D8  EC31  F01F         	call	_strlen	;wreg free
  4538  0034DC  501A               	movf	pad@w^0,w,c
  4539  0034DE  2401               	addwf	?_strlen^0,w,c
  4540  0034E0  6E11               	movwf	?_pad^0,c
  4541  0034E2  501B               	movf	(pad@w+1)^0,w,c
  4542  0034E4  2002               	addwfc	(?_strlen+1)^0,w,c
  4543  0034E6  6E12               	movwf	(?_pad+1)^0,c
  4544  0034E8  0012               	return		;funcret
  4545  0034EA                     __end_of_pad:
  4546                           	callstack 0
  4547                           
  4548 ;; *************** function _strlen *****************
  4549 ;; Defined at:
  4550 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4553 ;;		 -> dbuf(80), 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4556 ;;		 -> dbuf(80), 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2    0[COMRAM] unsigned int 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4566 ;;      Params:         2       0       0       0       0       0       0       0       0
  4567 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4569 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4570 ;;Total ram usage:        4 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_pad
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text11
  4580  003E62                     __ptext11:
  4581                           	callstack 0
  4582  003E62                     _strlen:
  4583                           	callstack 24
  4584  003E62  C001  F003         	movff	strlen@s,strlen@a
  4585  003E66  C002  F004         	movff	strlen@s+1,strlen@a+1
  4586  003E6A  EF39  F01F         	goto	l3139
  4587  003E6E                     l3137:
  4588  003E6E  4A01               	infsnz	strlen@s^0,f,c
  4589  003E70  2A02               	incf	(strlen@s+1)^0,f,c
  4590  003E72                     l3139:
  4591  003E72  C001  FFD9         	movff	strlen@s,fsr2l
  4592  003E76  C002  FFDA         	movff	strlen@s+1,fsr2h
  4593  003E7A  50DF               	movf	indf2,w,c
  4594  003E7C  A4D8               	btfss	status,2,c
  4595  003E7E  EF43  F01F         	goto	u3001
  4596  003E82  EF45  F01F         	goto	u3000
  4597  003E86                     u3001:
  4598  003E86  EF37  F01F         	goto	l3137
  4599  003E8A                     u3000:
  4600  003E8A  5003               	movf	strlen@a^0,w,c
  4601  003E8C  5C01               	subwf	strlen@s^0,w,c
  4602  003E8E  6E01               	movwf	?_strlen^0,c
  4603  003E90  5004               	movf	(strlen@a+1)^0,w,c
  4604  003E92  5802               	subwfb	(strlen@s+1)^0,w,c
  4605  003E94  6E02               	movwf	(?_strlen+1)^0,c
  4606  003E96  0012               	return		;funcret
  4607  003E98                     __end_of_strlen:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function _fputs *****************
  4611 ;; Defined at:
  4612 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4615 ;;		 -> dbuf(80), 
  4616 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4617 ;;		 -> sprintf@f(11), 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  i               2   14[COMRAM] int 
  4620 ;;  c               1   13[COMRAM] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  2    9[COMRAM] int 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4630 ;;      Params:         4       0       0       0       0       0       0       0       0
  4631 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4633 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4634 ;;Total ram usage:        7 bytes
  4635 ;; Hardware stack levels used: 1
  4636 ;; Hardware stack levels required when called: 2
  4637 ;; This function calls:
  4638 ;;		_fputc
  4639 ;; This function is called by:
  4640 ;;		_pad
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text12
  4645  003D76                     __ptext12:
  4646                           	callstack 0
  4647  003D76                     _fputs:
  4648                           	callstack 22
  4649  003D76  0E00               	movlw	0
  4650  003D78  6E10               	movwf	(fputs@i+1)^0,c
  4651  003D7A  0E00               	movlw	0
  4652  003D7C  6E0F               	movwf	fputs@i^0,c
  4653  003D7E  EFCC  F01E         	goto	l3133
  4654  003D82                     l3129:
  4655  003D82  C00E  F001         	movff	fputs@c,fputc@c
  4656  003D86  6A02               	clrf	(fputc@c+1)^0,c
  4657  003D88  C00C  F003         	movff	fputs@fp,fputc@fp
  4658  003D8C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4659  003D90  ECAD  F019         	call	_fputc	;wreg free
  4660  003D94  4A0F               	infsnz	fputs@i^0,f,c
  4661  003D96  2A10               	incf	(fputs@i+1)^0,f,c
  4662  003D98                     l3133:
  4663  003D98  500F               	movf	fputs@i^0,w,c
  4664  003D9A  240A               	addwf	fputs@s^0,w,c
  4665  003D9C  6ED9               	movwf	fsr2l,c
  4666  003D9E  5010               	movf	(fputs@i+1)^0,w,c
  4667  003DA0  200B               	addwfc	(fputs@s+1)^0,w,c
  4668  003DA2  6EDA               	movwf	fsr2h,c
  4669  003DA4  50DF               	movf	indf2,w,c
  4670  003DA6  6E0E               	movwf	fputs@c^0,c
  4671  003DA8  500E               	movf	fputs@c^0,w,c
  4672  003DAA  A4D8               	btfss	status,2,c
  4673  003DAC  EFDA  F01E         	goto	u2991
  4674  003DB0  EFDC  F01E         	goto	u2990
  4675  003DB4                     u2991:
  4676  003DB4  EFC1  F01E         	goto	l3129
  4677  003DB8                     u2990:
  4678  003DB8  0012               	return		;funcret
  4679  003DBA                     __end_of_fputs:
  4680                           	callstack 0
  4681                           
  4682 ;; *************** function _fputc *****************
  4683 ;; Defined at:
  4684 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  c               2    0[COMRAM] int 
  4687 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4688 ;;		 -> sprintf@f(11), 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    0[COMRAM] int 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4700 ;;      Params:         4       0       0       0       0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4702 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4703 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4704 ;;Total ram usage:        9 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; Hardware stack levels required when called: 1
  4707 ;; This function calls:
  4708 ;;		_putch
  4709 ;; This function is called by:
  4710 ;;		_pad
  4711 ;;		_vfpfcnvrt
  4712 ;;		_fputs
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text13
  4717  00335A                     __ptext13:
  4718                           	callstack 0
  4719  00335A                     _fputc:
  4720                           	callstack 25
  4721  00335A  5003               	movf	fputc@fp^0,w,c
  4722  00335C  1004               	iorwf	(fputc@fp+1)^0,w,c
  4723  00335E  B4D8               	btfsc	status,2,c
  4724  003360  EFB4  F019         	goto	u2561
  4725  003364  EFB6  F019         	goto	u2560
  4726  003368                     u2561:
  4727  003368  EFBF  F019         	goto	l2915
  4728  00336C                     u2560:
  4729  00336C  5003               	movf	fputc@fp^0,w,c
  4730  00336E  1004               	iorwf	(fputc@fp+1)^0,w,c
  4731  003370  A4D8               	btfss	status,2,c
  4732  003372  EFBD  F019         	goto	u2571
  4733  003376  EFBF  F019         	goto	u2570
  4734  00337A                     u2571:
  4735  00337A  EFC4  F019         	goto	l2917
  4736  00337E                     u2570:
  4737  00337E                     l2915:
  4738  00337E  5001               	movf	fputc@c^0,w,c
  4739  003380  ECE8  F01F         	call	_putch
  4740  003384  EF11  F01A         	goto	l1162
  4741  003388                     l2917:
  4742  003388  EE20 F009          	lfsr	2,9
  4743  00338C  5003               	movf	fputc@fp^0,w,c
  4744  00338E  26D9               	addwf	fsr2l,f,c
  4745  003390  5004               	movf	(fputc@fp+1)^0,w,c
  4746  003392  22DA               	addwfc	fsr2h,f,c
  4747  003394  50DE               	movf	postinc2,w,c
  4748  003396  10DE               	iorwf	postinc2,w,c
  4749  003398  B4D8               	btfsc	status,2,c
  4750  00339A  EFD1  F019         	goto	u2581
  4751  00339E  EFD3  F019         	goto	u2580
  4752  0033A2                     u2581:
  4753  0033A2  EFEE  F019         	goto	l2921
  4754  0033A6                     u2580:
  4755  0033A6  EE20 F009          	lfsr	2,9
  4756  0033AA  5003               	movf	fputc@fp^0,w,c
  4757  0033AC  26D9               	addwf	fsr2l,f,c
  4758  0033AE  5004               	movf	(fputc@fp+1)^0,w,c
  4759  0033B0  22DA               	addwfc	fsr2h,f,c
  4760  0033B2  EE10 F003          	lfsr	1,3
  4761  0033B6  5003               	movf	fputc@fp^0,w,c
  4762  0033B8  26E1               	addwf	fsr1l,f,c
  4763  0033BA  5004               	movf	(fputc@fp+1)^0,w,c
  4764  0033BC  22E2               	addwfc	fsr1h,f,c
  4765  0033BE  50DE               	movf	postinc2,w,c
  4766  0033C0  5CE6               	subwf	postinc1,w,c
  4767  0033C2  50E6               	movf	postinc1,w,c
  4768  0033C4  0A80               	xorlw	128
  4769  0033C6  6E09               	movwf	(??_fputc+4)^0,c
  4770  0033C8  50DE               	movf	postinc2,w,c
  4771  0033CA  0A80               	xorlw	128
  4772  0033CC  5809               	subwfb	(??_fputc+4)^0,w,c
  4773  0033CE  B0D8               	btfsc	status,0,c
  4774  0033D0  EFEC  F019         	goto	u2591
  4775  0033D4  EFEE  F019         	goto	u2590
  4776  0033D8                     u2591:
  4777  0033D8  EF11  F01A         	goto	l1162
  4778  0033DC                     u2590:
  4779  0033DC                     l2921:
  4780  0033DC  EE20 F003          	lfsr	2,3
  4781  0033E0  5003               	movf	fputc@fp^0,w,c
  4782  0033E2  26D9               	addwf	fsr2l,f,c
  4783  0033E4  5004               	movf	(fputc@fp+1)^0,w,c
  4784  0033E6  22DA               	addwfc	fsr2h,f,c
  4785  0033E8  CFDE F005          	movff	postinc2,??_fputc
  4786  0033EC  CFDD F006          	movff	postdec2,??_fputc+1
  4787  0033F0  C003  FFD9         	movff	fputc@fp,fsr2l
  4788  0033F4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4789  0033F8  CFDE F007          	movff	postinc2,??_fputc+2
  4790  0033FC  CFDD F008          	movff	postdec2,??_fputc+3
  4791  003400  5005               	movf	??_fputc^0,w,c
  4792  003402  2407               	addwf	(??_fputc+2)^0,w,c
  4793  003404  6ED9               	movwf	fsr2l,c
  4794  003406  5006               	movf	(??_fputc+1)^0,w,c
  4795  003408  2008               	addwfc	(??_fputc+3)^0,w,c
  4796  00340A  6EDA               	movwf	fsr2h,c
  4797  00340C  C001  FFDF         	movff	fputc@c,indf2
  4798  003410  EE20 F003          	lfsr	2,3
  4799  003414  5003               	movf	fputc@fp^0,w,c
  4800  003416  26D9               	addwf	fsr2l,f,c
  4801  003418  5004               	movf	(fputc@fp+1)^0,w,c
  4802  00341A  22DA               	addwfc	fsr2h,f,c
  4803  00341C  2ADE               	incf	postinc2,f,c
  4804  00341E  0E00               	movlw	0
  4805  003420  22DD               	addwfc	postdec2,f,c
  4806  003422                     l1162:
  4807  003422  0012               	return		;funcret
  4808  003424                     __end_of_fputc:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _putch *****************
  4812 ;; Defined at:
  4813 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  c               1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  c               1    0[COMRAM] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_fputc
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text14
  4841  003FD0                     __ptext14:
  4842                           	callstack 0
  4843  003FD0                     _putch:
  4844                           	callstack 25
  4845  003FD0  0012               	return		;funcret
  4846  003FD2                     __end_of_putch:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _floorf *****************
  4850 ;; Defined at:
  4851 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  x               4   50[COMRAM] float 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  u               4   66[COMRAM] struct .
  4856 ;;  m               4   60[COMRAM] unsigned long 
  4857 ;;  e               2   64[COMRAM] int 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  4   50[COMRAM] float 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4867 ;;      Params:         4       0       0       0       0       0       0       0       0
  4868 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4869 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4870 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4871 ;;Total ram usage:       20 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_efgtoa
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text15
  4881  0024EE                     __ptext15:
  4882                           	callstack 0
  4883  0024EE                     _floorf:
  4884                           	callstack 25
  4885  0024EE  C0DF  F043         	movff	floorf@F526,floorf@u
  4886  0024F2  C0E0  F044         	movff	floorf@F526+1,floorf@u+1
  4887  0024F6  C0E1  F045         	movff	floorf@F526+2,floorf@u+2
  4888  0024FA  C0E2  F046         	movff	floorf@F526+3,floorf@u+3
  4889  0024FE  C033  F043         	movff	floorf@x,floorf@u
  4890  002502  C034  F044         	movff	floorf@x+1,floorf@u+1
  4891  002506  C035  F045         	movff	floorf@x+2,floorf@u+2
  4892  00250A  C036  F046         	movff	floorf@x+3,floorf@u+3
  4893  00250E  0E81               	movlw	129
  4894  002510  6E37               	movwf	??_floorf^0,c
  4895  002512  0EFF               	movlw	255
  4896  002514  6E38               	movwf	(??_floorf+1)^0,c
  4897  002516  C043  F039         	movff	floorf@u,??_floorf+2
  4898  00251A  C044  F03A         	movff	floorf@u+1,??_floorf+3
  4899  00251E  C045  F03B         	movff	floorf@u+2,??_floorf+4
  4900  002522  C046  F03C         	movff	floorf@u+3,??_floorf+5
  4901  002526  0E18               	movlw	24
  4902  002528  EF9B  F012         	goto	u3870
  4903  00252C                     u3875:
  4904  00252C  90D8               	bcf	status,0,c
  4905  00252E  323C               	rrcf	(??_floorf+5)^0,f,c
  4906  002530  323B               	rrcf	(??_floorf+4)^0,f,c
  4907  002532  323A               	rrcf	(??_floorf+3)^0,f,c
  4908  002534  3239               	rrcf	(??_floorf+2)^0,f,c
  4909  002536                     u3870:
  4910  002536  2EE8               	decfsz	wreg,f,c
  4911  002538  EF96  F012         	goto	u3875
  4912  00253C  5039               	movf	(??_floorf+2)^0,w,c
  4913  00253E  2437               	addwf	??_floorf^0,w,c
  4914  002540  6E41               	movwf	floorf@e^0,c
  4915  002542  0E00               	movlw	0
  4916  002544  2038               	addwfc	(??_floorf+1)^0,w,c
  4917  002546  6E42               	movwf	(floorf@e+1)^0,c
  4918  002548  BE42               	btfsc	(floorf@e+1)^0,7,c
  4919  00254A  EFB0  F012         	goto	u3881
  4920  00254E  5042               	movf	(floorf@e+1)^0,w,c
  4921  002550  E109               	bnz	u3880
  4922  002552  0E17               	movlw	23
  4923  002554  5C41               	subwf	floorf@e^0,w,c
  4924  002556  A0D8               	btfss	status,0,c
  4925  002558  EFB0  F012         	goto	u3881
  4926  00255C  EFB2  F012         	goto	u3880
  4927  002560                     u3881:
  4928  002560  EFBC  F012         	goto	l3663
  4929  002564                     u3880:
  4930  002564                     l3661:
  4931  002564  C033  F033         	movff	floorf@x,?_floorf
  4932  002568  C034  F034         	movff	floorf@x+1,?_floorf+1
  4933  00256C  C035  F035         	movff	floorf@x+2,?_floorf+2
  4934  002570  C036  F036         	movff	floorf@x+3,?_floorf+3
  4935  002574  EF7F  F013         	goto	l1123
  4936  002578                     l3663:
  4937  002578  BE42               	btfsc	(floorf@e+1)^0,7,c
  4938  00257A  EFC1  F012         	goto	u3891
  4939  00257E  EFC3  F012         	goto	u3890
  4940  002582                     u3891:
  4941  002582  EF33  F013         	goto	l3673
  4942  002586                     u3890:
  4943  002586  C041  F037         	movff	floorf@e,??_floorf
  4944  00258A  0EFF               	movlw	255
  4945  00258C  6E38               	movwf	(??_floorf+1)^0,c
  4946  00258E  0EFF               	movlw	255
  4947  002590  6E39               	movwf	(??_floorf+2)^0,c
  4948  002592  0E7F               	movlw	127
  4949  002594  6E3A               	movwf	(??_floorf+3)^0,c
  4950  002596  0E00               	movlw	0
  4951  002598  6E3B               	movwf	(??_floorf+4)^0,c
  4952  00259A                     u3905:
  4953  00259A  6637               	tstfsz	??_floorf^0,c
  4954  00259C  EFD2  F012         	goto	u3906
  4955  0025A0  EFDA  F012         	goto	u3907
  4956  0025A4                     u3906:
  4957  0025A4  343B               	rlcf	(??_floorf+4)^0,w,c
  4958  0025A6  323B               	rrcf	(??_floorf+4)^0,f,c
  4959  0025A8  323A               	rrcf	(??_floorf+3)^0,f,c
  4960  0025AA  3239               	rrcf	(??_floorf+2)^0,f,c
  4961  0025AC  3238               	rrcf	(??_floorf+1)^0,f,c
  4962  0025AE  2E37               	decfsz	??_floorf^0,f,c
  4963  0025B0  EFCD  F012         	goto	u3905
  4964  0025B4                     u3907:
  4965  0025B4  C038  F03D         	movff	??_floorf+1,floorf@m
  4966  0025B8  C039  F03E         	movff	??_floorf+2,floorf@m+1
  4967  0025BC  C03A  F03F         	movff	??_floorf+3,floorf@m+2
  4968  0025C0  C03B  F040         	movff	??_floorf+4,floorf@m+3
  4969  0025C4  503D               	movf	floorf@m^0,w,c
  4970  0025C6  1443               	andwf	floorf@u^0,w,c
  4971  0025C8  6E37               	movwf	??_floorf^0,c
  4972  0025CA  503E               	movf	(floorf@m+1)^0,w,c
  4973  0025CC  1444               	andwf	(floorf@u+1)^0,w,c
  4974  0025CE  6E38               	movwf	(??_floorf+1)^0,c
  4975  0025D0  503F               	movf	(floorf@m+2)^0,w,c
  4976  0025D2  1445               	andwf	(floorf@u+2)^0,w,c
  4977  0025D4  6E39               	movwf	(??_floorf+2)^0,c
  4978  0025D6  5040               	movf	(floorf@m+3)^0,w,c
  4979  0025D8  1446               	andwf	(floorf@u+3)^0,w,c
  4980  0025DA  6E3A               	movwf	(??_floorf+3)^0,c
  4981  0025DC  5037               	movf	??_floorf^0,w,c
  4982  0025DE  1038               	iorwf	(??_floorf+1)^0,w,c
  4983  0025E0  1039               	iorwf	(??_floorf+2)^0,w,c
  4984  0025E2  103A               	iorwf	(??_floorf+3)^0,w,c
  4985  0025E4  A4D8               	btfss	status,2,c
  4986  0025E6  EFF7  F012         	goto	u3911
  4987  0025EA  EFF9  F012         	goto	u3910
  4988  0025EE                     u3911:
  4989  0025EE  EFFB  F012         	goto	l3669
  4990  0025F2                     u3910:
  4991  0025F2  EFB2  F012         	goto	l3661
  4992  0025F6                     l3669:
  4993  0025F6  C043  F037         	movff	floorf@u,??_floorf
  4994  0025FA  C044  F038         	movff	floorf@u+1,??_floorf+1
  4995  0025FE  C045  F039         	movff	floorf@u+2,??_floorf+2
  4996  002602  C046  F03A         	movff	floorf@u+3,??_floorf+3
  4997  002606  0E20               	movlw	32
  4998  002608  EF0B  F013         	goto	u3920
  4999  00260C                     u3925:
  5000  00260C  90D8               	bcf	status,0,c
  5001  00260E  323A               	rrcf	(??_floorf+3)^0,f,c
  5002  002610  3239               	rrcf	(??_floorf+2)^0,f,c
  5003  002612  3238               	rrcf	(??_floorf+1)^0,f,c
  5004  002614  3237               	rrcf	??_floorf^0,f,c
  5005  002616                     u3920:
  5006  002616  2EE8               	decfsz	wreg,f,c
  5007  002618  EF06  F013         	goto	u3925
  5008  00261C  5037               	movf	??_floorf^0,w,c
  5009  00261E  1038               	iorwf	(??_floorf+1)^0,w,c
  5010  002620  1039               	iorwf	(??_floorf+2)^0,w,c
  5011  002622  103A               	iorwf	(??_floorf+3)^0,w,c
  5012  002624  B4D8               	btfsc	status,2,c
  5013  002626  EF17  F013         	goto	u3931
  5014  00262A  EF19  F013         	goto	u3930
  5015  00262E                     u3931:
  5016  00262E  EF21  F013         	goto	l1126
  5017  002632                     u3930:
  5018  002632  503D               	movf	floorf@m^0,w,c
  5019  002634  2643               	addwf	floorf@u^0,f,c
  5020  002636  503E               	movf	(floorf@m+1)^0,w,c
  5021  002638  2244               	addwfc	(floorf@u+1)^0,f,c
  5022  00263A  503F               	movf	(floorf@m+2)^0,w,c
  5023  00263C  2245               	addwfc	(floorf@u+2)^0,f,c
  5024  00263E  5040               	movf	(floorf@m+3)^0,w,c
  5025  002640  2246               	addwfc	(floorf@u+3)^0,f,c
  5026  002642                     l1126:
  5027  002642  1C3D               	comf	floorf@m^0,w,c
  5028  002644  6E37               	movwf	??_floorf^0,c
  5029  002646  1C3E               	comf	(floorf@m+1)^0,w,c
  5030  002648  6E38               	movwf	(??_floorf+1)^0,c
  5031  00264A  1C3F               	comf	(floorf@m+2)^0,w,c
  5032  00264C  6E39               	movwf	(??_floorf+2)^0,c
  5033  00264E  1C40               	comf	(floorf@m+3)^0,w,c
  5034  002650  6E3A               	movwf	(??_floorf+3)^0,c
  5035  002652  5037               	movf	??_floorf^0,w,c
  5036  002654  1643               	andwf	floorf@u^0,f,c
  5037  002656  5038               	movf	(??_floorf+1)^0,w,c
  5038  002658  1644               	andwf	(floorf@u+1)^0,f,c
  5039  00265A  5039               	movf	(??_floorf+2)^0,w,c
  5040  00265C  1645               	andwf	(floorf@u+2)^0,f,c
  5041  00265E  503A               	movf	(??_floorf+3)^0,w,c
  5042  002660  1646               	andwf	(floorf@u+3)^0,f,c
  5043  002662  EF77  F013         	goto	l3681
  5044  002666                     l3673:
  5045  002666  C043  F037         	movff	floorf@u,??_floorf
  5046  00266A  C044  F038         	movff	floorf@u+1,??_floorf+1
  5047  00266E  C045  F039         	movff	floorf@u+2,??_floorf+2
  5048  002672  C046  F03A         	movff	floorf@u+3,??_floorf+3
  5049  002676  0E20               	movlw	32
  5050  002678  EF43  F013         	goto	u3940
  5051  00267C                     u3945:
  5052  00267C  90D8               	bcf	status,0,c
  5053  00267E  323A               	rrcf	(??_floorf+3)^0,f,c
  5054  002680  3239               	rrcf	(??_floorf+2)^0,f,c
  5055  002682  3238               	rrcf	(??_floorf+1)^0,f,c
  5056  002684  3237               	rrcf	??_floorf^0,f,c
  5057  002686                     u3940:
  5058  002686  2EE8               	decfsz	wreg,f,c
  5059  002688  EF3E  F013         	goto	u3945
  5060  00268C  5037               	movf	??_floorf^0,w,c
  5061  00268E  1038               	iorwf	(??_floorf+1)^0,w,c
  5062  002690  1039               	iorwf	(??_floorf+2)^0,w,c
  5063  002692  103A               	iorwf	(??_floorf+3)^0,w,c
  5064  002694  A4D8               	btfss	status,2,c
  5065  002696  EF4F  F013         	goto	u3951
  5066  00269A  EF51  F013         	goto	u3950
  5067  00269E                     u3951:
  5068  00269E  EF5B  F013         	goto	l3677
  5069  0026A2                     u3950:
  5070  0026A2  0E00               	movlw	0
  5071  0026A4  6E43               	movwf	floorf@u^0,c
  5072  0026A6  0E00               	movlw	0
  5073  0026A8  6E44               	movwf	(floorf@u+1)^0,c
  5074  0026AA  0E00               	movlw	0
  5075  0026AC  6E45               	movwf	(floorf@u+2)^0,c
  5076  0026AE  0E00               	movlw	0
  5077  0026B0  6E46               	movwf	(floorf@u+3)^0,c
  5078  0026B2  EF77  F013         	goto	l3681
  5079  0026B6                     l3677:
  5080  0026B6  90D8               	bcf	status,0,c
  5081  0026B8  3443               	rlcf	floorf@u^0,w,c
  5082  0026BA  6E37               	movwf	??_floorf^0,c
  5083  0026BC  3444               	rlcf	(floorf@u+1)^0,w,c
  5084  0026BE  6E38               	movwf	(??_floorf+1)^0,c
  5085  0026C0  3445               	rlcf	(floorf@u+2)^0,w,c
  5086  0026C2  6E39               	movwf	(??_floorf+2)^0,c
  5087  0026C4  3446               	rlcf	(floorf@u+3)^0,w,c
  5088  0026C6  6E3A               	movwf	(??_floorf+3)^0,c
  5089  0026C8  5037               	movf	??_floorf^0,w,c
  5090  0026CA  1038               	iorwf	(??_floorf+1)^0,w,c
  5091  0026CC  1039               	iorwf	(??_floorf+2)^0,w,c
  5092  0026CE  103A               	iorwf	(??_floorf+3)^0,w,c
  5093  0026D0  B4D8               	btfsc	status,2,c
  5094  0026D2  EF6D  F013         	goto	u3961
  5095  0026D6  EF6F  F013         	goto	u3960
  5096  0026DA                     u3961:
  5097  0026DA  EF77  F013         	goto	l3681
  5098  0026DE                     u3960:
  5099  0026DE  0E00               	movlw	0
  5100  0026E0  6E43               	movwf	floorf@u^0,c
  5101  0026E2  0E00               	movlw	0
  5102  0026E4  6E44               	movwf	(floorf@u+1)^0,c
  5103  0026E6  0E80               	movlw	128
  5104  0026E8  6E45               	movwf	(floorf@u+2)^0,c
  5105  0026EA  0EBF               	movlw	191
  5106  0026EC  6E46               	movwf	(floorf@u+3)^0,c
  5107  0026EE                     l3681:
  5108  0026EE  C043  F033         	movff	floorf@u,?_floorf
  5109  0026F2  C044  F034         	movff	floorf@u+1,?_floorf+1
  5110  0026F6  C045  F035         	movff	floorf@u+2,?_floorf+2
  5111  0026FA  C046  F036         	movff	floorf@u+3,?_floorf+3
  5112  0026FE                     l1123:
  5113  0026FE  0012               	return		;funcret
  5114  002700                     __end_of_floorf:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function ___fpclassifyf *****************
  5118 ;; Defined at:
  5119 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  x               4    0[COMRAM] float 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  u               4   10[COMRAM] struct .
  5124 ;;  e               2    8[COMRAM] int 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2    0[COMRAM] int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5134 ;;      Params:         4       0       0       0       0       0       0       0       0
  5135 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5136 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5137 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5138 ;;Total ram usage:       14 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_efgtoa
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147                           	psect	text16
  5148  002FB8                     __ptext16:
  5149                           	callstack 0
  5150  002FB8                     ___fpclassifyf:
  5151                           	callstack 25
  5152  002FB8  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5153  002FBC  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5154  002FC0  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5155  002FC4  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5156  002FC8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5157  002FCC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5158  002FD0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5159  002FD4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5160  002FD8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5161  002FDC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5162  002FE0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5163  002FE4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5164  002FE8  0E18               	movlw	24
  5165  002FEA  EFFC  F017         	goto	u3770
  5166  002FEE                     u3775:
  5167  002FEE  90D8               	bcf	status,0,c
  5168  002FF0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5169  002FF2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5170  002FF4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5171  002FF6  3205               	rrcf	??___fpclassifyf^0,f,c
  5172  002FF8                     u3770:
  5173  002FF8  2EE8               	decfsz	wreg,f,c
  5174  002FFA  EFF7  F017         	goto	u3775
  5175  002FFE  5005               	movf	??___fpclassifyf^0,w,c
  5176  003000  6E09               	movwf	___fpclassifyf@e^0,c
  5177  003002  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5178  003004  5009               	movf	___fpclassifyf@e^0,w,c
  5179  003006  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5180  003008  A4D8               	btfss	status,2,c
  5181  00300A  EF09  F018         	goto	u3781
  5182  00300E  EF0B  F018         	goto	u3780
  5183  003012                     u3781:
  5184  003012  EF2B  F018         	goto	l3633
  5185  003016                     u3780:
  5186  003016  90D8               	bcf	status,0,c
  5187  003018  340B               	rlcf	___fpclassifyf@u^0,w,c
  5188  00301A  6E05               	movwf	??___fpclassifyf^0,c
  5189  00301C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5190  00301E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5191  003020  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5192  003022  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5193  003024  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5194  003026  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5195  003028  5005               	movf	??___fpclassifyf^0,w,c
  5196  00302A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5197  00302C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5198  00302E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5199  003030  A4D8               	btfss	status,2,c
  5200  003032  EF1D  F018         	goto	u3791
  5201  003036  EF1F  F018         	goto	u3790
  5202  00303A                     u3791:
  5203  00303A  EF25  F018         	goto	l3629
  5204  00303E                     u3790:
  5205  00303E  0E00               	movlw	0
  5206  003040  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5207  003042  0E02               	movlw	2
  5208  003044  6E01               	movwf	?___fpclassifyf^0,c
  5209  003046  EF5A  F018         	goto	l1091
  5210  00304A                     l3629:
  5211  00304A  0E00               	movlw	0
  5212  00304C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5213  00304E  0E03               	movlw	3
  5214  003050  6E01               	movwf	?___fpclassifyf^0,c
  5215  003052  EF5A  F018         	goto	l1091
  5216  003056                     l3633:
  5217  003056  2809               	incf	___fpclassifyf@e^0,w,c
  5218  003058  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5219  00305A  A4D8               	btfss	status,2,c
  5220  00305C  EF32  F018         	goto	u3801
  5221  003060  EF34  F018         	goto	u3800
  5222  003064                     u3801:
  5223  003064  EF56  F018         	goto	l3639
  5224  003068                     u3800:
  5225  003068  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5226  00306C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5227  003070  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5228  003074  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5229  003078  0E09               	movlw	9
  5230  00307A                     u3815:
  5231  00307A  90D8               	bcf	status,0,c
  5232  00307C  3605               	rlcf	??___fpclassifyf^0,f,c
  5233  00307E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5234  003080  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5235  003082  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5236  003084  2EE8               	decfsz	wreg,f,c
  5237  003086  EF3D  F018         	goto	u3815
  5238  00308A  5005               	movf	??___fpclassifyf^0,w,c
  5239  00308C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5240  00308E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5241  003090  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5242  003092  B4D8               	btfsc	status,2,c
  5243  003094  EF4E  F018         	goto	u3821
  5244  003098  EF51  F018         	goto	u3820
  5245  00309C                     u3821:
  5246  00309C  0E01               	movlw	1
  5247  00309E  EF52  F018         	goto	u3830
  5248  0030A2                     u3820:
  5249  0030A2  0E00               	movlw	0
  5250  0030A4                     u3830:
  5251  0030A4  6E01               	movwf	?___fpclassifyf^0,c
  5252  0030A6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5253  0030A8  EF5A  F018         	goto	l1091
  5254  0030AC                     l3639:
  5255  0030AC  0E00               	movlw	0
  5256  0030AE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5257  0030B0  0E04               	movlw	4
  5258  0030B2  6E01               	movwf	?___fpclassifyf^0,c
  5259  0030B4                     l1091:
  5260  0030B4  0012               	return		;funcret
  5261  0030B6                     __end_of___fpclassifyf:
  5262                           	callstack 0
  5263                           
  5264 ;; *************** function ___fltol *****************
  5265 ;; Defined at:
  5266 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  f1              4    0[COMRAM] int 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  exp1            1    9[COMRAM] unsigned char 
  5271 ;;  sign1           1    8[COMRAM] unsigned char 
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  4    0[COMRAM] long 
  5274 ;; Registers used:
  5275 ;;		wreg, status,2, status,0
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5281 ;;      Params:         4       0       0       0       0       0       0       0       0
  5282 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5283 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5284 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5285 ;;Total ram usage:       10 bytes
  5286 ;; Hardware stack levels used: 1
  5287 ;; This function calls:
  5288 ;;		Nothing
  5289 ;; This function is called by:
  5290 ;;		_efgtoa
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text17
  5295  002DAE                     __ptext17:
  5296                           	callstack 0
  5297  002DAE                     ___fltol:
  5298                           	callstack 25
  5299  002DAE  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5300  002DB0  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5301  002DB2  6E0A               	movwf	___fltol@exp1^0,c
  5302  002DB4  500A               	movf	___fltol@exp1^0,w,c
  5303  002DB6  A4D8               	btfss	status,2,c
  5304  002DB8  EFE0  F016         	goto	u3661
  5305  002DBC  EFE2  F016         	goto	u3660
  5306  002DC0                     u3661:
  5307  002DC0  EFEC  F016         	goto	l3561
  5308  002DC4                     u3660:
  5309  002DC4                     l3557:
  5310  002DC4  0E00               	movlw	0
  5311  002DC6  6E01               	movwf	?___fltol^0,c
  5312  002DC8  0E00               	movlw	0
  5313  002DCA  6E02               	movwf	(?___fltol+1)^0,c
  5314  002DCC  0E00               	movlw	0
  5315  002DCE  6E03               	movwf	(?___fltol+2)^0,c
  5316  002DD0  0E00               	movlw	0
  5317  002DD2  6E04               	movwf	(?___fltol+3)^0,c
  5318  002DD4  EF59  F017         	goto	l540
  5319  002DD8                     l3561:
  5320  002DD8  C001  F005         	movff	___fltol@f1,??___fltol
  5321  002DDC  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5322  002DE0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5323  002DE4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5324  002DE8  0E20               	movlw	32
  5325  002DEA  EFFC  F016         	goto	u3670
  5326  002DEE                     u3675:
  5327  002DEE  90D8               	bcf	status,0,c
  5328  002DF0  3208               	rrcf	(??___fltol+3)^0,f,c
  5329  002DF2  3207               	rrcf	(??___fltol+2)^0,f,c
  5330  002DF4  3206               	rrcf	(??___fltol+1)^0,f,c
  5331  002DF6  3205               	rrcf	??___fltol^0,f,c
  5332  002DF8                     u3670:
  5333  002DF8  2EE8               	decfsz	wreg,f,c
  5334  002DFA  EFF7  F016         	goto	u3675
  5335  002DFE  5005               	movf	??___fltol^0,w,c
  5336  002E00  6E09               	movwf	___fltol@sign1^0,c
  5337  002E02  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5338  002E04  0EFF               	movlw	255
  5339  002E06  1601               	andwf	___fltol@f1^0,f,c
  5340  002E08  0EFF               	movlw	255
  5341  002E0A  1602               	andwf	(___fltol@f1+1)^0,f,c
  5342  002E0C  0EFF               	movlw	255
  5343  002E0E  1603               	andwf	(___fltol@f1+2)^0,f,c
  5344  002E10  0E00               	movlw	0
  5345  002E12  1604               	andwf	(___fltol@f1+3)^0,f,c
  5346  002E14  0E96               	movlw	150
  5347  002E16  5E0A               	subwf	___fltol@exp1^0,f,c
  5348  002E18  BE0A               	btfsc	___fltol@exp1^0,7,c
  5349  002E1A  EF13  F017         	goto	u3680
  5350  002E1E  EF11  F017         	goto	u3681
  5351  002E22                     u3681:
  5352  002E22  EF29  F017         	goto	l3581
  5353  002E26                     u3680:
  5354  002E26  500A               	movf	___fltol@exp1^0,w,c
  5355  002E28  0A80               	xorlw	128
  5356  002E2A  0F97               	addlw	151
  5357  002E2C  B0D8               	btfsc	status,0,c
  5358  002E2E  EF1B  F017         	goto	u3691
  5359  002E32  EF1D  F017         	goto	u3690
  5360  002E36                     u3691:
  5361  002E36  EF1F  F017         	goto	l3577
  5362  002E3A                     u3690:
  5363  002E3A  EFE2  F016         	goto	l3557
  5364  002E3E                     l3577:
  5365  002E3E  90D8               	bcf	status,0,c
  5366  002E40  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5367  002E42  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5368  002E44  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5369  002E46  3201               	rrcf	___fltol@f1^0,f,c
  5370  002E48  3E0A               	incfsz	___fltol@exp1^0,f,c
  5371  002E4A  EF1F  F017         	goto	l3577
  5372  002E4E  EF41  F017         	goto	l3591
  5373  002E52                     l3581:
  5374  002E52  0E1F               	movlw	31
  5375  002E54  640A               	cpfsgt	___fltol@exp1^0,c
  5376  002E56  EF2F  F017         	goto	u3701
  5377  002E5A  EF31  F017         	goto	u3700
  5378  002E5E                     u3701:
  5379  002E5E  EF39  F017         	goto	l3589
  5380  002E62                     u3700:
  5381  002E62  EFE2  F016         	goto	l3557
  5382  002E66                     l3587:
  5383  002E66  90D8               	bcf	status,0,c
  5384  002E68  3601               	rlcf	___fltol@f1^0,f,c
  5385  002E6A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5386  002E6C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5387  002E6E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5388  002E70  060A               	decf	___fltol@exp1^0,f,c
  5389  002E72                     l3589:
  5390  002E72  500A               	movf	___fltol@exp1^0,w,c
  5391  002E74  A4D8               	btfss	status,2,c
  5392  002E76  EF3F  F017         	goto	u3711
  5393  002E7A  EF41  F017         	goto	u3710
  5394  002E7E                     u3711:
  5395  002E7E  EF33  F017         	goto	l3587
  5396  002E82                     u3710:
  5397  002E82                     l3591:
  5398  002E82  5009               	movf	___fltol@sign1^0,w,c
  5399  002E84  B4D8               	btfsc	status,2,c
  5400  002E86  EF47  F017         	goto	u3721
  5401  002E8A  EF49  F017         	goto	u3720
  5402  002E8E                     u3721:
  5403  002E8E  EF51  F017         	goto	l3595
  5404  002E92                     u3720:
  5405  002E92  1E04               	comf	(___fltol@f1+3)^0,f,c
  5406  002E94  1E03               	comf	(___fltol@f1+2)^0,f,c
  5407  002E96  1E02               	comf	(___fltol@f1+1)^0,f,c
  5408  002E98  6C01               	negf	___fltol@f1^0,c
  5409  002E9A  0E00               	movlw	0
  5410  002E9C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5411  002E9E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5412  002EA0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5413  002EA2                     l3595:
  5414  002EA2  C001  F001         	movff	___fltol@f1,?___fltol
  5415  002EA6  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5416  002EAA  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5417  002EAE  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5418  002EB2                     l540:
  5419  002EB2  0012               	return		;funcret
  5420  002EB4                     __end_of___fltol:
  5421                           	callstack 0
  5422                           
  5423 ;; *************** function ___flsub *****************
  5424 ;; Defined at:
  5425 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  b               4   25[COMRAM] long 
  5428 ;;  a               4   29[COMRAM] long 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  4   25[COMRAM] long 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0, cstack
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5440 ;;      Params:         8       0       0       0       0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5443 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5444 ;;Total ram usage:        8 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; Hardware stack levels required when called: 1
  5447 ;; This function calls:
  5448 ;;		___fladd
  5449 ;; This function is called by:
  5450 ;;		_efgtoa
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text18
  5455  003D30                     __ptext18:
  5456                           	callstack 0
  5457  003D30                     ___flsub:
  5458                           	callstack 24
  5459  003D30  0E00               	movlw	0
  5460  003D32  1A1E               	xorwf	___flsub@a^0,f,c
  5461  003D34  0E00               	movlw	0
  5462  003D36  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5463  003D38  0E00               	movlw	0
  5464  003D3A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5465  003D3C  0E80               	movlw	128
  5466  003D3E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5467  003D40  C01A  F001         	movff	___flsub@b,___fladd@b
  5468  003D44  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5469  003D48  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5470  003D4C  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5471  003D50  C01E  F005         	movff	___flsub@a,___fladd@a
  5472  003D54  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5473  003D58  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5474  003D5C  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5475  003D60  EC1C  F00A         	call	___fladd	;wreg free
  5476  003D64  C001  F01A         	movff	?___fladd,?___flsub
  5477  003D68  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5478  003D6C  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5479  003D70  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5480  003D74  0012               	return		;funcret
  5481  003D76                     __end_of___flsub:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function ___fladd *****************
  5485 ;; Defined at:
  5486 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  b               4    0[COMRAM] long 
  5489 ;;  a               4    4[COMRAM] long 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  grs             1   15[COMRAM] unsigned char 
  5492 ;;  bexp            1   14[COMRAM] unsigned char 
  5493 ;;  aexp            1   13[COMRAM] unsigned char 
  5494 ;;  signs           1   12[COMRAM] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  4    0[COMRAM] unsigned char 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5504 ;;      Params:         8       0       0       0       0       0       0       0       0
  5505 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5506 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5507 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5508 ;;Total ram usage:       16 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		___flsub
  5514 ;;		_efgtoa
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text19
  5519  001438                     __ptext19:
  5520                           	callstack 0
  5521  001438                     ___fladd:
  5522                           	callstack 24
  5523  001438  5004               	movf	(___fladd@b+3)^0,w,c
  5524  00143A  0B80               	andlw	128
  5525  00143C  6E0D               	movwf	___fladd@signs^0,c
  5526  00143E  5004               	movf	(___fladd@b+3)^0,w,c
  5527  001440  2404               	addwf	(___fladd@b+3)^0,w,c
  5528  001442  6E0F               	movwf	___fladd@bexp^0,c
  5529  001444  AE03               	btfss	(___fladd@b+2)^0,7,c
  5530  001446  EF27  F00A         	goto	u2601
  5531  00144A  EF29  F00A         	goto	u2600
  5532  00144E                     u2601:
  5533  00144E  EF2A  F00A         	goto	l2931
  5534  001452                     u2600:
  5535  001452  800F               	bsf	___fladd@bexp^0,0,c
  5536  001454                     l2931:
  5537  001454  500F               	movf	___fladd@bexp^0,w,c
  5538  001456  B4D8               	btfsc	status,2,c
  5539  001458  EF30  F00A         	goto	u2611
  5540  00145C  EF32  F00A         	goto	u2610
  5541  001460                     u2611:
  5542  001460  EF47  F00A         	goto	l2941
  5543  001464                     u2610:
  5544  001464  280F               	incf	___fladd@bexp^0,w,c
  5545  001466  A4D8               	btfss	status,2,c
  5546  001468  EF38  F00A         	goto	u2621
  5547  00146C  EF3A  F00A         	goto	u2620
  5548  001470                     u2621:
  5549  001470  EF42  F00A         	goto	l2937
  5550  001474                     u2620:
  5551  001474  0E00               	movlw	0
  5552  001476  6E01               	movwf	___fladd@b^0,c
  5553  001478  0E00               	movlw	0
  5554  00147A  6E02               	movwf	(___fladd@b+1)^0,c
  5555  00147C  0E00               	movlw	0
  5556  00147E  6E03               	movwf	(___fladd@b+2)^0,c
  5557  001480  0E00               	movlw	0
  5558  001482  6E04               	movwf	(___fladd@b+3)^0,c
  5559  001484                     l2937:
  5560  001484  8E03               	bsf	(___fladd@b+2)^0,7,c
  5561  001486  0E00               	movlw	0
  5562  001488  6E04               	movwf	(___fladd@b+3)^0,c
  5563  00148A  EF4F  F00A         	goto	l2943
  5564  00148E                     l2941:
  5565  00148E  0E00               	movlw	0
  5566  001490  6E01               	movwf	___fladd@b^0,c
  5567  001492  0E00               	movlw	0
  5568  001494  6E02               	movwf	(___fladd@b+1)^0,c
  5569  001496  0E00               	movlw	0
  5570  001498  6E03               	movwf	(___fladd@b+2)^0,c
  5571  00149A  0E00               	movlw	0
  5572  00149C  6E04               	movwf	(___fladd@b+3)^0,c
  5573  00149E                     l2943:
  5574  00149E  5008               	movf	(___fladd@a+3)^0,w,c
  5575  0014A0  0B80               	andlw	128
  5576  0014A2  6E0E               	movwf	___fladd@aexp^0,c
  5577  0014A4  500D               	movf	___fladd@signs^0,w,c
  5578  0014A6  180E               	xorwf	___fladd@aexp^0,w,c
  5579  0014A8  B4D8               	btfsc	status,2,c
  5580  0014AA  EF59  F00A         	goto	u2631
  5581  0014AE  EF5B  F00A         	goto	u2630
  5582  0014B2                     u2631:
  5583  0014B2  EF5C  F00A         	goto	l2949
  5584  0014B6                     u2630:
  5585  0014B6  8C0D               	bsf	___fladd@signs^0,6,c
  5586  0014B8                     l2949:
  5587  0014B8  5008               	movf	(___fladd@a+3)^0,w,c
  5588  0014BA  2408               	addwf	(___fladd@a+3)^0,w,c
  5589  0014BC  6E0E               	movwf	___fladd@aexp^0,c
  5590  0014BE  AE07               	btfss	(___fladd@a+2)^0,7,c
  5591  0014C0  EF64  F00A         	goto	u2641
  5592  0014C4  EF66  F00A         	goto	u2640
  5593  0014C8                     u2641:
  5594  0014C8  EF67  F00A         	goto	l2955
  5595  0014CC                     u2640:
  5596  0014CC  800E               	bsf	___fladd@aexp^0,0,c
  5597  0014CE                     l2955:
  5598  0014CE  500E               	movf	___fladd@aexp^0,w,c
  5599  0014D0  B4D8               	btfsc	status,2,c
  5600  0014D2  EF6D  F00A         	goto	u2651
  5601  0014D6  EF6F  F00A         	goto	u2650
  5602  0014DA                     u2651:
  5603  0014DA  EF84  F00A         	goto	l2965
  5604  0014DE                     u2650:
  5605  0014DE  280E               	incf	___fladd@aexp^0,w,c
  5606  0014E0  A4D8               	btfss	status,2,c
  5607  0014E2  EF75  F00A         	goto	u2661
  5608  0014E6  EF77  F00A         	goto	u2660
  5609  0014EA                     u2661:
  5610  0014EA  EF7F  F00A         	goto	l2961
  5611  0014EE                     u2660:
  5612  0014EE  0E00               	movlw	0
  5613  0014F0  6E05               	movwf	___fladd@a^0,c
  5614  0014F2  0E00               	movlw	0
  5615  0014F4  6E06               	movwf	(___fladd@a+1)^0,c
  5616  0014F6  0E00               	movlw	0
  5617  0014F8  6E07               	movwf	(___fladd@a+2)^0,c
  5618  0014FA  0E00               	movlw	0
  5619  0014FC  6E08               	movwf	(___fladd@a+3)^0,c
  5620  0014FE                     l2961:
  5621  0014FE  8E07               	bsf	(___fladd@a+2)^0,7,c
  5622  001500  0E00               	movlw	0
  5623  001502  6E08               	movwf	(___fladd@a+3)^0,c
  5624  001504  EF8C  F00A         	goto	l2967
  5625  001508                     l2965:
  5626  001508  0E00               	movlw	0
  5627  00150A  6E05               	movwf	___fladd@a^0,c
  5628  00150C  0E00               	movlw	0
  5629  00150E  6E06               	movwf	(___fladd@a+1)^0,c
  5630  001510  0E00               	movlw	0
  5631  001512  6E07               	movwf	(___fladd@a+2)^0,c
  5632  001514  0E00               	movlw	0
  5633  001516  6E08               	movwf	(___fladd@a+3)^0,c
  5634  001518                     l2967:
  5635  001518  500F               	movf	___fladd@bexp^0,w,c
  5636  00151A  5C0E               	subwf	___fladd@aexp^0,w,c
  5637  00151C  B0D8               	btfsc	status,0,c
  5638  00151E  EF93  F00A         	goto	u2671
  5639  001522  EF95  F00A         	goto	u2670
  5640  001526                     u2671:
  5641  001526  EFBC  F00A         	goto	l3003
  5642  00152A                     u2670:
  5643  00152A  AC0D               	btfss	___fladd@signs^0,6,c
  5644  00152C  EF9A  F00A         	goto	u2681
  5645  001530  EF9C  F00A         	goto	u2680
  5646  001534                     u2681:
  5647  001534  EF9E  F00A         	goto	l2973
  5648  001538                     u2680:
  5649  001538  0E80               	movlw	128
  5650  00153A  1A0D               	xorwf	___fladd@signs^0,f,c
  5651  00153C                     l2973:
  5652  00153C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5653  001540  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5654  001544  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5655  001548  C001  F010         	movff	___fladd@b,___fladd@grs
  5656  00154C  C005  F001         	movff	___fladd@a,___fladd@b
  5657  001550  C010  F005         	movff	___fladd@grs,___fladd@a
  5658  001554  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5659  001558  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5660  00155C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5661  001560  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5662  001564  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5663  001568  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5664  00156C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5665  001570  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5666  001574  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5667  001578                     l3003:
  5668  001578  0E00               	movlw	0
  5669  00157A  6E10               	movwf	___fladd@grs^0,c
  5670  00157C  500F               	movf	___fladd@bexp^0,w,c
  5671  00157E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5672  001582  6A0A               	clrf	(??___fladd+1)^0,c
  5673  001584  5E09               	subwf	??___fladd^0,f,c
  5674  001586  0E00               	movlw	0
  5675  001588  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5676  00158A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5677  00158C  EFD1  F00A         	goto	u2691
  5678  001590  500A               	movf	(??___fladd+1)^0,w,c
  5679  001592  E109               	bnz	u2690
  5680  001594  0E1A               	movlw	26
  5681  001596  5C09               	subwf	??___fladd^0,w,c
  5682  001598  A0D8               	btfss	status,0,c
  5683  00159A  EFD1  F00A         	goto	u2691
  5684  00159E  EFD3  F00A         	goto	u2690
  5685  0015A2                     u2691:
  5686  0015A2  EF0A  F00B         	goto	l772
  5687  0015A6                     u2690:
  5688  0015A6  5001               	movf	___fladd@b^0,w,c
  5689  0015A8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5690  0015AA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5691  0015AC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5692  0015AE  A4D8               	btfss	status,2,c
  5693  0015B0  EFDC  F00A         	goto	u2701
  5694  0015B4  EFDF  F00A         	goto	u2700
  5695  0015B8                     u2701:
  5696  0015B8  0E01               	movlw	1
  5697  0015BA  EFE0  F00A         	goto	u2710
  5698  0015BE                     u2700:
  5699  0015BE  0E00               	movlw	0
  5700  0015C0                     u2710:
  5701  0015C0  6E10               	movwf	___fladd@grs^0,c
  5702  0015C2  0E00               	movlw	0
  5703  0015C4  6E01               	movwf	___fladd@b^0,c
  5704  0015C6  0E00               	movlw	0
  5705  0015C8  6E02               	movwf	(___fladd@b+1)^0,c
  5706  0015CA  0E00               	movlw	0
  5707  0015CC  6E03               	movwf	(___fladd@b+2)^0,c
  5708  0015CE  0E00               	movlw	0
  5709  0015D0  6E04               	movwf	(___fladd@b+3)^0,c
  5710  0015D2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5711  0015D6  EF13  F00B         	goto	l771
  5712  0015DA                     l773:
  5713  0015DA  A010               	btfss	___fladd@grs^0,0,c
  5714  0015DC  EFF2  F00A         	goto	u2721
  5715  0015E0  EFF4  F00A         	goto	u2720
  5716  0015E4                     u2721:
  5717  0015E4  EFFA  F00A         	goto	l3015
  5718  0015E8                     u2720:
  5719  0015E8  90D8               	bcf	status,0,c
  5720  0015EA  3010               	rrcf	___fladd@grs^0,w,c
  5721  0015EC  0901               	iorlw	1
  5722  0015EE  6E10               	movwf	___fladd@grs^0,c
  5723  0015F0  EFFC  F00A         	goto	l3017
  5724  0015F4                     l3015:
  5725  0015F4  90D8               	bcf	status,0,c
  5726  0015F6  3210               	rrcf	___fladd@grs^0,f,c
  5727  0015F8                     l3017:
  5728  0015F8  A001               	btfss	___fladd@b^0,0,c
  5729  0015FA  EF01  F00B         	goto	u2731
  5730  0015FE  EF03  F00B         	goto	u2730
  5731  001602                     u2731:
  5732  001602  EF04  F00B         	goto	l3021
  5733  001606                     u2730:
  5734  001606  8E10               	bsf	___fladd@grs^0,7,c
  5735  001608                     l3021:
  5736  001608  3404               	rlcf	(___fladd@b+3)^0,w,c
  5737  00160A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5738  00160C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5739  00160E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5740  001610  3201               	rrcf	___fladd@b^0,f,c
  5741  001612  2A0F               	incf	___fladd@bexp^0,f,c
  5742  001614                     l772:
  5743  001614  500E               	movf	___fladd@aexp^0,w,c
  5744  001616  5C0F               	subwf	___fladd@bexp^0,w,c
  5745  001618  A0D8               	btfss	status,0,c
  5746  00161A  EF11  F00B         	goto	u2741
  5747  00161E  EF13  F00B         	goto	u2740
  5748  001622                     u2741:
  5749  001622  EFED  F00A         	goto	l773
  5750  001626                     u2740:
  5751  001626                     l771:
  5752  001626  BC0D               	btfsc	___fladd@signs^0,6,c
  5753  001628  EF18  F00B         	goto	u2751
  5754  00162C  EF1A  F00B         	goto	u2750
  5755  001630                     u2751:
  5756  001630  EF5A  F00B         	goto	l3049
  5757  001634                     u2750:
  5758  001634  500F               	movf	___fladd@bexp^0,w,c
  5759  001636  A4D8               	btfss	status,2,c
  5760  001638  EF20  F00B         	goto	u2761
  5761  00163C  EF22  F00B         	goto	u2760
  5762  001640                     u2761:
  5763  001640  EF2C  F00B         	goto	l3031
  5764  001644                     u2760:
  5765  001644  0E00               	movlw	0
  5766  001646  6E01               	movwf	?___fladd^0,c
  5767  001648  0E00               	movlw	0
  5768  00164A  6E02               	movwf	(?___fladd+1)^0,c
  5769  00164C  0E00               	movlw	0
  5770  00164E  6E03               	movwf	(?___fladd+2)^0,c
  5771  001650  0E00               	movlw	0
  5772  001652  6E04               	movwf	(?___fladd+3)^0,c
  5773  001654  EF7B  F00C         	goto	l780
  5774  001658                     l3031:
  5775  001658  5005               	movf	___fladd@a^0,w,c
  5776  00165A  2601               	addwf	___fladd@b^0,f,c
  5777  00165C  5006               	movf	(___fladd@a+1)^0,w,c
  5778  00165E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5779  001660  5007               	movf	(___fladd@a+2)^0,w,c
  5780  001662  2203               	addwfc	(___fladd@b+2)^0,f,c
  5781  001664  5008               	movf	(___fladd@a+3)^0,w,c
  5782  001666  2204               	addwfc	(___fladd@b+3)^0,f,c
  5783  001668  A004               	btfss	(___fladd@b+3)^0,0,c
  5784  00166A  EF39  F00B         	goto	u2771
  5785  00166E  EF3B  F00B         	goto	u2770
  5786  001672                     u2771:
  5787  001672  EFE7  F00B         	goto	l3085
  5788  001676                     u2770:
  5789  001676  A010               	btfss	___fladd@grs^0,0,c
  5790  001678  EF40  F00B         	goto	u2781
  5791  00167C  EF42  F00B         	goto	u2780
  5792  001680                     u2781:
  5793  001680  EF48  F00B         	goto	l3039
  5794  001684                     u2780:
  5795  001684  90D8               	bcf	status,0,c
  5796  001686  3010               	rrcf	___fladd@grs^0,w,c
  5797  001688  0901               	iorlw	1
  5798  00168A  6E10               	movwf	___fladd@grs^0,c
  5799  00168C  EF4A  F00B         	goto	l3041
  5800  001690                     l3039:
  5801  001690  90D8               	bcf	status,0,c
  5802  001692  3210               	rrcf	___fladd@grs^0,f,c
  5803  001694                     l3041:
  5804  001694  A001               	btfss	___fladd@b^0,0,c
  5805  001696  EF4F  F00B         	goto	u2791
  5806  00169A  EF51  F00B         	goto	u2790
  5807  00169E                     u2791:
  5808  00169E  EF52  F00B         	goto	l3045
  5809  0016A2                     u2790:
  5810  0016A2  8E10               	bsf	___fladd@grs^0,7,c
  5811  0016A4                     l3045:
  5812  0016A4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5813  0016A6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5814  0016A8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5815  0016AA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5816  0016AC  3201               	rrcf	___fladd@b^0,f,c
  5817  0016AE  2A0F               	incf	___fladd@bexp^0,f,c
  5818  0016B0  EFE7  F00B         	goto	l3085
  5819  0016B4                     l3049:
  5820  0016B4  5005               	movf	___fladd@a^0,w,c
  5821  0016B6  5C01               	subwf	___fladd@b^0,w,c
  5822  0016B8  5006               	movf	(___fladd@a+1)^0,w,c
  5823  0016BA  5802               	subwfb	(___fladd@b+1)^0,w,c
  5824  0016BC  5007               	movf	(___fladd@a+2)^0,w,c
  5825  0016BE  5803               	subwfb	(___fladd@b+2)^0,w,c
  5826  0016C0  5004               	movf	(___fladd@b+3)^0,w,c
  5827  0016C2  0A80               	xorlw	128
  5828  0016C4  6E09               	movwf	??___fladd^0,c
  5829  0016C6  5008               	movf	(___fladd@a+3)^0,w,c
  5830  0016C8  0A80               	xorlw	128
  5831  0016CA  5809               	subwfb	??___fladd^0,w,c
  5832  0016CC  B0D8               	btfsc	status,0,c
  5833  0016CE  EF6B  F00B         	goto	u2801
  5834  0016D2  EF6D  F00B         	goto	u2800
  5835  0016D6                     u2801:
  5836  0016D6  EF98  F00B         	goto	l3059
  5837  0016DA                     u2800:
  5838  0016DA  5001               	movf	___fladd@b^0,w,c
  5839  0016DC  5C05               	subwf	___fladd@a^0,w,c
  5840  0016DE  6E09               	movwf	??___fladd^0,c
  5841  0016E0  5002               	movf	(___fladd@b+1)^0,w,c
  5842  0016E2  5806               	subwfb	(___fladd@a+1)^0,w,c
  5843  0016E4  6E0A               	movwf	(??___fladd+1)^0,c
  5844  0016E6  5003               	movf	(___fladd@b+2)^0,w,c
  5845  0016E8  5807               	subwfb	(___fladd@a+2)^0,w,c
  5846  0016EA  6E0B               	movwf	(??___fladd+2)^0,c
  5847  0016EC  5004               	movf	(___fladd@b+3)^0,w,c
  5848  0016EE  5808               	subwfb	(___fladd@a+3)^0,w,c
  5849  0016F0  6E0C               	movwf	(??___fladd+3)^0,c
  5850  0016F2  0EFF               	movlw	255
  5851  0016F4  2409               	addwf	??___fladd^0,w,c
  5852  0016F6  6E01               	movwf	___fladd@b^0,c
  5853  0016F8  0EFF               	movlw	255
  5854  0016FA  200A               	addwfc	(??___fladd+1)^0,w,c
  5855  0016FC  6E02               	movwf	(___fladd@b+1)^0,c
  5856  0016FE  0EFF               	movlw	255
  5857  001700  200B               	addwfc	(??___fladd+2)^0,w,c
  5858  001702  6E03               	movwf	(___fladd@b+2)^0,c
  5859  001704  0EFF               	movlw	255
  5860  001706  200C               	addwfc	(??___fladd+3)^0,w,c
  5861  001708  6E04               	movwf	(___fladd@b+3)^0,c
  5862  00170A  0E80               	movlw	128
  5863  00170C  1A0D               	xorwf	___fladd@signs^0,f,c
  5864  00170E  6C10               	negf	___fladd@grs^0,c
  5865  001710  5010               	movf	___fladd@grs^0,w,c
  5866  001712  A4D8               	btfss	status,2,c
  5867  001714  EF8E  F00B         	goto	u2811
  5868  001718  EF90  F00B         	goto	u2810
  5869  00171C                     u2811:
  5870  00171C  EFA0  F00B         	goto	l788
  5871  001720                     u2810:
  5872  001720  0E01               	movlw	1
  5873  001722  2601               	addwf	___fladd@b^0,f,c
  5874  001724  0E00               	movlw	0
  5875  001726  2202               	addwfc	(___fladd@b+1)^0,f,c
  5876  001728  2203               	addwfc	(___fladd@b+2)^0,f,c
  5877  00172A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5878  00172C  EFA0  F00B         	goto	l788
  5879  001730                     l3059:
  5880  001730  5005               	movf	___fladd@a^0,w,c
  5881  001732  5E01               	subwf	___fladd@b^0,f,c
  5882  001734  5006               	movf	(___fladd@a+1)^0,w,c
  5883  001736  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5884  001738  5007               	movf	(___fladd@a+2)^0,w,c
  5885  00173A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5886  00173C  5008               	movf	(___fladd@a+3)^0,w,c
  5887  00173E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5888  001740                     l788:
  5889  001740  5001               	movf	___fladd@b^0,w,c
  5890  001742  1002               	iorwf	(___fladd@b+1)^0,w,c
  5891  001744  1003               	iorwf	(___fladd@b+2)^0,w,c
  5892  001746  1004               	iorwf	(___fladd@b+3)^0,w,c
  5893  001748  A4D8               	btfss	status,2,c
  5894  00174A  EFA9  F00B         	goto	u2821
  5895  00174E  EFAB  F00B         	goto	u2820
  5896  001752                     u2821:
  5897  001752  EFE0  F00B         	goto	l3083
  5898  001756                     u2820:
  5899  001756  5010               	movf	___fladd@grs^0,w,c
  5900  001758  A4D8               	btfss	status,2,c
  5901  00175A  EFB1  F00B         	goto	u2831
  5902  00175E  EFB3  F00B         	goto	u2830
  5903  001762                     u2831:
  5904  001762  EFE0  F00B         	goto	l3083
  5905  001766                     u2830:
  5906  001766  0E00               	movlw	0
  5907  001768  6E01               	movwf	?___fladd^0,c
  5908  00176A  0E00               	movlw	0
  5909  00176C  6E02               	movwf	(?___fladd+1)^0,c
  5910  00176E  0E00               	movlw	0
  5911  001770  6E03               	movwf	(?___fladd+2)^0,c
  5912  001772  0E00               	movlw	0
  5913  001774  6E04               	movwf	(?___fladd+3)^0,c
  5914  001776  EF7B  F00C         	goto	l780
  5915  00177A                     l3067:
  5916  00177A  90D8               	bcf	status,0,c
  5917  00177C  3601               	rlcf	___fladd@b^0,f,c
  5918  00177E  3602               	rlcf	(___fladd@b+1)^0,f,c
  5919  001780  3603               	rlcf	(___fladd@b+2)^0,f,c
  5920  001782  3604               	rlcf	(___fladd@b+3)^0,f,c
  5921  001784  AE10               	btfss	___fladd@grs^0,7,c
  5922  001786  EFC7  F00B         	goto	u2841
  5923  00178A  EFC9  F00B         	goto	u2840
  5924  00178E                     u2841:
  5925  00178E  EFCA  F00B         	goto	l3073
  5926  001792                     u2840:
  5927  001792  8001               	bsf	___fladd@b^0,0,c
  5928  001794                     l3073:
  5929  001794  A010               	btfss	___fladd@grs^0,0,c
  5930  001796  EFCF  F00B         	goto	u2851
  5931  00179A  EFD1  F00B         	goto	u2850
  5932  00179E                     u2851:
  5933  00179E  EFD5  F00B         	goto	l3077
  5934  0017A2                     u2850:
  5935  0017A2  80D8               	bsf	status,0,c
  5936  0017A4  3610               	rlcf	___fladd@grs^0,f,c
  5937  0017A6  EFD7  F00B         	goto	l3079
  5938  0017AA                     l3077:
  5939  0017AA  90D8               	bcf	status,0,c
  5940  0017AC  3610               	rlcf	___fladd@grs^0,f,c
  5941  0017AE                     l3079:
  5942  0017AE  500F               	movf	___fladd@bexp^0,w,c
  5943  0017B0  B4D8               	btfsc	status,2,c
  5944  0017B2  EFDD  F00B         	goto	u2861
  5945  0017B6  EFDF  F00B         	goto	u2860
  5946  0017BA                     u2861:
  5947  0017BA  EFE0  F00B         	goto	l3083
  5948  0017BE                     u2860:
  5949  0017BE  060F               	decf	___fladd@bexp^0,f,c
  5950  0017C0                     l3083:
  5951  0017C0  AE03               	btfss	(___fladd@b+2)^0,7,c
  5952  0017C2  EFE5  F00B         	goto	u2871
  5953  0017C6  EFE7  F00B         	goto	u2870
  5954  0017CA                     u2871:
  5955  0017CA  EFBD  F00B         	goto	l3067
  5956  0017CE                     u2870:
  5957  0017CE                     l3085:
  5958  0017CE  0E00               	movlw	0
  5959  0017D0  6E0E               	movwf	___fladd@aexp^0,c
  5960  0017D2  AE10               	btfss	___fladd@grs^0,7,c
  5961  0017D4  EFEE  F00B         	goto	u2881
  5962  0017D8  EFF0  F00B         	goto	u2880
  5963  0017DC                     u2881:
  5964  0017DC  EF08  F00C         	goto	l797
  5965  0017E0                     u2880:
  5966  0017E0  C010  F009         	movff	___fladd@grs,??___fladd
  5967  0017E4  0E7F               	movlw	127
  5968  0017E6  1609               	andwf	??___fladd^0,f,c
  5969  0017E8  B4D8               	btfsc	status,2,c
  5970  0017EA  EFF9  F00B         	goto	u2891
  5971  0017EE  EFFB  F00B         	goto	u2890
  5972  0017F2                     u2891:
  5973  0017F2  EFFF  F00B         	goto	l798
  5974  0017F6                     u2890:
  5975  0017F6                     l3091:
  5976  0017F6  0E01               	movlw	1
  5977  0017F8  6E0E               	movwf	___fladd@aexp^0,c
  5978  0017FA  EF08  F00C         	goto	l797
  5979  0017FE                     l798:
  5980  0017FE  A001               	btfss	___fladd@b^0,0,c
  5981  001800  EF04  F00C         	goto	u2901
  5982  001804  EF06  F00C         	goto	u2900
  5983  001808                     u2901:
  5984  001808  EF08  F00C         	goto	l797
  5985  00180C                     u2900:
  5986  00180C  EFFB  F00B         	goto	l3091
  5987  001810                     l797:
  5988  001810  500E               	movf	___fladd@aexp^0,w,c
  5989  001812  B4D8               	btfsc	status,2,c
  5990  001814  EF0E  F00C         	goto	u2911
  5991  001818  EF10  F00C         	goto	u2910
  5992  00181C                     u2911:
  5993  00181C  EF3B  F00C         	goto	l3103
  5994  001820                     u2910:
  5995  001820  0E01               	movlw	1
  5996  001822  2601               	addwf	___fladd@b^0,f,c
  5997  001824  0E00               	movlw	0
  5998  001826  2202               	addwfc	(___fladd@b+1)^0,f,c
  5999  001828  2203               	addwfc	(___fladd@b+2)^0,f,c
  6000  00182A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6001  00182C  A004               	btfss	(___fladd@b+3)^0,0,c
  6002  00182E  EF1B  F00C         	goto	u2921
  6003  001832  EF1D  F00C         	goto	u2920
  6004  001836                     u2921:
  6005  001836  EF3B  F00C         	goto	l3103
  6006  00183A                     u2920:
  6007  00183A  C001  F009         	movff	___fladd@b,??___fladd
  6008  00183E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6009  001842  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6010  001846  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6011  00184A  340C               	rlcf	(??___fladd+3)^0,w,c
  6012  00184C  320C               	rrcf	(??___fladd+3)^0,f,c
  6013  00184E  320B               	rrcf	(??___fladd+2)^0,f,c
  6014  001850  320A               	rrcf	(??___fladd+1)^0,f,c
  6015  001852  3209               	rrcf	??___fladd^0,f,c
  6016  001854  C009  F001         	movff	??___fladd,___fladd@b
  6017  001858  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6018  00185C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6019  001860  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6020  001864  280F               	incf	___fladd@bexp^0,w,c
  6021  001866  B4D8               	btfsc	status,2,c
  6022  001868  EF38  F00C         	goto	u2931
  6023  00186C  EF3A  F00C         	goto	u2930
  6024  001870                     u2931:
  6025  001870  EF3B  F00C         	goto	l3103
  6026  001874                     u2930:
  6027  001874  2A0F               	incf	___fladd@bexp^0,f,c
  6028  001876                     l3103:
  6029  001876  280F               	incf	___fladd@bexp^0,w,c
  6030  001878  B4D8               	btfsc	status,2,c
  6031  00187A  EF41  F00C         	goto	u2941
  6032  00187E  EF43  F00C         	goto	u2940
  6033  001882                     u2941:
  6034  001882  EF4B  F00C         	goto	l3107
  6035  001886                     u2940:
  6036  001886  500F               	movf	___fladd@bexp^0,w,c
  6037  001888  A4D8               	btfss	status,2,c
  6038  00188A  EF49  F00C         	goto	u2951
  6039  00188E  EF4B  F00C         	goto	u2950
  6040  001892                     u2951:
  6041  001892  EF5D  F00C         	goto	l3111
  6042  001896                     u2950:
  6043  001896                     l3107:
  6044  001896  0E00               	movlw	0
  6045  001898  6E01               	movwf	___fladd@b^0,c
  6046  00189A  0E00               	movlw	0
  6047  00189C  6E02               	movwf	(___fladd@b+1)^0,c
  6048  00189E  0E00               	movlw	0
  6049  0018A0  6E03               	movwf	(___fladd@b+2)^0,c
  6050  0018A2  0E00               	movlw	0
  6051  0018A4  6E04               	movwf	(___fladd@b+3)^0,c
  6052  0018A6  500F               	movf	___fladd@bexp^0,w,c
  6053  0018A8  A4D8               	btfss	status,2,c
  6054  0018AA  EF59  F00C         	goto	u2961
  6055  0018AE  EF5B  F00C         	goto	u2960
  6056  0018B2                     u2961:
  6057  0018B2  EF5D  F00C         	goto	l3111
  6058  0018B6                     u2960:
  6059  0018B6  0E00               	movlw	0
  6060  0018B8  6E0D               	movwf	___fladd@signs^0,c
  6061  0018BA                     l3111:
  6062  0018BA  A00F               	btfss	___fladd@bexp^0,0,c
  6063  0018BC  EF62  F00C         	goto	u2971
  6064  0018C0  EF64  F00C         	goto	u2970
  6065  0018C4                     u2971:
  6066  0018C4  EF67  F00C         	goto	l3115
  6067  0018C8                     u2970:
  6068  0018C8  8E03               	bsf	(___fladd@b+2)^0,7,c
  6069  0018CA  EF68  F00C         	goto	l3117
  6070  0018CE                     l3115:
  6071  0018CE  9E03               	bcf	(___fladd@b+2)^0,7,c
  6072  0018D0                     l3117:
  6073  0018D0  90D8               	bcf	status,0,c
  6074  0018D2  300F               	rrcf	___fladd@bexp^0,w,c
  6075  0018D4  6E04               	movwf	(___fladd@b+3)^0,c
  6076  0018D6  AE0D               	btfss	___fladd@signs^0,7,c
  6077  0018D8  EF70  F00C         	goto	u2981
  6078  0018DC  EF72  F00C         	goto	u2980
  6079  0018E0                     u2981:
  6080  0018E0  EF73  F00C         	goto	l3123
  6081  0018E4                     u2980:
  6082  0018E4  8E04               	bsf	(___fladd@b+3)^0,7,c
  6083  0018E6                     l3123:
  6084  0018E6  C001  F001         	movff	___fladd@b,?___fladd
  6085  0018EA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6086  0018EE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6087  0018F2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6088  0018F6                     l780:
  6089  0018F6  0012               	return		;funcret
  6090  0018F8                     __end_of___fladd:
  6091                           	callstack 0
  6092                           
  6093 ;; *************** function ___flneg *****************
  6094 ;; Defined at:
  6095 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;  f1              4    0[COMRAM] unsigned char 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  4    0[COMRAM] unsigned char 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6109 ;;      Params:         4       0       0       0       0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6112 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6113 ;;Total ram usage:        4 bytes
  6114 ;; Hardware stack levels used: 1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_efgtoa
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text20
  6123  003DF2                     __ptext20:
  6124                           	callstack 0
  6125  003DF2                     ___flneg:
  6126                           	callstack 25
  6127  003DF2  5001               	movf	___flneg@f1^0,w,c
  6128  003DF4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6129  003DF6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6130  003DF8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6131  003DFA  B4D8               	btfsc	status,2,c
  6132  003DFC  EF02  F01F         	goto	u3651
  6133  003E00  EF04  F01F         	goto	u3650
  6134  003E04                     u3651:
  6135  003E04  EF0C  F01F         	goto	l3551
  6136  003E08                     u3650:
  6137  003E08  0E00               	movlw	0
  6138  003E0A  1A01               	xorwf	___flneg@f1^0,f,c
  6139  003E0C  0E00               	movlw	0
  6140  003E0E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6141  003E10  0E00               	movlw	0
  6142  003E12  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6143  003E14  0E80               	movlw	128
  6144  003E16  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6145  003E18                     l3551:
  6146  003E18  C001  F001         	movff	___flneg@f1,?___flneg
  6147  003E1C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6148  003E20  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6149  003E24  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6150  003E28  0012               	return		;funcret
  6151  003E2A                     __end_of___flneg:
  6152                           	callstack 0
  6153                           
  6154 ;; *************** function ___flmul *****************
  6155 ;; Defined at:
  6156 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;  b               4    0[COMRAM] unsigned char 
  6159 ;;  a               4    4[COMRAM] unsigned char 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;  prod            4   19[COMRAM] struct .
  6162 ;;  grs             4   13[COMRAM] unsigned long 
  6163 ;;  temp            2   23[COMRAM] struct .
  6164 ;;  bexp            1   18[COMRAM] unsigned char 
  6165 ;;  aexp            1   17[COMRAM] unsigned char 
  6166 ;;  sign            1   12[COMRAM] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  4    0[COMRAM] unsigned char 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0, prodl, prodh
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6176 ;;      Params:         8       0       0       0       0       0       0       0       0
  6177 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6178 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6179 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6180 ;;Total ram usage:       25 bytes
  6181 ;; Hardware stack levels used: 1
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_Mostrar_Temperatura
  6186 ;;		_efgtoa
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text21
  6191  001D2A                     __ptext21:
  6192                           	callstack 0
  6193  001D2A                     ___flmul:
  6194                           	callstack 25
  6195  001D2A  5004               	movf	(___flmul@b+3)^0,w,c
  6196  001D2C  0B80               	andlw	128
  6197  001D2E  6E0D               	movwf	___flmul@sign^0,c
  6198  001D30  5004               	movf	(___flmul@b+3)^0,w,c
  6199  001D32  2404               	addwf	(___flmul@b+3)^0,w,c
  6200  001D34  6E13               	movwf	___flmul@bexp^0,c
  6201  001D36  AE03               	btfss	(___flmul@b+2)^0,7,c
  6202  001D38  EFA0  F00E         	goto	u3261
  6203  001D3C  EFA2  F00E         	goto	u3260
  6204  001D40                     u3261:
  6205  001D40  EFA3  F00E         	goto	l3299
  6206  001D44                     u3260:
  6207  001D44  8013               	bsf	___flmul@bexp^0,0,c
  6208  001D46                     l3299:
  6209  001D46  5013               	movf	___flmul@bexp^0,w,c
  6210  001D48  B4D8               	btfsc	status,2,c
  6211  001D4A  EFA9  F00E         	goto	u3271
  6212  001D4E  EFAB  F00E         	goto	u3270
  6213  001D52                     u3271:
  6214  001D52  EFBE  F00E         	goto	l3307
  6215  001D56                     u3270:
  6216  001D56  2813               	incf	___flmul@bexp^0,w,c
  6217  001D58  A4D8               	btfss	status,2,c
  6218  001D5A  EFB1  F00E         	goto	u3281
  6219  001D5E  EFB3  F00E         	goto	u3280
  6220  001D62                     u3281:
  6221  001D62  EFBB  F00E         	goto	l3305
  6222  001D66                     u3280:
  6223  001D66  0E00               	movlw	0
  6224  001D68  6E01               	movwf	___flmul@b^0,c
  6225  001D6A  0E00               	movlw	0
  6226  001D6C  6E02               	movwf	(___flmul@b+1)^0,c
  6227  001D6E  0E00               	movlw	0
  6228  001D70  6E03               	movwf	(___flmul@b+2)^0,c
  6229  001D72  0E00               	movlw	0
  6230  001D74  6E04               	movwf	(___flmul@b+3)^0,c
  6231  001D76                     l3305:
  6232  001D76  8E03               	bsf	(___flmul@b+2)^0,7,c
  6233  001D78  EFC6  F00E         	goto	l3309
  6234  001D7C                     l3307:
  6235  001D7C  0E00               	movlw	0
  6236  001D7E  6E01               	movwf	___flmul@b^0,c
  6237  001D80  0E00               	movlw	0
  6238  001D82  6E02               	movwf	(___flmul@b+1)^0,c
  6239  001D84  0E00               	movlw	0
  6240  001D86  6E03               	movwf	(___flmul@b+2)^0,c
  6241  001D88  0E00               	movlw	0
  6242  001D8A  6E04               	movwf	(___flmul@b+3)^0,c
  6243  001D8C                     l3309:
  6244  001D8C  5008               	movf	(___flmul@a+3)^0,w,c
  6245  001D8E  0B80               	andlw	128
  6246  001D90  1A0D               	xorwf	___flmul@sign^0,f,c
  6247  001D92  5008               	movf	(___flmul@a+3)^0,w,c
  6248  001D94  2408               	addwf	(___flmul@a+3)^0,w,c
  6249  001D96  6E12               	movwf	___flmul@aexp^0,c
  6250  001D98  AE07               	btfss	(___flmul@a+2)^0,7,c
  6251  001D9A  EFD1  F00E         	goto	u3291
  6252  001D9E  EFD3  F00E         	goto	u3290
  6253  001DA2                     u3291:
  6254  001DA2  EFD4  F00E         	goto	l3317
  6255  001DA6                     u3290:
  6256  001DA6  8012               	bsf	___flmul@aexp^0,0,c
  6257  001DA8                     l3317:
  6258  001DA8  5012               	movf	___flmul@aexp^0,w,c
  6259  001DAA  B4D8               	btfsc	status,2,c
  6260  001DAC  EFDA  F00E         	goto	u3301
  6261  001DB0  EFDC  F00E         	goto	u3300
  6262  001DB4                     u3301:
  6263  001DB4  EFEF  F00E         	goto	l3325
  6264  001DB8                     u3300:
  6265  001DB8  2812               	incf	___flmul@aexp^0,w,c
  6266  001DBA  A4D8               	btfss	status,2,c
  6267  001DBC  EFE2  F00E         	goto	u3311
  6268  001DC0  EFE4  F00E         	goto	u3310
  6269  001DC4                     u3311:
  6270  001DC4  EFEC  F00E         	goto	l3323
  6271  001DC8                     u3310:
  6272  001DC8  0E00               	movlw	0
  6273  001DCA  6E05               	movwf	___flmul@a^0,c
  6274  001DCC  0E00               	movlw	0
  6275  001DCE  6E06               	movwf	(___flmul@a+1)^0,c
  6276  001DD0  0E00               	movlw	0
  6277  001DD2  6E07               	movwf	(___flmul@a+2)^0,c
  6278  001DD4  0E00               	movlw	0
  6279  001DD6  6E08               	movwf	(___flmul@a+3)^0,c
  6280  001DD8                     l3323:
  6281  001DD8  8E07               	bsf	(___flmul@a+2)^0,7,c
  6282  001DDA  EFF7  F00E         	goto	l857
  6283  001DDE                     l3325:
  6284  001DDE  0E00               	movlw	0
  6285  001DE0  6E05               	movwf	___flmul@a^0,c
  6286  001DE2  0E00               	movlw	0
  6287  001DE4  6E06               	movwf	(___flmul@a+1)^0,c
  6288  001DE6  0E00               	movlw	0
  6289  001DE8  6E07               	movwf	(___flmul@a+2)^0,c
  6290  001DEA  0E00               	movlw	0
  6291  001DEC  6E08               	movwf	(___flmul@a+3)^0,c
  6292  001DEE                     l857:
  6293  001DEE  5012               	movf	___flmul@aexp^0,w,c
  6294  001DF0  B4D8               	btfsc	status,2,c
  6295  001DF2  EFFD  F00E         	goto	u3321
  6296  001DF6  EFFF  F00E         	goto	u3320
  6297  001DFA                     u3321:
  6298  001DFA  EF07  F00F         	goto	l3329
  6299  001DFE                     u3320:
  6300  001DFE  5013               	movf	___flmul@bexp^0,w,c
  6301  001E00  A4D8               	btfss	status,2,c
  6302  001E02  EF05  F00F         	goto	u3331
  6303  001E06  EF07  F00F         	goto	u3330
  6304  001E0A                     u3331:
  6305  001E0A  EF11  F00F         	goto	l3333
  6306  001E0E                     u3330:
  6307  001E0E                     l3329:
  6308  001E0E  0E00               	movlw	0
  6309  001E10  6E01               	movwf	?___flmul^0,c
  6310  001E12  0E00               	movlw	0
  6311  001E14  6E02               	movwf	(?___flmul+1)^0,c
  6312  001E16  0E00               	movlw	0
  6313  001E18  6E03               	movwf	(?___flmul+2)^0,c
  6314  001E1A  0E00               	movlw	0
  6315  001E1C  6E04               	movwf	(?___flmul+3)^0,c
  6316  001E1E  EFA9  F010         	goto	l861
  6317  001E22                     l3333:
  6318  001E22  5007               	movf	(___flmul@a+2)^0,w,c
  6319  001E24  0201               	mulwf	___flmul@b^0,c
  6320  001E26  CFF3 F018          	movff	prodl,___flmul@temp
  6321  001E2A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6322  001E2E  5018               	movf	___flmul@temp^0,w,c
  6323  001E30  6E0E               	movwf	___flmul@grs^0,c
  6324  001E32  6A0F               	clrf	(___flmul@grs+1)^0,c
  6325  001E34  6A10               	clrf	(___flmul@grs+2)^0,c
  6326  001E36  6A11               	clrf	(___flmul@grs+3)^0,c
  6327  001E38  5019               	movf	(___flmul@temp+1)^0,w,c
  6328  001E3A  6E14               	movwf	___flmul@prod^0,c
  6329  001E3C  6A15               	clrf	(___flmul@prod+1)^0,c
  6330  001E3E  6A16               	clrf	(___flmul@prod+2)^0,c
  6331  001E40  6A17               	clrf	(___flmul@prod+3)^0,c
  6332  001E42  5006               	movf	(___flmul@a+1)^0,w,c
  6333  001E44  0202               	mulwf	(___flmul@b+1)^0,c
  6334  001E46  CFF3 F018          	movff	prodl,___flmul@temp
  6335  001E4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6336  001E4E  5018               	movf	___flmul@temp^0,w,c
  6337  001E50  260E               	addwf	___flmul@grs^0,f,c
  6338  001E52  0E00               	movlw	0
  6339  001E54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6340  001E56  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6341  001E58  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6342  001E5A  5019               	movf	(___flmul@temp+1)^0,w,c
  6343  001E5C  2614               	addwf	___flmul@prod^0,f,c
  6344  001E5E  0E00               	movlw	0
  6345  001E60  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6346  001E62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6347  001E64  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6348  001E66  5005               	movf	___flmul@a^0,w,c
  6349  001E68  0203               	mulwf	(___flmul@b+2)^0,c
  6350  001E6A  CFF3 F018          	movff	prodl,___flmul@temp
  6351  001E6E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6352  001E72  5018               	movf	___flmul@temp^0,w,c
  6353  001E74  260E               	addwf	___flmul@grs^0,f,c
  6354  001E76  0E00               	movlw	0
  6355  001E78  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6356  001E7A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6357  001E7C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6358  001E7E  5019               	movf	(___flmul@temp+1)^0,w,c
  6359  001E80  2614               	addwf	___flmul@prod^0,f,c
  6360  001E82  0E00               	movlw	0
  6361  001E84  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6362  001E86  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6363  001E88  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6364  001E8A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6365  001E8E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6366  001E92  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6367  001E96  6A0E               	clrf	___flmul@grs^0,c
  6368  001E98  5005               	movf	___flmul@a^0,w,c
  6369  001E9A  0202               	mulwf	(___flmul@b+1)^0,c
  6370  001E9C  CFF3 F018          	movff	prodl,___flmul@temp
  6371  001EA0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6372  001EA4  5018               	movf	___flmul@temp^0,w,c
  6373  001EA6  260E               	addwf	___flmul@grs^0,f,c
  6374  001EA8  5019               	movf	(___flmul@temp+1)^0,w,c
  6375  001EAA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6376  001EAC  0E00               	movlw	0
  6377  001EAE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6378  001EB0  0E00               	movlw	0
  6379  001EB2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6380  001EB4  5006               	movf	(___flmul@a+1)^0,w,c
  6381  001EB6  0201               	mulwf	___flmul@b^0,c
  6382  001EB8  CFF3 F018          	movff	prodl,___flmul@temp
  6383  001EBC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6384  001EC0  5018               	movf	___flmul@temp^0,w,c
  6385  001EC2  260E               	addwf	___flmul@grs^0,f,c
  6386  001EC4  5019               	movf	(___flmul@temp+1)^0,w,c
  6387  001EC6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6388  001EC8  0E00               	movlw	0
  6389  001ECA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6390  001ECC  0E00               	movlw	0
  6391  001ECE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6392  001ED0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6393  001ED4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6394  001ED8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6395  001EDC  6A0E               	clrf	___flmul@grs^0,c
  6396  001EDE  5005               	movf	___flmul@a^0,w,c
  6397  001EE0  0201               	mulwf	___flmul@b^0,c
  6398  001EE2  CFF3 F018          	movff	prodl,___flmul@temp
  6399  001EE6  CFF4 F019          	movff	prodh,___flmul@temp+1
  6400  001EEA  5018               	movf	___flmul@temp^0,w,c
  6401  001EEC  260E               	addwf	___flmul@grs^0,f,c
  6402  001EEE  5019               	movf	(___flmul@temp+1)^0,w,c
  6403  001EF0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6404  001EF2  0E00               	movlw	0
  6405  001EF4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6406  001EF6  0E00               	movlw	0
  6407  001EF8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6408  001EFA  5007               	movf	(___flmul@a+2)^0,w,c
  6409  001EFC  0202               	mulwf	(___flmul@b+1)^0,c
  6410  001EFE  CFF3 F018          	movff	prodl,___flmul@temp
  6411  001F02  CFF4 F019          	movff	prodh,___flmul@temp+1
  6412  001F06  5018               	movf	___flmul@temp^0,w,c
  6413  001F08  2614               	addwf	___flmul@prod^0,f,c
  6414  001F0A  5019               	movf	(___flmul@temp+1)^0,w,c
  6415  001F0C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6416  001F0E  0E00               	movlw	0
  6417  001F10  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6418  001F12  0E00               	movlw	0
  6419  001F14  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6420  001F16  5006               	movf	(___flmul@a+1)^0,w,c
  6421  001F18  0203               	mulwf	(___flmul@b+2)^0,c
  6422  001F1A  CFF3 F018          	movff	prodl,___flmul@temp
  6423  001F1E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6424  001F22  5018               	movf	___flmul@temp^0,w,c
  6425  001F24  2614               	addwf	___flmul@prod^0,f,c
  6426  001F26  5019               	movf	(___flmul@temp+1)^0,w,c
  6427  001F28  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6428  001F2A  0E00               	movlw	0
  6429  001F2C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6430  001F2E  0E00               	movlw	0
  6431  001F30  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6432  001F32  5007               	movf	(___flmul@a+2)^0,w,c
  6433  001F34  0203               	mulwf	(___flmul@b+2)^0,c
  6434  001F36  CFF3 F018          	movff	prodl,___flmul@temp
  6435  001F3A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6436  001F3E  5018               	movf	___flmul@temp^0,w,c
  6437  001F40  6E09               	movwf	??___flmul^0,c
  6438  001F42  5019               	movf	(___flmul@temp+1)^0,w,c
  6439  001F44  6E0A               	movwf	(??___flmul+1)^0,c
  6440  001F46  6A0B               	clrf	(??___flmul+2)^0,c
  6441  001F48  6A0C               	clrf	(??___flmul+3)^0,c
  6442  001F4A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6443  001F4E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6444  001F52  C009  F00A         	movff	??___flmul,??___flmul+1
  6445  001F56  6A09               	clrf	??___flmul^0,c
  6446  001F58  5009               	movf	??___flmul^0,w,c
  6447  001F5A  2614               	addwf	___flmul@prod^0,f,c
  6448  001F5C  500A               	movf	(??___flmul+1)^0,w,c
  6449  001F5E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6450  001F60  500B               	movf	(??___flmul+2)^0,w,c
  6451  001F62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6452  001F64  500C               	movf	(??___flmul+3)^0,w,c
  6453  001F66  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6454  001F68  C00E  F009         	movff	___flmul@grs,??___flmul
  6455  001F6C  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6456  001F70  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6457  001F74  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6458  001F78  0E19               	movlw	25
  6459  001F7A  EFC4  F00F         	goto	u3340
  6460  001F7E                     u3345:
  6461  001F7E  90D8               	bcf	status,0,c
  6462  001F80  320C               	rrcf	(??___flmul+3)^0,f,c
  6463  001F82  320B               	rrcf	(??___flmul+2)^0,f,c
  6464  001F84  320A               	rrcf	(??___flmul+1)^0,f,c
  6465  001F86  3209               	rrcf	??___flmul^0,f,c
  6466  001F88                     u3340:
  6467  001F88  2EE8               	decfsz	wreg,f,c
  6468  001F8A  EFBF  F00F         	goto	u3345
  6469  001F8E  5009               	movf	??___flmul^0,w,c
  6470  001F90  2614               	addwf	___flmul@prod^0,f,c
  6471  001F92  500A               	movf	(??___flmul+1)^0,w,c
  6472  001F94  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6473  001F96  500B               	movf	(??___flmul+2)^0,w,c
  6474  001F98  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6475  001F9A  500C               	movf	(??___flmul+3)^0,w,c
  6476  001F9C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6477  001F9E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6478  001FA2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6479  001FA6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6480  001FAA  6A0E               	clrf	___flmul@grs^0,c
  6481  001FAC  5012               	movf	___flmul@aexp^0,w,c
  6482  001FAE  C013  F009         	movff	___flmul@bexp,??___flmul
  6483  001FB2  6A0A               	clrf	(??___flmul+1)^0,c
  6484  001FB4  2609               	addwf	??___flmul^0,f,c
  6485  001FB6  0E00               	movlw	0
  6486  001FB8  220A               	addwfc	(??___flmul+1)^0,f,c
  6487  001FBA  0E82               	movlw	130
  6488  001FBC  2409               	addwf	??___flmul^0,w,c
  6489  001FBE  6E18               	movwf	___flmul@temp^0,c
  6490  001FC0  0EFF               	movlw	255
  6491  001FC2  200A               	addwfc	(??___flmul+1)^0,w,c
  6492  001FC4  6E19               	movwf	(___flmul@temp+1)^0,c
  6493  001FC6  EFFA  F00F         	goto	l3381
  6494  001FCA                     l3375:
  6495  001FCA  90D8               	bcf	status,0,c
  6496  001FCC  3614               	rlcf	___flmul@prod^0,f,c
  6497  001FCE  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6498  001FD0  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6499  001FD2  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6500  001FD4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6501  001FD6  EFEF  F00F         	goto	u3351
  6502  001FDA  EFF1  F00F         	goto	u3350
  6503  001FDE                     u3351:
  6504  001FDE  EFF2  F00F         	goto	l864
  6505  001FE2                     u3350:
  6506  001FE2  8014               	bsf	___flmul@prod^0,0,c
  6507  001FE4                     l864:
  6508  001FE4  90D8               	bcf	status,0,c
  6509  001FE6  360E               	rlcf	___flmul@grs^0,f,c
  6510  001FE8  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6511  001FEA  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6512  001FEC  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6513  001FEE  0618               	decf	___flmul@temp^0,f,c
  6514  001FF0  A0D8               	btfss	status,0,c
  6515  001FF2  0619               	decf	(___flmul@temp+1)^0,f,c
  6516  001FF4                     l3381:
  6517  001FF4  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6518  001FF6  EFFF  F00F         	goto	u3361
  6519  001FFA  EF01  F010         	goto	u3360
  6520  001FFE                     u3361:
  6521  001FFE  EFE5  F00F         	goto	l3375
  6522  002002                     u3360:
  6523  002002  0E00               	movlw	0
  6524  002004  6E12               	movwf	___flmul@aexp^0,c
  6525  002006  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6526  002008  EF08  F010         	goto	u3371
  6527  00200C  EF0A  F010         	goto	u3370
  6528  002010                     u3371:
  6529  002010  EF2E  F010         	goto	l866
  6530  002014                     u3370:
  6531  002014  0EFF               	movlw	255
  6532  002016  140E               	andwf	___flmul@grs^0,w,c
  6533  002018  6E09               	movwf	??___flmul^0,c
  6534  00201A  0EFF               	movlw	255
  6535  00201C  140F               	andwf	(___flmul@grs+1)^0,w,c
  6536  00201E  6E0A               	movwf	(??___flmul+1)^0,c
  6537  002020  0EFF               	movlw	255
  6538  002022  1410               	andwf	(___flmul@grs+2)^0,w,c
  6539  002024  6E0B               	movwf	(??___flmul+2)^0,c
  6540  002026  0E7F               	movlw	127
  6541  002028  1411               	andwf	(___flmul@grs+3)^0,w,c
  6542  00202A  6E0C               	movwf	(??___flmul+3)^0,c
  6543  00202C  5009               	movf	??___flmul^0,w,c
  6544  00202E  100A               	iorwf	(??___flmul+1)^0,w,c
  6545  002030  100B               	iorwf	(??___flmul+2)^0,w,c
  6546  002032  100C               	iorwf	(??___flmul+3)^0,w,c
  6547  002034  B4D8               	btfsc	status,2,c
  6548  002036  EF1F  F010         	goto	u3381
  6549  00203A  EF21  F010         	goto	u3380
  6550  00203E                     u3381:
  6551  00203E  EF25  F010         	goto	l867
  6552  002042                     u3380:
  6553  002042                     l3389:
  6554  002042  0E01               	movlw	1
  6555  002044  6E12               	movwf	___flmul@aexp^0,c
  6556  002046  EF2E  F010         	goto	l866
  6557  00204A                     l867:
  6558  00204A  A014               	btfss	___flmul@prod^0,0,c
  6559  00204C  EF2A  F010         	goto	u3391
  6560  002050  EF2C  F010         	goto	u3390
  6561  002054                     u3391:
  6562  002054  EF2E  F010         	goto	l866
  6563  002058                     u3390:
  6564  002058  EF21  F010         	goto	l3389
  6565  00205C                     l866:
  6566  00205C  5012               	movf	___flmul@aexp^0,w,c
  6567  00205E  B4D8               	btfsc	status,2,c
  6568  002060  EF34  F010         	goto	u3401
  6569  002064  EF36  F010         	goto	u3400
  6570  002068                     u3401:
  6571  002068  EF5A  F010         	goto	l3401
  6572  00206C                     u3400:
  6573  00206C  0E01               	movlw	1
  6574  00206E  2614               	addwf	___flmul@prod^0,f,c
  6575  002070  0E00               	movlw	0
  6576  002072  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6577  002074  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6578  002076  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6579  002078  A017               	btfss	(___flmul@prod+3)^0,0,c
  6580  00207A  EF41  F010         	goto	u3411
  6581  00207E  EF43  F010         	goto	u3410
  6582  002082                     u3411:
  6583  002082  EF5A  F010         	goto	l3401
  6584  002086                     u3410:
  6585  002086  C014  F009         	movff	___flmul@prod,??___flmul
  6586  00208A  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6587  00208E  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6588  002092  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6589  002096  340C               	rlcf	(??___flmul+3)^0,w,c
  6590  002098  320C               	rrcf	(??___flmul+3)^0,f,c
  6591  00209A  320B               	rrcf	(??___flmul+2)^0,f,c
  6592  00209C  320A               	rrcf	(??___flmul+1)^0,f,c
  6593  00209E  3209               	rrcf	??___flmul^0,f,c
  6594  0020A0  C009  F014         	movff	??___flmul,___flmul@prod
  6595  0020A4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6596  0020A8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6597  0020AC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6598  0020B0  4A18               	infsnz	___flmul@temp^0,f,c
  6599  0020B2  2A19               	incf	(___flmul@temp+1)^0,f,c
  6600  0020B4                     l3401:
  6601  0020B4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6602  0020B6  EF65  F010         	goto	u3421
  6603  0020BA  5019               	movf	(___flmul@temp+1)^0,w,c
  6604  0020BC  E108               	bnz	u3420
  6605  0020BE  2818               	incf	___flmul@temp^0,w,c
  6606  0020C0  A0D8               	btfss	status,0,c
  6607  0020C2  EF65  F010         	goto	u3421
  6608  0020C6  EF67  F010         	goto	u3420
  6609  0020CA                     u3421:
  6610  0020CA  EF71  F010         	goto	l3405
  6611  0020CE                     u3420:
  6612  0020CE  0E00               	movlw	0
  6613  0020D0  6E14               	movwf	___flmul@prod^0,c
  6614  0020D2  0E00               	movlw	0
  6615  0020D4  6E15               	movwf	(___flmul@prod+1)^0,c
  6616  0020D6  0E80               	movlw	128
  6617  0020D8  6E16               	movwf	(___flmul@prod+2)^0,c
  6618  0020DA  0E7F               	movlw	127
  6619  0020DC  6E17               	movwf	(___flmul@prod+3)^0,c
  6620  0020DE  EF9F  F010         	goto	l3417
  6621  0020E2                     l3405:
  6622  0020E2  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6623  0020E4  EF7E  F010         	goto	u3430
  6624  0020E8  5019               	movf	(___flmul@temp+1)^0,w,c
  6625  0020EA  E106               	bnz	u3431
  6626  0020EC  0418               	decf	___flmul@temp^0,w,c
  6627  0020EE  B0D8               	btfsc	status,0,c
  6628  0020F0  EF7C  F010         	goto	u3431
  6629  0020F4  EF7E  F010         	goto	u3430
  6630  0020F8                     u3431:
  6631  0020F8  EF8A  F010         	goto	l874
  6632  0020FC                     u3430:
  6633  0020FC  0E00               	movlw	0
  6634  0020FE  6E14               	movwf	___flmul@prod^0,c
  6635  002100  0E00               	movlw	0
  6636  002102  6E15               	movwf	(___flmul@prod+1)^0,c
  6637  002104  0E00               	movlw	0
  6638  002106  6E16               	movwf	(___flmul@prod+2)^0,c
  6639  002108  0E00               	movlw	0
  6640  00210A  6E17               	movwf	(___flmul@prod+3)^0,c
  6641  00210C  0E00               	movlw	0
  6642  00210E  6E0D               	movwf	___flmul@sign^0,c
  6643  002110  EF9F  F010         	goto	l3417
  6644  002114                     l874:
  6645  002114  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6646  002118  0EFF               	movlw	255
  6647  00211A  1614               	andwf	___flmul@prod^0,f,c
  6648  00211C  0EFF               	movlw	255
  6649  00211E  1615               	andwf	(___flmul@prod+1)^0,f,c
  6650  002120  0E7F               	movlw	127
  6651  002122  1616               	andwf	(___flmul@prod+2)^0,f,c
  6652  002124  0E00               	movlw	0
  6653  002126  1617               	andwf	(___flmul@prod+3)^0,f,c
  6654  002128  A013               	btfss	___flmul@bexp^0,0,c
  6655  00212A  EF99  F010         	goto	u3441
  6656  00212E  EF9B  F010         	goto	u3440
  6657  002132                     u3441:
  6658  002132  EF9C  F010         	goto	l3415
  6659  002136                     u3440:
  6660  002136  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6661  002138                     l3415:
  6662  002138  90D8               	bcf	status,0,c
  6663  00213A  3013               	rrcf	___flmul@bexp^0,w,c
  6664  00213C  6E17               	movwf	(___flmul@prod+3)^0,c
  6665  00213E                     l3417:
  6666  00213E  500D               	movf	___flmul@sign^0,w,c
  6667  002140  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6668  002142  C014  F001         	movff	___flmul@prod,?___flmul
  6669  002146  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6670  00214A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6671  00214E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6672  002152                     l861:
  6673  002152  0012               	return		;funcret
  6674  002154                     __end_of___flmul:
  6675                           	callstack 0
  6676                           
  6677 ;; *************** function ___flge *****************
  6678 ;; Defined at:
  6679 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  ff1             4   25[COMRAM] unsigned char 
  6682 ;;  ff2             4   29[COMRAM] unsigned char 
  6683 ;; Auto vars:     Size  Location     Type
  6684 ;;		None
  6685 ;; Return value:  Size  Location     Type
  6686 ;;		None               void
  6687 ;; Registers used:
  6688 ;;		wreg, status,2, status,0
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6694 ;;      Params:         8       0       0       0       0       0       0       0       0
  6695 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6696 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6697 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:       12 bytes
  6699 ;; Hardware stack levels used: 1
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_Mostrar_Temperatura
  6704 ;;		_efgtoa
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text22
  6709  002EB4                     __ptext22:
  6710                           	callstack 0
  6711  002EB4                     ___flge:
  6712                           	callstack 25
  6713  002EB4  0E00               	movlw	0
  6714  002EB6  141A               	andwf	___flge@ff1^0,w,c
  6715  002EB8  6E22               	movwf	??___flge^0,c
  6716  002EBA  0E00               	movlw	0
  6717  002EBC  141B               	andwf	(___flge@ff1+1)^0,w,c
  6718  002EBE  6E23               	movwf	(??___flge+1)^0,c
  6719  002EC0  0E80               	movlw	128
  6720  002EC2  141C               	andwf	(___flge@ff1+2)^0,w,c
  6721  002EC4  6E24               	movwf	(??___flge+2)^0,c
  6722  002EC6  0E7F               	movlw	127
  6723  002EC8  141D               	andwf	(___flge@ff1+3)^0,w,c
  6724  002ECA  6E25               	movwf	(??___flge+3)^0,c
  6725  002ECC  5022               	movf	??___flge^0,w,c
  6726  002ECE  1023               	iorwf	(??___flge+1)^0,w,c
  6727  002ED0  1024               	iorwf	(??___flge+2)^0,w,c
  6728  002ED2  1025               	iorwf	(??___flge+3)^0,w,c
  6729  002ED4  A4D8               	btfss	status,2,c
  6730  002ED6  EF6F  F017         	goto	u3601
  6731  002EDA  EF71  F017         	goto	u3600
  6732  002EDE                     u3601:
  6733  002EDE  EF79  F017         	goto	l3529
  6734  002EE2                     u3600:
  6735  002EE2  0E00               	movlw	0
  6736  002EE4  6E1A               	movwf	___flge@ff1^0,c
  6737  002EE6  0E00               	movlw	0
  6738  002EE8  6E1B               	movwf	(___flge@ff1+1)^0,c
  6739  002EEA  0E00               	movlw	0
  6740  002EEC  6E1C               	movwf	(___flge@ff1+2)^0,c
  6741  002EEE  0E00               	movlw	0
  6742  002EF0  6E1D               	movwf	(___flge@ff1+3)^0,c
  6743  002EF2                     l3529:
  6744  002EF2  0E00               	movlw	0
  6745  002EF4  141E               	andwf	___flge@ff2^0,w,c
  6746  002EF6  6E22               	movwf	??___flge^0,c
  6747  002EF8  0E00               	movlw	0
  6748  002EFA  141F               	andwf	(___flge@ff2+1)^0,w,c
  6749  002EFC  6E23               	movwf	(??___flge+1)^0,c
  6750  002EFE  0E80               	movlw	128
  6751  002F00  1420               	andwf	(___flge@ff2+2)^0,w,c
  6752  002F02  6E24               	movwf	(??___flge+2)^0,c
  6753  002F04  0E7F               	movlw	127
  6754  002F06  1421               	andwf	(___flge@ff2+3)^0,w,c
  6755  002F08  6E25               	movwf	(??___flge+3)^0,c
  6756  002F0A  5022               	movf	??___flge^0,w,c
  6757  002F0C  1023               	iorwf	(??___flge+1)^0,w,c
  6758  002F0E  1024               	iorwf	(??___flge+2)^0,w,c
  6759  002F10  1025               	iorwf	(??___flge+3)^0,w,c
  6760  002F12  A4D8               	btfss	status,2,c
  6761  002F14  EF8E  F017         	goto	u3611
  6762  002F18  EF90  F017         	goto	u3610
  6763  002F1C                     u3611:
  6764  002F1C  EF98  F017         	goto	l3533
  6765  002F20                     u3610:
  6766  002F20  0E00               	movlw	0
  6767  002F22  6E1E               	movwf	___flge@ff2^0,c
  6768  002F24  0E00               	movlw	0
  6769  002F26  6E1F               	movwf	(___flge@ff2+1)^0,c
  6770  002F28  0E00               	movlw	0
  6771  002F2A  6E20               	movwf	(___flge@ff2+2)^0,c
  6772  002F2C  0E00               	movlw	0
  6773  002F2E  6E21               	movwf	(___flge@ff2+3)^0,c
  6774  002F30                     l3533:
  6775  002F30  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6776  002F32  EF9D  F017         	goto	u3621
  6777  002F36  EF9F  F017         	goto	u3620
  6778  002F3A                     u3621:
  6779  002F3A  EFA8  F017         	goto	l3537
  6780  002F3E                     u3620:
  6781  002F3E  6C1A               	negf	___flge@ff1^0,c
  6782  002F40  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6783  002F42  B0D8               	btfsc	status,0,c
  6784  002F44  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6785  002F46  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6786  002F48  B0D8               	btfsc	status,0,c
  6787  002F4A  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6788  002F4C  0E80               	movlw	128
  6789  002F4E  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6790  002F50                     l3537:
  6791  002F50  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6792  002F52  EFAD  F017         	goto	u3631
  6793  002F56  EFAF  F017         	goto	u3630
  6794  002F5A                     u3631:
  6795  002F5A  EFB8  F017         	goto	l508
  6796  002F5E                     u3630:
  6797  002F5E  6C1E               	negf	___flge@ff2^0,c
  6798  002F60  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6799  002F62  B0D8               	btfsc	status,0,c
  6800  002F64  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6801  002F66  1E20               	comf	(___flge@ff2+2)^0,f,c
  6802  002F68  B0D8               	btfsc	status,0,c
  6803  002F6A  2A20               	incf	(___flge@ff2+2)^0,f,c
  6804  002F6C  0E80               	movlw	128
  6805  002F6E  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6806  002F70                     l508:
  6807  002F70  0E00               	movlw	0
  6808  002F72  1A1A               	xorwf	___flge@ff1^0,f,c
  6809  002F74  0E00               	movlw	0
  6810  002F76  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6811  002F78  0E00               	movlw	0
  6812  002F7A  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6813  002F7C  0E80               	movlw	128
  6814  002F7E  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6815  002F80  0E00               	movlw	0
  6816  002F82  1A1E               	xorwf	___flge@ff2^0,f,c
  6817  002F84  0E00               	movlw	0
  6818  002F86  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6819  002F88  0E00               	movlw	0
  6820  002F8A  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6821  002F8C  0E80               	movlw	128
  6822  002F8E  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6823  002F90  501E               	movf	___flge@ff2^0,w,c
  6824  002F92  5C1A               	subwf	___flge@ff1^0,w,c
  6825  002F94  501F               	movf	(___flge@ff2+1)^0,w,c
  6826  002F96  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6827  002F98  5020               	movf	(___flge@ff2+2)^0,w,c
  6828  002F9A  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6829  002F9C  5021               	movf	(___flge@ff2+3)^0,w,c
  6830  002F9E  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6831  002FA0  B0D8               	btfsc	status,0,c
  6832  002FA2  EFD5  F017         	goto	u3641
  6833  002FA6  EFD7  F017         	goto	u3640
  6834  002FAA                     u3641:
  6835  002FAA  EFDA  F017         	goto	l3543
  6836  002FAE                     u3640:
  6837  002FAE  90D8               	bcf	status,0,c
  6838  002FB0  EFDB  F017         	goto	l513
  6839  002FB4                     l3543:
  6840  002FB4  80D8               	bsf	status,0,c
  6841  002FB6                     l513:
  6842  002FB6  0012               	return		;funcret
  6843  002FB8                     __end_of___flge:
  6844                           	callstack 0
  6845                           
  6846 ;; *************** function ___fleq *****************
  6847 ;; Defined at:
  6848 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  ff1             4    0[COMRAM] unsigned char 
  6851 ;;  ff2             4    4[COMRAM] unsigned char 
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;		None               void
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6863 ;;      Params:         8       0       0       0       0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6865 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6866 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6867 ;;Total ram usage:       12 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_efgtoa
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text23
  6877  003710                     __ptext23:
  6878                           	callstack 0
  6879  003710                     ___fleq:
  6880                           	callstack 25
  6881  003710  0E00               	movlw	0
  6882  003712  1401               	andwf	___fleq@ff1^0,w,c
  6883  003714  6E09               	movwf	??___fleq^0,c
  6884  003716  0E00               	movlw	0
  6885  003718  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6886  00371A  6E0A               	movwf	(??___fleq+1)^0,c
  6887  00371C  0E80               	movlw	128
  6888  00371E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6889  003720  6E0B               	movwf	(??___fleq+2)^0,c
  6890  003722  0E7F               	movlw	127
  6891  003724  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6892  003726  6E0C               	movwf	(??___fleq+3)^0,c
  6893  003728  5009               	movf	??___fleq^0,w,c
  6894  00372A  100A               	iorwf	(??___fleq+1)^0,w,c
  6895  00372C  100B               	iorwf	(??___fleq+2)^0,w,c
  6896  00372E  100C               	iorwf	(??___fleq+3)^0,w,c
  6897  003730  A4D8               	btfss	status,2,c
  6898  003732  EF9D  F01B         	goto	u3571
  6899  003736  EF9F  F01B         	goto	u3570
  6900  00373A                     u3571:
  6901  00373A  EFA7  F01B         	goto	l3513
  6902  00373E                     u3570:
  6903  00373E  0E00               	movlw	0
  6904  003740  6E01               	movwf	___fleq@ff1^0,c
  6905  003742  0E00               	movlw	0
  6906  003744  6E02               	movwf	(___fleq@ff1+1)^0,c
  6907  003746  0E00               	movlw	0
  6908  003748  6E03               	movwf	(___fleq@ff1+2)^0,c
  6909  00374A  0E00               	movlw	0
  6910  00374C  6E04               	movwf	(___fleq@ff1+3)^0,c
  6911  00374E                     l3513:
  6912  00374E  0E00               	movlw	0
  6913  003750  1405               	andwf	___fleq@ff2^0,w,c
  6914  003752  6E09               	movwf	??___fleq^0,c
  6915  003754  0E00               	movlw	0
  6916  003756  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6917  003758  6E0A               	movwf	(??___fleq+1)^0,c
  6918  00375A  0E80               	movlw	128
  6919  00375C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6920  00375E  6E0B               	movwf	(??___fleq+2)^0,c
  6921  003760  0E7F               	movlw	127
  6922  003762  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6923  003764  6E0C               	movwf	(??___fleq+3)^0,c
  6924  003766  5009               	movf	??___fleq^0,w,c
  6925  003768  100A               	iorwf	(??___fleq+1)^0,w,c
  6926  00376A  100B               	iorwf	(??___fleq+2)^0,w,c
  6927  00376C  100C               	iorwf	(??___fleq+3)^0,w,c
  6928  00376E  A4D8               	btfss	status,2,c
  6929  003770  EFBC  F01B         	goto	u3581
  6930  003774  EFBE  F01B         	goto	u3580
  6931  003778                     u3581:
  6932  003778  EFC6  F01B         	goto	l3517
  6933  00377C                     u3580:
  6934  00377C  0E00               	movlw	0
  6935  00377E  6E05               	movwf	___fleq@ff2^0,c
  6936  003780  0E00               	movlw	0
  6937  003782  6E06               	movwf	(___fleq@ff2+1)^0,c
  6938  003784  0E00               	movlw	0
  6939  003786  6E07               	movwf	(___fleq@ff2+2)^0,c
  6940  003788  0E00               	movlw	0
  6941  00378A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6942  00378C                     l3517:
  6943  00378C  5005               	movf	___fleq@ff2^0,w,c
  6944  00378E  1801               	xorwf	___fleq@ff1^0,w,c
  6945  003790  E10F               	bnz	u3590
  6946  003792  5006               	movf	(___fleq@ff2+1)^0,w,c
  6947  003794  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6948  003796  E10C               	bnz	u3590
  6949  003798  5007               	movf	(___fleq@ff2+2)^0,w,c
  6950  00379A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6951  00379C  E109               	bnz	u3590
  6952  00379E  5008               	movf	(___fleq@ff2+3)^0,w,c
  6953  0037A0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6954  0037A2  B4D8               	btfsc	status,2,c
  6955  0037A4  EFD6  F01B         	goto	u3591
  6956  0037A8  EFD8  F01B         	goto	u3590
  6957  0037AC                     u3591:
  6958  0037AC  EFDB  F01B         	goto	l3521
  6959  0037B0                     u3590:
  6960  0037B0  90D8               	bcf	status,0,c
  6961  0037B2  EFDC  F01B         	goto	l502
  6962  0037B6                     l3521:
  6963  0037B6  80D8               	bsf	status,0,c
  6964  0037B8                     l502:
  6965  0037B8  0012               	return		;funcret
  6966  0037BA                     __end_of___fleq:
  6967                           	callstack 0
  6968                           
  6969 ;; *************** function ___fldiv *****************
  6970 ;; Defined at:
  6971 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  b               4   25[COMRAM] unsigned char 
  6974 ;;  a               4   29[COMRAM] unsigned char 
  6975 ;; Auto vars:     Size  Location     Type
  6976 ;;  grs             4   44[COMRAM] unsigned long 
  6977 ;;  rem             4   37[COMRAM] unsigned long 
  6978 ;;  new_exp         2   42[COMRAM] short 
  6979 ;;  aexp            1   49[COMRAM] unsigned char 
  6980 ;;  bexp            1   48[COMRAM] unsigned char 
  6981 ;;  sign            1   41[COMRAM] unsigned char 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  4   25[COMRAM] unsigned char 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6991 ;;      Params:         8       0       0       0       0       0       0       0       0
  6992 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6993 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6994 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6995 ;;Total ram usage:       25 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_Mostrar_Temperatura
  7001 ;;		_efgtoa
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text24
  7006  002154                     __ptext24:
  7007                           	callstack 0
  7008  002154                     ___fldiv:
  7009                           	callstack 25
  7010  002154  501D               	movf	(___fldiv@b+3)^0,w,c
  7011  002156  0B80               	andlw	128
  7012  002158  6E2A               	movwf	___fldiv@sign^0,c
  7013  00215A  501D               	movf	(___fldiv@b+3)^0,w,c
  7014  00215C  241D               	addwf	(___fldiv@b+3)^0,w,c
  7015  00215E  6E31               	movwf	___fldiv@bexp^0,c
  7016  002160  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  7017  002162  EFB5  F010         	goto	u3031
  7018  002166  EFB7  F010         	goto	u3030
  7019  00216A                     u3031:
  7020  00216A  EFB8  F010         	goto	l3161
  7021  00216E                     u3030:
  7022  00216E  8031               	bsf	___fldiv@bexp^0,0,c
  7023  002170                     l3161:
  7024  002170  5031               	movf	___fldiv@bexp^0,w,c
  7025  002172  B4D8               	btfsc	status,2,c
  7026  002174  EFBE  F010         	goto	u3041
  7027  002178  EFC0  F010         	goto	u3040
  7028  00217C                     u3041:
  7029  00217C  EFD5  F010         	goto	l3171
  7030  002180                     u3040:
  7031  002180  2831               	incf	___fldiv@bexp^0,w,c
  7032  002182  A4D8               	btfss	status,2,c
  7033  002184  EFC6  F010         	goto	u3051
  7034  002188  EFC8  F010         	goto	u3050
  7035  00218C                     u3051:
  7036  00218C  EFD0  F010         	goto	l3167
  7037  002190                     u3050:
  7038  002190  0E00               	movlw	0
  7039  002192  6E1A               	movwf	___fldiv@b^0,c
  7040  002194  0E00               	movlw	0
  7041  002196  6E1B               	movwf	(___fldiv@b+1)^0,c
  7042  002198  0E00               	movlw	0
  7043  00219A  6E1C               	movwf	(___fldiv@b+2)^0,c
  7044  00219C  0E00               	movlw	0
  7045  00219E  6E1D               	movwf	(___fldiv@b+3)^0,c
  7046  0021A0                     l3167:
  7047  0021A0  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  7048  0021A2  0E00               	movlw	0
  7049  0021A4  6E1D               	movwf	(___fldiv@b+3)^0,c
  7050  0021A6  EFDD  F010         	goto	l3173
  7051  0021AA                     l3171:
  7052  0021AA  0E00               	movlw	0
  7053  0021AC  6E1A               	movwf	___fldiv@b^0,c
  7054  0021AE  0E00               	movlw	0
  7055  0021B0  6E1B               	movwf	(___fldiv@b+1)^0,c
  7056  0021B2  0E00               	movlw	0
  7057  0021B4  6E1C               	movwf	(___fldiv@b+2)^0,c
  7058  0021B6  0E00               	movlw	0
  7059  0021B8  6E1D               	movwf	(___fldiv@b+3)^0,c
  7060  0021BA                     l3173:
  7061  0021BA  5021               	movf	(___fldiv@a+3)^0,w,c
  7062  0021BC  0B80               	andlw	128
  7063  0021BE  1A2A               	xorwf	___fldiv@sign^0,f,c
  7064  0021C0  5021               	movf	(___fldiv@a+3)^0,w,c
  7065  0021C2  2421               	addwf	(___fldiv@a+3)^0,w,c
  7066  0021C4  6E32               	movwf	___fldiv@aexp^0,c
  7067  0021C6  AE20               	btfss	(___fldiv@a+2)^0,7,c
  7068  0021C8  EFE8  F010         	goto	u3061
  7069  0021CC  EFEA  F010         	goto	u3060
  7070  0021D0                     u3061:
  7071  0021D0  EFEB  F010         	goto	l3181
  7072  0021D4                     u3060:
  7073  0021D4  8032               	bsf	___fldiv@aexp^0,0,c
  7074  0021D6                     l3181:
  7075  0021D6  5032               	movf	___fldiv@aexp^0,w,c
  7076  0021D8  B4D8               	btfsc	status,2,c
  7077  0021DA  EFF1  F010         	goto	u3071
  7078  0021DE  EFF3  F010         	goto	u3070
  7079  0021E2                     u3071:
  7080  0021E2  EF08  F011         	goto	l3191
  7081  0021E6                     u3070:
  7082  0021E6  2832               	incf	___fldiv@aexp^0,w,c
  7083  0021E8  A4D8               	btfss	status,2,c
  7084  0021EA  EFF9  F010         	goto	u3081
  7085  0021EE  EFFB  F010         	goto	u3080
  7086  0021F2                     u3081:
  7087  0021F2  EF03  F011         	goto	l3187
  7088  0021F6                     u3080:
  7089  0021F6  0E00               	movlw	0
  7090  0021F8  6E1E               	movwf	___fldiv@a^0,c
  7091  0021FA  0E00               	movlw	0
  7092  0021FC  6E1F               	movwf	(___fldiv@a+1)^0,c
  7093  0021FE  0E00               	movlw	0
  7094  002200  6E20               	movwf	(___fldiv@a+2)^0,c
  7095  002202  0E00               	movlw	0
  7096  002204  6E21               	movwf	(___fldiv@a+3)^0,c
  7097  002206                     l3187:
  7098  002206  8E20               	bsf	(___fldiv@a+2)^0,7,c
  7099  002208  0E00               	movlw	0
  7100  00220A  6E21               	movwf	(___fldiv@a+3)^0,c
  7101  00220C  EF10  F011         	goto	l3193
  7102  002210                     l3191:
  7103  002210  0E00               	movlw	0
  7104  002212  6E1E               	movwf	___fldiv@a^0,c
  7105  002214  0E00               	movlw	0
  7106  002216  6E1F               	movwf	(___fldiv@a+1)^0,c
  7107  002218  0E00               	movlw	0
  7108  00221A  6E20               	movwf	(___fldiv@a+2)^0,c
  7109  00221C  0E00               	movlw	0
  7110  00221E  6E21               	movwf	(___fldiv@a+3)^0,c
  7111  002220                     l3193:
  7112  002220  501E               	movf	___fldiv@a^0,w,c
  7113  002222  101F               	iorwf	(___fldiv@a+1)^0,w,c
  7114  002224  1020               	iorwf	(___fldiv@a+2)^0,w,c
  7115  002226  1021               	iorwf	(___fldiv@a+3)^0,w,c
  7116  002228  A4D8               	btfss	status,2,c
  7117  00222A  EF19  F011         	goto	u3091
  7118  00222E  EF1B  F011         	goto	u3090
  7119  002232                     u3091:
  7120  002232  EF33  F011         	goto	l3205
  7121  002236                     u3090:
  7122  002236  0E00               	movlw	0
  7123  002238  6E1A               	movwf	___fldiv@b^0,c
  7124  00223A  0E00               	movlw	0
  7125  00223C  6E1B               	movwf	(___fldiv@b+1)^0,c
  7126  00223E  0E00               	movlw	0
  7127  002240  6E1C               	movwf	(___fldiv@b+2)^0,c
  7128  002242  0E00               	movlw	0
  7129  002244  6E1D               	movwf	(___fldiv@b+3)^0,c
  7130  002246  0E80               	movlw	128
  7131  002248  121C               	iorwf	(___fldiv@b+2)^0,f,c
  7132  00224A  0E7F               	movlw	127
  7133  00224C  121D               	iorwf	(___fldiv@b+3)^0,f,c
  7134  00224E                     l3199:
  7135  00224E  502A               	movf	___fldiv@sign^0,w,c
  7136  002250  121D               	iorwf	(___fldiv@b+3)^0,f,c
  7137  002252  C01A  F01A         	movff	___fldiv@b,?___fldiv
  7138  002256  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  7139  00225A  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  7140  00225E  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  7141  002262  EF76  F012         	goto	l825
  7142  002266                     l3205:
  7143  002266  5031               	movf	___fldiv@bexp^0,w,c
  7144  002268  A4D8               	btfss	status,2,c
  7145  00226A  EF39  F011         	goto	u3101
  7146  00226E  EF3B  F011         	goto	u3100
  7147  002272                     u3101:
  7148  002272  EF45  F011         	goto	l3213
  7149  002276                     u3100:
  7150  002276  0E00               	movlw	0
  7151  002278  6E1A               	movwf	?___fldiv^0,c
  7152  00227A  0E00               	movlw	0
  7153  00227C  6E1B               	movwf	(?___fldiv+1)^0,c
  7154  00227E  0E00               	movlw	0
  7155  002280  6E1C               	movwf	(?___fldiv+2)^0,c
  7156  002282  0E00               	movlw	0
  7157  002284  6E1D               	movwf	(?___fldiv+3)^0,c
  7158  002286  EF76  F012         	goto	l825
  7159  00228A                     l3213:
  7160  00228A  5032               	movf	___fldiv@aexp^0,w,c
  7161  00228C  C031  F022         	movff	___fldiv@bexp,??___fldiv
  7162  002290  6A23               	clrf	(??___fldiv+1)^0,c
  7163  002292  5E22               	subwf	??___fldiv^0,f,c
  7164  002294  0E00               	movlw	0
  7165  002296  5A23               	subwfb	(??___fldiv+1)^0,f,c
  7166  002298  0E7F               	movlw	127
  7167  00229A  2422               	addwf	??___fldiv^0,w,c
  7168  00229C  6E2B               	movwf	___fldiv@new_exp^0,c
  7169  00229E  0E00               	movlw	0
  7170  0022A0  2023               	addwfc	(??___fldiv+1)^0,w,c
  7171  0022A2  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  7172  0022A4  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  7173  0022A8  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  7174  0022AC  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  7175  0022B0  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  7176  0022B4  0E00               	movlw	0
  7177  0022B6  6E1A               	movwf	___fldiv@b^0,c
  7178  0022B8  0E00               	movlw	0
  7179  0022BA  6E1B               	movwf	(___fldiv@b+1)^0,c
  7180  0022BC  0E00               	movlw	0
  7181  0022BE  6E1C               	movwf	(___fldiv@b+2)^0,c
  7182  0022C0  0E00               	movlw	0
  7183  0022C2  6E1D               	movwf	(___fldiv@b+3)^0,c
  7184  0022C4  0E00               	movlw	0
  7185  0022C6  6E2D               	movwf	___fldiv@grs^0,c
  7186  0022C8  0E00               	movlw	0
  7187  0022CA  6E2E               	movwf	(___fldiv@grs+1)^0,c
  7188  0022CC  0E00               	movlw	0
  7189  0022CE  6E2F               	movwf	(___fldiv@grs+2)^0,c
  7190  0022D0  0E00               	movlw	0
  7191  0022D2  6E30               	movwf	(___fldiv@grs+3)^0,c
  7192  0022D4  0E00               	movlw	0
  7193  0022D6  6E32               	movwf	___fldiv@aexp^0,c
  7194  0022D8  EFA6  F011         	goto	l827
  7195  0022DC                     l3223:
  7196  0022DC  5032               	movf	___fldiv@aexp^0,w,c
  7197  0022DE  B4D8               	btfsc	status,2,c
  7198  0022E0  EF74  F011         	goto	u3111
  7199  0022E4  EF76  F011         	goto	u3110
  7200  0022E8                     u3111:
  7201  0022E8  EF8D  F011         	goto	l3231
  7202  0022EC                     u3110:
  7203  0022EC  90D8               	bcf	status,0,c
  7204  0022EE  3626               	rlcf	___fldiv@rem^0,f,c
  7205  0022F0  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  7206  0022F2  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  7207  0022F4  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  7208  0022F6  90D8               	bcf	status,0,c
  7209  0022F8  361A               	rlcf	___fldiv@b^0,f,c
  7210  0022FA  361B               	rlcf	(___fldiv@b+1)^0,f,c
  7211  0022FC  361C               	rlcf	(___fldiv@b+2)^0,f,c
  7212  0022FE  361D               	rlcf	(___fldiv@b+3)^0,f,c
  7213  002300  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  7214  002302  EF85  F011         	goto	u3121
  7215  002306  EF87  F011         	goto	u3120
  7216  00230A                     u3121:
  7217  00230A  EF88  F011         	goto	l830
  7218  00230E                     u3120:
  7219  00230E  801A               	bsf	___fldiv@b^0,0,c
  7220  002310                     l830:
  7221  002310  90D8               	bcf	status,0,c
  7222  002312  362D               	rlcf	___fldiv@grs^0,f,c
  7223  002314  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  7224  002316  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  7225  002318  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  7226  00231A                     l3231:
  7227  00231A  501E               	movf	___fldiv@a^0,w,c
  7228  00231C  5C26               	subwf	___fldiv@rem^0,w,c
  7229  00231E  501F               	movf	(___fldiv@a+1)^0,w,c
  7230  002320  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  7231  002322  5020               	movf	(___fldiv@a+2)^0,w,c
  7232  002324  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  7233  002326  5021               	movf	(___fldiv@a+3)^0,w,c
  7234  002328  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  7235  00232A  A0D8               	btfss	status,0,c
  7236  00232C  EF9A  F011         	goto	u3131
  7237  002330  EF9C  F011         	goto	u3130
  7238  002334                     u3131:
  7239  002334  EFA5  F011         	goto	l3237
  7240  002338                     u3130:
  7241  002338  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  7242  00233A  501E               	movf	___fldiv@a^0,w,c
  7243  00233C  5E26               	subwf	___fldiv@rem^0,f,c
  7244  00233E  501F               	movf	(___fldiv@a+1)^0,w,c
  7245  002340  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  7246  002342  5020               	movf	(___fldiv@a+2)^0,w,c
  7247  002344  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  7248  002346  5021               	movf	(___fldiv@a+3)^0,w,c
  7249  002348  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  7250  00234A                     l3237:
  7251  00234A  2A32               	incf	___fldiv@aexp^0,f,c
  7252  00234C                     l827:
  7253  00234C  0E19               	movlw	25
  7254  00234E  6432               	cpfsgt	___fldiv@aexp^0,c
  7255  002350  EFAC  F011         	goto	u3141
  7256  002354  EFAE  F011         	goto	u3140
  7257  002358                     u3141:
  7258  002358  EF6E  F011         	goto	l3223
  7259  00235C                     u3140:
  7260  00235C  5026               	movf	___fldiv@rem^0,w,c
  7261  00235E  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  7262  002360  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  7263  002362  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  7264  002364  B4D8               	btfsc	status,2,c
  7265  002366  EFB7  F011         	goto	u3151
  7266  00236A  EFB9  F011         	goto	u3150
  7267  00236E                     u3151:
  7268  00236E  EFD1  F011         	goto	l3249
  7269  002372                     u3150:
  7270  002372  802D               	bsf	___fldiv@grs^0,0,c
  7271  002374  EFD1  F011         	goto	l3249
  7272  002378                     l3243:
  7273  002378  90D8               	bcf	status,0,c
  7274  00237A  361A               	rlcf	___fldiv@b^0,f,c
  7275  00237C  361B               	rlcf	(___fldiv@b+1)^0,f,c
  7276  00237E  361C               	rlcf	(___fldiv@b+2)^0,f,c
  7277  002380  361D               	rlcf	(___fldiv@b+3)^0,f,c
  7278  002382  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  7279  002384  EFC6  F011         	goto	u3161
  7280  002388  EFC8  F011         	goto	u3160
  7281  00238C                     u3161:
  7282  00238C  EFC9  F011         	goto	l836
  7283  002390                     u3160:
  7284  002390  801A               	bsf	___fldiv@b^0,0,c
  7285  002392                     l836:
  7286  002392  90D8               	bcf	status,0,c
  7287  002394  362D               	rlcf	___fldiv@grs^0,f,c
  7288  002396  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  7289  002398  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  7290  00239A  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  7291  00239C  062B               	decf	___fldiv@new_exp^0,f,c
  7292  00239E  A0D8               	btfss	status,0,c
  7293  0023A0  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  7294  0023A2                     l3249:
  7295  0023A2  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  7296  0023A4  EFD6  F011         	goto	u3171
  7297  0023A8  EFD8  F011         	goto	u3170
  7298  0023AC                     u3171:
  7299  0023AC  EFBC  F011         	goto	l3243
  7300  0023B0                     u3170:
  7301  0023B0  0E00               	movlw	0
  7302  0023B2  6E32               	movwf	___fldiv@aexp^0,c
  7303  0023B4  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  7304  0023B6  EFDF  F011         	goto	u3181
  7305  0023BA  EFE1  F011         	goto	u3180
  7306  0023BE                     u3181:
  7307  0023BE  EF05  F012         	goto	l838
  7308  0023C2                     u3180:
  7309  0023C2  0EFF               	movlw	255
  7310  0023C4  142D               	andwf	___fldiv@grs^0,w,c
  7311  0023C6  6E22               	movwf	??___fldiv^0,c
  7312  0023C8  0EFF               	movlw	255
  7313  0023CA  142E               	andwf	(___fldiv@grs+1)^0,w,c
  7314  0023CC  6E23               	movwf	(??___fldiv+1)^0,c
  7315  0023CE  0EFF               	movlw	255
  7316  0023D0  142F               	andwf	(___fldiv@grs+2)^0,w,c
  7317  0023D2  6E24               	movwf	(??___fldiv+2)^0,c
  7318  0023D4  0E7F               	movlw	127
  7319  0023D6  1430               	andwf	(___fldiv@grs+3)^0,w,c
  7320  0023D8  6E25               	movwf	(??___fldiv+3)^0,c
  7321  0023DA  5022               	movf	??___fldiv^0,w,c
  7322  0023DC  1023               	iorwf	(??___fldiv+1)^0,w,c
  7323  0023DE  1024               	iorwf	(??___fldiv+2)^0,w,c
  7324  0023E0  1025               	iorwf	(??___fldiv+3)^0,w,c
  7325  0023E2  B4D8               	btfsc	status,2,c
  7326  0023E4  EFF6  F011         	goto	u3191
  7327  0023E8  EFF8  F011         	goto	u3190
  7328  0023EC                     u3191:
  7329  0023EC  EFFC  F011         	goto	l839
  7330  0023F0                     u3190:
  7331  0023F0                     l3257:
  7332  0023F0  0E01               	movlw	1
  7333  0023F2  6E32               	movwf	___fldiv@aexp^0,c
  7334  0023F4  EF05  F012         	goto	l838
  7335  0023F8                     l839:
  7336  0023F8  A01A               	btfss	___fldiv@b^0,0,c
  7337  0023FA  EF01  F012         	goto	u3201
  7338  0023FE  EF03  F012         	goto	u3200
  7339  002402                     u3201:
  7340  002402  EF05  F012         	goto	l838
  7341  002406                     u3200:
  7342  002406  EFF8  F011         	goto	l3257
  7343  00240A                     l838:
  7344  00240A  5032               	movf	___fldiv@aexp^0,w,c
  7345  00240C  B4D8               	btfsc	status,2,c
  7346  00240E  EF0B  F012         	goto	u3211
  7347  002412  EF0D  F012         	goto	u3210
  7348  002416                     u3211:
  7349  002416  EF31  F012         	goto	l3269
  7350  00241A                     u3210:
  7351  00241A  0E01               	movlw	1
  7352  00241C  261A               	addwf	___fldiv@b^0,f,c
  7353  00241E  0E00               	movlw	0
  7354  002420  221B               	addwfc	(___fldiv@b+1)^0,f,c
  7355  002422  221C               	addwfc	(___fldiv@b+2)^0,f,c
  7356  002424  221D               	addwfc	(___fldiv@b+3)^0,f,c
  7357  002426  A01D               	btfss	(___fldiv@b+3)^0,0,c
  7358  002428  EF18  F012         	goto	u3221
  7359  00242C  EF1A  F012         	goto	u3220
  7360  002430                     u3221:
  7361  002430  EF31  F012         	goto	l3269
  7362  002434                     u3220:
  7363  002434  C01A  F022         	movff	___fldiv@b,??___fldiv
  7364  002438  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  7365  00243C  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  7366  002440  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  7367  002444  3425               	rlcf	(??___fldiv+3)^0,w,c
  7368  002446  3225               	rrcf	(??___fldiv+3)^0,f,c
  7369  002448  3224               	rrcf	(??___fldiv+2)^0,f,c
  7370  00244A  3223               	rrcf	(??___fldiv+1)^0,f,c
  7371  00244C  3222               	rrcf	??___fldiv^0,f,c
  7372  00244E  C022  F01A         	movff	??___fldiv,___fldiv@b
  7373  002452  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  7374  002456  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  7375  00245A  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  7376  00245E  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  7377  002460  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  7378  002462                     l3269:
  7379  002462  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7380  002464  EF3C  F012         	goto	u3231
  7381  002468  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  7382  00246A  E108               	bnz	u3230
  7383  00246C  282B               	incf	___fldiv@new_exp^0,w,c
  7384  00246E  A0D8               	btfss	status,0,c
  7385  002470  EF3C  F012         	goto	u3231
  7386  002474  EF3E  F012         	goto	u3230
  7387  002478                     u3231:
  7388  002478  EF49  F012         	goto	l3273
  7389  00247C                     u3230:
  7390  00247C  0E00               	movlw	0
  7391  00247E  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  7392  002480  682B               	setf	___fldiv@new_exp^0,c
  7393  002482  0E00               	movlw	0
  7394  002484  6E1A               	movwf	___fldiv@b^0,c
  7395  002486  0E00               	movlw	0
  7396  002488  6E1B               	movwf	(___fldiv@b+1)^0,c
  7397  00248A  0E00               	movlw	0
  7398  00248C  6E1C               	movwf	(___fldiv@b+2)^0,c
  7399  00248E  0E00               	movlw	0
  7400  002490  6E1D               	movwf	(___fldiv@b+3)^0,c
  7401  002492                     l3273:
  7402  002492  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7403  002494  EF56  F012         	goto	u3240
  7404  002498  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  7405  00249A  E106               	bnz	u3241
  7406  00249C  042B               	decf	___fldiv@new_exp^0,w,c
  7407  00249E  B0D8               	btfsc	status,0,c
  7408  0024A0  EF54  F012         	goto	u3241
  7409  0024A4  EF56  F012         	goto	u3240
  7410  0024A8                     u3241:
  7411  0024A8  EF64  F012         	goto	l3277
  7412  0024AC                     u3240:
  7413  0024AC  0E00               	movlw	0
  7414  0024AE  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  7415  0024B0  0E00               	movlw	0
  7416  0024B2  6E2B               	movwf	___fldiv@new_exp^0,c
  7417  0024B4  0E00               	movlw	0
  7418  0024B6  6E1A               	movwf	___fldiv@b^0,c
  7419  0024B8  0E00               	movlw	0
  7420  0024BA  6E1B               	movwf	(___fldiv@b+1)^0,c
  7421  0024BC  0E00               	movlw	0
  7422  0024BE  6E1C               	movwf	(___fldiv@b+2)^0,c
  7423  0024C0  0E00               	movlw	0
  7424  0024C2  6E1D               	movwf	(___fldiv@b+3)^0,c
  7425  0024C4  0E00               	movlw	0
  7426  0024C6  6E2A               	movwf	___fldiv@sign^0,c
  7427  0024C8                     l3277:
  7428  0024C8  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  7429  0024CC  A031               	btfss	___fldiv@bexp^0,0,c
  7430  0024CE  EF6B  F012         	goto	u3251
  7431  0024D2  EF6D  F012         	goto	u3250
  7432  0024D6                     u3251:
  7433  0024D6  EF70  F012         	goto	l3283
  7434  0024DA                     u3250:
  7435  0024DA  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  7436  0024DC  EF71  F012         	goto	l3285
  7437  0024E0                     l3283:
  7438  0024E0  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  7439  0024E2                     l3285:
  7440  0024E2  90D8               	bcf	status,0,c
  7441  0024E4  3031               	rrcf	___fldiv@bexp^0,w,c
  7442  0024E6  6E1D               	movwf	(___fldiv@b+3)^0,c
  7443  0024E8  EF27  F011         	goto	l3199
  7444  0024EC                     l825:
  7445  0024EC  0012               	return		;funcret
  7446  0024EE                     __end_of___fldiv:
  7447                           	callstack 0
  7448                           
  7449 ;; *************** function _atoi *****************
  7450 ;; Defined at:
  7451 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7454 ;;		 -> STR_2(5), 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  n               2   15[COMRAM] int 
  7457 ;;  neg             2   13[COMRAM] int 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  2    7[COMRAM] int 
  7460 ;; Registers used:
  7461 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7467 ;;      Params:         2       0       0       0       0       0       0       0       0
  7468 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7469 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7470 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7471 ;;Total ram usage:       10 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; Hardware stack levels required when called: 1
  7474 ;; This function calls:
  7475 ;;		___wmul
  7476 ;;		_isdigit
  7477 ;;		_isspace
  7478 ;; This function is called by:
  7479 ;;		_vfpfcnvrt
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text25
  7484  002C58                     __ptext25:
  7485                           	callstack 0
  7486  002C58                     _atoi:
  7487                           	callstack 25
  7488  002C58  0E00               	movlw	0
  7489  002C5A  6E11               	movwf	(atoi@n+1)^0,c
  7490  002C5C  0E00               	movlw	0
  7491  002C5E  6E10               	movwf	atoi@n^0,c
  7492  002C60  0E00               	movlw	0
  7493  002C62  6E0F               	movwf	(atoi@neg+1)^0,c
  7494  002C64  0E00               	movlw	0
  7495  002C66  6E0E               	movwf	atoi@neg^0,c
  7496  002C68  EF38  F016         	goto	l4029
  7497  002C6C                     l4025:
  7498  002C6C  4A08               	infsnz	atoi@s^0,f,c
  7499  002C6E  2A09               	incf	(atoi@s+1)^0,f,c
  7500  002C70                     l4029:
  7501  002C70  C008  FFF6         	movff	atoi@s,tblptrl
  7502  002C74  C009  FFF7         	movff	atoi@s+1,tblptrh
  7503  002C78                     	if	0	;tblptru may be non-zero
  7504  002C78                     	endif
  7505  002C78                     	if	0	;tblptru may be non-zero
  7506  002C78                     	endif
  7507  002C78  0008               	tblrd		*
  7508  002C7A  50F5               	movf	tablat,w,c
  7509  002C7C  0A20               	xorlw	32
  7510  002C7E  B4D8               	btfsc	status,2,c
  7511  002C80  EF44  F016         	goto	u4501
  7512  002C84  EF46  F016         	goto	u4500
  7513  002C88                     u4501:
  7514  002C88  EF36  F016         	goto	l4025
  7515  002C8C                     u4500:
  7516  002C8C  0EF7               	movlw	247
  7517  002C8E  6E0A               	movwf	??_atoi^0,c
  7518  002C90  0EFF               	movlw	255
  7519  002C92  6E0B               	movwf	(??_atoi+1)^0,c
  7520  002C94  C008  FFF6         	movff	atoi@s,tblptrl
  7521  002C98  C009  FFF7         	movff	atoi@s+1,tblptrh
  7522  002C9C                     	if	0	;tblptru may be non-zero
  7523  002C9C                     	endif
  7524  002C9C                     	if	0	;tblptru may be non-zero
  7525  002C9C                     	endif
  7526  002C9C  0008               	tblrd		*
  7527  002C9E  50F5               	movf	tablat,w,c
  7528  002CA0  6E0C               	movwf	(??_atoi+2)^0,c
  7529  002CA2  6A0D               	clrf	(??_atoi+3)^0,c
  7530  002CA4  500A               	movf	??_atoi^0,w,c
  7531  002CA6  260C               	addwf	(??_atoi+2)^0,f,c
  7532  002CA8  500B               	movf	(??_atoi+1)^0,w,c
  7533  002CAA  220D               	addwfc	(??_atoi+3)^0,f,c
  7534  002CAC  500D               	movf	(??_atoi+3)^0,w,c
  7535  002CAE  E109               	bnz	u4510
  7536  002CB0  0E05               	movlw	5
  7537  002CB2  5C0C               	subwf	(??_atoi+2)^0,w,c
  7538  002CB4  A0D8               	btfss	status,0,c
  7539  002CB6  EF5F  F016         	goto	u4511
  7540  002CBA  EF61  F016         	goto	u4510
  7541  002CBE                     u4511:
  7542  002CBE  EF36  F016         	goto	l4025
  7543  002CC2                     u4510:
  7544  002CC2  EF6B  F016         	goto	l4037
  7545  002CC6                     l4033:
  7546  002CC6  0E00               	movlw	0
  7547  002CC8  6E0F               	movwf	(atoi@neg+1)^0,c
  7548  002CCA  0E01               	movlw	1
  7549  002CCC  6E0E               	movwf	atoi@neg^0,c
  7550  002CCE                     l4035:
  7551  002CCE  4A08               	infsnz	atoi@s^0,f,c
  7552  002CD0  2A09               	incf	(atoi@s+1)^0,f,c
  7553  002CD2  EFA0  F016         	goto	l4045
  7554  002CD6                     l4037:
  7555  002CD6  C008  FFF6         	movff	atoi@s,tblptrl
  7556  002CDA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7557  002CDE                     	if	0	;tblptru may be non-zero
  7558  002CDE                     	endif
  7559  002CDE                     	if	0	;tblptru may be non-zero
  7560  002CDE                     	endif
  7561  002CDE  0008               	tblrd		*
  7562  002CE0  50F5               	movf	tablat,w,c
  7563  002CE2  6E0A               	movwf	??_atoi^0,c
  7564  002CE4  6A0B               	clrf	(??_atoi+1)^0,c
  7565                           
  7566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7567                           ; Switch size 1, requested type "simple"
  7568                           ; Number of cases is 1, Range of values is 0 to 0
  7569                           ; switch strategies available:
  7570                           ; Name         Instructions Cycles
  7571                           ; simple_byte            4     3 (average)
  7572                           ;	Chosen strategy is simple_byte
  7573  002CE6  500B               	movf	(??_atoi+1)^0,w,c
  7574  002CE8  0A00               	xorlw	0	; case 0
  7575  002CEA  B4D8               	btfsc	status,2,c
  7576  002CEC  EF7A  F016         	goto	l4615
  7577  002CF0  EFA0  F016         	goto	l4045
  7578  002CF4                     l4615:
  7579                           
  7580                           ; Switch size 1, requested type "simple"
  7581                           ; Number of cases is 2, Range of values is 43 to 45
  7582                           ; switch strategies available:
  7583                           ; Name         Instructions Cycles
  7584                           ; simple_byte            7     4 (average)
  7585                           ;	Chosen strategy is simple_byte
  7586  002CF4  500A               	movf	??_atoi^0,w,c
  7587  002CF6  0A2B               	xorlw	43	; case 43
  7588  002CF8  B4D8               	btfsc	status,2,c
  7589  002CFA  EF67  F016         	goto	l4035
  7590  002CFE  0A06               	xorlw	6	; case 45
  7591  002D00  B4D8               	btfsc	status,2,c
  7592  002D02  EF63  F016         	goto	l4033
  7593  002D06  EFA0  F016         	goto	l4045
  7594  002D0A                     l4039:
  7595  002D0A  C010  F001         	movff	atoi@n,___wmul@multiplier
  7596  002D0E  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7597  002D12  0E00               	movlw	0
  7598  002D14  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7599  002D16  0E0A               	movlw	10
  7600  002D18  6E03               	movwf	___wmul@multiplicand^0,c
  7601  002D1A  EC64  F01F         	call	___wmul	;wreg free
  7602  002D1E  C008  FFF6         	movff	atoi@s,tblptrl
  7603  002D22  C009  FFF7         	movff	atoi@s+1,tblptrh
  7604  002D26                     	if	0	;tblptru may be non-zero
  7605  002D26                     	endif
  7606  002D26                     	if	0	;tblptru may be non-zero
  7607  002D26                     	endif
  7608  002D26  0008               	tblrd		*
  7609  002D28  50F5               	movf	tablat,w,c
  7610  002D2A  5E01               	subwf	?___wmul^0,f,c
  7611  002D2C  0E00               	movlw	0
  7612  002D2E  5A02               	subwfb	(?___wmul+1)^0,f,c
  7613  002D30  0E30               	movlw	48
  7614  002D32  2401               	addwf	?___wmul^0,w,c
  7615  002D34  6E10               	movwf	atoi@n^0,c
  7616  002D36  0E00               	movlw	0
  7617  002D38  2002               	addwfc	(?___wmul+1)^0,w,c
  7618  002D3A  6E11               	movwf	(atoi@n+1)^0,c
  7619  002D3C  EF67  F016         	goto	l4035
  7620  002D40                     l4045:
  7621  002D40  0ED0               	movlw	208
  7622  002D42  6E0A               	movwf	??_atoi^0,c
  7623  002D44  0EFF               	movlw	255
  7624  002D46  6E0B               	movwf	(??_atoi+1)^0,c
  7625  002D48  C008  FFF6         	movff	atoi@s,tblptrl
  7626  002D4C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7627  002D50                     	if	0	;tblptru may be non-zero
  7628  002D50                     	endif
  7629  002D50                     	if	0	;tblptru may be non-zero
  7630  002D50                     	endif
  7631  002D50  0008               	tblrd		*
  7632  002D52  50F5               	movf	tablat,w,c
  7633  002D54  6E0C               	movwf	(??_atoi+2)^0,c
  7634  002D56  6A0D               	clrf	(??_atoi+3)^0,c
  7635  002D58  500A               	movf	??_atoi^0,w,c
  7636  002D5A  260C               	addwf	(??_atoi+2)^0,f,c
  7637  002D5C  500B               	movf	(??_atoi+1)^0,w,c
  7638  002D5E  220D               	addwfc	(??_atoi+3)^0,f,c
  7639  002D60  500D               	movf	(??_atoi+3)^0,w,c
  7640  002D62  E109               	bnz	u4520
  7641  002D64  0E0A               	movlw	10
  7642  002D66  5C0C               	subwf	(??_atoi+2)^0,w,c
  7643  002D68  A0D8               	btfss	status,0,c
  7644  002D6A  EFB9  F016         	goto	u4521
  7645  002D6E  EFBB  F016         	goto	u4520
  7646  002D72                     u4521:
  7647  002D72  EF85  F016         	goto	l4039
  7648  002D76                     u4520:
  7649  002D76  500E               	movf	atoi@neg^0,w,c
  7650  002D78  100F               	iorwf	(atoi@neg+1)^0,w,c
  7651  002D7A  A4D8               	btfss	status,2,c
  7652  002D7C  EFC2  F016         	goto	u4531
  7653  002D80  EFC4  F016         	goto	u4530
  7654  002D84                     u4531:
  7655  002D84  EFD2  F016         	goto	l1114
  7656  002D88                     u4530:
  7657  002D88  C010  F00A         	movff	atoi@n,??_atoi
  7658  002D8C  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7659  002D90  1E0A               	comf	??_atoi^0,f,c
  7660  002D92  1E0B               	comf	(??_atoi+1)^0,f,c
  7661  002D94  4A0A               	infsnz	??_atoi^0,f,c
  7662  002D96  2A0B               	incf	(??_atoi+1)^0,f,c
  7663  002D98  C00A  F008         	movff	??_atoi,?_atoi
  7664  002D9C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7665  002DA0  EFD6  F016         	goto	l1117
  7666  002DA4                     l1114:
  7667  002DA4  C010  F008         	movff	atoi@n,?_atoi
  7668  002DA8  C011  F009         	movff	atoi@n+1,?_atoi+1
  7669  002DAC                     l1117:
  7670  002DAC  0012               	return		;funcret
  7671  002DAE                     __end_of_atoi:
  7672                           	callstack 0
  7673                           
  7674 ;; *************** function _isspace *****************
  7675 ;; Defined at:
  7676 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  c               2    0[COMRAM] int 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  2    0[COMRAM] int 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2, status,0
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7690 ;;      Params:         2       0       0       0       0       0       0       0       0
  7691 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7692 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7693 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7694 ;;Total ram usage:        7 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_atoi
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text26
  7704  003C50                     __ptext26:
  7705                           	callstack 0
  7706  003C50                     _isspace:
  7707                           	callstack 25
  7708  003C50  0E01               	movlw	1
  7709  003C52  6E07               	movwf	_isspace$1557^0,c
  7710  003C54  0E20               	movlw	32
  7711  003C56  1801               	xorwf	isspace@c^0,w,c
  7712  003C58  1002               	iorwf	(isspace@c+1)^0,w,c
  7713  003C5A  B4D8               	btfsc	status,2,c
  7714  003C5C  EF32  F01E         	goto	u3991
  7715  003C60  EF34  F01E         	goto	u3990
  7716  003C64                     u3991:
  7717  003C64  EF4D  F01E         	goto	l3697
  7718  003C68                     u3990:
  7719  003C68  0EF7               	movlw	247
  7720  003C6A  6E03               	movwf	??_isspace^0,c
  7721  003C6C  0EFF               	movlw	255
  7722  003C6E  6E04               	movwf	(??_isspace+1)^0,c
  7723  003C70  C001  F005         	movff	isspace@c,??_isspace+2
  7724  003C74  C002  F006         	movff	isspace@c+1,??_isspace+3
  7725  003C78  5003               	movf	??_isspace^0,w,c
  7726  003C7A  2605               	addwf	(??_isspace+2)^0,f,c
  7727  003C7C  5004               	movf	(??_isspace+1)^0,w,c
  7728  003C7E  2206               	addwfc	(??_isspace+3)^0,f,c
  7729  003C80  5006               	movf	(??_isspace+3)^0,w,c
  7730  003C82  E109               	bnz	u4000
  7731  003C84  0E05               	movlw	5
  7732  003C86  5C05               	subwf	(??_isspace+2)^0,w,c
  7733  003C88  A0D8               	btfss	status,0,c
  7734  003C8A  EF49  F01E         	goto	u4001
  7735  003C8E  EF4B  F01E         	goto	u4000
  7736  003C92                     u4001:
  7737  003C92  EF4D  F01E         	goto	l3697
  7738  003C96                     u4000:
  7739  003C96  0E00               	movlw	0
  7740  003C98  6E07               	movwf	_isspace$1557^0,c
  7741  003C9A                     l3697:
  7742  003C9A  C007  F001         	movff	_isspace$1557,?_isspace
  7743  003C9E  6A02               	clrf	(?_isspace+1)^0,c
  7744  003CA0  0012               	return		;funcret
  7745  003CA2                     __end_of_isspace:
  7746                           	callstack 0
  7747                           
  7748 ;; *************** function _isdigit *****************
  7749 ;; Defined at:
  7750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  c               2    0[COMRAM] int 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  2    0[COMRAM] int 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7764 ;;      Params:         2       0       0       0       0       0       0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7766 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7767 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7768 ;;Total ram usage:        6 bytes
  7769 ;; Hardware stack levels used: 1
  7770 ;; This function calls:
  7771 ;;		Nothing
  7772 ;; This function is called by:
  7773 ;;		_vfpfcnvrt
  7774 ;;		_atoi
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text27
  7779  003E2A                     __ptext27:
  7780                           	callstack 0
  7781  003E2A                     _isdigit:
  7782                           	callstack 26
  7783  003E2A  0ED0               	movlw	208
  7784  003E2C  6E03               	movwf	??_isdigit^0,c
  7785  003E2E  0EFF               	movlw	255
  7786  003E30  6E04               	movwf	(??_isdigit+1)^0,c
  7787  003E32  C001  F005         	movff	isdigit@c,??_isdigit+2
  7788  003E36  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7789  003E3A  5003               	movf	??_isdigit^0,w,c
  7790  003E3C  2605               	addwf	(??_isdigit+2)^0,f,c
  7791  003E3E  5004               	movf	(??_isdigit+1)^0,w,c
  7792  003E40  2206               	addwfc	(??_isdigit+3)^0,f,c
  7793  003E42  5006               	movf	(??_isdigit+3)^0,w,c
  7794  003E44  E10A               	bnz	u3970
  7795  003E46  0E0A               	movlw	10
  7796  003E48  5C05               	subwf	(??_isdigit+2)^0,w,c
  7797  003E4A  A0D8               	btfss	status,0,c
  7798  003E4C  EF2A  F01F         	goto	u3971
  7799  003E50  EF2D  F01F         	goto	u3970
  7800  003E54                     u3971:
  7801  003E54  0E01               	movlw	1
  7802  003E56  EF2E  F01F         	goto	u3980
  7803  003E5A                     u3970:
  7804  003E5A  0E00               	movlw	0
  7805  003E5C                     u3980:
  7806  003E5C  6E01               	movwf	?_isdigit^0,c
  7807  003E5E  6A02               	clrf	(?_isdigit+1)^0,c
  7808  003E60  0012               	return		;funcret
  7809  003E62                     __end_of_isdigit:
  7810                           	callstack 0
  7811                           
  7812 ;; *************** function ___wmul *****************
  7813 ;; Defined at:
  7814 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  multiplier      2    0[COMRAM] unsigned int 
  7817 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  product         2    4[COMRAM] unsigned int 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  2    0[COMRAM] unsigned int 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0, prodl, prodh
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7829 ;;      Params:         4       0       0       0       0       0       0       0       0
  7830 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7832 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7833 ;;Total ram usage:        6 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_atoi
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text28
  7843  003EC8                     __ptext28:
  7844                           	callstack 0
  7845  003EC8                     ___wmul:
  7846                           	callstack 25
  7847  003EC8  5001               	movf	___wmul@multiplier^0,w,c
  7848  003ECA  0203               	mulwf	___wmul@multiplicand^0,c
  7849  003ECC  CFF3 F005          	movff	prodl,___wmul@product
  7850  003ED0  CFF4 F006          	movff	prodh,___wmul@product+1
  7851  003ED4  5001               	movf	___wmul@multiplier^0,w,c
  7852  003ED6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7853  003ED8  50F3               	movf	243,w,c
  7854  003EDA  2606               	addwf	(___wmul@product+1)^0,f,c
  7855  003EDC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7856  003EDE  0203               	mulwf	___wmul@multiplicand^0,c
  7857  003EE0  50F3               	movf	243,w,c
  7858  003EE2  2606               	addwf	(___wmul@product+1)^0,f,c
  7859  003EE4  C005  F001         	movff	___wmul@product,?___wmul
  7860  003EE8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7861  003EEC  0012               	return		;funcret
  7862  003EEE                     __end_of___wmul:
  7863                           	callstack 0
  7864                           
  7865 ;; *************** function ___xxtofl *****************
  7866 ;; Defined at:
  7867 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  sign            1    wreg     unsigned char 
  7870 ;;  val             4    0[COMRAM] long 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  sign            1    8[COMRAM] unsigned char 
  7873 ;;  arg             4   10[COMRAM] unsigned long 
  7874 ;;  exp             1    9[COMRAM] unsigned char 
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  4    0[COMRAM] unsigned char 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7884 ;;      Params:         4       0       0       0       0       0       0       0       0
  7885 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7886 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7887 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7888 ;;Total ram usage:       14 bytes
  7889 ;; Hardware stack levels used: 1
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_Mostrar_Temperatura
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text29
  7898  002AA4                     __ptext29:
  7899                           	callstack 0
  7900  002AA4                     ___xxtofl:
  7901                           	callstack 29
  7902                           
  7903                           ;incstack = 0
  7904                           ;___xxtofl@sign stored from wreg
  7905  002AA4  6E09               	movwf	___xxtofl@sign^0,c
  7906  002AA6  5009               	movf	___xxtofl@sign^0,w,c
  7907  002AA8  B4D8               	btfsc	status,2,c
  7908  002AAA  EF59  F015         	goto	u4931
  7909  002AAE  EF5B  F015         	goto	u4930
  7910  002AB2                     u4931:
  7911  002AB2  EF7D  F015         	goto	l898
  7912  002AB6                     u4930:
  7913  002AB6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7914  002AB8  EF62  F015         	goto	u4940
  7915  002ABC  EF60  F015         	goto	u4941
  7916  002AC0                     u4941:
  7917  002AC0  EF7D  F015         	goto	l898
  7918  002AC4                     u4940:
  7919  002AC4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7920  002AC8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7921  002ACC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7922  002AD0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7923  002AD4  1E05               	comf	??___xxtofl^0,f,c
  7924  002AD6  1E06               	comf	(??___xxtofl+1)^0,f,c
  7925  002AD8  1E07               	comf	(??___xxtofl+2)^0,f,c
  7926  002ADA  1E08               	comf	(??___xxtofl+3)^0,f,c
  7927  002ADC  2A05               	incf	??___xxtofl^0,f,c
  7928  002ADE  0E00               	movlw	0
  7929  002AE0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7930  002AE2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7931  002AE4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7932  002AE6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7933  002AEA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7934  002AEE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7935  002AF2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7936  002AF6  EF85  F015         	goto	l4333
  7937  002AFA                     l898:
  7938  002AFA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7939  002AFE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7940  002B02  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7941  002B06  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7942  002B0A                     l4333:
  7943  002B0A  5001               	movf	___xxtofl@val^0,w,c
  7944  002B0C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7945  002B0E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7946  002B10  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7947  002B12  A4D8               	btfss	status,2,c
  7948  002B14  EF8E  F015         	goto	u4951
  7949  002B18  EF90  F015         	goto	u4950
  7950  002B1C                     u4951:
  7951  002B1C  EF9A  F015         	goto	l4339
  7952  002B20                     u4950:
  7953  002B20  0E00               	movlw	0
  7954  002B22  6E01               	movwf	?___xxtofl^0,c
  7955  002B24  0E00               	movlw	0
  7956  002B26  6E02               	movwf	(?___xxtofl+1)^0,c
  7957  002B28  0E00               	movlw	0
  7958  002B2A  6E03               	movwf	(?___xxtofl+2)^0,c
  7959  002B2C  0E00               	movlw	0
  7960  002B2E  6E04               	movwf	(?___xxtofl+3)^0,c
  7961  002B30  EF2B  F016         	goto	l901
  7962  002B34                     l4339:
  7963  002B34  0E96               	movlw	150
  7964  002B36  6E0A               	movwf	___xxtofl@exp^0,c
  7965  002B38  EFA4  F015         	goto	l4343
  7966  002B3C                     l4341:
  7967  002B3C  2A0A               	incf	___xxtofl@exp^0,f,c
  7968  002B3E  90D8               	bcf	status,0,c
  7969  002B40  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7970  002B42  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7971  002B44  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7972  002B46  320B               	rrcf	___xxtofl@arg^0,f,c
  7973  002B48                     l4343:
  7974  002B48  0E00               	movlw	0
  7975  002B4A  140B               	andwf	___xxtofl@arg^0,w,c
  7976  002B4C  6E05               	movwf	??___xxtofl^0,c
  7977  002B4E  0E00               	movlw	0
  7978  002B50  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7979  002B52  6E06               	movwf	(??___xxtofl+1)^0,c
  7980  002B54  0E00               	movlw	0
  7981  002B56  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7982  002B58  6E07               	movwf	(??___xxtofl+2)^0,c
  7983  002B5A  0EFE               	movlw	254
  7984  002B5C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7985  002B5E  6E08               	movwf	(??___xxtofl+3)^0,c
  7986  002B60  5005               	movf	??___xxtofl^0,w,c
  7987  002B62  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7988  002B64  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7989  002B66  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7990  002B68  A4D8               	btfss	status,2,c
  7991  002B6A  EFB9  F015         	goto	u4961
  7992  002B6E  EFBB  F015         	goto	u4960
  7993  002B72                     u4961:
  7994  002B72  EF9E  F015         	goto	l4341
  7995  002B76                     u4960:
  7996  002B76  EFC9  F015         	goto	l905
  7997  002B7A                     l4345:
  7998  002B7A  2A0A               	incf	___xxtofl@exp^0,f,c
  7999  002B7C  0E01               	movlw	1
  8000  002B7E  260B               	addwf	___xxtofl@arg^0,f,c
  8001  002B80  0E00               	movlw	0
  8002  002B82  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8003  002B84  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8004  002B86  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8005  002B88  90D8               	bcf	status,0,c
  8006  002B8A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8007  002B8C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8008  002B8E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8009  002B90  320B               	rrcf	___xxtofl@arg^0,f,c
  8010  002B92                     l905:
  8011  002B92  0E00               	movlw	0
  8012  002B94  140B               	andwf	___xxtofl@arg^0,w,c
  8013  002B96  6E05               	movwf	??___xxtofl^0,c
  8014  002B98  0E00               	movlw	0
  8015  002B9A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8016  002B9C  6E06               	movwf	(??___xxtofl+1)^0,c
  8017  002B9E  0E00               	movlw	0
  8018  002BA0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8019  002BA2  6E07               	movwf	(??___xxtofl+2)^0,c
  8020  002BA4  0EFF               	movlw	255
  8021  002BA6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8022  002BA8  6E08               	movwf	(??___xxtofl+3)^0,c
  8023  002BAA  5005               	movf	??___xxtofl^0,w,c
  8024  002BAC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8025  002BAE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8026  002BB0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8027  002BB2  A4D8               	btfss	status,2,c
  8028  002BB4  EFDE  F015         	goto	u4971
  8029  002BB8  EFE0  F015         	goto	u4970
  8030  002BBC                     u4971:
  8031  002BBC  EFBD  F015         	goto	l4345
  8032  002BC0                     u4970:
  8033  002BC0  EFE8  F015         	goto	l4353
  8034  002BC4                     l4351:
  8035  002BC4  060A               	decf	___xxtofl@exp^0,f,c
  8036  002BC6  90D8               	bcf	status,0,c
  8037  002BC8  360B               	rlcf	___xxtofl@arg^0,f,c
  8038  002BCA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8039  002BCC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8040  002BCE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8041  002BD0                     l4353:
  8042  002BD0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8043  002BD2  EFED  F015         	goto	u4981
  8044  002BD6  EFEF  F015         	goto	u4980
  8045  002BDA                     u4981:
  8046  002BDA  EFF7  F015         	goto	l912
  8047  002BDE                     u4980:
  8048  002BDE  0E02               	movlw	2
  8049  002BE0  600A               	cpfslt	___xxtofl@exp^0,c
  8050  002BE2  EFF5  F015         	goto	u4991
  8051  002BE6  EFF7  F015         	goto	u4990
  8052  002BEA                     u4991:
  8053  002BEA  EFE2  F015         	goto	l4351
  8054  002BEE                     u4990:
  8055  002BEE                     l912:
  8056  002BEE  B00A               	btfsc	___xxtofl@exp^0,0,c
  8057  002BF0  EFFC  F015         	goto	u5001
  8058  002BF4  EFFE  F015         	goto	u5000
  8059  002BF8                     u5001:
  8060  002BF8  EFFF  F015         	goto	l4359
  8061  002BFC                     u5000:
  8062  002BFC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8063  002BFE                     l4359:
  8064  002BFE  90D8               	bcf	status,0,c
  8065  002C00  320A               	rrcf	___xxtofl@exp^0,f,c
  8066  002C02  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8067  002C06  6A06               	clrf	(??___xxtofl+1)^0,c
  8068  002C08  6A07               	clrf	(??___xxtofl+2)^0,c
  8069  002C0A  6A08               	clrf	(??___xxtofl+3)^0,c
  8070  002C0C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8071  002C10  6A07               	clrf	(??___xxtofl+2)^0,c
  8072  002C12  6A06               	clrf	(??___xxtofl+1)^0,c
  8073  002C14  6A05               	clrf	??___xxtofl^0,c
  8074  002C16  5005               	movf	??___xxtofl^0,w,c
  8075  002C18  120B               	iorwf	___xxtofl@arg^0,f,c
  8076  002C1A  5006               	movf	(??___xxtofl+1)^0,w,c
  8077  002C1C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8078  002C1E  5007               	movf	(??___xxtofl+2)^0,w,c
  8079  002C20  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8080  002C22  5008               	movf	(??___xxtofl+3)^0,w,c
  8081  002C24  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8082  002C26  5009               	movf	___xxtofl@sign^0,w,c
  8083  002C28  B4D8               	btfsc	status,2,c
  8084  002C2A  EF19  F016         	goto	u5011
  8085  002C2E  EF1B  F016         	goto	u5010
  8086  002C32                     u5011:
  8087  002C32  EF23  F016         	goto	l4369
  8088  002C36                     u5010:
  8089  002C36  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8090  002C38  EF22  F016         	goto	u5020
  8091  002C3C  EF20  F016         	goto	u5021
  8092  002C40                     u5021:
  8093  002C40  EF23  F016         	goto	l4369
  8094  002C44                     u5020:
  8095  002C44  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8096  002C46                     l4369:
  8097  002C46  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8098  002C4A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8099  002C4E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8100  002C52  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8101  002C56                     l901:
  8102  002C56  0012               	return		;funcret
  8103  002C58                     __end_of___xxtofl:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _ADC_Read *****************
  8107 ;; Defined at:
  8108 ;;		line 13 in file "adc_header.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  channel         2    0[COMRAM] int 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  digital         2    6[COMRAM] int 
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  2    0[COMRAM] int 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2, status,0
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8122 ;;      Params:         2       0       0       0       0       0       0       0       0
  8123 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8124 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8125 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8126 ;;Total ram usage:        8 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_Mostrar_Temperatura
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text30
  8136  00385E                     __ptext30:
  8137                           	callstack 0
  8138  00385E                     _ADC_Read:
  8139                           	callstack 29
  8140  00385E                     
  8141                           ;adc_header.c: 13: int ADC_Read(int channel);adc_header.c: 14: {;adc_header.c: 15:     i
      +                          nt digital;;adc_header.c: 18:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b001111
      +                          00);
  8142  00385E  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  8143  003862  90D8               	bcf	status,0,c
  8144  003864  3603               	rlcf	??_ADC_Read^0,f,c
  8145  003866  90D8               	bcf	status,0,c
  8146  003868  3603               	rlcf	??_ADC_Read^0,f,c
  8147  00386A  0E3C               	movlw	60
  8148  00386C  1603               	andwf	??_ADC_Read^0,f,c
  8149  00386E  50C2               	movf	194,w,c	;volatile
  8150  003870  0BC3               	andlw	195
  8151  003872  1003               	iorwf	??_ADC_Read^0,w,c
  8152  003874  6EC2               	movwf	194,c	;volatile
  8153                           
  8154                           ;adc_header.c: 20:     ADCON0 |= ((1<<ADON)|(1<<GO));
  8155  003876  B2C2               	btfsc	4034,1,c	;volatile
  8156  003878  EF40  F01C         	goto	u4831
  8157  00387C  EF44  F01C         	goto	u4830
  8158  003880                     u4831:
  8159  003880  6A03               	clrf	??_ADC_Read^0,c
  8160  003882  2A03               	incf	??_ADC_Read^0,f,c
  8161  003884  EF45  F01C         	goto	u4848
  8162  003888                     u4830:
  8163  003888  6A03               	clrf	??_ADC_Read^0,c
  8164  00388A                     u4848:
  8165  00388A  0E01               	movlw	1
  8166  00388C  6E04               	movwf	(??_ADC_Read+1)^0,c
  8167  00388E  2A03               	incf	??_ADC_Read^0,f,c
  8168  003890  EF4C  F01C         	goto	u4854
  8169  003894                     u4855:
  8170  003894  90D8               	bcf	status,0,c
  8171  003896  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  8172  003898                     u4854:
  8173  003898  2E03               	decfsz	??_ADC_Read^0,f,c
  8174  00389A  EF4A  F01C         	goto	u4855
  8175  00389E  B0C2               	btfsc	4034,0,c	;volatile
  8176  0038A0  EF54  F01C         	goto	u4861
  8177  0038A4  EF58  F01C         	goto	u4860
  8178  0038A8                     u4861:
  8179  0038A8  6A05               	clrf	(??_ADC_Read+2)^0,c
  8180  0038AA  2A05               	incf	(??_ADC_Read+2)^0,f,c
  8181  0038AC  EF59  F01C         	goto	u4878
  8182  0038B0                     u4860:
  8183  0038B0  6A05               	clrf	(??_ADC_Read+2)^0,c
  8184  0038B2                     u4878:
  8185  0038B2  0E01               	movlw	1
  8186  0038B4  6E06               	movwf	(??_ADC_Read+3)^0,c
  8187  0038B6  2A05               	incf	(??_ADC_Read+2)^0,f,c
  8188  0038B8  EF60  F01C         	goto	u4884
  8189  0038BC                     u4885:
  8190  0038BC  90D8               	bcf	status,0,c
  8191  0038BE  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  8192  0038C0                     u4884:
  8193  0038C0  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  8194  0038C2  EF5E  F01C         	goto	u4885
  8195  0038C6  5006               	movf	(??_ADC_Read+3)^0,w,c
  8196  0038C8  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  8197  0038CA  12C2               	iorwf	194,f,c	;volatile
  8198  0038CC                     l85:
  8199  0038CC  B2C2               	btfsc	194,1,c	;volatile
  8200  0038CE  EF6B  F01C         	goto	u4891
  8201  0038D2  EF6D  F01C         	goto	u4890
  8202  0038D6                     u4891:
  8203  0038D6  EF66  F01C         	goto	l85
  8204  0038DA                     u4890:
  8205  0038DA                     
  8206                           ;adc_header.c: 25:     digital = (ADRESH*256) | (ADRESL);
  8207  0038DA  50C3               	movf	195,w,c	;volatile
  8208  0038DC  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8209  0038E0  6A04               	clrf	(??_ADC_Read+1)^0,c
  8210  0038E2  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8211  0038E6  6A03               	clrf	??_ADC_Read^0,c
  8212  0038E8  1003               	iorwf	??_ADC_Read^0,w,c
  8213  0038EA  6E07               	movwf	ADC_Read@digital^0,c
  8214  0038EC  5004               	movf	(??_ADC_Read+1)^0,w,c
  8215  0038EE  6E08               	movwf	(ADC_Read@digital+1)^0,c
  8216  0038F0                     
  8217                           ;adc_header.c: 26:     return(digital);
  8218  0038F0  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  8219  0038F4  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  8220  0038F8  0012               	return		;funcret
  8221  0038FA                     __end_of_ADC_Read:
  8222                           	callstack 0
  8223                           
  8224 ;; *************** function _LCD_Clear *****************
  8225 ;; Defined at:
  8226 ;;		line 147 in file "./LCD_librery.h"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;		None
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      void 
  8233 ;; Registers used:
  8234 ;;		wreg, status,2, status,0, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8240 ;;      Params:         0       0       0       0       0       0       0       0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8243 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8244 ;;Total ram usage:        0 bytes
  8245 ;; Hardware stack levels used: 1
  8246 ;; Hardware stack levels required when called: 2
  8247 ;; This function calls:
  8248 ;;		_LCD_Cmd
  8249 ;; This function is called by:
  8250 ;;		_main
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text31
  8255  003FC8                     __ptext31:
  8256                           	callstack 0
  8257  003FC8                     _LCD_Clear:
  8258                           	callstack 28
  8259  003FC8                     
  8260                           ;./LCD_librery.h: 149:      LCD_Cmd(0x01);
  8261  003FC8  0E01               	movlw	1
  8262  003FCA  EC51  F01E         	call	_LCD_Cmd
  8263  003FCE  0012               	return		;funcret
  8264  003FD0                     __end_of_LCD_Clear:
  8265                           	callstack 0
  8266                           
  8267 ;; *************** function _LCD_Begin *****************
  8268 ;; Defined at:
  8269 ;;		line 109 in file "./LCD_librery.h"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8287 ;;Total ram usage:        1 bytes
  8288 ;; Hardware stack levels used: 1
  8289 ;; Hardware stack levels required when called: 2
  8290 ;; This function calls:
  8291 ;;		_LCD_Cmd
  8292 ;; This function is called by:
  8293 ;;		_main
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text32
  8298  003286                     __ptext32:
  8299                           	callstack 0
  8300  003286                     _LCD_Begin:
  8301                           	callstack 28
  8302  003286                     
  8303                           ;./LCD_librery.h: 111:   RS = 0;
  8304  003286  0100               	movlb	0	; () banked
  8305  003288  91FA               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  8306                           
  8307                           ;./LCD_librery.h: 113:   LATCbits.LC0 = 0;
  8308  00328A  908B               	bcf	139,0,c	;volatile
  8309                           
  8310                           ;./LCD_librery.h: 114:   LATCbits.LC1 = 0;
  8311  00328C  928B               	bcf	139,1,c	;volatile
  8312                           
  8313                           ;./LCD_librery.h: 115:   LATDbits.LD4 = 0;
  8314  00328E  988C               	bcf	140,4,c	;volatile
  8315                           
  8316                           ;./LCD_librery.h: 116:   LATDbits.LD5 = 0;
  8317  003290  9A8C               	bcf	140,5,c	;volatile
  8318                           
  8319                           ;./LCD_librery.h: 117:   LATDbits.LD6 = 0;
  8320  003292  9C8C               	bcf	140,6,c	;volatile
  8321                           
  8322                           ;./LCD_librery.h: 118:   LATDbits.LD7 = 0;
  8323  003294  9E8C               	bcf	140,7,c	;volatile
  8324                           
  8325                           ;./LCD_librery.h: 119:   TRISCbits.RC0 = 0;
  8326  003296  9094               	bcf	148,0,c	;volatile
  8327                           
  8328                           ;./LCD_librery.h: 120:   TRISCbits.RC1 = 0;
  8329  003298  9294               	bcf	148,1,c	;volatile
  8330                           
  8331                           ;./LCD_librery.h: 121:   TRISDbits.RD4 = 0;
  8332  00329A  9895               	bcf	149,4,c	;volatile
  8333                           
  8334                           ;./LCD_librery.h: 122:   TRISDbits.RD5 = 0;
  8335  00329C  9A95               	bcf	149,5,c	;volatile
  8336                           
  8337                           ;./LCD_librery.h: 123:   TRISDbits.RD6 = 0;
  8338  00329E  9C95               	bcf	149,6,c	;volatile
  8339                           
  8340                           ;./LCD_librery.h: 124:   TRISDbits.RD7 = 0;
  8341  0032A0  9E95               	bcf	149,7,c	;volatile
  8342  0032A2                     
  8343                           ; BSR set to: 0
  8344                           ;./LCD_librery.h: 126:   _delay((unsigned long)((40)*(8000000/4000.0)));
  8345  0032A2  0E68               	movlw	104
  8346  0032A4  6E05               	movwf	??_LCD_Begin^0,c
  8347  0032A6  0EE4               	movlw	228
  8348  0032A8                     u5147:
  8349  0032A8  2EE8               	decfsz	wreg,f,c
  8350  0032AA  D7FE               	bra	u5147
  8351  0032AC  2E05               	decfsz	??_LCD_Begin^0,f,c
  8352  0032AE  D7FC               	bra	u5147
  8353  0032B0  D000               	nop2	
  8354  0032B2                     
  8355                           ;./LCD_librery.h: 127:   LCD_Cmd(3);
  8356  0032B2  0E03               	movlw	3
  8357  0032B4  EC51  F01E         	call	_LCD_Cmd
  8358  0032B8                     
  8359                           ;./LCD_librery.h: 128:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8360  0032B8  0E0D               	movlw	13
  8361  0032BA  6E05               	movwf	??_LCD_Begin^0,c
  8362  0032BC  0EFC               	movlw	252
  8363  0032BE                     u5157:
  8364  0032BE  2EE8               	decfsz	wreg,f,c
  8365  0032C0  D7FE               	bra	u5157
  8366  0032C2  2E05               	decfsz	??_LCD_Begin^0,f,c
  8367  0032C4  D7FC               	bra	u5157
  8368                           
  8369                           ;./LCD_librery.h: 129:   LCD_Cmd(3);
  8370  0032C6  0E03               	movlw	3
  8371  0032C8  EC51  F01E         	call	_LCD_Cmd
  8372  0032CC                     
  8373                           ;./LCD_librery.h: 130:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8374  0032CC  0E0D               	movlw	13
  8375  0032CE  6E05               	movwf	??_LCD_Begin^0,c
  8376  0032D0  0EFC               	movlw	252
  8377  0032D2                     u5167:
  8378  0032D2  2EE8               	decfsz	wreg,f,c
  8379  0032D4  D7FE               	bra	u5167
  8380  0032D6  2E05               	decfsz	??_LCD_Begin^0,f,c
  8381  0032D8  D7FC               	bra	u5167
  8382  0032DA                     
  8383                           ;./LCD_librery.h: 131:   LCD_Cmd(3);
  8384  0032DA  0E03               	movlw	3
  8385  0032DC  EC51  F01E         	call	_LCD_Cmd
  8386                           
  8387                           ;./LCD_librery.h: 132:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8388  0032E0  0E0D               	movlw	13
  8389  0032E2  6E05               	movwf	??_LCD_Begin^0,c
  8390  0032E4  0EFC               	movlw	252
  8391  0032E6                     u5177:
  8392  0032E6  2EE8               	decfsz	wreg,f,c
  8393  0032E8  D7FE               	bra	u5177
  8394  0032EA  2E05               	decfsz	??_LCD_Begin^0,f,c
  8395  0032EC  D7FC               	bra	u5177
  8396  0032EE                     
  8397                           ;./LCD_librery.h: 133:   LCD_Cmd(0x02);
  8398  0032EE  0E02               	movlw	2
  8399  0032F0  EC51  F01E         	call	_LCD_Cmd
  8400  0032F4                     
  8401                           ;./LCD_librery.h: 134:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8402  0032F4  0E0D               	movlw	13
  8403  0032F6  6E05               	movwf	??_LCD_Begin^0,c
  8404  0032F8  0EFC               	movlw	252
  8405  0032FA                     u5187:
  8406  0032FA  2EE8               	decfsz	wreg,f,c
  8407  0032FC  D7FE               	bra	u5187
  8408  0032FE  2E05               	decfsz	??_LCD_Begin^0,f,c
  8409  003300  D7FC               	bra	u5187
  8410                           
  8411                           ;./LCD_librery.h: 135:   LCD_Cmd(0x20 | (2 << 2));
  8412  003302  0E28               	movlw	40
  8413  003304  EC51  F01E         	call	_LCD_Cmd
  8414  003308                     
  8415                           ;./LCD_librery.h: 136:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8416  003308  0E82               	movlw	130
  8417  00330A  6E05               	movwf	??_LCD_Begin^0,c
  8418  00330C  0EDE               	movlw	222
  8419  00330E                     u5197:
  8420  00330E  2EE8               	decfsz	wreg,f,c
  8421  003310  D7FE               	bra	u5197
  8422  003312  2E05               	decfsz	??_LCD_Begin^0,f,c
  8423  003314  D7FC               	bra	u5197
  8424  003316                     
  8425                           ;./LCD_librery.h: 137:   LCD_Cmd(0x0C);
  8426  003316  0E0C               	movlw	12
  8427  003318  EC51  F01E         	call	_LCD_Cmd
  8428                           
  8429                           ;./LCD_librery.h: 138:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8430  00331C  0E82               	movlw	130
  8431  00331E  6E05               	movwf	??_LCD_Begin^0,c
  8432  003320  0EDE               	movlw	222
  8433  003322                     u5207:
  8434  003322  2EE8               	decfsz	wreg,f,c
  8435  003324  D7FE               	bra	u5207
  8436  003326  2E05               	decfsz	??_LCD_Begin^0,f,c
  8437  003328  D7FC               	bra	u5207
  8438  00332A                     
  8439                           ;./LCD_librery.h: 139:   LCD_Cmd(0x01);
  8440  00332A  0E01               	movlw	1
  8441  00332C  EC51  F01E         	call	_LCD_Cmd
  8442  003330                     
  8443                           ;./LCD_librery.h: 140:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8444  003330  0E82               	movlw	130
  8445  003332  6E05               	movwf	??_LCD_Begin^0,c
  8446  003334  0EDE               	movlw	222
  8447  003336                     u5217:
  8448  003336  2EE8               	decfsz	wreg,f,c
  8449  003338  D7FE               	bra	u5217
  8450  00333A  2E05               	decfsz	??_LCD_Begin^0,f,c
  8451  00333C  D7FC               	bra	u5217
  8452                           
  8453                           ;./LCD_librery.h: 141:   LCD_Cmd(0x04 | 0x02);
  8454  00333E  0E06               	movlw	6
  8455  003340  EC51  F01E         	call	_LCD_Cmd
  8456  003344                     
  8457                           ;./LCD_librery.h: 142:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8458  003344  0E82               	movlw	130
  8459  003346  6E05               	movwf	??_LCD_Begin^0,c
  8460  003348  0EDE               	movlw	222
  8461  00334A                     u5227:
  8462  00334A  2EE8               	decfsz	wreg,f,c
  8463  00334C  D7FE               	bra	u5227
  8464  00334E  2E05               	decfsz	??_LCD_Begin^0,f,c
  8465  003350  D7FC               	bra	u5227
  8466  003352                     
  8467                           ;./LCD_librery.h: 144:   LCD_Cmd(0x01);
  8468  003352  0E01               	movlw	1
  8469  003354  EC51  F01E         	call	_LCD_Cmd
  8470  003358  0012               	return		;funcret
  8471  00335A                     __end_of_LCD_Begin:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function _I2C_Init *****************
  8475 ;; Defined at:
  8476 ;;		line 6 in file "I2C_librery.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  frecuencia      4   13[COMRAM] unsigned long 
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;		None
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  1    wreg      void 
  8483 ;; Registers used:
  8484 ;;		wreg, status,2, status,0, cstack
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8490 ;;      Params:         4       0       0       0       0       0       0       0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8492 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8493 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8494 ;;Total ram usage:        8 bytes
  8495 ;; Hardware stack levels used: 1
  8496 ;; Hardware stack levels required when called: 1
  8497 ;; This function calls:
  8498 ;;		___lldiv
  8499 ;; This function is called by:
  8500 ;;		_main
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           	psect	text33
  8505  003B40                     __ptext33:
  8506                           	callstack 0
  8507  003B40                     _I2C_Init:
  8508                           	callstack 29
  8509  003B40                     
  8510                           ;I2C_librery.c: 6: void I2C_Init (uint32_t frecuencia);I2C_librery.c: 7: {;I2C_librery.c
      +                          : 8:     TRISB|=(1<<0);
  8511  003B40  8093               	bsf	147,0,c	;volatile
  8512                           
  8513                           ;I2C_librery.c: 9:     TRISB|=(1<<1);
  8514  003B42  8293               	bsf	147,1,c	;volatile
  8515  003B44                     
  8516                           ;I2C_librery.c: 11:     SSPSTATbits.CKE=0;
  8517  003B44  9CC7               	bcf	199,6,c	;volatile
  8518  003B46                     
  8519                           ;I2C_librery.c: 16:     SSPSTATbits.SMP=1;
  8520  003B46  8EC7               	bsf	199,7,c	;volatile
  8521  003B48                     
  8522                           ;I2C_librery.c: 21:     SSPCON1bits.SSPEN=1;
  8523  003B48  8AC6               	bsf	198,5,c	;volatile
  8524  003B4A                     
  8525                           ;I2C_librery.c: 26:     SSPCON1bits.SSPM=0b1000;
  8526  003B4A  50C6               	movf	198,w,c	;volatile
  8527  003B4C  0BF0               	andlw	-16
  8528  003B4E  0908               	iorlw	8
  8529  003B50  6EC6               	movwf	198,c	;volatile
  8530  003B52                     
  8531                           ;I2C_librery.c: 35:     SSPCON2=0x00;
  8532  003B52  0E00               	movlw	0
  8533  003B54  6EC5               	movwf	197,c	;volatile
  8534  003B56                     
  8535                           ;I2C_librery.c: 37:     SSPADD = ((8000000/(4*frecuencia))-1);
  8536  003B56  0E00               	movlw	0
  8537  003B58  6E01               	movwf	___lldiv@dividend^0,c
  8538  003B5A  0E12               	movlw	18
  8539  003B5C  6E02               	movwf	(___lldiv@dividend+1)^0,c
  8540  003B5E  0E7A               	movlw	122
  8541  003B60  6E03               	movwf	(___lldiv@dividend+2)^0,c
  8542  003B62  0E00               	movlw	0
  8543  003B64  6E04               	movwf	(___lldiv@dividend+3)^0,c
  8544  003B66  C00E  F012         	movff	I2C_Init@frecuencia,??_I2C_Init
  8545  003B6A  C00F  F013         	movff	I2C_Init@frecuencia+1,??_I2C_Init+1
  8546  003B6E  C010  F014         	movff	I2C_Init@frecuencia+2,??_I2C_Init+2
  8547  003B72  C011  F015         	movff	I2C_Init@frecuencia+3,??_I2C_Init+3
  8548  003B76  0E02               	movlw	2
  8549  003B78                     u5035:
  8550  003B78  90D8               	bcf	status,0,c
  8551  003B7A  3612               	rlcf	??_I2C_Init^0,f,c
  8552  003B7C  3613               	rlcf	(??_I2C_Init+1)^0,f,c
  8553  003B7E  3614               	rlcf	(??_I2C_Init+2)^0,f,c
  8554  003B80  3615               	rlcf	(??_I2C_Init+3)^0,f,c
  8555  003B82  2EE8               	decfsz	wreg,f,c
  8556  003B84  EFBC  F01D         	goto	u5035
  8557  003B88  C012  F005         	movff	??_I2C_Init,___lldiv@divisor
  8558  003B8C  C013  F006         	movff	??_I2C_Init+1,___lldiv@divisor+1
  8559  003B90  C014  F007         	movff	??_I2C_Init+2,___lldiv@divisor+2
  8560  003B94  C015  F008         	movff	??_I2C_Init+3,___lldiv@divisor+3
  8561  003B98  ECDD  F01B         	call	___lldiv	;wreg free
  8562  003B9C  0401               	decf	?___lldiv^0,w,c
  8563  003B9E  6EC8               	movwf	200,c	;volatile
  8564  003BA0  0012               	return		;funcret
  8565  003BA2                     __end_of_I2C_Init:
  8566                           	callstack 0
  8567                           
  8568 ;; *************** function ___lldiv *****************
  8569 ;; Defined at:
  8570 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;  dividend        4    0[COMRAM] unsigned long 
  8573 ;;  divisor         4    4[COMRAM] unsigned long 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;  quotient        4    8[COMRAM] unsigned long 
  8576 ;;  counter         1   12[COMRAM] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  4    0[COMRAM] unsigned long 
  8579 ;; Registers used:
  8580 ;;		wreg, status,2, status,0
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8586 ;;      Params:         8       0       0       0       0       0       0       0       0
  8587 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8589 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8590 ;;Total ram usage:       13 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_I2C_Init
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           
  8599                           	psect	text34
  8600  0037BA                     __ptext34:
  8601                           	callstack 0
  8602  0037BA                     ___lldiv:
  8603                           	callstack 29
  8604  0037BA  0E00               	movlw	0
  8605  0037BC  6E09               	movwf	___lldiv@quotient^0,c
  8606  0037BE  0E00               	movlw	0
  8607  0037C0  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  8608  0037C2  0E00               	movlw	0
  8609  0037C4  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  8610  0037C6  0E00               	movlw	0
  8611  0037C8  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  8612  0037CA  5005               	movf	___lldiv@divisor^0,w,c
  8613  0037CC  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  8614  0037CE  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  8615  0037D0  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  8616  0037D2  B4D8               	btfsc	status,2,c
  8617  0037D4  EFEE  F01B         	goto	u4901
  8618  0037D8  EFF0  F01B         	goto	u4900
  8619  0037DC                     u4901:
  8620  0037DC  EF26  F01C         	goto	l270
  8621  0037E0                     u4900:
  8622  0037E0  0E01               	movlw	1
  8623  0037E2  6E0D               	movwf	___lldiv@counter^0,c
  8624  0037E4  EFFA  F01B         	goto	l4313
  8625  0037E8                     l4311:
  8626  0037E8  90D8               	bcf	status,0,c
  8627  0037EA  3605               	rlcf	___lldiv@divisor^0,f,c
  8628  0037EC  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  8629  0037EE  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  8630  0037F0  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  8631  0037F2  2A0D               	incf	___lldiv@counter^0,f,c
  8632  0037F4                     l4313:
  8633  0037F4  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  8634  0037F6  EFFF  F01B         	goto	u4911
  8635  0037FA  EF01  F01C         	goto	u4910
  8636  0037FE                     u4911:
  8637  0037FE  EFF4  F01B         	goto	l4311
  8638  003802                     u4910:
  8639  003802                     l4315:
  8640  003802  90D8               	bcf	status,0,c
  8641  003804  3609               	rlcf	___lldiv@quotient^0,f,c
  8642  003806  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8643  003808  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8644  00380A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8645  00380C  5005               	movf	___lldiv@divisor^0,w,c
  8646  00380E  5C01               	subwf	___lldiv@dividend^0,w,c
  8647  003810  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8648  003812  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8649  003814  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8650  003816  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8651  003818  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8652  00381A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8653  00381C  A0D8               	btfss	status,0,c
  8654  00381E  EF13  F01C         	goto	u4921
  8655  003822  EF15  F01C         	goto	u4920
  8656  003826                     u4921:
  8657  003826  EF1E  F01C         	goto	l4323
  8658  00382A                     u4920:
  8659  00382A  5005               	movf	___lldiv@divisor^0,w,c
  8660  00382C  5E01               	subwf	___lldiv@dividend^0,f,c
  8661  00382E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8662  003830  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8663  003832  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8664  003834  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8665  003836  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8666  003838  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8667  00383A  8009               	bsf	___lldiv@quotient^0,0,c
  8668  00383C                     l4323:
  8669  00383C  90D8               	bcf	status,0,c
  8670  00383E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8671  003840  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8672  003842  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8673  003844  3205               	rrcf	___lldiv@divisor^0,f,c
  8674  003846  2E0D               	decfsz	___lldiv@counter^0,f,c
  8675  003848  EF01  F01C         	goto	l4315
  8676  00384C                     l270:
  8677  00384C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8678  003850  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8679  003854  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8680  003858  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8681  00385C  0012               	return		;funcret
  8682  00385E                     __end_of___lldiv:
  8683                           	callstack 0
  8684                           
  8685 ;; *************** function _Establecer_Hora *****************
  8686 ;; Defined at:
  8687 ;;		line 129 in file "Main.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;		None
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;		None
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8701 ;;      Params:         0       0       0       0       0       0       0       0       0
  8702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8703 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8704 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8705 ;;Total ram usage:        1 bytes
  8706 ;; Hardware stack levels used: 1
  8707 ;; Hardware stack levels required when called: 4
  8708 ;; This function calls:
  8709 ;;		_I2C_Ack
  8710 ;;		_I2C_NO_Ack
  8711 ;;		_I2C_ReStart
  8712 ;;		_I2C_Read
  8713 ;;		_I2C_Start
  8714 ;;		_I2C_Stop
  8715 ;;		_I2C_Write
  8716 ;;		_Reloj_Calendario
  8717 ;; This function is called by:
  8718 ;;		_main
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text35
  8723  00398C                     __ptext35:
  8724                           	callstack 0
  8725  00398C                     _Establecer_Hora:
  8726                           	callstack 26
  8727  00398C                     
  8728                           ;Main.c: 131:     I2C_Start();
  8729  00398C  ECD2  F01F         	call	_I2C_Start	;wreg free
  8730  003990                     
  8731                           ;Main.c: 132:     I2C_Write(0xD0);
  8732  003990  0ED0               	movlw	208
  8733  003992  EC87  F01F         	call	_I2C_Write
  8734  003996                     
  8735                           ;Main.c: 133:     I2C_Write(0);
  8736  003996  0E00               	movlw	0
  8737  003998  EC87  F01F         	call	_I2C_Write
  8738                           
  8739                           ;Main.c: 134:     I2C_ReStart();
  8740  00399C  ECDB  F01F         	call	_I2C_ReStart	;wreg free
  8741  0039A0                     
  8742                           ;Main.c: 135:     I2C_Write(0xD1);
  8743  0039A0  0ED1               	movlw	209
  8744  0039A2  EC87  F01F         	call	_I2C_Write
  8745  0039A6                     
  8746                           ;Main.c: 136:     seconds=I2C_Read();
  8747  0039A6  EC9E  F01F         	call	_I2C_Read	;wreg free
  8748  0039AA  0100               	movlb	0	; () banked
  8749  0039AC  6FF3               	movwf	_seconds& (0+255),b
  8750  0039AE                     
  8751                           ; BSR set to: 0
  8752                           ;Main.c: 137:     I2C_Ack();
  8753  0039AE  ECB4  F01F         	call	_I2C_Ack	;wreg free
  8754  0039B2                     
  8755                           ;Main.c: 138:     minutes=I2C_Read();
  8756  0039B2  EC9E  F01F         	call	_I2C_Read	;wreg free
  8757  0039B6  0100               	movlb	0	; () banked
  8758  0039B8  6FF4               	movwf	_minutes& (0+255),b
  8759  0039BA                     
  8760                           ; BSR set to: 0
  8761                           ;Main.c: 139:     I2C_Ack();
  8762  0039BA  ECB4  F01F         	call	_I2C_Ack	;wreg free
  8763  0039BE                     
  8764                           ;Main.c: 140:     hours=I2C_Read();
  8765  0039BE  EC9E  F01F         	call	_I2C_Read	;wreg free
  8766  0039C2  0100               	movlb	0	; () banked
  8767  0039C4  6FF5               	movwf	_hours& (0+255),b
  8768  0039C6                     
  8769                           ; BSR set to: 0
  8770                           ;Main.c: 141:     I2C_Ack();
  8771  0039C6  ECB4  F01F         	call	_I2C_Ack	;wreg free
  8772  0039CA                     
  8773                           ;Main.c: 142:     I2C_Read();
  8774  0039CA  EC9E  F01F         	call	_I2C_Read	;wreg free
  8775  0039CE                     
  8776                           ;Main.c: 143:     I2C_Ack();
  8777  0039CE  ECB4  F01F         	call	_I2C_Ack	;wreg free
  8778  0039D2                     
  8779                           ;Main.c: 144:     day=I2C_Read();
  8780  0039D2  EC9E  F01F         	call	_I2C_Read	;wreg free
  8781  0039D6  0100               	movlb	0	; () banked
  8782  0039D8  6FF0               	movwf	_day& (0+255),b
  8783  0039DA                     
  8784                           ; BSR set to: 0
  8785                           ;Main.c: 145:     I2C_Ack();
  8786  0039DA  ECB4  F01F         	call	_I2C_Ack	;wreg free
  8787  0039DE                     
  8788                           ;Main.c: 146:     month=I2C_Read();
  8789  0039DE  EC9E  F01F         	call	_I2C_Read	;wreg free
  8790  0039E2  0100               	movlb	0	; () banked
  8791  0039E4  6FF1               	movwf	_month& (0+255),b
  8792  0039E6                     
  8793                           ; BSR set to: 0
  8794                           ;Main.c: 147:     I2C_Ack();
  8795  0039E6  ECB4  F01F         	call	_I2C_Ack	;wreg free
  8796  0039EA                     
  8797                           ;Main.c: 148:     year=I2C_Read();
  8798  0039EA  EC9E  F01F         	call	_I2C_Read	;wreg free
  8799  0039EE  0100               	movlb	0	; () banked
  8800  0039F0  6FF2               	movwf	_year& (0+255),b
  8801  0039F2                     
  8802                           ; BSR set to: 0
  8803                           ;Main.c: 149:     I2C_NO_Ack();
  8804  0039F2  ECA9  F01F         	call	_I2C_NO_Ack	;wreg free
  8805  0039F6                     
  8806                           ;Main.c: 150:     I2C_Stop();
  8807  0039F6  ECC9  F01F         	call	_I2C_Stop	;wreg free
  8808  0039FA                     
  8809                           ;Main.c: 152:     Reloj_Calendario();
  8810  0039FA  EC6C  F014         	call	_Reloj_Calendario	;wreg free
  8811  0039FE                     
  8812                           ;Main.c: 153:     _delay((unsigned long)((50)*(8000000/4000.0)));
  8813  0039FE  0E82               	movlw	130
  8814  003A00  6E09               	movwf	??_Establecer_Hora^0,c
  8815  003A02  0EDE               	movlw	222
  8816  003A04                     u5237:
  8817  003A04  2EE8               	decfsz	wreg,f,c
  8818  003A06  D7FE               	bra	u5237
  8819  003A08  2E09               	decfsz	??_Establecer_Hora^0,f,c
  8820  003A0A  D7FC               	bra	u5237
  8821  003A0C  0012               	return		;funcret
  8822  003A0E                     __end_of_Establecer_Hora:
  8823                           	callstack 0
  8824                           
  8825 ;; *************** function _Reloj_Calendario *****************
  8826 ;; Defined at:
  8827 ;;		line 79 in file "Main.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;		None
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8841 ;;      Params:         0       0       0       0       0       0       0       0       0
  8842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8844 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8845 ;;Total ram usage:        0 bytes
  8846 ;; Hardware stack levels used: 1
  8847 ;; Hardware stack levels required when called: 3
  8848 ;; This function calls:
  8849 ;;		_BCD_a_Decimal
  8850 ;;		_LCD_Goto
  8851 ;;		_LCD_Print
  8852 ;;		___awdiv
  8853 ;;		___awmod
  8854 ;; This function is called by:
  8855 ;;		_Establecer_Hora
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           	psect	text36
  8860  0028D8                     __ptext36:
  8861                           	callstack 0
  8862  0028D8                     _Reloj_Calendario:
  8863                           	callstack 26
  8864  0028D8                     
  8865                           ;Main.c: 81:     static char Time[] = "TIME: 00:00:00";;Main.c: 82:     static char Date
      +                          [] = "DATE: 00/00/2000";;Main.c: 84:     seconds = BCD_a_Decimal(seconds);
  8866  0028D8  0100               	movlb	0	; () banked
  8867  0028DA  51F3               	movf	_seconds& (0+255),w,b
  8868  0028DC  EC93  F01F         	call	_BCD_a_Decimal
  8869  0028E0  0100               	movlb	0	; () banked
  8870  0028E2  6FF3               	movwf	_seconds& (0+255),b
  8871                           
  8872                           ;Main.c: 85:     minutes = BCD_a_Decimal(minutes);
  8873  0028E4  51F4               	movf	_minutes& (0+255),w,b
  8874  0028E6  EC93  F01F         	call	_BCD_a_Decimal
  8875  0028EA  0100               	movlb	0	; () banked
  8876  0028EC  6FF4               	movwf	_minutes& (0+255),b
  8877                           
  8878                           ;Main.c: 86:     hours = BCD_a_Decimal(hours);
  8879  0028EE  51F5               	movf	_hours& (0+255),w,b
  8880  0028F0  EC93  F01F         	call	_BCD_a_Decimal
  8881  0028F4  0100               	movlb	0	; () banked
  8882  0028F6  6FF5               	movwf	_hours& (0+255),b
  8883                           
  8884                           ;Main.c: 87:     day = BCD_a_Decimal(day);
  8885  0028F8  51F0               	movf	_day& (0+255),w,b
  8886  0028FA  EC93  F01F         	call	_BCD_a_Decimal
  8887  0028FE  0100               	movlb	0	; () banked
  8888  002900  6FF0               	movwf	_day& (0+255),b
  8889                           
  8890                           ;Main.c: 88:     month = BCD_a_Decimal(month);
  8891  002902  51F1               	movf	_month& (0+255),w,b
  8892  002904  EC93  F01F         	call	_BCD_a_Decimal
  8893  002908  0100               	movlb	0	; () banked
  8894  00290A  6FF1               	movwf	_month& (0+255),b
  8895                           
  8896                           ;Main.c: 89:     year = BCD_a_Decimal(year);
  8897  00290C  51F2               	movf	_year& (0+255),w,b
  8898  00290E  EC93  F01F         	call	_BCD_a_Decimal
  8899  002912  0100               	movlb	0	; () banked
  8900  002914  6FF2               	movwf	_year& (0+255),b
  8901  002916                     
  8902                           ; BSR set to: 0
  8903                           ;Main.c: 91:     Time[6] = hours / 10 + '0';
  8904  002916  C0F5  F001         	movff	_hours,___awdiv@dividend
  8905  00291A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  8906  00291C  0E00               	movlw	0
  8907  00291E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8908  002920  0E0A               	movlw	10
  8909  002922  6E03               	movwf	___awdiv@divisor^0,c
  8910  002924  EC75  F01A         	call	___awdiv	;wreg free
  8911  002928  5001               	movf	?___awdiv^0,w,c
  8912  00292A  0F30               	addlw	48
  8913  00292C  0100               	movlb	0	; () banked
  8914  00292E  6FD6               	movwf	(Reloj_Calendario@Time+6)& (0+255),b
  8915  002930                     
  8916                           ; BSR set to: 0
  8917                           ;Main.c: 92:     Time[7] = hours % 10 + '0';
  8918  002930  C0F5  F001         	movff	_hours,___awmod@dividend
  8919  002934  6A02               	clrf	(___awmod@dividend+1)^0,c
  8920  002936  0E00               	movlw	0
  8921  002938  6E04               	movwf	(___awmod@divisor+1)^0,c
  8922  00293A  0E0A               	movlw	10
  8923  00293C  6E03               	movwf	___awmod@divisor^0,c
  8924  00293E  EC30  F01B         	call	___awmod	;wreg free
  8925  002942  5001               	movf	?___awmod^0,w,c
  8926  002944  0F30               	addlw	48
  8927  002946  0100               	movlb	0	; () banked
  8928  002948  6FD7               	movwf	(Reloj_Calendario@Time+7)& (0+255),b
  8929  00294A                     
  8930                           ; BSR set to: 0
  8931                           ;Main.c: 93:     Time[9] = minutes / 10 + '0';
  8932  00294A  C0F4  F001         	movff	_minutes,___awdiv@dividend
  8933  00294E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  8934  002950  0E00               	movlw	0
  8935  002952  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8936  002954  0E0A               	movlw	10
  8937  002956  6E03               	movwf	___awdiv@divisor^0,c
  8938  002958  EC75  F01A         	call	___awdiv	;wreg free
  8939  00295C  5001               	movf	?___awdiv^0,w,c
  8940  00295E  0F30               	addlw	48
  8941  002960  0100               	movlb	0	; () banked
  8942  002962  6FD9               	movwf	(Reloj_Calendario@Time+9)& (0+255),b
  8943  002964                     
  8944                           ; BSR set to: 0
  8945                           ;Main.c: 94:     Time[10]= minutes % 10 + '0';
  8946  002964  C0F4  F001         	movff	_minutes,___awmod@dividend
  8947  002968  6A02               	clrf	(___awmod@dividend+1)^0,c
  8948  00296A  0E00               	movlw	0
  8949  00296C  6E04               	movwf	(___awmod@divisor+1)^0,c
  8950  00296E  0E0A               	movlw	10
  8951  002970  6E03               	movwf	___awmod@divisor^0,c
  8952  002972  EC30  F01B         	call	___awmod	;wreg free
  8953  002976  5001               	movf	?___awmod^0,w,c
  8954  002978  0F30               	addlw	48
  8955  00297A  0100               	movlb	0	; () banked
  8956  00297C  6FDA               	movwf	(Reloj_Calendario@Time+10)& (0+255),b
  8957  00297E                     
  8958                           ; BSR set to: 0
  8959                           ;Main.c: 95:     Time[12]= seconds / 10 + '0';
  8960  00297E  C0F3  F001         	movff	_seconds,___awdiv@dividend
  8961  002982  6A02               	clrf	(___awdiv@dividend+1)^0,c
  8962  002984  0E00               	movlw	0
  8963  002986  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8964  002988  0E0A               	movlw	10
  8965  00298A  6E03               	movwf	___awdiv@divisor^0,c
  8966  00298C  EC75  F01A         	call	___awdiv	;wreg free
  8967  002990  5001               	movf	?___awdiv^0,w,c
  8968  002992  0F30               	addlw	48
  8969  002994  0100               	movlb	0	; () banked
  8970  002996  6FDC               	movwf	(Reloj_Calendario@Time+12)& (0+255),b
  8971  002998                     
  8972                           ; BSR set to: 0
  8973                           ;Main.c: 96:     Time[13]= seconds % 10 + '0';
  8974  002998  C0F3  F001         	movff	_seconds,___awmod@dividend
  8975  00299C  6A02               	clrf	(___awmod@dividend+1)^0,c
  8976  00299E  0E00               	movlw	0
  8977  0029A0  6E04               	movwf	(___awmod@divisor+1)^0,c
  8978  0029A2  0E0A               	movlw	10
  8979  0029A4  6E03               	movwf	___awmod@divisor^0,c
  8980  0029A6  EC30  F01B         	call	___awmod	;wreg free
  8981  0029AA  5001               	movf	?___awmod^0,w,c
  8982  0029AC  0F30               	addlw	48
  8983  0029AE  0100               	movlb	0	; () banked
  8984  0029B0  6FDD               	movwf	(Reloj_Calendario@Time+13)& (0+255),b
  8985  0029B2                     
  8986                           ; BSR set to: 0
  8987                           ;Main.c: 98:     Date[6] = day / 10 + '0';
  8988  0029B2  C0F0  F001         	movff	_day,___awdiv@dividend
  8989  0029B6  6A02               	clrf	(___awdiv@dividend+1)^0,c
  8990  0029B8  0E00               	movlw	0
  8991  0029BA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8992  0029BC  0E0A               	movlw	10
  8993  0029BE  6E03               	movwf	___awdiv@divisor^0,c
  8994  0029C0  EC75  F01A         	call	___awdiv	;wreg free
  8995  0029C4  5001               	movf	?___awdiv^0,w,c
  8996  0029C6  0F30               	addlw	48
  8997  0029C8  0100               	movlb	0	; () banked
  8998  0029CA  6FC5               	movwf	(Reloj_Calendario@Date+6)& (0+255),b
  8999  0029CC                     
  9000                           ; BSR set to: 0
  9001                           ;Main.c: 99:     Date[7] = day % 10 + '0';
  9002  0029CC  C0F0  F001         	movff	_day,___awmod@dividend
  9003  0029D0  6A02               	clrf	(___awmod@dividend+1)^0,c
  9004  0029D2  0E00               	movlw	0
  9005  0029D4  6E04               	movwf	(___awmod@divisor+1)^0,c
  9006  0029D6  0E0A               	movlw	10
  9007  0029D8  6E03               	movwf	___awmod@divisor^0,c
  9008  0029DA  EC30  F01B         	call	___awmod	;wreg free
  9009  0029DE  5001               	movf	?___awmod^0,w,c
  9010  0029E0  0F30               	addlw	48
  9011  0029E2  0100               	movlb	0	; () banked
  9012  0029E4  6FC6               	movwf	(Reloj_Calendario@Date+7)& (0+255),b
  9013  0029E6                     
  9014                           ; BSR set to: 0
  9015                           ;Main.c: 100:     Date[9] = month / 10 + '0';
  9016  0029E6  C0F1  F001         	movff	_month,___awdiv@dividend
  9017  0029EA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9018  0029EC  0E00               	movlw	0
  9019  0029EE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9020  0029F0  0E0A               	movlw	10
  9021  0029F2  6E03               	movwf	___awdiv@divisor^0,c
  9022  0029F4  EC75  F01A         	call	___awdiv	;wreg free
  9023  0029F8  5001               	movf	?___awdiv^0,w,c
  9024  0029FA  0F30               	addlw	48
  9025  0029FC  0100               	movlb	0	; () banked
  9026  0029FE  6FC8               	movwf	(Reloj_Calendario@Date+9)& (0+255),b
  9027  002A00                     
  9028                           ; BSR set to: 0
  9029                           ;Main.c: 101:     Date[10]= month % 10 + '0';
  9030  002A00  C0F1  F001         	movff	_month,___awmod@dividend
  9031  002A04  6A02               	clrf	(___awmod@dividend+1)^0,c
  9032  002A06  0E00               	movlw	0
  9033  002A08  6E04               	movwf	(___awmod@divisor+1)^0,c
  9034  002A0A  0E0A               	movlw	10
  9035  002A0C  6E03               	movwf	___awmod@divisor^0,c
  9036  002A0E  EC30  F01B         	call	___awmod	;wreg free
  9037  002A12  5001               	movf	?___awmod^0,w,c
  9038  002A14  0F30               	addlw	48
  9039  002A16  0100               	movlb	0	; () banked
  9040  002A18  6FC9               	movwf	(Reloj_Calendario@Date+10)& (0+255),b
  9041  002A1A                     
  9042                           ; BSR set to: 0
  9043                           ;Main.c: 102:     Date[14]= year / 10 + '0';
  9044  002A1A  C0F2  F001         	movff	_year,___awdiv@dividend
  9045  002A1E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9046  002A20  0E00               	movlw	0
  9047  002A22  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9048  002A24  0E0A               	movlw	10
  9049  002A26  6E03               	movwf	___awdiv@divisor^0,c
  9050  002A28  EC75  F01A         	call	___awdiv	;wreg free
  9051  002A2C  5001               	movf	?___awdiv^0,w,c
  9052  002A2E  0F30               	addlw	48
  9053  002A30  0100               	movlb	0	; () banked
  9054  002A32  6FCD               	movwf	(Reloj_Calendario@Date+14)& (0+255),b
  9055  002A34                     
  9056                           ; BSR set to: 0
  9057                           ;Main.c: 103:     Date[15]= year % 10 + '0';
  9058  002A34  C0F2  F001         	movff	_year,___awmod@dividend
  9059  002A38  6A02               	clrf	(___awmod@dividend+1)^0,c
  9060  002A3A  0E00               	movlw	0
  9061  002A3C  6E04               	movwf	(___awmod@divisor+1)^0,c
  9062  002A3E  0E0A               	movlw	10
  9063  002A40  6E03               	movwf	___awmod@divisor^0,c
  9064  002A42  EC30  F01B         	call	___awmod	;wreg free
  9065  002A46  5001               	movf	?___awmod^0,w,c
  9066  002A48  0F30               	addlw	48
  9067  002A4A  0100               	movlb	0	; () banked
  9068  002A4C  6FCE               	movwf	(Reloj_Calendario@Date+15)& (0+255),b
  9069  002A4E                     
  9070                           ; BSR set to: 0
  9071                           ;Main.c: 105:     LCD_Goto(1, 1);
  9072  002A4E  0E01               	movlw	1
  9073  002A50  6E05               	movwf	LCD_Goto@row^0,c
  9074  002A52  0E01               	movlw	1
  9075  002A54  EC07  F01D         	call	_LCD_Goto
  9076  002A58                     
  9077                           ;Main.c: 106:     LCD_Print(Time);
  9078  002A58  0ED0               	movlw	low Reloj_Calendario@Time
  9079  002A5A  6E03               	movwf	LCD_Print@LCD_Str^0,c
  9080  002A5C  0E00               	movlw	high Reloj_Calendario@Time
  9081  002A5E  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  9082  002A60  ECD7  F01A         	call	_LCD_Print	;wreg free
  9083  002A64                     
  9084                           ;Main.c: 107:     LCD_Goto(1, 2);
  9085  002A64  0E02               	movlw	2
  9086  002A66  6E05               	movwf	LCD_Goto@row^0,c
  9087  002A68  0E01               	movlw	1
  9088  002A6A  EC07  F01D         	call	_LCD_Goto
  9089  002A6E                     
  9090                           ;Main.c: 108:     LCD_Print(Date);
  9091  002A6E  0EBF               	movlw	low Reloj_Calendario@Date
  9092  002A70  6E03               	movwf	LCD_Print@LCD_Str^0,c
  9093  002A72  0E00               	movlw	high Reloj_Calendario@Date
  9094  002A74  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  9095  002A76  ECD7  F01A         	call	_LCD_Print	;wreg free
  9096  002A7A                     
  9097                           ;Main.c: 110:     buffer_TX[6] = Time[6];
  9098  002A7A  C0D6  F156         	movff	Reloj_Calendario@Time+6,_buffer_TX+6
  9099  002A7E                     
  9100                           ;Main.c: 111:     buffer_TX[7] = Time[7];
  9101  002A7E  C0D7  F157         	movff	Reloj_Calendario@Time+7,_buffer_TX+7
  9102  002A82                     
  9103                           ;Main.c: 112:     buffer_TX[9] = Time[9];
  9104  002A82  C0D9  F159         	movff	Reloj_Calendario@Time+9,_buffer_TX+9
  9105  002A86                     
  9106                           ;Main.c: 113:     buffer_TX[10] = Time[10];
  9107  002A86  C0DA  F15A         	movff	Reloj_Calendario@Time+10,_buffer_TX+10
  9108  002A8A                     
  9109                           ;Main.c: 115:     buffer_TX[18] = Date[6];
  9110  002A8A  C0C5  F162         	movff	Reloj_Calendario@Date+6,_buffer_TX+18
  9111  002A8E                     
  9112                           ;Main.c: 116:     buffer_TX[19] = Date[7];
  9113  002A8E  C0C6  F163         	movff	Reloj_Calendario@Date+7,_buffer_TX+19
  9114  002A92                     
  9115                           ;Main.c: 117:     buffer_TX[21] = Date[9];
  9116  002A92  C0C8  F165         	movff	Reloj_Calendario@Date+9,_buffer_TX+21
  9117  002A96                     
  9118                           ;Main.c: 118:     buffer_TX[22] = Date[10];
  9119  002A96  C0C9  F166         	movff	Reloj_Calendario@Date+10,_buffer_TX+22
  9120  002A9A                     
  9121                           ;Main.c: 119:     buffer_TX[24] = Date[14];
  9122  002A9A  C0CD  F168         	movff	Reloj_Calendario@Date+14,_buffer_TX+24
  9123  002A9E                     
  9124                           ;Main.c: 120:     buffer_TX[25] = Date[15];
  9125  002A9E  C0CE  F169         	movff	Reloj_Calendario@Date+15,_buffer_TX+25
  9126  002AA2  0012               	return		;funcret
  9127  002AA4                     __end_of_Reloj_Calendario:
  9128                           	callstack 0
  9129                           
  9130 ;; *************** function ___awmod *****************
  9131 ;; Defined at:
  9132 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  dividend        2    0[COMRAM] int 
  9135 ;;  divisor         2    2[COMRAM] int 
  9136 ;; Auto vars:     Size  Location     Type
  9137 ;;  sign            1    5[COMRAM] unsigned char 
  9138 ;;  counter         1    4[COMRAM] unsigned char 
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  2    0[COMRAM] int 
  9141 ;; Registers used:
  9142 ;;		wreg, status,2, status,0
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9148 ;;      Params:         4       0       0       0       0       0       0       0       0
  9149 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9151 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9152 ;;Total ram usage:        6 bytes
  9153 ;; Hardware stack levels used: 1
  9154 ;; This function calls:
  9155 ;;		Nothing
  9156 ;; This function is called by:
  9157 ;;		_Reloj_Calendario
  9158 ;;		_efgtoa
  9159 ;;		_Decimal_a_BCD
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text37
  9164  003660                     __ptext37:
  9165                           	callstack 0
  9166  003660                     ___awmod:
  9167                           	callstack 25
  9168  003660  0E00               	movlw	0
  9169  003662  6E06               	movwf	___awmod@sign^0,c
  9170  003664  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9171  003666  EF39  F01B         	goto	u3510
  9172  00366A  EF37  F01B         	goto	u3511
  9173  00366E                     u3511:
  9174  00366E  EF3F  F01B         	goto	l3481
  9175  003672                     u3510:
  9176  003672  6C01               	negf	___awmod@dividend^0,c
  9177  003674  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9178  003676  B0D8               	btfsc	status,0,c
  9179  003678  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9180  00367A  0E01               	movlw	1
  9181  00367C  6E06               	movwf	___awmod@sign^0,c
  9182  00367E                     l3481:
  9183  00367E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9184  003680  EF46  F01B         	goto	u3520
  9185  003684  EF44  F01B         	goto	u3521
  9186  003688                     u3521:
  9187  003688  EF4A  F01B         	goto	l3485
  9188  00368C                     u3520:
  9189  00368C  6C03               	negf	___awmod@divisor^0,c
  9190  00368E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9191  003690  B0D8               	btfsc	status,0,c
  9192  003692  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9193  003694                     l3485:
  9194  003694  5003               	movf	___awmod@divisor^0,w,c
  9195  003696  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9196  003698  B4D8               	btfsc	status,2,c
  9197  00369A  EF51  F01B         	goto	u3531
  9198  00369E  EF53  F01B         	goto	u3530
  9199  0036A2                     u3531:
  9200  0036A2  EF77  F01B         	goto	l3501
  9201  0036A6                     u3530:
  9202  0036A6  0E01               	movlw	1
  9203  0036A8  6E05               	movwf	___awmod@counter^0,c
  9204  0036AA  EF5B  F01B         	goto	l3491
  9205  0036AE                     l3489:
  9206  0036AE  90D8               	bcf	status,0,c
  9207  0036B0  3603               	rlcf	___awmod@divisor^0,f,c
  9208  0036B2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9209  0036B4  2A05               	incf	___awmod@counter^0,f,c
  9210  0036B6                     l3491:
  9211  0036B6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9212  0036B8  EF60  F01B         	goto	u3541
  9213  0036BC  EF62  F01B         	goto	u3540
  9214  0036C0                     u3541:
  9215  0036C0  EF57  F01B         	goto	l3489
  9216  0036C4                     u3540:
  9217  0036C4                     l3493:
  9218  0036C4  5003               	movf	___awmod@divisor^0,w,c
  9219  0036C6  5C01               	subwf	___awmod@dividend^0,w,c
  9220  0036C8  5004               	movf	(___awmod@divisor+1)^0,w,c
  9221  0036CA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9222  0036CC  A0D8               	btfss	status,0,c
  9223  0036CE  EF6B  F01B         	goto	u3551
  9224  0036D2  EF6D  F01B         	goto	u3550
  9225  0036D6                     u3551:
  9226  0036D6  EF71  F01B         	goto	l3497
  9227  0036DA                     u3550:
  9228  0036DA  5003               	movf	___awmod@divisor^0,w,c
  9229  0036DC  5E01               	subwf	___awmod@dividend^0,f,c
  9230  0036DE  5004               	movf	(___awmod@divisor+1)^0,w,c
  9231  0036E0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9232  0036E2                     l3497:
  9233  0036E2  90D8               	bcf	status,0,c
  9234  0036E4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9235  0036E6  3203               	rrcf	___awmod@divisor^0,f,c
  9236  0036E8  2E05               	decfsz	___awmod@counter^0,f,c
  9237  0036EA  EF62  F01B         	goto	l3493
  9238  0036EE                     l3501:
  9239  0036EE  5006               	movf	___awmod@sign^0,w,c
  9240  0036F0  B4D8               	btfsc	status,2,c
  9241  0036F2  EF7D  F01B         	goto	u3561
  9242  0036F6  EF7F  F01B         	goto	u3560
  9243  0036FA                     u3561:
  9244  0036FA  EF83  F01B         	goto	l3505
  9245  0036FE                     u3560:
  9246  0036FE  6C01               	negf	___awmod@dividend^0,c
  9247  003700  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9248  003702  B0D8               	btfsc	status,0,c
  9249  003704  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9250  003706                     l3505:
  9251  003706  C001  F001         	movff	___awmod@dividend,?___awmod
  9252  00370A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9253  00370E  0012               	return		;funcret
  9254  003710                     __end_of___awmod:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function ___awdiv *****************
  9258 ;; Defined at:
  9259 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  dividend        2    0[COMRAM] int 
  9262 ;;  divisor         2    2[COMRAM] int 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  quotient        2    6[COMRAM] int 
  9265 ;;  sign            1    5[COMRAM] unsigned char 
  9266 ;;  counter         1    4[COMRAM] unsigned char 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  2    0[COMRAM] int 
  9269 ;; Registers used:
  9270 ;;		wreg, status,2, status,0
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9276 ;;      Params:         4       0       0       0       0       0       0       0       0
  9277 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9279 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9280 ;;Total ram usage:        8 bytes
  9281 ;; Hardware stack levels used: 1
  9282 ;; This function calls:
  9283 ;;		Nothing
  9284 ;; This function is called by:
  9285 ;;		_Reloj_Calendario
  9286 ;;		_efgtoa
  9287 ;;		_Decimal_a_BCD
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text38
  9292  0034EA                     __ptext38:
  9293                           	callstack 0
  9294  0034EA                     ___awdiv:
  9295                           	callstack 25
  9296  0034EA  0E00               	movlw	0
  9297  0034EC  6E06               	movwf	___awdiv@sign^0,c
  9298  0034EE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9299  0034F0  EF7E  F01A         	goto	u3450
  9300  0034F4  EF7C  F01A         	goto	u3451
  9301  0034F8                     u3451:
  9302  0034F8  EF84  F01A         	goto	l3437
  9303  0034FC                     u3450:
  9304  0034FC  6C03               	negf	___awdiv@divisor^0,c
  9305  0034FE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9306  003500  B0D8               	btfsc	status,0,c
  9307  003502  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9308  003504  0E01               	movlw	1
  9309  003506  6E06               	movwf	___awdiv@sign^0,c
  9310  003508                     l3437:
  9311  003508  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9312  00350A  EF8B  F01A         	goto	u3460
  9313  00350E  EF89  F01A         	goto	u3461
  9314  003512                     u3461:
  9315  003512  EF91  F01A         	goto	l3443
  9316  003516                     u3460:
  9317  003516  6C01               	negf	___awdiv@dividend^0,c
  9318  003518  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9319  00351A  B0D8               	btfsc	status,0,c
  9320  00351C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9321  00351E  0E01               	movlw	1
  9322  003520  1A06               	xorwf	___awdiv@sign^0,f,c
  9323  003522                     l3443:
  9324  003522  0E00               	movlw	0
  9325  003524  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9326  003526  0E00               	movlw	0
  9327  003528  6E07               	movwf	___awdiv@quotient^0,c
  9328  00352A  5003               	movf	___awdiv@divisor^0,w,c
  9329  00352C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9330  00352E  B4D8               	btfsc	status,2,c
  9331  003530  EF9C  F01A         	goto	u3471
  9332  003534  EF9E  F01A         	goto	u3470
  9333  003538                     u3471:
  9334  003538  EFC6  F01A         	goto	l3465
  9335  00353C                     u3470:
  9336  00353C  0E01               	movlw	1
  9337  00353E  6E05               	movwf	___awdiv@counter^0,c
  9338  003540  EFA6  F01A         	goto	l3451
  9339  003544                     l3449:
  9340  003544  90D8               	bcf	status,0,c
  9341  003546  3603               	rlcf	___awdiv@divisor^0,f,c
  9342  003548  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9343  00354A  2A05               	incf	___awdiv@counter^0,f,c
  9344  00354C                     l3451:
  9345  00354C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9346  00354E  EFAB  F01A         	goto	u3481
  9347  003552  EFAD  F01A         	goto	u3480
  9348  003556                     u3481:
  9349  003556  EFA2  F01A         	goto	l3449
  9350  00355A                     u3480:
  9351  00355A                     l3453:
  9352  00355A  90D8               	bcf	status,0,c
  9353  00355C  3607               	rlcf	___awdiv@quotient^0,f,c
  9354  00355E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9355  003560  5003               	movf	___awdiv@divisor^0,w,c
  9356  003562  5C01               	subwf	___awdiv@dividend^0,w,c
  9357  003564  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9358  003566  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9359  003568  A0D8               	btfss	status,0,c
  9360  00356A  EFB9  F01A         	goto	u3491
  9361  00356E  EFBB  F01A         	goto	u3490
  9362  003572                     u3491:
  9363  003572  EFC0  F01A         	goto	l3461
  9364  003576                     u3490:
  9365  003576  5003               	movf	___awdiv@divisor^0,w,c
  9366  003578  5E01               	subwf	___awdiv@dividend^0,f,c
  9367  00357A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9368  00357C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9369  00357E  8007               	bsf	___awdiv@quotient^0,0,c
  9370  003580                     l3461:
  9371  003580  90D8               	bcf	status,0,c
  9372  003582  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9373  003584  3203               	rrcf	___awdiv@divisor^0,f,c
  9374  003586  2E05               	decfsz	___awdiv@counter^0,f,c
  9375  003588  EFAD  F01A         	goto	l3453
  9376  00358C                     l3465:
  9377  00358C  5006               	movf	___awdiv@sign^0,w,c
  9378  00358E  B4D8               	btfsc	status,2,c
  9379  003590  EFCC  F01A         	goto	u3501
  9380  003594  EFCE  F01A         	goto	u3500
  9381  003598                     u3501:
  9382  003598  EFD2  F01A         	goto	l3469
  9383  00359C                     u3500:
  9384  00359C  6C07               	negf	___awdiv@quotient^0,c
  9385  00359E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9386  0035A0  B0D8               	btfsc	status,0,c
  9387  0035A2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9388  0035A4                     l3469:
  9389  0035A4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9390  0035A8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9391  0035AC  0012               	return		;funcret
  9392  0035AE                     __end_of___awdiv:
  9393                           	callstack 0
  9394                           
  9395 ;; *************** function _LCD_Print *****************
  9396 ;; Defined at:
  9397 ;;		line 98 in file "./LCD_librery.h"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  LCD_Str         2    2[COMRAM] PTR unsigned char 
  9400 ;;		 -> STR_3(2), Mostrar_Temperatura@temperatura(4), STR_1(13), Reloj_Calendario@Date(17), 
  9401 ;;		 -> Reloj_Calendario@Time(15), 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  i               1    7[COMRAM] unsigned char 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9413 ;;      Params:         2       0       0       0       0       0       0       0       0
  9414 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9415 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9416 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9417 ;;Total ram usage:        6 bytes
  9418 ;; Hardware stack levels used: 1
  9419 ;; Hardware stack levels required when called: 1
  9420 ;; This function calls:
  9421 ;;		_LCD_Write_Nibble
  9422 ;; This function is called by:
  9423 ;;		_Reloj_Calendario
  9424 ;;		_Mostrar_Temperatura
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text39
  9429  0035AE                     __ptext39:
  9430                           	callstack 0
  9431  0035AE                     _LCD_Print:
  9432                           	callstack 28
  9433  0035AE                     
  9434                           ;./LCD_librery.h: 98: void LCD_Print(char* LCD_Str);./LCD_librery.h: 99: {;./LCD_librery
      +                          .h: 100:   uint8_t i = 0;
  9435  0035AE  0E00               	movlw	0
  9436  0035B0  6E08               	movwf	LCD_Print@i^0,c
  9437  0035B2                     
  9438                           ;./LCD_librery.h: 101:   RS = 1;
  9439  0035B2  0100               	movlb	0	; () banked
  9440  0035B4  81FA               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  9441                           
  9442                           ;./LCD_librery.h: 102:   while(LCD_Str[i] != '\0')
  9443  0035B6  EF11  F01B         	goto	l4197
  9444  0035BA                     l4193:
  9445                           
  9446                           ;./LCD_librery.h: 103:   {;./LCD_librery.h: 104:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  9447  0035BA  5008               	movf	LCD_Print@i^0,w,c
  9448  0035BC  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  9449  0035BE  6E05               	movwf	??_LCD_Print^0,c
  9450  0035C0  0E00               	movlw	0
  9451  0035C2  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  9452  0035C4  6E06               	movwf	(??_LCD_Print+1)^0,c
  9453  0035C6  C005  FFF6         	movff	??_LCD_Print,tblptrl
  9454  0035CA  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  9455  0035CE  6AF8               	clrf	tblptru,c
  9456  0035D0  0E07               	movlw	(high __ramtop+-1)
  9457  0035D2  64F7               	cpfsgt	tblptrh,c
  9458  0035D4  D003               	bra	u4717
  9459  0035D6  0008               	tblrd		*
  9460  0035D8  50F5               	movf	tablat,w,c
  9461  0035DA  D005               	bra	u4710
  9462  0035DC                     u4717:
  9463  0035DC  CFF6 FFE1          	movff	tblptrl,fsr1l
  9464  0035E0  CFF7 FFE2          	movff	tblptrh,fsr1h
  9465  0035E4  50E7               	movf	indf1,w,c
  9466  0035E6                     u4710:
  9467  0035E6  6E07               	movwf	(??_LCD_Print+2)^0,c
  9468  0035E8  3807               	swapf	(??_LCD_Print+2)^0,w,c
  9469  0035EA  0B0F               	andlw	15
  9470  0035EC  EC7D  F01C         	call	_LCD_Write_Nibble
  9471                           
  9472                           ;./LCD_librery.h: 105:     LCD_Write_Nibble(LCD_Str[i++] );
  9473  0035F0  5008               	movf	LCD_Print@i^0,w,c
  9474  0035F2  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  9475  0035F4  6E05               	movwf	??_LCD_Print^0,c
  9476  0035F6  0E00               	movlw	0
  9477  0035F8  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  9478  0035FA  6E06               	movwf	(??_LCD_Print+1)^0,c
  9479  0035FC  C005  FFF6         	movff	??_LCD_Print,tblptrl
  9480  003600  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  9481  003604  6AF8               	clrf	tblptru,c
  9482  003606  0E07               	movlw	(high __ramtop+-1)
  9483  003608  64F7               	cpfsgt	tblptrh,c
  9484  00360A  D003               	bra	u4727
  9485  00360C  0008               	tblrd		*
  9486  00360E  50F5               	movf	tablat,w,c
  9487  003610  D005               	bra	u4720
  9488  003612                     u4727:
  9489  003612  CFF6 FFE1          	movff	tblptrl,fsr1l
  9490  003616  CFF7 FFE2          	movff	tblptrh,fsr1h
  9491  00361A  50E7               	movf	indf1,w,c
  9492  00361C                     u4720:
  9493  00361C  EC7D  F01C         	call	_LCD_Write_Nibble
  9494  003620  2A08               	incf	LCD_Print@i^0,f,c
  9495  003622                     l4197:
  9496                           
  9497                           ;./LCD_librery.h: 102:   while(LCD_Str[i] != '\0')
  9498  003622  5008               	movf	LCD_Print@i^0,w,c
  9499  003624  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  9500  003626  6E05               	movwf	??_LCD_Print^0,c
  9501  003628  0E00               	movlw	0
  9502  00362A  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  9503  00362C  6E06               	movwf	(??_LCD_Print+1)^0,c
  9504  00362E  C005  FFF6         	movff	??_LCD_Print,tblptrl
  9505  003632  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  9506  003636  6AF8               	clrf	tblptru,c
  9507  003638  0E07               	movlw	(high __ramtop+-1)
  9508  00363A  64F7               	cpfsgt	tblptrh,c
  9509  00363C  D003               	bra	u4737
  9510  00363E  0008               	tblrd		*
  9511  003640  50F5               	movf	tablat,w,c
  9512  003642  D005               	bra	u4730
  9513  003644                     u4737:
  9514  003644  CFF6 FFE1          	movff	tblptrl,fsr1l
  9515  003648  CFF7 FFE2          	movff	tblptrh,fsr1h
  9516  00364C  50E7               	movf	indf1,w,c
  9517  00364E                     u4730:
  9518  00364E  0900               	iorlw	0
  9519  003650  A4D8               	btfss	status,2,c
  9520  003652  EF2D  F01B         	goto	u4741
  9521  003656  EF2F  F01B         	goto	u4740
  9522  00365A                     u4741:
  9523  00365A  EFDD  F01A         	goto	l4193
  9524  00365E                     u4740:
  9525  00365E  0012               	return		;funcret
  9526  003660                     __end_of_LCD_Print:
  9527                           	callstack 0
  9528                           
  9529 ;; *************** function _LCD_Goto *****************
  9530 ;; Defined at:
  9531 ;;		line 72 in file "./LCD_librery.h"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;  col             1    wreg     unsigned char 
  9534 ;;  row             1    4[COMRAM] unsigned char 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;  col             1    7[COMRAM] unsigned char 
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      void 
  9539 ;; Registers used:
  9540 ;;		wreg, status,2, status,0, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9546 ;;      Params:         1       0       0       0       0       0       0       0       0
  9547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9548 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9549 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9550 ;;Total ram usage:        4 bytes
  9551 ;; Hardware stack levels used: 1
  9552 ;; Hardware stack levels required when called: 2
  9553 ;; This function calls:
  9554 ;;		_LCD_Cmd
  9555 ;; This function is called by:
  9556 ;;		_Reloj_Calendario
  9557 ;;		_Mostrar_Temperatura
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text40
  9562  003A0E                     __ptext40:
  9563                           	callstack 0
  9564  003A0E                     _LCD_Goto:
  9565                           	callstack 27
  9566                           
  9567                           ;incstack = 0
  9568                           ;LCD_Goto@col stored from wreg
  9569  003A0E  6E08               	movwf	LCD_Goto@col^0,c
  9570  003A10                     
  9571                           ;./LCD_librery.h: 72: void LCD_Goto(uint8_t col, uint8_t row);./LCD_librery.h: 73: {;./L
      +                          CD_librery.h: 74:   switch(row)
  9572  003A10  EF22  F01D         	goto	l4183
  9573  003A14                     l4175:
  9574                           
  9575                           ;./LCD_librery.h: 77:       LCD_Cmd(0xC0 + col - 1);
  9576  003A14  5008               	movf	LCD_Goto@col^0,w,c
  9577  003A16  0FBF               	addlw	191
  9578  003A18  EC51  F01E         	call	_LCD_Cmd
  9579                           
  9580                           ;./LCD_librery.h: 78:       break;
  9581  003A1C  EF3B  F01D         	goto	l162
  9582  003A20                     l4177:
  9583                           
  9584                           ;./LCD_librery.h: 80:       LCD_Cmd(0x94 + col - 1);
  9585  003A20  5008               	movf	LCD_Goto@col^0,w,c
  9586  003A22  0F93               	addlw	147
  9587  003A24  EC51  F01E         	call	_LCD_Cmd
  9588                           
  9589                           ;./LCD_librery.h: 81:       break;
  9590  003A28  EF3B  F01D         	goto	l162
  9591  003A2C                     l4179:
  9592                           
  9593                           ;./LCD_librery.h: 83:       LCD_Cmd(0xD4 + col - 1);
  9594  003A2C  5008               	movf	LCD_Goto@col^0,w,c
  9595  003A2E  0FD3               	addlw	211
  9596  003A30  EC51  F01E         	call	_LCD_Cmd
  9597                           
  9598                           ;./LCD_librery.h: 84:     break;
  9599  003A34  EF3B  F01D         	goto	l162
  9600  003A38                     l4181:
  9601                           
  9602                           ;./LCD_librery.h: 86:       LCD_Cmd(0x80 + col - 1);
  9603  003A38  5008               	movf	LCD_Goto@col^0,w,c
  9604  003A3A  0F7F               	addlw	127
  9605  003A3C  EC51  F01E         	call	_LCD_Cmd
  9606                           
  9607                           ;./LCD_librery.h: 87:   }
  9608  003A40  EF3B  F01D         	goto	l162
  9609  003A44                     l4183:
  9610  003A44  5005               	movf	LCD_Goto@row^0,w,c
  9611  003A46  6E06               	movwf	??_LCD_Goto^0,c
  9612  003A48  6A07               	clrf	(??_LCD_Goto+1)^0,c
  9613                           
  9614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9615                           ; Switch size 1, requested type "simple"
  9616                           ; Number of cases is 1, Range of values is 0 to 0
  9617                           ; switch strategies available:
  9618                           ; Name         Instructions Cycles
  9619                           ; simple_byte            4     3 (average)
  9620                           ;	Chosen strategy is simple_byte
  9621  003A4A  5007               	movf	(??_LCD_Goto+1)^0,w,c
  9622  003A4C  0A00               	xorlw	0	; case 0
  9623  003A4E  B4D8               	btfsc	status,2,c
  9624  003A50  EF2C  F01D         	goto	l4617
  9625  003A54  EF1C  F01D         	goto	l4181
  9626  003A58                     l4617:
  9627                           
  9628                           ; Switch size 1, requested type "simple"
  9629                           ; Number of cases is 3, Range of values is 2 to 4
  9630                           ; switch strategies available:
  9631                           ; Name         Instructions Cycles
  9632                           ; simple_byte           10     6 (average)
  9633                           ;	Chosen strategy is simple_byte
  9634  003A58  5006               	movf	??_LCD_Goto^0,w,c
  9635  003A5A  0A02               	xorlw	2	; case 2
  9636  003A5C  B4D8               	btfsc	status,2,c
  9637  003A5E  EF0A  F01D         	goto	l4175
  9638  003A62  0A01               	xorlw	1	; case 3
  9639  003A64  B4D8               	btfsc	status,2,c
  9640  003A66  EF10  F01D         	goto	l4177
  9641  003A6A  0A07               	xorlw	7	; case 4
  9642  003A6C  B4D8               	btfsc	status,2,c
  9643  003A6E  EF16  F01D         	goto	l4179
  9644  003A72  EF1C  F01D         	goto	l4181
  9645  003A76                     l162:
  9646  003A76  0012               	return		;funcret
  9647  003A78                     __end_of_LCD_Goto:
  9648                           	callstack 0
  9649                           
  9650 ;; *************** function _LCD_Cmd *****************
  9651 ;; Defined at:
  9652 ;;		line 63 in file "./LCD_librery.h"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  Command         1    wreg     unsigned char 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  Command         1    3[COMRAM] unsigned char 
  9657 ;; Return value:  Size  Location     Type
  9658 ;;                  1    wreg      void 
  9659 ;; Registers used:
  9660 ;;		wreg, status,2, status,0, cstack
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9666 ;;      Params:         0       0       0       0       0       0       0       0       0
  9667 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9668 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9669 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9670 ;;Total ram usage:        2 bytes
  9671 ;; Hardware stack levels used: 1
  9672 ;; Hardware stack levels required when called: 1
  9673 ;; This function calls:
  9674 ;;		_LCD_Write_Nibble
  9675 ;; This function is called by:
  9676 ;;		_LCD_Goto
  9677 ;;		_LCD_Begin
  9678 ;;		_LCD_Clear
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682                           	psect	text41
  9683  003CA2                     __ptext41:
  9684                           	callstack 0
  9685  003CA2                     _LCD_Cmd:
  9686                           	callstack 27
  9687                           
  9688                           ;incstack = 0
  9689                           ;LCD_Cmd@Command stored from wreg
  9690  003CA2  6E04               	movwf	LCD_Cmd@Command^0,c
  9691  003CA4                     
  9692                           ;./LCD_librery.h: 63: void LCD_Cmd(uint8_t Command);./LCD_librery.h: 64: {;./LCD_librery
      +                          .h: 65:   RS = 0;
  9693  003CA4  0100               	movlb	0	; () banked
  9694  003CA6  91FA               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  9695  003CA8                     
  9696                           ; BSR set to: 0
  9697                           ;./LCD_librery.h: 66:   LCD_Write_Nibble(Command >> 4);
  9698  003CA8  3804               	swapf	LCD_Cmd@Command^0,w,c
  9699  003CAA  0B0F               	andlw	15
  9700  003CAC  EC7D  F01C         	call	_LCD_Write_Nibble
  9701                           
  9702                           ;./LCD_librery.h: 67:   LCD_Write_Nibble(Command);
  9703  003CB0  5004               	movf	LCD_Cmd@Command^0,w,c
  9704  003CB2  EC7D  F01C         	call	_LCD_Write_Nibble
  9705  003CB6                     
  9706                           ;./LCD_librery.h: 68:   if((Command == 0x01) || (Command == 0x02))
  9707  003CB6  0404               	decf	LCD_Cmd@Command^0,w,c
  9708  003CB8  B4D8               	btfsc	status,2,c
  9709  003CBA  EF61  F01E         	goto	u4591
  9710  003CBE  EF63  F01E         	goto	u4590
  9711  003CC2                     u4591:
  9712  003CC2  EF6C  F01E         	goto	l4083
  9713  003CC6                     u4590:
  9714  003CC6  0E02               	movlw	2
  9715  003CC8  1804               	xorwf	LCD_Cmd@Command^0,w,c
  9716  003CCA  A4D8               	btfss	status,2,c
  9717  003CCC  EF6A  F01E         	goto	u4601
  9718  003CD0  EF6C  F01E         	goto	u4600
  9719  003CD4                     u4601:
  9720  003CD4  EF74  F01E         	goto	l153
  9721  003CD8                     u4600:
  9722  003CD8                     l4083:
  9723                           
  9724                           ;./LCD_librery.h: 69:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9725  003CD8  0E06               	movlw	6
  9726  003CDA  6E03               	movwf	??_LCD_Cmd^0,c
  9727  003CDC  0E30               	movlw	48
  9728  003CDE                     u5247:
  9729  003CDE  2EE8               	decfsz	wreg,f,c
  9730  003CE0  D7FE               	bra	u5247
  9731  003CE2  2E03               	decfsz	??_LCD_Cmd^0,f,c
  9732  003CE4  D7FC               	bra	u5247
  9733  003CE6  D000               	nop2	
  9734  003CE8                     l153:
  9735  003CE8  0012               	return		;funcret
  9736  003CEA                     __end_of_LCD_Cmd:
  9737                           	callstack 0
  9738                           
  9739 ;; *************** function _LCD_Write_Nibble *****************
  9740 ;; Defined at:
  9741 ;;		line 46 in file "./LCD_librery.h"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  n               1    wreg     unsigned char 
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;  n               1    1[COMRAM] unsigned char 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      void 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9755 ;;      Params:         0       0       0       0       0       0       0       0       0
  9756 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9757 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9758 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9759 ;;Total ram usage:        2 bytes
  9760 ;; Hardware stack levels used: 1
  9761 ;; This function calls:
  9762 ;;		Nothing
  9763 ;; This function is called by:
  9764 ;;		_LCD_Cmd
  9765 ;;		_LCD_Print
  9766 ;;		_LCD_PutC
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           	psect	text42
  9771  0038FA                     __ptext42:
  9772                           	callstack 0
  9773  0038FA                     _LCD_Write_Nibble:
  9774                           	callstack 28
  9775                           
  9776                           ;incstack = 0
  9777                           ;LCD_Write_Nibble@n stored from wreg
  9778  0038FA  6E02               	movwf	LCD_Write_Nibble@n^0,c
  9779  0038FC                     
  9780                           ;./LCD_librery.h: 46: void LCD_Write_Nibble(uint8_t n);./LCD_librery.h: 47: {;./LCD_libr
      +                          ery.h: 48:   LATCbits.LC0 = RS;
  9781  0038FC  0100               	movlb	0	; () banked
  9782  0038FE  A1FA               	btfss	(_RS/(0+8))& (0+255),_RS& (0+7),b
  9783  003900  D002               	bra	u4015
  9784  003902  808B               	bsf	139,0,c	;volatile
  9785  003904  D001               	bra	u4017
  9786  003906                     u4015:
  9787  003906  908B               	bcf	139,0,c	;volatile
  9788  003908                     u4017:
  9789  003908                     
  9790                           ;./LCD_librery.h: 49:   LATDbits.LD4 = n & 0x01;
  9791  003908  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9792  00390C  0E01               	movlw	1
  9793  00390E  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9794  003910  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  9795  003912  508C               	movf	140,w,c	;volatile
  9796  003914  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9797  003916  0BEF               	andlw	-17
  9798  003918  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9799  00391A  6E8C               	movwf	140,c	;volatile
  9800                           
  9801                           ;./LCD_librery.h: 50:   LATDbits.LD5 = (n >> 1) & 0x01;
  9802  00391C  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9803  003920  90D8               	bcf	status,0,c
  9804  003922  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9805  003924  0E01               	movlw	1
  9806  003926  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9807  003928  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  9808  00392A  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  9809  00392C  508C               	movf	140,w,c	;volatile
  9810  00392E  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9811  003930  0BDF               	andlw	-33
  9812  003932  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9813  003934  6E8C               	movwf	140,c	;volatile
  9814                           
  9815                           ;./LCD_librery.h: 51:   LATDbits.LD6 = (n >> 2) & 0x01;
  9816  003936  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9817  00393A  90D8               	bcf	status,0,c
  9818  00393C  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9819  00393E  90D8               	bcf	status,0,c
  9820  003940  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9821  003942  0E01               	movlw	1
  9822  003944  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9823  003946  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  9824  003948  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  9825  00394A  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  9826  00394C  508C               	movf	140,w,c	;volatile
  9827  00394E  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9828  003950  0BBF               	andlw	-65
  9829  003952  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9830  003954  6E8C               	movwf	140,c	;volatile
  9831                           
  9832                           ;./LCD_librery.h: 52:   LATDbits.LD7 = (n >> 3) & 0x01;
  9833  003956  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9834  00395A  90D8               	bcf	status,0,c
  9835  00395C  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9836  00395E  90D8               	bcf	status,0,c
  9837  003960  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9838  003962  90D8               	bcf	status,0,c
  9839  003964  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9840  003966  0E01               	movlw	1
  9841  003968  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9842  00396A  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9843  00396C  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9844  00396E  508C               	movf	140,w,c	;volatile
  9845  003970  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9846  003972  0B7F               	andlw	-129
  9847  003974  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9848  003976  6E8C               	movwf	140,c	;volatile
  9849  003978                     
  9850                           ;./LCD_librery.h: 55:   LATCbits.LC1 = 0;
  9851  003978  928B               	bcf	139,1,c	;volatile
  9852  00397A                     
  9853                           ;./LCD_librery.h: 56:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  9854  00397A  D000               	nop2		;2 cycle nop
  9855  00397C                     
  9856                           ;./LCD_librery.h: 57:   LATCbits.LC1 = 1;
  9857  00397C  828B               	bsf	139,1,c	;volatile
  9858  00397E                     
  9859                           ;./LCD_librery.h: 58:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  9860  00397E  D000               	nop2		;2 cycle nop
  9861  003980                     
  9862                           ;./LCD_librery.h: 59:   LATCbits.LC1 = 0;
  9863  003980  928B               	bcf	139,1,c	;volatile
  9864  003982                     
  9865                           ;./LCD_librery.h: 60:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  9866  003982  0E42               	movlw	66
  9867  003984                     u5257:
  9868  003984  2EE8               	decfsz	wreg,f,c
  9869  003986  D7FE               	bra	u5257
  9870  003988  D000               	nop2	
  9871  00398A  0012               	return		;funcret
  9872  00398C                     __end_of_LCD_Write_Nibble:
  9873                           	callstack 0
  9874                           
  9875 ;; *************** function _BCD_a_Decimal *****************
  9876 ;; Defined at:
  9877 ;;		line 58 in file "Main.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  numero          1    wreg     unsigned char 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;  numero          1    1[COMRAM] unsigned char 
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      unsigned char 
  9884 ;; Registers used:
  9885 ;;		wreg, status,2, status,0, prodl, prodh
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9891 ;;      Params:         0       0       0       0       0       0       0       0       0
  9892 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9893 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9894 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9895 ;;Total ram usage:        2 bytes
  9896 ;; Hardware stack levels used: 1
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_Reloj_Calendario
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           	psect	text43
  9905  003F26                     __ptext43:
  9906                           	callstack 0
  9907  003F26                     _BCD_a_Decimal:
  9908                           	callstack 28
  9909                           
  9910                           ;incstack = 0
  9911                           ;BCD_a_Decimal@numero stored from wreg
  9912  003F26  6E02               	movwf	BCD_a_Decimal@numero^0,c
  9913  003F28                     
  9914                           ;Main.c: 58: uint8_t BCD_a_Decimal (uint8_t numero);Main.c: 59: {;Main.c: 60:   return (
      +                          (numero >> 4) * 10 + (numero & 0x0F));
  9915  003F28  C002  F001         	movff	BCD_a_Decimal@numero,??_BCD_a_Decimal
  9916  003F2C  0E0F               	movlw	15
  9917  003F2E  1601               	andwf	??_BCD_a_Decimal^0,f,c
  9918  003F30  3802               	swapf	BCD_a_Decimal@numero^0,w,c
  9919  003F32  0B0F               	andlw	15
  9920  003F34  0D0A               	mullw	10
  9921  003F36  50F3               	movf	243,w,c
  9922  003F38  2401               	addwf	??_BCD_a_Decimal^0,w,c
  9923  003F3A  0012               	return		;funcret
  9924  003F3C                     __end_of_BCD_a_Decimal:
  9925                           	callstack 0
  9926                           
  9927 ;; *************** function _I2C_Write *****************
  9928 ;; Defined at:
  9929 ;;		line 117 in file "I2C_librery.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;  data            1    wreg     unsigned char 
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;  data            1    0[COMRAM] unsigned char 
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      void 
  9936 ;; Registers used:
  9937 ;;		wreg
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9943 ;;      Params:         0       0       0       0       0       0       0       0       0
  9944 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9946 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9947 ;;Total ram usage:        1 bytes
  9948 ;; Hardware stack levels used: 1
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_Establecer_Hora
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text44
  9957  003F0E                     __ptext44:
  9958                           	callstack 0
  9959  003F0E                     _I2C_Write:
  9960                           	callstack 29
  9961                           
  9962                           ;incstack = 0
  9963                           ;I2C_Write@data stored from wreg
  9964  003F0E  6E01               	movwf	I2C_Write@data^0,c
  9965  003F10                     
  9966                           ;I2C_librery.c: 117: void I2C_Write (uint8_t data);I2C_librery.c: 118: {;I2C_librery.c: 
      +                          119:     PIR1bits.SSPIF=0;
  9967  003F10  969E               	bcf	158,3,c	;volatile
  9968  003F12                     
  9969                           ;I2C_librery.c: 123:     SSPBUF=data;
  9970  003F12  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  9971  003F16                     l52:
  9972  003F16  A69E               	btfss	158,3,c	;volatile
  9973  003F18  EF90  F01F         	goto	u4811
  9974  003F1C  EF92  F01F         	goto	u4810
  9975  003F20                     u4811:
  9976  003F20  EF8B  F01F         	goto	l52
  9977  003F24                     u4810:
  9978  003F24  0012               	return		;funcret
  9979  003F26                     __end_of_I2C_Write:
  9980                           	callstack 0
  9981                           
  9982 ;; *************** function _I2C_Stop *****************
  9983 ;; Defined at:
  9984 ;;		line 64 in file "I2C_librery.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;		None
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;		None
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		None
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9998 ;;      Params:         0       0       0       0       0       0       0       0       0
  9999 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10001 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10002 ;;Total ram usage:        0 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_Establecer_Hora
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text45
 10012  003F92                     __ptext45:
 10013                           	callstack 0
 10014  003F92                     _I2C_Stop:
 10015                           	callstack 29
 10016  003F92                     
 10017                           ;I2C_librery.c: 66:     SSPCON2bits.PEN=1;
 10018  003F92  84C5               	bsf	197,2,c	;volatile
 10019  003F94                     l34:
 10020  003F94  B4C5               	btfsc	197,2,c	;volatile
 10021  003F96  EFCF  F01F         	goto	u4781
 10022  003F9A  EFD1  F01F         	goto	u4780
 10023  003F9E                     u4781:
 10024  003F9E  EFCA  F01F         	goto	l34
 10025  003FA2                     u4780:
 10026  003FA2  0012               	return		;funcret
 10027  003FA4                     __end_of_I2C_Stop:
 10028                           	callstack 0
 10029                           
 10030 ;; *************** function _I2C_Start *****************
 10031 ;; Defined at:
 10032 ;;		line 42 in file "I2C_librery.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;		None
 10035 ;; Auto vars:     Size  Location     Type
 10036 ;;		None
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      void 
 10039 ;; Registers used:
 10040 ;;		None
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0
 10047 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10048 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10049 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10050 ;;Total ram usage:        0 bytes
 10051 ;; Hardware stack levels used: 1
 10052 ;; This function calls:
 10053 ;;		Nothing
 10054 ;; This function is called by:
 10055 ;;		_Establecer_Hora
 10056 ;; This function uses a non-reentrant model
 10057 ;;
 10058                           
 10059                           	psect	text46
 10060  003FA4                     __ptext46:
 10061                           	callstack 0
 10062  003FA4                     _I2C_Start:
 10063                           	callstack 29
 10064  003FA4                     
 10065                           ;I2C_librery.c: 44:     SSPCON2bits.SEN=1;
 10066  003FA4  80C5               	bsf	197,0,c	;volatile
 10067  003FA6                     l22:
 10068  003FA6  B0C5               	btfsc	197,0,c	;volatile
 10069  003FA8  EFD8  F01F         	goto	u4761
 10070  003FAC  EFDA  F01F         	goto	u4760
 10071  003FB0                     u4761:
 10072  003FB0  EFD3  F01F         	goto	l22
 10073  003FB4                     u4760:
 10074  003FB4  0012               	return		;funcret
 10075  003FB6                     __end_of_I2C_Start:
 10076                           	callstack 0
 10077                           
 10078 ;; *************** function _I2C_Read *****************
 10079 ;; Defined at:
 10080 ;;		line 130 in file "I2C_librery.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;		None
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;		None
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      unsigned char 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10094 ;;      Params:         0       0       0       0       0       0       0       0       0
 10095 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10096 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10097 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10098 ;;Total ram usage:        0 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; This function calls:
 10101 ;;		Nothing
 10102 ;; This function is called by:
 10103 ;;		_Establecer_Hora
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           	psect	text47
 10108  003F3C                     __ptext47:
 10109                           	callstack 0
 10110  003F3C                     _I2C_Read:
 10111                           	callstack 29
 10112  003F3C                     
 10113                           ;I2C_librery.c: 132:     PIR1bits.SSPIF=0;
 10114  003F3C  969E               	bcf	158,3,c	;volatile
 10115                           
 10116                           ;I2C_librery.c: 136:     SSPCON2bits.RCEN=1;
 10117  003F3E  86C5               	bsf	197,3,c	;volatile
 10118  003F40                     l58:
 10119  003F40  A69E               	btfss	158,3,c	;volatile
 10120  003F42  EFA5  F01F         	goto	u4821
 10121  003F46  EFA7  F01F         	goto	u4820
 10122  003F4A                     u4821:
 10123  003F4A  EFA0  F01F         	goto	l58
 10124  003F4E                     u4820:
 10125  003F4E                     
 10126                           ;I2C_librery.c: 143:     return SSPBUF;
 10127  003F4E  50C9               	movf	201,w,c	;volatile
 10128  003F50  0012               	return		;funcret
 10129  003F52                     __end_of_I2C_Read:
 10130                           	callstack 0
 10131                           
 10132 ;; *************** function _I2C_ReStart *****************
 10133 ;; Defined at:
 10134 ;;		line 53 in file "I2C_librery.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;		None
 10137 ;; Auto vars:     Size  Location     Type
 10138 ;;		None
 10139 ;; Return value:  Size  Location     Type
 10140 ;;                  1    wreg      void 
 10141 ;; Registers used:
 10142 ;;		None
 10143 ;; Tracked objects:
 10144 ;;		On entry : 0/0
 10145 ;;		On exit  : 0/0
 10146 ;;		Unchanged: 0/0
 10147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10148 ;;      Params:         0       0       0       0       0       0       0       0       0
 10149 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10150 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10151 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10152 ;;Total ram usage:        0 bytes
 10153 ;; Hardware stack levels used: 1
 10154 ;; This function calls:
 10155 ;;		Nothing
 10156 ;; This function is called by:
 10157 ;;		_Establecer_Hora
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text48
 10162  003FB6                     __ptext48:
 10163                           	callstack 0
 10164  003FB6                     _I2C_ReStart:
 10165                           	callstack 29
 10166  003FB6                     
 10167                           ;I2C_librery.c: 55:     SSPCON2bits.RSEN=1;
 10168  003FB6  82C5               	bsf	197,1,c	;volatile
 10169  003FB8                     l28:
 10170  003FB8  B2C5               	btfsc	197,1,c	;volatile
 10171  003FBA  EFE1  F01F         	goto	u4771
 10172  003FBE  EFE3  F01F         	goto	u4770
 10173  003FC2                     u4771:
 10174  003FC2  EFDC  F01F         	goto	l28
 10175  003FC6                     u4770:
 10176  003FC6  0012               	return		;funcret
 10177  003FC8                     __end_of_I2C_ReStart:
 10178                           	callstack 0
 10179                           
 10180 ;; *************** function _I2C_NO_Ack *****************
 10181 ;; Defined at:
 10182 ;;		line 96 in file "I2C_librery.c"
 10183 ;; Parameters:    Size  Location     Type
 10184 ;;		None
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;		None
 10187 ;; Return value:  Size  Location     Type
 10188 ;;                  1    wreg      void 
 10189 ;; Registers used:
 10190 ;;		None
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10196 ;;      Params:         0       0       0       0       0       0       0       0       0
 10197 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10198 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10199 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10200 ;;Total ram usage:        0 bytes
 10201 ;; Hardware stack levels used: 1
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		_Establecer_Hora
 10206 ;; This function uses a non-reentrant model
 10207 ;;
 10208                           
 10209                           	psect	text49
 10210  003F52                     __ptext49:
 10211                           	callstack 0
 10212  003F52                     _I2C_NO_Ack:
 10213                           	callstack 29
 10214  003F52                     
 10215                           ;I2C_librery.c: 98:     PIR1bits.SSPIF=0;
 10216  003F52  969E               	bcf	158,3,c	;volatile
 10217                           
 10218                           ;I2C_librery.c: 102:     SSPCON2bits.ACKDT=1;
 10219  003F54  8AC5               	bsf	197,5,c	;volatile
 10220                           
 10221                           ;I2C_librery.c: 107:     SSPCON2bits.ACKEN=1;
 10222  003F56  88C5               	bsf	197,4,c	;volatile
 10223  003F58                     l46:
 10224  003F58  A69E               	btfss	158,3,c	;volatile
 10225  003F5A  EFB1  F01F         	goto	u4801
 10226  003F5E  EFB3  F01F         	goto	u4800
 10227  003F62                     u4801:
 10228  003F62  EFAC  F01F         	goto	l46
 10229  003F66                     u4800:
 10230  003F66  0012               	return		;funcret
 10231  003F68                     __end_of_I2C_NO_Ack:
 10232                           	callstack 0
 10233                           
 10234 ;; *************** function _I2C_Ack *****************
 10235 ;; Defined at:
 10236 ;;		line 75 in file "I2C_librery.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;		None
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  1    wreg      void 
 10243 ;; Registers used:
 10244 ;;		None
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10250 ;;      Params:         0       0       0       0       0       0       0       0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10253 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10254 ;;Total ram usage:        0 bytes
 10255 ;; Hardware stack levels used: 1
 10256 ;; This function calls:
 10257 ;;		Nothing
 10258 ;; This function is called by:
 10259 ;;		_Establecer_Hora
 10260 ;; This function uses a non-reentrant model
 10261 ;;
 10262                           
 10263                           	psect	text50
 10264  003F68                     __ptext50:
 10265                           	callstack 0
 10266  003F68                     _I2C_Ack:
 10267                           	callstack 29
 10268  003F68                     
 10269                           ;I2C_librery.c: 77:     PIR1bits.SSPIF=0;
 10270  003F68  969E               	bcf	158,3,c	;volatile
 10271                           
 10272                           ;I2C_librery.c: 81:     SSPCON2bits.ACKDT=0;
 10273  003F6A  9AC5               	bcf	197,5,c	;volatile
 10274                           
 10275                           ;I2C_librery.c: 86:     SSPCON2bits.ACKEN=1;
 10276  003F6C  88C5               	bsf	197,4,c	;volatile
 10277  003F6E                     l40:
 10278  003F6E  A69E               	btfss	158,3,c	;volatile
 10279  003F70  EFBC  F01F         	goto	u4791
 10280  003F74  EFBE  F01F         	goto	u4790
 10281  003F78                     u4791:
 10282  003F78  EFB7  F01F         	goto	l40
 10283  003F7C                     u4790:
 10284  003F7C  0012               	return		;funcret
 10285  003F7E                     __end_of_I2C_Ack:
 10286                           	callstack 0
 10287                           
 10288 ;; *************** function _ADC_Init *****************
 10289 ;; Defined at:
 10290 ;;		line 4 in file "adc_header.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;		None
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;		None
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, status,2
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10304 ;;      Params:         0       0       0       0       0       0       0       0       0
 10305 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10307 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10308 ;;Total ram usage:        0 bytes
 10309 ;; Hardware stack levels used: 1
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_main
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text51
 10318  003F7E                     __ptext51:
 10319                           	callstack 0
 10320  003F7E                     _ADC_Init:
 10321                           	callstack 30
 10322  003F7E                     
 10323                           ;adc_header.c: 6:     TRISA = 0xFF;
 10324  003F7E  6892               	setf	146,c	;volatile
 10325  003F80                     
 10326                           ;adc_header.c: 7:     ADCON1 = 0x0E;
 10327  003F80  0E0E               	movlw	14
 10328  003F82  6EC1               	movwf	193,c	;volatile
 10329                           
 10330                           ;adc_header.c: 8:     ADCON2 = 0x92;
 10331  003F84  0E92               	movlw	146
 10332  003F86  6EC0               	movwf	192,c	;volatile
 10333                           
 10334                           ;adc_header.c: 9:     ADRESH=0;
 10335  003F88  0E00               	movlw	0
 10336  003F8A  6EC4               	movwf	196,c	;volatile
 10337                           
 10338                           ;adc_header.c: 10:     ADRESL=0;
 10339  003F8C  0E00               	movlw	0
 10340  003F8E  6EC3               	movwf	195,c	;volatile
 10341  003F90  0012               	return		;funcret
 10342  003F92                     __end_of_ADC_Init:
 10343                           	callstack 0
 10344                           
 10345                           	psect	rparam
 10346  0000                     
 10347                           	psect	idloc
 10348                           
 10349                           ;Config register IDLOC0 @ 0x200000
 10350                           ;	unspecified, using default values
 10351  200000                     	org	2097152
 10352  200000  FF                 	db	255
 10353                           
 10354                           ;Config register IDLOC1 @ 0x200001
 10355                           ;	unspecified, using default values
 10356  200001                     	org	2097153
 10357  200001  FF                 	db	255
 10358                           
 10359                           ;Config register IDLOC2 @ 0x200002
 10360                           ;	unspecified, using default values
 10361  200002                     	org	2097154
 10362  200002  FF                 	db	255
 10363                           
 10364                           ;Config register IDLOC3 @ 0x200003
 10365                           ;	unspecified, using default values
 10366  200003                     	org	2097155
 10367  200003  FF                 	db	255
 10368                           
 10369                           ;Config register IDLOC4 @ 0x200004
 10370                           ;	unspecified, using default values
 10371  200004                     	org	2097156
 10372  200004  FF                 	db	255
 10373                           
 10374                           ;Config register IDLOC5 @ 0x200005
 10375                           ;	unspecified, using default values
 10376  200005                     	org	2097157
 10377  200005  FF                 	db	255
 10378                           
 10379                           ;Config register IDLOC6 @ 0x200006
 10380                           ;	unspecified, using default values
 10381  200006                     	org	2097158
 10382  200006  FF                 	db	255
 10383                           
 10384                           ;Config register IDLOC7 @ 0x200007
 10385                           ;	unspecified, using default values
 10386  200007                     	org	2097159
 10387  200007  FF                 	db	255
 10388                           
 10389                           	psect	config
 10390                           
 10391                           ;Config register CONFIG1L @ 0x300000
 10392                           ;	PLL Prescaler Selection bits
 10393                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10394                           ;	System Clock Postscaler Selection bits
 10395                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10396                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10397                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10398  300000                     	org	3145728
 10399  300000  00                 	db	0
 10400                           
 10401                           ;Config register CONFIG1H @ 0x300001
 10402                           ;	Oscillator Selection bits
 10403                           ;	FOSC = HS, HS oscillator (HS)
 10404                           ;	Fail-Safe Clock Monitor Enable bit
 10405                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10406                           ;	Internal/External Oscillator Switchover bit
 10407                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10408  300001                     	org	3145729
 10409  300001  0C                 	db	12
 10410                           
 10411                           ;Config register CONFIG2L @ 0x300002
 10412                           ;	Power-up Timer Enable bit
 10413                           ;	PWRT = OFF, PWRT disabled
 10414                           ;	Brown-out Reset Enable bits
 10415                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10416                           ;	Brown-out Reset Voltage bits
 10417                           ;	BORV = 3, Minimum setting 2.05V
 10418                           ;	USB Voltage Regulator Enable bit
 10419                           ;	VREGEN = OFF, USB voltage regulator disabled
 10420  300002                     	org	3145730
 10421  300002  19                 	db	25
 10422                           
 10423                           ;Config register CONFIG2H @ 0x300003
 10424                           ;	Watchdog Timer Enable bit
 10425                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10426                           ;	Watchdog Timer Postscale Select bits
 10427                           ;	WDTPS = 32768, 1:32768
 10428  300003                     	org	3145731
 10429  300003  1E                 	db	30
 10430                           
 10431                           ; Padding undefined space
 10432  300004                     	org	3145732
 10433  300004  FF                 	db	255
 10434                           
 10435                           ;Config register CONFIG3H @ 0x300005
 10436                           ;	CCP2 MUX bit
 10437                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10438                           ;	PORTB A/D Enable bit
 10439                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10440                           ;	Low-Power Timer 1 Oscillator Enable bit
 10441                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10442                           ;	MCLR Pin Enable bit
 10443                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10444  300005                     	org	3145733
 10445  300005  83                 	db	131
 10446                           
 10447                           ;Config register CONFIG4L @ 0x300006
 10448                           ;	Stack Full/Underflow Reset Enable bit
 10449                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10450                           ;	Single-Supply ICSP Enable bit
 10451                           ;	LVP = OFF, Single-Supply ICSP disabled
 10452                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10453                           ;	ICPRT = OFF, ICPORT disabled
 10454                           ;	Extended Instruction Set Enable bit
 10455                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10456                           ;	Background Debugger Enable bit
 10457                           ;	DEBUG = 0x1, unprogrammed default
 10458  300006                     	org	3145734
 10459  300006  81                 	db	129
 10460                           
 10461                           ; Padding undefined space
 10462  300007                     	org	3145735
 10463  300007  FF                 	db	255
 10464                           
 10465                           ;Config register CONFIG5L @ 0x300008
 10466                           ;	Code Protection bit
 10467                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10468                           ;	Code Protection bit
 10469                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10470                           ;	Code Protection bit
 10471                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10472                           ;	Code Protection bit
 10473                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10474  300008                     	org	3145736
 10475  300008  0F                 	db	15
 10476                           
 10477                           ;Config register CONFIG5H @ 0x300009
 10478                           ;	Boot Block Code Protection bit
 10479                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10480                           ;	Data EEPROM Code Protection bit
 10481                           ;	CPD = OFF, Data EEPROM is not code-protected
 10482  300009                     	org	3145737
 10483  300009  C0                 	db	192
 10484                           
 10485                           ;Config register CONFIG6L @ 0x30000A
 10486                           ;	Write Protection bit
 10487                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10488                           ;	Write Protection bit
 10489                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10490                           ;	Write Protection bit
 10491                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10492                           ;	Write Protection bit
 10493                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10494  30000A                     	org	3145738
 10495  30000A  0F                 	db	15
 10496                           
 10497                           ;Config register CONFIG6H @ 0x30000B
 10498                           ;	Configuration Register Write Protection bit
 10499                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10500                           ;	Boot Block Write Protection bit
 10501                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10502                           ;	Data EEPROM Write Protection bit
 10503                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10504  30000B                     	org	3145739
 10505  30000B  E0                 	db	224
 10506                           
 10507                           ;Config register CONFIG7L @ 0x30000C
 10508                           ;	Table Read Protection bit
 10509                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10510                           ;	Table Read Protection bit
 10511                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10512                           ;	Table Read Protection bit
 10513                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10514                           ;	Table Read Protection bit
 10515                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10516  30000C                     	org	3145740
 10517  30000C  0F                 	db	15
 10518                           
 10519                           ;Config register CONFIG7H @ 0x30000D
 10520                           ;	Boot Block Table Read Protection bit
 10521                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10522  30000D                     	org	3145741
 10523  30000D  40                 	db	64
 10524                           tosu	equ	0xFFF
 10525                           tosh	equ	0xFFE
 10526                           tosl	equ	0xFFD
 10527                           stkptr	equ	0xFFC
 10528                           pclatu	equ	0xFFB
 10529                           pclath	equ	0xFFA
 10530                           pcl	equ	0xFF9
 10531                           tblptru	equ	0xFF8
 10532                           tblptrh	equ	0xFF7
 10533                           tblptrl	equ	0xFF6
 10534                           tablat	equ	0xFF5
 10535                           prodh	equ	0xFF4
 10536                           prodl	equ	0xFF3
 10537                           indf0	equ	0xFEF
 10538                           postinc0	equ	0xFEE
 10539                           postdec0	equ	0xFED
 10540                           preinc0	equ	0xFEC
 10541                           plusw0	equ	0xFEB
 10542                           fsr0h	equ	0xFEA
 10543                           fsr0l	equ	0xFE9
 10544                           wreg	equ	0xFE8
 10545                           indf1	equ	0xFE7
 10546                           postinc1	equ	0xFE6
 10547                           postdec1	equ	0xFE5
 10548                           preinc1	equ	0xFE4
 10549                           plusw1	equ	0xFE3
 10550                           fsr1h	equ	0xFE2
 10551                           fsr1l	equ	0xFE1
 10552                           bsr	equ	0xFE0
 10553                           indf2	equ	0xFDF
 10554                           postinc2	equ	0xFDE
 10555                           postdec2	equ	0xFDD
 10556                           preinc2	equ	0xFDC
 10557                           plusw2	equ	0xFDB
 10558                           fsr2h	equ	0xFDA
 10559                           fsr2l	equ	0xFD9
 10560                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        80
    BSS         107
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     95     155
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> Mostrar_Temperatura@temperatura(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1336$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1336$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[2]), Mostrar_Temperatura@temperatura(BANK0[4]), STR_1(CODE[13]), Reloj_Calendario@Date(BANK0[17]), 
		 -> Reloj_Calendario@Time(BANK0[15]), 


Critical Paths under _main in COMRAM

    _main->_Mostrar_Temperatura
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_Clear->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _I2C_Init->___lldiv
    _Reloj_Calendario->_LCD_Goto
    _Reloj_Calendario->_LCD_Print
    _Reloj_Calendario->___awdiv
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK0

    _main->_Mostrar_Temperatura
    _Mostrar_Temperatura->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   44120
                                             91 BANK0      4     4      0
                           _ADC_Init
                    _Establecer_Hora
                           _I2C_Init
                          _LCD_Begin
                          _LCD_Clear
                _Mostrar_Temperatura
 ---------------------------------------------------------------------------------
 (1) _Mostrar_Temperatura                                  7     7      0   38901
                                             94 COMRAM     1     1      0
                                             85 BANK0      6     6      0
                           _ADC_Read
                           _LCD_Goto
                          _LCD_Print
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   30764
                                             64 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30407
                                             92 COMRAM     2     2      0
                                             58 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   30035
                                             82 COMRAM    10     4      6
                                             50 BANK0      8     8      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   24880
                                             70 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             50 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1246
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     121
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     176
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            1     1      0     176
                                              4 COMRAM     1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Establecer_Hora                                      1     1      0    4362
                                              8 COMRAM     1     1      0
                            _I2C_Ack
                         _I2C_NO_Ack
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                   _Reloj_Calendario
 ---------------------------------------------------------------------------------
 (2) _Reloj_Calendario                                     0     0      0    4340
                      _BCD_a_Decimal
                           _LCD_Goto
                          _LCD_Print
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1512
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            6     4      2     602
                                              2 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     666
                                              4 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     176
                                              2 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BCD_a_Decimal                                        2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_NO_Ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Establecer_Hora
     _I2C_Ack
     _I2C_NO_Ack
     _I2C_ReStart
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Reloj_Calendario
       _BCD_a_Decimal
       _LCD_Goto
         _LCD_Cmd
           _LCD_Write_Nibble
       _LCD_Print
         _LCD_Write_Nibble
       ___awdiv
       ___awmod
   _I2C_Init
     ___lldiv
   _LCD_Begin
     _LCD_Cmd
   _LCD_Clear
     _LCD_Cmd
   _Mostrar_Temperatura
     _ADC_Read
     _LCD_Goto
     _LCD_Print
     ___fldiv
       ___flmul (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     5F      9B       5       96.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRhlhll       C      0       0      25        0.0%
BITBIGSFRllh         9      0       0      28        0.0%
BITBIGSFRhhl         9      0       0      21        0.0%
BITBIGSFRhlhlhl      8      0       0      23        0.0%
BITBIGSFRhll         8      0       0      26        0.0%
BITBIGSFRhlhlhh      7      0       0      22        0.0%
BITBIGSFRlh          5      0       0      27        0.0%
BITBIGSFRhlhlhl      1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17A      30        0.0%
DATA                 0      0     17A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 08 13:38:34 2022

                  ___fldiv@aexp 0032                    ___fldiv@bexp 0031                               _i 00EF  
       Mostrar_Temperatura@temp 00B7                    ___fldiv@sign 002A                     _SSPSTATbits 000FC7  
                            l22 3FA6                              l31 3FC6                              l40 3F6E  
                            l25 3FB4                              l34 3F94                              l43 3F7C  
                            l19 3BA0                              l28 3FB8                              l52 3F16  
                            l61 3F50                              l37 3FA2                              l46 3F58  
                            l55 3F24                              l49 3F66                              l82 3F90  
                            l58 3F40                              l85 38CC                              l88 38F8  
                            _GO 007E11                              _RS 07D0                    ___awdiv@sign 0006  
           ___wmul@multiplicand 0003                             l206 2AA2                             l215 28B8  
                           l216 28B0                             l153 3CE8                             l209 3A0C  
                           l217 28B4                             l162 3A76                             l218 28D6  
                           l147 398A                             l171 365E                             l243 3EEC  
                           l270 384C                             l174 3358                             l502 37B8  
                           l177 3FCE                             l513 2FB6                             l196 3F3A  
                           l508 2F70                             l540 2EB2                             l277 385C  
                           l517 3E28                             l474 35AC                             l901 2C56  
                           l813 3D74                             l830 2310                             l487 370E  
                           l912 2BEE                             l905 2B92                             l825 24EC  
                           l921 3C4E                             l827 234C                             l771 1626  
                           l836 2392                             l780 18F6                             l772 1614  
                           l861 2152                             l773 15DA                             l838 240A  
                           l839 23F8                             l864 1FE4                             l857 1DEE  
                           l874 2114                             l866 205C                             l962 346A  
                           l867 204A                             l788 1740                             l797 1810  
                           l965 34AC                             l798 17FE                             l967 34E8  
                           l983 1436                             l898 2AFA                             l999 0BE6  
                           _RB2 007C0A                             _RB3 007C0B                             _RB4 007C0C  
                           _RB5 007C0D                             _day 00F0                 __end_of_I2C_Ack 3F7E  
                           _pad 3424                    ___awmod@sign 0006                             wreg 000FE8  
                  ___flmul@aexp 0012                    ___flmul@bexp 0013                    ___flmul@sign 000D  
                  ___flmul@temp 0018                    ___flmul@prod 0014                 __end_of_LCD_Cmd 3CEA  
                  ___fltol@exp1 000A               ??_Establecer_Hora 0009                            l1114 2DA4  
                          l1202 3D2E                            l1123 26FE                            l1027 1026  
                          l1133 3E60                            l1141 3CA0                            l1117 2DAC  
                          l1126 2642                            l1080 3B36                            l3001 1574  
                          l1081 3B3E                            l1162 3422                            l1170 3DB8  
                          l1074 1C72                            l3011 15D2                            l3003 1578  
                          l1091 30B4                            l1147 3DF0                            l3101 1874  
                          l3021 1608                            l3013 15E8                            l3005 157C  
                          l1173 3FD0                            l1069 1D28                            l3111 18BA  
                          l3103 1876                            l3031 1658                            l3023 1612  
                          l3015 15F4                            l3007 15A6                            l3201 2252  
                          l3121 18E4                            l3113 18C8                            l3105 1886  
                          l3041 1694                            l3033 1668                            l3025 1634  
                          l3017 15F8                            l3009 15C2                            l1185 3E96  
                          l4001 13B4                            l3123 18E6                            l3115 18CE  
                          l3107 1896                            l3051 16DA                            l3043 16A2  
                          l3035 1676                            l3027 1644                            l3019 1606  
                          l3131 3D94                            l1179 3BFC                            l4011 13F8  
                          l4003 13BA                            l3221 22D4                            l3213 228A  
                          l3205 2266                            l3301 1D56                            l3117 18D0  
                          l3109 18B6                            l3061 1756                            l3053 170E  
                          l3045 16A4                            l3037 1684                            l3133 3D98  
                          l3141 3E8A                            l4013 1400                            l1189 3284  
                          l4101 199E                            l3151 3EE4                            l4031 2C8C  
                          l4023 2C58                            l3231 231A                            l3223 22DC  
                          l3215 22A4                            l3207 2276                            l3311 1D92  
                          l3303 1D66                            l3119 18D6                            l3071 1792  
                          l3063 1766                            l3055 1710                            l3047 16AE  
                          l3039 1690                            l3127 3D76                            l3135 3E62  
                          l1199 3D26                            l4015 1410                            l4007 13C0  
                          l4103 19D8                            l4111 1A44                            l4033 2CC6  
                          l4025 2C6C                            l3241 2372                            l3233 2338  
                          l3225 22EC                            l3217 22B4                            l3209 2276  
                          l3161 2170                            l3401 20B4                            l3321 1DC8  
                          l3313 1D98                            l3305 1D76                            l3081 17BE  
                          l3073 1794                            l3057 1720                            l3049 16B4  
                          l3129 3D82                            l3137 3E6E                            l3145 3DBA  
                          l4017 1416                            l4009 13EC                            l4121 1AEA  
                          l4113 1A66                            l4105 19F8                            l4211 3FA4  
                          l4035 2CCE                            l3251 23B0                            l3243 2378  
                          l3235 233A                            l3227 2300                            l3219 22C4  
                          l3163 2180                            l3171 21AA                            l3155 2154  
                          l3411 2128                            l3403 20CE                            l3323 1DD8  
                          l3315 1DA6                            l3307 1D7C                            l3091 17F6  
                          l3075 17A2                            l3067 177A                            l3083 17C0  
                          l3059 1730                            l3139 3E72                            l4123 1AFC  
                          l4115 1A76                            l4203 3ADE                            l4213 3FB6  
                          l4221 3F10                            l3501 36EE                            l3149 3EC8  
                          l4045 2D40                            l4037 2CD6                            l4029 2C70  
                          l3261 241A                            l3253 23B4                            l3245 2382  
                          l3237 234A                            l3229 230E                            l3181 21D6  
                          l3173 21BA                            l3165 2190                            l3157 2160  
                          l3413 2136                            l3405 20E2                            l3341 1E5A  
                          l3333 1E22                            l3325 1DDE                            l3317 1DA8  
                          l3309 1D8C                            l3077 17AA                            l3069 1784  
                          l3085 17CE                            l4061 31E6                            l4141 1C0E  
                          l4125 1B12                            l4133 1B7C                            l4117 1AA8  
                          l4109 1A06                            l4205 3AE6                            l4301 3C3C  
                          l4215 3F92                            l4223 3F12                            l3431 34EE  
                          l3503 36FE                            l4311 37E8                            l4231 385E  
                          l4047 2D76                            l4039 2D0A                            l3271 247C  
                          l3263 2426                            l3255 23C2                            l3247 2390  
                          l3239 235C                            l3183 21E6                            l3191 2210  
                          l3175 21C0                            l3167 21A0                            l3159 216E  
                          l3511 373E                            l3415 2138                            l3407 20FC  
                          l3351 1EA4                            l3343 1E72                            l3335 1E2E  
                          l3327 1DFE                            l3319 1DB8                            l3095 1820  
                          l3087 17D2                            l3079 17AE                            l3423 3D30  
                          l4071 3262                            l4063 31F4                            l4055 31B0  
                          l4151 1CAA                            l4143 1C42                            l4135 1BAA  
                          l4127 1B20                            l4119 1AB8                            l4207 3AF4  
                          l4217 3F68                            l4225 3F3C                            l4081 3CC6  
                          l3441 351E                            l3433 34FC                            l3505 3706  
                          l4241 2916                            l4321 383A                            l4313 37F4  
                          l4305 37BA                            l4401 32DA                            l4233 38DA  
                          l4049 2D88                            l3281 24DA                            l3273 2492  
                          l3265 2434                            l3257 23F0                            l3249 23A2  
                          l3193 2220                            l3185 21F6                            l3177 21C6  
                          l3169 21A2                            l3521 37B6                            l3513 374E  
                          l3409 2118                            l3417 213E                            l3361 1EFA  
                          l3353 1EB4                            l3345 1E7E                            l3337 1E38  
                          l3329 1E0E                            l3097 182C                            l3089 17E0  
                          l3425 3D40                            l3601 3434                            l4065 320C  
                          l4057 31DA                            l4161 1CE6                            l4153 1CB8  
                          l4129 1B50                            l4209 3B1A                            l4219 3F52  
                          l4227 3F4E                            l4083 3CD8                            l4075 3CA4  
                          l3451 354C                            l3443 3522                            l3435 3504  
                          l4251 2998                            l4243 2930                            l4323 383C  
                          l4315 3802                            l4307 37CA                            l4411 332A  
                          l4403 32EE                            l4235 38F0                            l4331 2AC4  
                          l3283 24E0                            l3275 24AC                            l3267 245E  
                          l3195 2236                            l3187 2206                            l3179 21D4  
                          l3515 377C                            l3531 2F20                            l3419 2142  
                          l3371 1F9E                            l3363 1F16                            l3355 1EC0  
                          l3347 1E8A                            l3339 1E4E                            l3099 183A  
                          l3611 348A                            l3603 3448                            l4067 3228  
                          l4155 1CCC                            l4139 1BD0                            l4091 193C  
                          l3701 38FC                            l4077 3CA8                            l4181 3A38  
                          l4173 3A10                            l3461 3580                            l3453 355A  
                          l3445 352A                            l3437 3508                            l3429 34EA  
                          l4261 2A1A                            l4253 29B2                            l4245 294A  
                          l4421 398C                            l4325 3846                            l4317 380C  
                          l4309 37E0                            l4413 3330                            l4405 32F4  
                          l4341 2B3C                            l4333 2B0A                            l3285 24E2  
                          l3277 24C8                            l3269 2462                            l3197 2246  
                          l3189 2208                            l3517 378C                            l3509 3710  
                          l3541 2FAE                            l3533 2F30                            l3525 2EB4  
                          l3381 1FF4                            l3373 1FAC                            l3365 1F22  
                          l3357 1ED0                            l3349 1E98                            l3293 1D2A  
                          l3621 2FB8                            l3613 348E                            l3605 3456  
                          l4069 323A                            l4149 1C86                            l4093 1940  
                          l4165 1CF2                            l4085 18F8                            l3711 397E  
                          l3703 3908                            l4079 3CB6                            l4175 3A14  
                          l4183 3A44                            l4191 35B2                            l3463 3586  
                          l3455 3560                            l3447 353C                            l3439 3516  
                          l4271 2A6E                            l4263 2A34                            l4255 29CC  
                          l4247 2964                            l4239 28D8                            l4431 39AE  
                          l4423 3990                            l4319 382A                            l4415 3344  
                          l4407 3308                            l4351 2BC4                            l4343 2B48  
                          l4335 2B20                            l4327 2AA6                            l3279 24CC  
                          l3199 224E                            l3519 37B0                            l3543 2FB4  
                          l3535 2F3E                            l3527 2EE2                            l3383 2002  
                          l3375 1FCA                            l3367 1F3E                            l3359 1EEA  
                          l3295 1D36                            l3551 3E18                            l3623 2FD8  
                          l2911 335A                            l3615 34BC                            l3607 3462  
                          l4167 1D16                            l4159 1CD8                            l4095 1964  
                          l4087 191C                            l3713 3980                            l3705 3978  
                          l4177 3A20                            l4193 35BA                            l3457 3576  
                          l3449 3544                            l3465 358C                            l3481 367E  
                          l3473 3660                            l4281 2A8A                            l4273 2A7A  
                          l4265 2A4E                            l4257 29E6                            l4249 297E  
                          l4441 39CA                            l4433 39B2                            l4425 3996  
                          l4417 3352                            l4409 3316                            l4361 2C02  
                          l4353 2BD0                            l4345 2B7A                            l4329 2AB6  
                          l3537 2F50                            l3529 2EF2                            l3393 206C  
                          l3385 2006                            l3377 1FD4                            l3369 1F68  
                          l3297 1D44                            l3561 2DD8                            l3625 3016  
                          l3633 3056                            l2921 33DC                            l2913 336C  
                          l3617 34D0                            l3609 3476                            l3801 0B80  
                          l3721 0844                            l4097 196C                            l4089 192A  
                          l4521 30D2                            l3715 3982                            l3707 397A  
                          l4179 3A2C                            l4195 3620                            l3467 359C  
                          l3459 357E                            l3491 36B6                            l3483 368C  
                          l3475 3664                            l4291 2A9E                            l4283 2A8E  
                          l4275 2A7E                            l4267 2A58                            l4259 2A00  
                          l4451 39E6                            l4443 39CE                            l4435 39BA  
                          l4427 39A0                            l4419 3FC8                            l4363 2C26  
                          l4355 2BDE                            l4347 2B7C                            l4339 2B34  
                          l3539 2F5E                            l3395 2078                            l3387 2014  
                          l3379 1FE2                            l3299 1D46                            l3547 3DF2  
                          l2931 1454                            l3571 2E26                            l3563 2E02  
                          l3555 2DAE                            l3635 3068                            l3627 303E  
                          l2915 337E                            l3643 3BA2                            l3651 3CEA  
                          l3811 0BC0                            l3803 0B90                            l3731 0890  
                          l3723 0852                            l4099 197A                            l4531 30DE  
                          l4523 30D4                            l3709 397C                            l4197 3622  
                          l4189 35AE                            l3469 35A4                            l3493 36C4  
                          l3485 3694                            l3477 3672                            l4285 2A92  
                          l4277 2A82                            l4269 2A64                            l4461 39FE  
                          l4453 39EA                            l4445 39D2                            l4437 39BE  
                          l4429 39A6                            l4381 3B4A                            l4373 3B40  
                          l4365 2C36                            l4357 2BFC                            l4349 2B88  
                          l3397 2086                            l3389 2042                            l3549 3E08  
                          l2933 1464                            l2941 148E                            l2925 1438  
                          l3581 2E52                            l3565 2E04                            l3557 2DC4  
                          l3629 304A                            l3661 2564                            l2917 3388  
                          l3645 3BB2                            l3653 3D18                            l3901 10A6  
                          l3821 0C04                            l3813 0BDA                            l3805 0B94  
                          l3741 08D6                            l3733 08A2                            l3725 085A  
                          l3717 082A                            l4293 3BFE                            l4541 30EE  
                          l4533 30E6                            l4525 30D6                            l4517 30B6  
                          ?_pad 0011                            l4199 3F28                            l3495 36DA  
                          l3487 36A6                            l3479 367A                            l4287 2A96  
                          l4279 2A86                            l4455 39F2                            l4447 39DA  
                          l4439 39C6                            l4383 3B52                            l4375 3B44  
                          l4391 3286                            l4367 2C44                            l4359 2BFE  
                          l4615 2CF4                            l3399 20B0                            l2951 14BE  
                          l2943 149E                            l2935 1474                            l2927 1444  
                          l3591 2E82                            l3567 2E14                            l3639 30AC  
                          l3671 2632                            l3663 2578                            l2919 33A6  
                          l3647 3CEA                            l3903 10B6                            l3911 10F0  
                          l3823 0C16                            l3831 0C74                            l3807 0BA6  
                          l3815 0BF2                            l3743 08DA                            l3735 08B0  
                          l3727 087E                            l3719 0834                            l4295 3C10  
                          l4471 2734                            l4463 2700                            l4551 30F8  
                          l4543 30F0                            l4535 30E8                            l4527 30D8  
                          l4519 30CE                            l4617 3A58                            l3497 36E2  
                          l3489 36AE                            l4289 2A9A                            l4457 39F6  
                          l4449 39DE                            l4385 3B56                            l4377 3B46  
                          l4393 32A2                            l4369 2C46                            l2961 14FE  
                          l2953 14CC                            l2945 14A4                            l2937 1484  
                          l2929 1452                            l3593 2E92                            l3577 2E3E  
                          l3569 2E18                            l3681 26EE                            l3665 2586  
                          l3673 2666                            l3657 24EE                            l3921 112A  
                          l3913 1102                            l3905 10C8                            l3841 0CB2  
                          l3833 0C7C                            l3825 0C32                            l3809 0BB8  
                          l3761 0978                            l3753 090A                            l3745 08DE  
                          l3737 08C2                            l3729 0888                            l4297 3C18  
                          l4481 27F0                            l4473 275C                            l4465 270A  
                          l4561 3136                            l4553 3106                            l4545 30F2  
                          l4537 30EA                            l4529 30DA                            l4387 3F7E  
                          l3499 36E8                            l4459 39FA                            l4379 3B48  
                          l4395 32B2                            l3691 3C54                            l2971 1538  
                          l2963 1500                            l2955 14CE                            l2947 14B6  
                          l2939 1486                            l3595 2EA2                            l3587 2E66  
                          l3579 2E48                            l3675 26A2                            l3659 250E  
                          l3923 1136                            l3915 1110                            l3931 1156  
                          l3907 10DA                            l3843 0CC4                            l3851 0D04  
                          l3835 0C8E                            l3827 0C68                            l3771 09C6  
                          l3755 0936                            l3739 08CE                            l3747 08E4  
                          l4299 3C20                            l4491 2876                            l4483 27FA  
                          l4475 27B4                            l4467 2714                            l4571 318A  
                          l4563 3150                            l4555 310A                            l4547 30F4  
                          l4539 30EC                            l4389 3F80                            l4397 32B8  
                          l3685 3E2A                            l3693 3C68                            l2981 154C  
                          l2973 153C                            l2957 14DE                            l2965 1508  
                          l2949 14B8                            l3589 2E72                            l3677 26B6  
                          l3669 25F6                            l3941 11DC                            l3933 1168  
                          l3925 1146                            l3917 1120                            l3909 10E8  
                          l3861 0DEC                            l3853 0D0C                            l3845 0CD2  
                          l3837 0CA0                            l3829 0C70                            l3773 09F2  
                          l3757 0954                            l3765 09A0                            l4493 28A8  
                          l4485 2806                            l4477 27DA                            l4469 2720  
                          l4573 318E                            l4565 315E                            l4557 3118  
                          l4549 30F8                            l4399 32CC                            l3695 3C96  
                          l2991 1560                            l2983 1550                            l2975 1540  
                          l2967 1518                            l2959 14EE                            l3679 26DE  
                          l3599 3424                            l3951 1256                            l3943 1210  
                          l3935 117A                            l3927 114A                            l3919 1124  
                          l3871 0EAA                            l3863 0E20                            l3855 0D1C  
                          l3847 0CEA                            l3839 0CAE                            l3791 0AB2  
                          l3775 0A10                            l3783 0A2E                            l3759 096E  
                          l4495 28C8                            l4487 2838                            l4479 27E4  
                          l4567 3162                            l4559 3132               ?_LCD_Write_Nibble 0001  
                          l3697 3C9A                            l3689 3C50                            l2993 1564  
                          l2985 1554                            l2977 1544                            l2969 152A  
                          l3961 129A                            l3953 1268                            l3945 1218  
                          l3937 117E                            l3929 1150                            l3881 0F46  
                          l3873 0EC0                            l3857 0D30                            l3865 0E26  
                          l3849 0CFC                            l3793 0AB8                            l3785 0A48  
                          l4489 286A                            l4569 3170                            l2995 1568  
                          l2987 1558                            l2979 1548                            l3971 12DA  
                          l3963 12AC                            l3955 1276                            l3939 1184  
                          l3947 121C                            l3883 0F9C                            l3891 0FEE  
                          l3875 0EF2                            l3867 0E44                            l3859 0D94  
                          l3795 0B12                            l2997 156C                            l2989 155C  
                          l3981 1322                            l3973 12E2                            l3965 12B4  
                          l3957 1286                            l3949 123A                            l3893 0FFE  
                          l3885 0FA2                            l3877 0F02                            l3869 0E78  
                          l3797 0B46                            l3789 0A7E                            l2999 1570  
                          l3991 1378                            l3983 133E                            l3975 12EA  
                          l3967 12C4                            l3959 128A                            l3895 1012  
                          l3887 0FD6                            l3879 0F12                            l3799 0B4E  
                          l3993 137E                            l3985 1346                            l3977 12F6  
                          l3969 12CC                            l3897 101E                            l3889 0FEA  
                          l3995 1390                            l3979 12FC                            l3987 134C  
                          l3899 1042                            l3997 139C                            l3989 135E  
                          l3999 13A4                            _ADON 007E10                            STR_1 0801  
                          STR_2 080E                            STR_3 0826                            STR_4 0813  
                          STR_5 081B                            STR_8 0817                            STR_9 081F  
                          u3000 3E8A                            u3001 3E86                            u3010 3DEA  
                          u3011 3DE4                            u3100 2276                            u3020 3DEC  
                          u3101 2272                            u3110 22EC                            u3030 216E  
                          u3111 22E8                            u3031 216A                            u4000 3C96  
                          u3200 2406                            u3120 230E                            u3040 2180  
                          u4001 3C92                            u3201 2402                            u3121 230A  
                          u3041 217C                            u3210 241A                            u3130 2338  
                          u3050 2190                            u3211 2416                            u3131 2334  
                          u3051 218C                            u3220 2434                            u3140 235C  
                          u3060 21D4                            u3300 1DB8                            u4100 0A7A  
                          u4020 0852                            u3221 2430                            u3141 2358  
                          u3061 21D0                            u3301 1DB4                            u4101 0A76  
                          u4021 084E                            u3230 247C                            u3150 2372  
                          u3070 21E6                            u3310 1DC8                            u4110 0B0E  
                          u4030 08A2                            u4015 3906                            u3231 2478  
                          u3151 236E                            u3071 21E2                            u3311 1DC4  
                          u4111 0B0A                            u4031 089E                            u5000 2BFC  
                          u3240 24AC                            u3160 2390                            u3080 21F6  
                          u3400 206C                            u3320 1DFE                            u2600 1452  
                          u4200 0C8E                            u4120 0B80                            u4040 08B0  
                          u4017 3908                            u5001 2BF8                            u3241 24A8  
                          u3161 238C                            u3081 21F2                            u3401 2068  
                          u3321 1DFA                            u2601 144E                            u4201 0C8A  
                          u4121 0B7C                            u4041 08AC                            u5010 2C36  
                          u3250 24DA                            u3170 23B0                            u3090 2236  
                          u3410 2086                            u3330 1E0E                            u2610 1464  
                          u4210 0CA0                            u4130 0BA6                            u4050 08C2  
                          u5011 2C32                            u3251 24D6                            u3171 23AC  
                          u3091 2232                            u3411 2082                            u3331 1E0A  
                          u2611 1460                            u4211 0C9C                            u4131 0BA2  
                          u4051 08BE                            u3500 359C                            u5020 2C44  
                          u3180 23C2                            u3420 20CE                            u3340 1F88  
                          u3260 1D44                            u2700 15BE                            u2620 1474  
                          u4300 0F9C                            u4220 0CAE                            u4140 0BB8  
                          u4060 090A                            u5100 318A                            u3501 3598  
                          u5021 2C40                            u3181 23BE                            u3421 20CA  
                          u3261 1D40                            u2701 15B8                            u2621 1470  
                          u4301 0F98                            u4221 0CAA                            u4141 0BB4  
                          u4061 0906                            u5101 3186                            u3510 3672  
                          u3190 23F0                            u3430 20FC                            u3350 1FE2  
                          u3270 1D56                            u2710 15C0                            u2630 14B6  
                          u4310 0FEA                            u4230 0CC4                            u4150 0BDA  
                          u4070 0936                            u3511 366E                            u3191 23EC  
                          u3431 20F8                            u3351 1FDE                            u3271 1D52  
                          u2631 14B2                            u4311 0FE6                            u4231 0CC0  
                          u4151 0BD6                            u4071 0932                            u3520 368C  
                          u3600 2EE2                            u3440 2136                            u3360 2002  
                          u3280 1D66                            u2800 16DA                            u2720 15E8  
                          u2640 14CC                            u2560 336C                            u4400 123A  
                          u4320 1012                            u4240 0CD2                            u4160 0C00  
                          u4080 09C6                            u5040 2838                            u3521 3688  
                          u3601 2EDE                            u3441 2132                            u3361 1FFE  
                          u3345 1F7E                            u3281 1D62                            u2801 16D6  
                          u2721 15E4                            u2641 14C8                            u2561 3368  
                          u4401 1236                            u4321 100E                            u4241 0CCE  
                          u4161 0BFC                            u4081 09C2                            u5041 2834  
                          u3450 34FC                            u3530 36A6                            u3610 2F20  
                          u3370 2014                            u3290 1DA6                            u2810 1720  
                          u2730 1606                            u2650 14DE                            u2570 337E  
                          u4410 1256                            u4330 10B6                            u4250 0CFC  
                          u4170 0C16                            u4090 09F2                            u5050 286A  
                          u3451 34F8                            u3531 36A2                            u5035 3B78  
                          u3611 2F1C                            u3371 2010                            u3291 1DA2  
                          u2811 171C                            u2731 1602                            u2651 14DA  
                          u2571 337A                            u4411 1252                            u4331 10B2  
                          u4251 0CF8                            u4171 0C12                            u4091 09EE  
                          u5051 2866                            u3460 3516                            u3540 36C4  
                          u4500 2C8C                            u3620 2F3E                            u3380 2042  
                          u2900 180C                            u2820 1756                            u2740 1626  
                          u2660 14EE                            u3700 2E62                            u2580 33A6  
                          u4420 1268                            u4340 10C8                            u4260 0E44  
                          u4180 0C32                            u5060 28A8                            u3461 3512  
                          u3541 36C0                            u4501 2C88                            u3621 2F3A  
                          u3381 203E                            u2901 1808                            u2821 1752  
                          u2741 1622                            u2661 14EA                            u3701 2E5E  
                          u2581 33A2                            u4421 1264                            u4341 10C4  
                          u4261 0E40                            u4181 0C2E                            u5061 28A4  
                          u5117 3142                            u3470 353C                            u3550 36DA  
                          u4510 2CC2                            u3630 2F5E                            u3390 2058  
                          u2910 1820                            u2830 1766                            u2750 1634  
                          u2670 152A                            u3710 2E82                            u2590 33DC  
                          u4430 1276                            u4350 10DA                            u4270 0EAA  
                          u4190 0C68                            u3471 3538                            u3551 36D6  
                          u5207 3322                            u4511 2CBE                            u3631 2F5A  
                          u3391 2054                            u2911 181C                            u2831 1762  
                          u2751 1630                            u2671 1526                            u3711 2E7E  
                          u2591 33D8                            u4431 1272                            u4351 10D6  
                          u4271 0EA6                            u4191 0C64                            u5127 319A  
                          u4600 3CD8                            u3480 355A                            u3560 36FE  
                          u4520 2D76                            u3640 2FAE                            u2920 183A  
                          u2840 1792                            u2760 1644                            u2680 1538  
                          u3720 2E92                            u3800 3068                            u4440 12AC  
                          u4360 10E8                            u4280 0EF2                            u4601 3CD4  
                          u3481 3556                            u3561 36FA                            u5217 3336  
                          u4521 2D72                            u3641 2FAA                            u2921 1836  
                          u2841 178E                            u2761 1640                            u2681 1534  
                          u3721 2E8E                            u3801 3064                            u4441 12A8  
                          u4361 10E4                            u4281 0EEE                            u5137 28CE  
                          u3490 3576                            u4530 2D88                            u3570 373E  
                          u3650 3E08                            u2930 1874                            u2850 17A2  
                          u2770 1676                            u2690 15A6                            u3730 3434  
                          u4450 12DA                            u4370 1102                            u4290 0F02  
                          u4610 191C                            u5090 3132                            u3491 3572  
                          u5227 334A                            u5147 32A8                            u4531 2D84  
                          u3571 373A                            u3651 3E04                            u2931 1870  
                          u2851 179E                            u2771 1672                            u2691 15A2  
                          u3731 3430                            u4451 12D6                            u4371 10FE  
                          u4291 0EFE                            u4611 1918                            u5091 312E  
                          u3580 377C                            u2940 1886                            u2860 17BE  
                          u2780 1684                            u3660 2DC4                            u3820 30A2  
                          u3740 3456                            u4460 135E                            u4380 1110  
                          u4540 31DA                            u4700 1CAA                            u4620 1964  
                          u5237 3A04                            u5157 32BE                            u3581 3778  
                          u2941 1882                            u2861 17BA                            u2781 1680  
                          u3661 2DC0                            u3821 309C                            u3741 3452  
                          u4461 135A                            u4381 110C                            u4541 31D6  
                          u4701 1CA6                            u4621 1960                            u4710 35E6  
                          u3590 37B0                            u2950 1896                            u2870 17CE  
                          u2790 16A2                            u3670 2DF8                            u3830 30A4  
                          u3910 25F2                            u3750 34AC                            u4470 1378  
                          u4390 1168                            u4550 320C                            u4630 199E  
                          u5247 3CDE                            u5167 32D2                            u3591 37AC  
                          u2951 1892                            u2871 17CA                            u2791 169E  
                          u3815 307A                            u3911 25EE                            u3751 34A8  
                          u4471 1374                            u4391 1164                            u4551 3208  
                          u4631 199A                            u4800 3F66                            u4720 361C  
                          u2960 18B6                            u2880 17E0                            u3680 2E26  
                          u3920 2616                            u3760 34BC                            u3840 3BEA  
                          u4480 1390                            u4560 3228                            u4640 1A44  
                          u4801 3F62                            u5257 3984                            u5177 32E6  
                          u2961 18B2                            u2881 17DC                            u3681 2E22  
                          u3905 259A                            u3761 34B8                            u4481 138C  
                          u4561 3224                            u4641 1A40                            u4810 3F24  
                          u4730 364E                            u2970 18C8                            u2890 17F6  
                          u3690 2E3A                            u3770 2FF8                            u3930 2632  
                          u3906 25A4                            u3850 3BFC                            u4490 13EC  
                          u4570 323A                            u4650 1A76                            u4811 3F20  
                          u5187 32FA                            u2971 18C4                            u2891 17F2  
                          u3691 2E36                            u3675 2DEE                            u3931 262E  
                          u3907 25B4                            u3851 3BF8                            u4491 13E8  
                          u4571 3236                            u4651 1A72                            u4820 3F4E  
                          u4740 365E                            u4900 37E0                            u2980 18E4  
                          u3780 3016                            u3940 2686                            u3860 3D18  
                          u4580 3262                            u4660 1AB8                            u4821 3F4A  
                          u4741 365A                            u4717 35DC                            u4901 37DC  
                          u5197 330E                            u2981 18E0                            u3781 3012  
                          u3925 260C                            u3861 3D14                            u4581 325E  
                          u4661 1AB4                            u4590 3CC6                            u4910 3802  
                          u4830 3888                            u3790 303E                            u3950 26A2  
                          u3870 2536                            u2990 3DB8                            u4670 1AFC  
                          u4750 3B36                            u4591 3CC2                            u4727 3612  
                          u4911 37FE                            u4831 3880                            u3791 303A  
                          u3775 2FEE                            u3951 269E                            u2991 3DB4  
                          u3847 3BE0                            u4671 1AF8                            u4751 3B32  
                          u4760 3FB4                            u4920 382A                            u3960 26DE  
                          u3880 2564                            u4680 1BAA                            u4761 3FB0  
                          u4737 3644                            u4921 3826                            u3961 26DA  
                          u3945 267C                            u3881 2560                            u4681 1BA6  
                          u4770 3FC6                            u4930 2AB6                            u3970 3E5A  
                          u3890 2586                            u4690 1C0E                            u4771 3FC2  
                          u4931 2AB2                            u3971 3E54                            u3891 2582  
                          u3875 252C                            u4691 1C0A                            u4780 3FA2  
                          u4860 38B0                            u4940 2AC4                            u3980 3E5C  
                          u4781 3F9E                            u4861 38A8                            u4941 2AC0  
                          u4790 3F7C                            u4854 3898                            u4950 2B20  
                          u3990 3C68                            u4791 3F78                            u4855 3894  
                          u4951 2B1C                            u3991 3C64                            u4848 388A  
                          u4960 2B76                            u4961 2B72                            u4890 38DA  
                          u4970 2BC0                            u4891 38D6                            u4971 2BBC  
                          u4884 38C0                            u4980 2BDE                            u4885 38BC  
                          u4981 2BDA                            u4878 38B2                            u4990 2BEE  
                          u4991 2BEA              ??_LCD_Write_Nibble 0001                            _dbuf 0100  
                          _atoi 2C58                            _main 30B6                            _prec 00EB  
              __end_of_I2C_Init 3BA2                __end_of_I2C_Read 3F52                            _nout 00E7  
                          _year 00F2                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                __end_of_I2C_Stop 3FA4                __end_of_ADC_Init 3F92  
              __end_of_ADC_Read 38FA                   ___fpclassifyf 2FB8                            prodh 000FF4  
                          prodl 000FF3                            start 0000                 ___fldiv@new_exp 002B  
                   LCD_Goto@col 0008                     LCD_Goto@row 0005                    ___param_bank 000000  
                         ??_pad 0017                __end_of_LCD_Goto 3A78                   ___fltol@sign1 0009  
                         ?_atoi 0008                 __end_of___fladd 18F8                           ?_main 0001  
               __end_of___fldiv 24EE                 __end_of___awdiv 35AE                 __end_of___flneg 3E2A  
                         STR_12 0823                           STR_14 0823                 __end_of___awmod 3710  
               __end_of___flmul 2154                 __end_of___flsub 3D76                 __end_of___fltol 2EB4  
               __end_of___lldiv 385E                 ___awdiv@divisor 0003                 ___awdiv@counter 0005  
                  vfpfcnvrt@fmt 0055                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TXREG 000FAD                           _flags 00ED  
                         _fputc 335A                           _fputs 3D76                 __end_of_isdigit 3E62  
                         _hours 00F5             _Mostrar_Temperatura 2700                           _month 00F1  
                         atoi@n 0010                           pad@fp 0011                           atoi@s 0008  
                         _width 00E9                           _putch 3FD0                 __end_of_isspace 3CA2  
             __end_of_I2C_Start 3FB6               __end_of_I2C_Write 3F26                 __end_of_isupper 3DF2  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 3C50  
                ?___fpclassifyf 0001                 __end_of_tolower 3D30                 __end_of_strncmp 3286  
               __initialization 3A78            Reloj_Calendario@Date 00BF            Reloj_Calendario@Time 00D0  
                  __end_of_atoi 2DAE                    __end_of_main 31B0            ?_Mostrar_Temperatura 0001  
                     ??_I2C_Ack 0001                          ??_atoi 000A                          ??_main 00BB  
             __end_of_LCD_Begin 335A               __end_of_LCD_Clear 3FD0                   __activetblptr 000002  
                     ??_LCD_Cmd 0003               __end_of_LCD_Print 3660                    ??_I2C_NO_Ack 0001  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        ?_fputc 0001                          ?_fputs 000A                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0001                          ?_putch 0001  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of___xxtofl 2C58  
                  vfprintf@cfmt 005D                          ___flge 2EB4                          ___fleq 3710  
         ??_Mostrar_Temperatura 005F                       ??___fladd 0009                          ___wmul 3EC8  
                     ??___fldiv 0022                       ??___awdiv 0005              __end_of_I2C_NO_Ack 3F68  
                     ??___flneg 0005                       ??___awmod 0005                       ??___flmul 0009  
                     ??___flsub 0022                       ??___fltol 0005                       ??___lldiv 0009  
                        _efgtoa 082A                 ADC_Read@channel 0001                          _floorf 24EE  
               ADC_Read@digital 0007                          clear_0 3ABE                          clear_1 3ACE  
              ___awdiv@quotient 0007                 ___awmod@divisor 0003                          isa$std 000001  
               ___awmod@counter 0005                          pad@buf 0013                          _strcpy 3BA2  
                        _strlen 3E62                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                       ??_isdigit 0003  
                     ?_I2C_Init 000E                       ?_I2C_Read 0001                       ?_I2C_Stop 0001  
               ___fpclassifyf@e 0009                       ?_ADC_Init 0001                 ___fpclassifyf@u 000B  
                     ?_ADC_Read 0001                 ___fpclassifyf@x 0001                    __mediumconst 0000  
                     ??_isspace 0003                          tblptrh 000FF7                       ??_isupper 0003  
                        tblptrl 000FF6                          tblptru 000FF8                          putch@c 0001  
              __end_of_vfprintf 3B40                       ??_sprintf 005F                       ??_tolower 0009  
                     ??_strncmp 0007                      ___flge@ff1 001A                      ___flge@ff2 001E  
               ??___fpclassifyf 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                      ___fleq@ff1 0001                      ___fleq@ff2 0005  
                    __accesstop 0060         __end_of__initialization 3AD4                       ?_LCD_Goto 0005  
                    ___flneg@f1 0001                   ___rparam_used 000001                      ___fltol@f1 0001  
                __pcstackCOMRAM 0001                    __pidataBANK0 3EEE                    __pidataBANK1 3E98  
                 __end_of_fputc 3424                   __end_of_fputs 3DBA                  LCD_Cmd@Command 0004  
                 __end_of_putch 3FD2                 _Establecer_Hora 398C              I2C_Init@frecuencia 000E  
                    ??_I2C_Init 0012                      ??_I2C_Read 0001                      ??_I2C_Stop 0001  
                    ??_ADC_Init 0001                      ??_ADC_Read 0003                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00DF  
                    __pbssBANK1 0100                      ??_LCD_Goto 0006                         ?___flge 001A  
                       ?___fleq 0001                         ?___wmul 0001                         ?_efgtoa 0047  
                       ?_floorf 0033                         _I2C_Ack 3F68                   _BCD_a_Decimal 3F26  
                 ??_I2C_ReStart 0001                         ?_strcpy 0001                         ?_strlen 0001  
                       _LCD_Cmd 3CA2                       ?___xxtofl 0001                         _SSPCON2 000FC5  
                     _I2C_Start 3FA4                       _I2C_Write 3F0E                         __Hparam 0000  
                       __Lparam 0000         __end_of_Establecer_Hora 3A0E                         ___fladd 1438  
                       ___fldiv 2154                         ___awdiv 34EA                         ___flneg 3DF2  
                       ___awmod 3660                         ___flmul 1D2A                         ___flsub 3D30  
                       ___fltol 2DAE                         ___lldiv 37BA                       ?_vfprintf 009A  
                ?_BCD_a_Decimal 0001                    __psmallconst 0800                         __pcinit 3A78  
                       __ramtop 0800                         __ptext0 30B6                         __ptext1 2700  
                       __ptext2 3BFE                         __ptext3 3ADE                         __ptext4 18F8  
                       __ptext5 31B0                         __ptext6 082A                         __ptext7 3CEA  
                       __ptext8 3DBA                         __ptext9 3BA2                         _isdigit 3E2A  
                    ??___xxtofl 0005                ___awmod@dividend 0001                         _minutes 00F4  
                       _seconds 00F3                         _isspace 3C50                         _isupper 3DBA  
           __end_of_I2C_ReStart 3FC8                         efgtoa@c 004D                         efgtoa@d 0072  
                       efgtoa@e 008A                         efgtoa@f 0049                         efgtoa@g 0086  
                       efgtoa@h 007C                         efgtoa@i 0084                         efgtoa@l 0080  
                       efgtoa@m 006C                         efgtoa@n 008C                         efgtoa@p 0076  
                       efgtoa@t 0066                         efgtoa@u 008E                         efgtoa@w 0078  
                     _LCD_Begin 3286                       _LCD_Clear 3FC8                         atoi@neg 000E  
                     _LCD_Print 35AE                         _sprintf 3BFE                         _tolower 3CEA  
                       _strncmp 31B0            end_of_initialization 3AD4                         floorf@e 0041  
                       floorf@m 003D                         floorf@u 0043                         floorf@x 0033  
                       fputc@fp 0003                   __Lmediumconst 0000                         fputs@fp 000C  
              _Reloj_Calendario 28D8                      ?_I2C_Start 0001                      ?_I2C_Write 0001  
               ___lldiv@divisor 0005                 ___lldiv@counter 000D               __end_of_vfpfcnvrt 1D2A  
                    efgtoa@mode 007B                      efgtoa@sign 0074                       _RCSTAbits 000FAB  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 005D  
             LCD_Write_Nibble@n 0002                         strcpy@d 0009                         strlen@a 0003  
                       strcpy@s 0007                         strlen@s 0001                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISBbits 000F93                       _TRISCbits 000F94  
                     _TRISDbits 000F95                      ?_LCD_Begin 0001                      ?_LCD_Clear 0001  
                   ___fldiv@grs 002D                     ___fldiv@rem 0026                      ?_LCD_Print 0003  
                   ___flmul@grs 000E     __end_of_Mostrar_Temperatura 28D8                       _TXSTAbits 000FAC  
               ??_BCD_a_Decimal 0001                ?_Establecer_Hora 0001                _LCD_Write_Nibble 38FA  
                    LCD_Print@i 0008                  __end_of___flge 2FB8                  __end_of___fleq 37BA  
                   vfpfcnvrt@ap 0057                     vfpfcnvrt@ct 0096                     vfpfcnvrt@fp 0053  
                __end_of___wmul 3EEE                     _BAUDCONbits 000FB8                  __end_of_efgtoa 1438  
                   _I2C_ReStart 3FB6                  __end_of_floorf 2700                   __pbitbssBANK0 07D0  
                    floorf@F526 00DF                  __end_of_strcpy 3BFE                  __end_of_strlen 3E98  
           start_initialization 3A78                     __end_of_pad 34EA           __end_of___fpclassifyf 30B6  
                   ??_I2C_Start 0001                     ??_I2C_Write 0001                     vfprintf@fmt 009C  
                      ??___flge 0022                        ??___fleq 0009                        ??___wmul 0005  
                      ??_efgtoa 004E                     __pdataBANK0 00BF                     __pdataBANK1 0150  
                      ??_floorf 0037                        ?_I2C_Ack 0001                        ??_strcpy 0005  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LCD_Cmd 0001                       ___fldiv@a 001E                       ___fldiv@b 001A  
                     ___flmul@a 0005                       ___flmul@b 0001                       ___flsub@a 001E  
                     ___flsub@b 001A                   __pcstackBANK0 0060                     ??_LCD_Begin 0005  
                   ??_LCD_Clear 0005                     ??_LCD_Print 0005                     _efgtoa$1470 0060  
                   _efgtoa$1478 0062                     _efgtoa$1479 0064                        ?___fladd 0001  
                      ?___fldiv 001A                        ?___awdiv 0001                        ?___flneg 0001  
                      ?___awmod 0001                        ?___flmul 0001                        ?___flsub 001A  
                      ?___fltol 0001                        ?___lldiv 0001                LCD_Print@LCD_Str 0003  
                     _buffer_TX 0150        __end_of_Reloj_Calendario 2AA4                     __smallconst 0800  
                      ?_isdigit 0001                        _I2C_Init 3B40                        _I2C_Read 3F3C  
                      _I2C_Stop 3F92                        _ADC_Init 3F7E                        _ADC_Read 385E  
                      ?_isspace 0001                        ?_isupper 0001                        ?_sprintf 00A0  
                      ?_tolower 0007                        ?_strncmp 0001                        _LCD_Goto 3A0E  
                ___wmul@product 0005                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _PIR1bits 000F9E                       _vfpfcnvrt 18F8    Mostrar_Temperatura@value_adc 00B5  
                    _ADCON0bits 000FC2               ___wmul@multiplier 0001                      _I2C_NO_Ack 3F52  
                  _isspace$1557 0007                      vfpfcnvrt@c 0099                      vfpfcnvrt@f 0092  
      __end_of_LCD_Write_Nibble 398C                       copy_data0 3A8C                       copy_data1 3AAC  
Mostrar_Temperatura@temperatura 00F6                        __Hrparam 0000                      vfprintf@ap 009E  
                      __Lrparam 0000                      vfprintf@fp 009A                   I2C_Write@data 0001  
           BCD_a_Decimal@numero 0002                      ?_vfpfcnvrt 0053                    ?_I2C_ReStart 0001  
            ___fpclassifyf@F465 00E3                      sprintf@fmt 00A2                        ___xxtofl 2AA4  
                      __ptext10 3424                        __ptext11 3E62                        __ptext20 3DF2  
                      __ptext12 3D76                        __ptext21 1D2A                        __ptext13 335A  
                      __ptext30 385E                        __ptext22 2EB4                        __ptext14 3FD0  
                      __ptext31 3FC8                        __ptext23 3710                        __ptext15 24EE  
                      __ptext40 3A0E                        __ptext32 3286                        __ptext24 2154  
                      __ptext16 2FB8                        __ptext41 3CA2                        __ptext33 3B40  
                      __ptext25 2C58                        __ptext17 2DAE                        __ptext50 3F68  
                      __ptext42 38FA                        __ptext34 37BA                        __ptext26 3C50  
                      __ptext18 3D30                        __ptext51 3F7E                        __ptext43 3F26  
                      __ptext35 398C                        __ptext27 3E2A                        __ptext19 1438  
                      __ptext44 3F0E                        __ptext36 28D8                        __ptext28 3EC8  
                      __ptext45 3F92                        __ptext37 3660                        __ptext29 2AA4  
                      __ptext46 3FA4                        __ptext38 34EA                        __ptext47 3F3C  
                      __ptext39 35AE                        __ptext48 3FB6                        __ptext49 3F52  
                    strcpy@dest 0001                        efgtoa@fp 0047                        efgtoa@ne 006A  
                      efgtoa@pp 0068                        efgtoa@ou 006E                        isa$xinst 000000  
         __end_of_BCD_a_Decimal 3F3C                        _vfprintf 3ADE                        main@cont 00BD  
                   ?_I2C_NO_Ack 0001                        isdigit@c 0001                       sprintf@ap 00A8  
                      isspace@c 0001                ___lldiv@dividend 0001                       strcpy@src 0003  
                      isupper@c 0001                       strncmp@_l 0001                       strncmp@_r 0003  
                    _OSCCONbits 000FD3                     efgtoa@nmode 007A                     ??_vfpfcnvrt 0059  
                      sprintf@f 00AA                        tolower@c 0007                        sprintf@s 00A0  
             ?_Reloj_Calendario 0001                ___lldiv@quotient 0009                        strncmp@l 0008  
                      strncmp@n 0005                        strncmp@r 000A              ??_Reloj_Calendario 0009  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                   ___fladd@signs 000D  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F  
