

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 08 14:11:45 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.40
    75                           ; Generated 17/11/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     
   110                           	psect	idataBANK0
   111  003F70                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for Reloj_Calendario@Date
   115  003F70  44                 	db	68
   116  003F71  41                 	db	65
   117  003F72  54                 	db	84
   118  003F73  45                 	db	69
   119  003F74  3A                 	db	58
   120  003F75  20                 	db	32
   121  003F76  30                 	db	48
   122  003F77  30                 	db	48
   123  003F78  2F                 	db	47
   124  003F79  30                 	db	48
   125  003F7A  30                 	db	48
   126  003F7B  2F                 	db	47
   127  003F7C  32                 	db	50
   128  003F7D  30                 	db	48
   129  003F7E  30                 	db	48
   130  003F7F  30                 	db	48
   131  003F80  00                 	db	0
   132                           
   133                           ;initializer for Reloj_Calendario@Time
   134  003F81  54                 	db	84
   135  003F82  49                 	db	73
   136  003F83  4D                 	db	77
   137  003F84  45                 	db	69
   138  003F85  3A                 	db	58
   139  003F86  20                 	db	32
   140  003F87  30                 	db	48
   141  003F88  30                 	db	48
   142  003F89  3A                 	db	58
   143  003F8A  30                 	db	48
   144  003F8B  30                 	db	48
   145  003F8C  3A                 	db	58
   146  003F8D  30                 	db	48
   147  003F8E  30                 	db	48
   148  003F8F  00                 	db	0
   149                           
   150                           	psect	idataBANK1
   151  003F16                     __pidataBANK1:
   152                           	callstack 0
   153                           
   154                           ;initializer for _buffer_TX
   155  003F16  54                 	db	84
   156  003F17  45                 	db	69
   157  003F18  4D                 	db	77
   158  003F19  50                 	db	80
   159  003F1A  3A                 	db	58
   160  003F1B  20                 	db	32
   161  003F1C  78                 	db	120
   162  003F1D  78                 	db	120
   163  003F1E  2C                 	db	44
   164  003F1F  78                 	db	120
   165  003F20  78                 	db	120
   166  003F21  20                 	db	32
   167  003F22  67                 	db	103
   168  003F23  72                 	db	114
   169  003F24  61                 	db	97
   170  003F25  64                 	db	100
   171  003F26  6F                 	db	111
   172  003F27  73                 	db	115
   173  003F28  20                 	db	32
   174  003F29  48                 	db	72
   175  003F2A  4F                 	db	79
   176  003F2B  52                 	db	82
   177  003F2C  41                 	db	65
   178  003F2D  3A                 	db	58
   179  003F2E  20                 	db	32
   180  003F2F  78                 	db	120
   181  003F30  78                 	db	120
   182  003F31  3A                 	db	58
   183  003F32  78                 	db	120
   184  003F33  78                 	db	120
   185  003F34  3A                 	db	58
   186  003F35  78                 	db	120
   187  003F36  78                 	db	120
   188  003F37  20                 	db	32
   189  003F38  44                 	db	68
   190  003F39  41                 	db	65
   191  003F3A  54                 	db	84
   192  003F3B  45                 	db	69
   193  003F3C  3A                 	db	58
   194  003F3D  20                 	db	32
   195  003F3E  78                 	db	120
   196  003F3F  78                 	db	120
   197  003F40  2F                 	db	47
   198  003F41  78                 	db	120
   199  003F42  78                 	db	120
   200  003F43  2F                 	db	47
   201  003F44  78                 	db	120
   202  003F45  78                 	db	120
   203  003F46  0D                 	db	13
   204  003F47  0A                 	db	10
   205  003F48  00                 	db	0
   206  0000                     _ADCON0	set	4034
   207  0000                     _ADRESL	set	4035
   208  0000                     _ADRESH	set	4036
   209  0000                     _TRISBbits	set	3987
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _SSPCON2bits	set	4037
   212  0000                     _RB5	set	31757
   213  0000                     _RB4	set	31756
   214  0000                     _RB3	set	31755
   215  0000                     _GO	set	32273
   216  0000                     _ADON	set	32272
   217  0000                     _LATCbits	set	3979
   218  0000                     _TRISA	set	3986
   219  0000                     _TRISB	set	3987
   220  0000                     _RB2	set	31754
   221  0000                     _TRISDbits	set	3989
   222  0000                     _TRISCbits	set	3988
   223  0000                     _PIR1bits	set	3998
   224  0000                     _SSPCON2	set	4037
   225  0000                     _SSPCON1bits	set	4038
   226  0000                     _SSPSTATbits	set	4039
   227  0000                     _OSCCONbits	set	4051
   228  0000                     _SSPBUF	set	4041
   229  0000                     _SSPADD	set	4040
   230  0000                     _RCSTAbits	set	4011
   231  0000                     _TXSTAbits	set	4012
   232  0000                     _ADCON2	set	4032
   233  0000                     _ADCON1	set	4033
   234  0000                     _LATDbits	set	3980
   235  0000                     _SPBRG	set	4015
   236  0000                     _BAUDCONbits	set	4024
   237  0000                     _TXREG	set	4013
   238                           
   239                           	psect	smallconst
   240  000800                     __psmallconst:
   241                           	callstack 0
   242  000800  00                 	db	0
   243  000801                     STR_1:
   244  000801  54                 	db	84	;'T'
   245  000802  65                 	db	101	;'e'
   246  000803  6D                 	db	109	;'m'
   247  000804  70                 	db	112	;'p'
   248  000805  65                 	db	101	;'e'
   249  000806  72                 	db	114	;'r'
   250  000807  61                 	db	97	;'a'
   251  000808  74                 	db	116	;'t'
   252  000809  75                 	db	117	;'u'
   253  00080A  72                 	db	114	;'r'
   254  00080B  61                 	db	97	;'a'
   255  00080C  3A                 	db	58	;':'
   256  00080D  00                 	db	0
   257  00080E                     STR_2:
   258  00080E  25                 	db	37
   259  00080F  2E                 	db	46
   260  000810  32                 	db	50	;'2'
   261  000811  66                 	db	102	;'f'
   262  000812  00                 	db	0
   263  000813                     STR_4:
   264  000813  49                 	db	73	;'I'
   265  000814  4E                 	db	78	;'N'
   266  000815  46                 	db	70	;'F'
   267  000816  00                 	db	0
   268  000817                     STR_8:
   269  000817  4E                 	db	78	;'N'
   270  000818  41                 	db	65	;'A'
   271  000819  4E                 	db	78	;'N'
   272  00081A  00                 	db	0
   273  00081B                     STR_5:
   274  00081B  69                 	db	105	;'i'
   275  00081C  6E                 	db	110	;'n'
   276  00081D  66                 	db	102	;'f'
   277  00081E  00                 	db	0
   278  00081F                     STR_9:
   279  00081F  6E                 	db	110	;'n'
   280  000820  61                 	db	97	;'a'
   281  000821  6E                 	db	110	;'n'
   282  000822  00                 	db	0
   283  000823                     STR_12:
   284  000823  6C                 	db	108	;'l'
   285  000824  66                 	db	102	;'f'
   286  000825  00                 	db	0
   287  000826                     STR_3:
   288  000826  43                 	db	67	;'C'
   289  000827  00                 	db	0
   290  000828  00                 	db	0	; dummy byte at the end
   291  0000                     
   292                           ; #config settings
   293                           
   294                           	psect	cinit
   295  003AA8                     __pcinit:
   296                           	callstack 0
   297  003AA8                     start_initialization:
   298                           	callstack 0
   299  003AA8                     __initialization:
   300                           	callstack 0
   301                           
   302                           ; Initialize objects allocated to BANK1 (51 bytes)
   303                           ; load TBLPTR registers with __pidataBANK1
   304  003AA8  0E16               	movlw	low __pidataBANK1
   305  003AAA  6EF6               	movwf	tblptrl,c
   306  003AAC  0E3F               	movlw	high __pidataBANK1
   307  003AAE  6EF7               	movwf	tblptrh,c
   308  003AB0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   309  003AB2  6EF8               	movwf	tblptru,c
   310  003AB4  EE01  F050         	lfsr	0,__pdataBANK1
   311  003AB8  EE10 F033          	lfsr	1,51
   312  003ABC                     copy_data0:
   313  003ABC  0009               	tblrd		*+
   314  003ABE  CFF5 FFEE          	movff	tablat,postinc0
   315  003AC2  50E5               	movf	postdec1,w,c
   316  003AC4  50E1               	movf	fsr1l,w,c
   317  003AC6  E1FA               	bnz	copy_data0
   318                           
   319                           ; Initialize objects allocated to BANK0 (32 bytes)
   320                           ; load TBLPTR registers with __pidataBANK0
   321  003AC8  0E70               	movlw	low __pidataBANK0
   322  003ACA  6EF6               	movwf	tblptrl,c
   323  003ACC  0E3F               	movlw	high __pidataBANK0
   324  003ACE  6EF7               	movwf	tblptrh,c
   325  003AD0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   326  003AD2  6EF8               	movwf	tblptru,c
   327  003AD4  EE00  F0BF         	lfsr	0,__pdataBANK0
   328  003AD8  EE10 F020          	lfsr	1,32
   329  003ADC                     copy_data1:
   330  003ADC  0009               	tblrd		*+
   331  003ADE  CFF5 FFEE          	movff	tablat,postinc0
   332  003AE2  50E5               	movf	postdec1,w,c
   333  003AE4  50E1               	movf	fsr1l,w,c
   334  003AE6  E1FA               	bnz	copy_data1
   335                           
   336                           ; Clear objects allocated to BANK1 (80 bytes)
   337  003AE8  EE01  F000         	lfsr	0,__pbssBANK1
   338  003AEC  0E50               	movlw	80
   339  003AEE                     clear_0:
   340  003AEE  6AEE               	clrf	postinc0,c
   341  003AF0  06E8               	decf	wreg,f,c
   342  003AF2  E1FD               	bnz	clear_0
   343                           
   344                           ; Clear objects allocated to BITBANK0 (1 bytes)
   345  003AF4  0100               	movlb	0
   346  003AF6  6BFA               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   347                           
   348                           ; Clear objects allocated to BANK0 (27 bytes)
   349  003AF8  EE00  F0DF         	lfsr	0,__pbssBANK0
   350  003AFC  0E1B               	movlw	27
   351  003AFE                     clear_1:
   352  003AFE  6AEE               	clrf	postinc0,c
   353  003B00  06E8               	decf	wreg,f,c
   354  003B02  E1FD               	bnz	clear_1
   355  003B04                     end_of_initialization:
   356                           	callstack 0
   357  003B04                     __end_of__initialization:
   358                           	callstack 0
   359  003B04  0E00               	movlw	low (__Lmediumconst shr (0+16))
   360  003B06  6EF8               	movwf	tblptru,c
   361  003B08  0100               	movlb	0
   362  003B0A  EFDB  F016         	goto	_main	;jump to C main() function
   363                           
   364                           	psect	bitbssBANK0
   365  0007D0                     __pbitbssBANK0:
   366                           	callstack 0
   367  0007D0                     _RS:
   368                           	callstack 0
   369  0007D0                     	ds	1
   370                           
   371                           	psect	bssBANK0
   372  0000DF                     __pbssBANK0:
   373                           	callstack 0
   374  0000DF                     floorf@F526:
   375                           	callstack 0
   376  0000DF                     	ds	4
   377  0000E3                     ___fpclassifyf@F465:
   378                           	callstack 0
   379  0000E3                     	ds	4
   380  0000E7                     _nout:
   381                           	callstack 0
   382  0000E7                     	ds	2
   383  0000E9                     _width:
   384                           	callstack 0
   385  0000E9                     	ds	2
   386  0000EB                     _prec:
   387                           	callstack 0
   388  0000EB                     	ds	2
   389  0000ED                     _flags:
   390                           	callstack 0
   391  0000ED                     	ds	2
   392  0000EF                     _i:
   393                           	callstack 0
   394  0000EF                     	ds	1
   395  0000F0                     _day:
   396                           	callstack 0
   397  0000F0                     	ds	1
   398  0000F1                     _month:
   399                           	callstack 0
   400  0000F1                     	ds	1
   401  0000F2                     _year:
   402                           	callstack 0
   403  0000F2                     	ds	1
   404  0000F3                     _seconds:
   405                           	callstack 0
   406  0000F3                     	ds	1
   407  0000F4                     _minutes:
   408                           	callstack 0
   409  0000F4                     	ds	1
   410  0000F5                     _hours:
   411                           	callstack 0
   412  0000F5                     	ds	1
   413  0000F6                     Mostrar_Temperatura@temperatura:
   414                           	callstack 0
   415  0000F6                     	ds	4
   416                           
   417                           	psect	dataBANK0
   418  0000BF                     __pdataBANK0:
   419                           	callstack 0
   420  0000BF                     Reloj_Calendario@Date:
   421                           	callstack 0
   422  0000BF                     	ds	17
   423  0000D0                     Reloj_Calendario@Time:
   424                           	callstack 0
   425  0000D0                     	ds	15
   426                           
   427                           	psect	bssBANK1
   428  000100                     __pbssBANK1:
   429                           	callstack 0
   430  000100                     _dbuf:
   431                           	callstack 0
   432  000100                     	ds	80
   433                           
   434                           	psect	dataBANK1
   435  000150                     __pdataBANK1:
   436                           	callstack 0
   437  000150                     _buffer_TX:
   438                           	callstack 0
   439  000150                     	ds	51
   440                           
   441                           	psect	cstackBANK0
   442  000060                     __pcstackBANK0:
   443                           	callstack 0
   444  000060                     _efgtoa$1473:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x0
   448  000060                     	ds	2
   449  000062                     _efgtoa$1481:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453  000062                     	ds	2
   454  000064                     _efgtoa$1482:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x4
   458  000064                     	ds	2
   459  000066                     efgtoa@t:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x6
   463  000066                     	ds	2
   464  000068                     efgtoa@pp:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x8
   468  000068                     	ds	2
   469  00006A                     efgtoa@ne:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0xA
   473  00006A                     	ds	2
   474  00006C                     efgtoa@m:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xC
   478  00006C                     	ds	2
   479  00006E                     efgtoa@ou:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0xE
   483  00006E                     	ds	4
   484  000072                     efgtoa@d:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x12
   488  000072                     	ds	2
   489  000074                     efgtoa@sign:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x14
   493  000074                     	ds	2
   494  000076                     efgtoa@p:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x16
   498  000076                     	ds	2
   499  000078                     efgtoa@w:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x18
   503  000078                     	ds	2
   504  00007A                     efgtoa@nmode:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x1A
   508  00007A                     	ds	1
   509  00007B                     efgtoa@mode:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x1B
   513  00007B                     	ds	1
   514  00007C                     efgtoa@h:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x1C
   518  00007C                     	ds	4
   519  000080                     efgtoa@l:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x20
   523  000080                     	ds	4
   524  000084                     efgtoa@i:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x24
   528  000084                     	ds	2
   529  000086                     efgtoa@g:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x26
   533  000086                     	ds	4
   534  00008A                     efgtoa@e:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x2A
   538  00008A                     	ds	2
   539  00008C                     efgtoa@n:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x2C
   543  00008C                     	ds	2
   544  00008E                     efgtoa@u:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x2E
   548  00008E                     	ds	4
   549  000092                     vfpfcnvrt@f:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x32
   553  000092                     	ds	4
   554  000096                     vfpfcnvrt@ct:
   555                           	callstack 0
   556                           
   557                           ; 3 bytes @ 0x36
   558  000096                     	ds	3
   559  000099                     vfpfcnvrt@c:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x39
   563  000099                     	ds	1
   564  00009A                     ?_vfprintf:
   565                           	callstack 0
   566  00009A                     vfprintf@fp:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x3A
   570  00009A                     	ds	2
   571  00009C                     vfprintf@fmt:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x3C
   575  00009C                     	ds	2
   576  00009E                     vfprintf@ap:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x3E
   580  00009E                     	ds	2
   581  0000A0                     ?_sprintf:
   582                           	callstack 0
   583  0000A0                     sprintf@s:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x40
   587  0000A0                     	ds	2
   588  0000A2                     sprintf@fmt:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x42
   592  0000A2                     	ds	6
   593  0000A8                     sprintf@ap:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x48
   597  0000A8                     	ds	2
   598  0000AA                     sprintf@f:
   599                           	callstack 0
   600                           
   601                           ; 11 bytes @ 0x4A
   602  0000AA                     	ds	11
   603  0000B5                     Mostrar_Temperatura@value_adc:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x55
   607  0000B5                     	ds	2
   608  0000B7                     Mostrar_Temperatura@temp:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x57
   612  0000B7                     	ds	4
   613  0000BB                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x5B
   616  0000BB                     	ds	2
   617  0000BD                     main@cont:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x5D
   621  0000BD                     	ds	2
   622                           
   623                           	psect	cstackCOMRAM
   624  000001                     __pcstackCOMRAM:
   625                           	callstack 0
   626  000001                     ??_LCD_Write_Nibble:
   627  000001                     ??_BCD_a_Decimal:
   628  000001                     ?_strlen:
   629                           	callstack 0
   630  000001                     ?___fpclassifyf:
   631                           	callstack 0
   632  000001                     ?_isupper:
   633                           	callstack 0
   634  000001                     ?_isdigit:
   635                           	callstack 0
   636  000001                     ?_strncmp:
   637                           	callstack 0
   638  000001                     ?_isspace:
   639                           	callstack 0
   640  000001                     ?_ADC_Read:
   641                           	callstack 0
   642  000001                     ?___wmul:
   643                           	callstack 0
   644  000001                     ?___awdiv:
   645                           	callstack 0
   646  000001                     ?___awmod:
   647                           	callstack 0
   648  000001                     ?___fladd:
   649                           	callstack 0
   650  000001                     ?___flmul:
   651                           	callstack 0
   652  000001                     ?___lldiv:
   653                           	callstack 0
   654  000001                     ?___flneg:
   655                           	callstack 0
   656  000001                     ?___fltol:
   657                           	callstack 0
   658  000001                     ?___xxtofl:
   659                           	callstack 0
   660  000001                     I2C_Write@data:
   661                           	callstack 0
   662  000001                     ADC_Read@channel:
   663                           	callstack 0
   664  000001                     Imprimir_Cadena@a:
   665                           	callstack 0
   666  000001                     ___wmul@multiplier:
   667                           	callstack 0
   668  000001                     ___awdiv@dividend:
   669                           	callstack 0
   670  000001                     ___awmod@dividend:
   671                           	callstack 0
   672  000001                     isdigit@c:
   673                           	callstack 0
   674  000001                     isspace@c:
   675                           	callstack 0
   676  000001                     isupper@c:
   677                           	callstack 0
   678  000001                     fputc@c:
   679                           	callstack 0
   680  000001                     strcpy@dest:
   681                           	callstack 0
   682  000001                     strlen@s:
   683                           	callstack 0
   684  000001                     strncmp@_l:
   685                           	callstack 0
   686  000001                     ___lldiv@dividend:
   687                           	callstack 0
   688  000001                     ___fleq@ff1:
   689                           	callstack 0
   690  000001                     ___flneg@f1:
   691                           	callstack 0
   692  000001                     ___fltol@f1:
   693                           	callstack 0
   694  000001                     ___fladd@b:
   695                           	callstack 0
   696  000001                     ___flmul@b:
   697                           	callstack 0
   698  000001                     ___xxtofl@val:
   699                           	callstack 0
   700  000001                     ___fpclassifyf@x:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0x0
   704  000001                     	ds	1
   705  000002                     LCD_Write_Nibble@n:
   706                           	callstack 0
   707  000002                     BCD_a_Decimal@numero:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x1
   711  000002                     	ds	1
   712  000003                     ??_isupper:
   713  000003                     ??_isdigit:
   714  000003                     ??_isspace:
   715  000003                     ??_ADC_Read:
   716  000003                     ??_LCD_Cmd:
   717  000003                     LCD_Print@LCD_Str:
   718                           	callstack 0
   719  000003                     Imprimir_Cadena@b:
   720                           	callstack 0
   721  000003                     ___wmul@multiplicand:
   722                           	callstack 0
   723  000003                     ___awdiv@divisor:
   724                           	callstack 0
   725  000003                     ___awmod@divisor:
   726                           	callstack 0
   727  000003                     fputc@fp:
   728                           	callstack 0
   729  000003                     strcpy@src:
   730                           	callstack 0
   731  000003                     strlen@a:
   732                           	callstack 0
   733  000003                     strncmp@_r:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x2
   737  000003                     	ds	1
   738  000004                     LCD_Cmd@Command:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x3
   742  000004                     	ds	1
   743  000005                     ??_fputc:
   744  000005                     ??___fpclassifyf:
   745  000005                     ??_strcpy:
   746  000005                     ??_LCD_Print:
   747  000005                     ??_LCD_Begin:
   748  000005                     ??_Imprimir_Cadena:
   749  000005                     ??___fltol:
   750  000005                     ??___xxtofl:
   751  000005                     LCD_Goto@row:
   752                           	callstack 0
   753  000005                     ___awdiv@counter:
   754                           	callstack 0
   755  000005                     ___awmod@counter:
   756                           	callstack 0
   757  000005                     ___wmul@product:
   758                           	callstack 0
   759  000005                     strncmp@n:
   760                           	callstack 0
   761  000005                     ___lldiv@divisor:
   762                           	callstack 0
   763  000005                     ___fleq@ff2:
   764                           	callstack 0
   765  000005                     ___fladd@a:
   766                           	callstack 0
   767  000005                     ___flmul@a:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x4
   771  000005                     	ds	1
   772  000006                     ??_LCD_Goto:
   773  000006                     ___awdiv@sign:
   774                           	callstack 0
   775  000006                     ___awmod@sign:
   776                           	callstack 0
   777  000006                     Imprimir_Cadena@i:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x5
   781  000006                     	ds	1
   782  000007                     ??_strncmp:
   783  000007                     ?_tolower:
   784                           	callstack 0
   785  000007                     _isspace$1560:
   786                           	callstack 0
   787  000007                     ADC_Read@digital:
   788                           	callstack 0
   789  000007                     ___awdiv@quotient:
   790                           	callstack 0
   791  000007                     strcpy@s:
   792                           	callstack 0
   793  000007                     tolower@c:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x6
   797  000007                     	ds	1
   798  000008                     ?_atoi:
   799                           	callstack 0
   800  000008                     LCD_Goto@col:
   801                           	callstack 0
   802  000008                     LCD_Print@i:
   803                           	callstack 0
   804  000008                     atoi@s:
   805                           	callstack 0
   806  000008                     strncmp@l:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x7
   810  000008                     	ds	1
   811  000009                     ??___fladd:
   812  000009                     ??___flmul:
   813  000009                     ??_tolower:
   814  000009                     ??_Establecer_Hora:
   815  000009                     ??___fleq:
   816  000009                     ___fltol@sign1:
   817                           	callstack 0
   818  000009                     ___xxtofl@sign:
   819                           	callstack 0
   820  000009                     ___fpclassifyf@e:
   821                           	callstack 0
   822  000009                     strcpy@d:
   823                           	callstack 0
   824  000009                     ___lldiv@quotient:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x8
   828  000009                     	ds	1
   829  00000A                     ??_atoi:
   830  00000A                     ___fltol@exp1:
   831                           	callstack 0
   832  00000A                     ___xxtofl@exp:
   833                           	callstack 0
   834  00000A                     fputs@s:
   835                           	callstack 0
   836  00000A                     strncmp@r:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x9
   840  00000A                     	ds	1
   841  00000B                     ___xxtofl@arg:
   842                           	callstack 0
   843  00000B                     ___fpclassifyf@u:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0xA
   847  00000B                     	ds	1
   848  00000C                     fputs@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0xB
   852  00000C                     	ds	1
   853  00000D                     ___lldiv@counter:
   854                           	callstack 0
   855  00000D                     ___fladd@signs:
   856                           	callstack 0
   857  00000D                     ___flmul@sign:
   858                           	callstack 0
   859                           
   860                           ; 1 bytes @ 0xC
   861  00000D                     	ds	1
   862  00000E                     ___fladd@aexp:
   863                           	callstack 0
   864  00000E                     fputs@c:
   865                           	callstack 0
   866  00000E                     atoi@neg:
   867                           	callstack 0
   868  00000E                     I2C_Init@frecuencia:
   869                           	callstack 0
   870  00000E                     ___flmul@grs:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0xD
   874  00000E                     	ds	1
   875  00000F                     ___fladd@bexp:
   876                           	callstack 0
   877  00000F                     fputs@i:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0xE
   881  00000F                     	ds	1
   882  000010                     ___fladd@grs:
   883                           	callstack 0
   884  000010                     atoi@n:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0xF
   888  000010                     	ds	1
   889  000011                     ?_pad:
   890                           	callstack 0
   891  000011                     pad@fp:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x10
   895  000011                     	ds	1
   896  000012                     ??_I2C_Init:
   897  000012                     ___flmul@aexp:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x11
   901  000012                     	ds	1
   902  000013                     ___flmul@bexp:
   903                           	callstack 0
   904  000013                     pad@buf:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x12
   908  000013                     	ds	1
   909  000014                     ___flmul@prod:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x13
   913  000014                     	ds	1
   914  000015                     pad@p:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x14
   918  000015                     	ds	2
   919  000017                     ??_pad:
   920                           
   921                           ; 1 bytes @ 0x16
   922  000017                     	ds	1
   923  000018                     ___flmul@temp:
   924                           	callstack 0
   925  000018                     pad@i:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x17
   929  000018                     	ds	2
   930  00001A                     ?___fldiv:
   931                           	callstack 0
   932  00001A                     ?___flsub:
   933                           	callstack 0
   934  00001A                     pad@w:
   935                           	callstack 0
   936  00001A                     ___flge@ff1:
   937                           	callstack 0
   938  00001A                     ___flsub@b:
   939                           	callstack 0
   940  00001A                     ___fldiv@b:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x19
   944  00001A                     	ds	4
   945  00001E                     ___flge@ff2:
   946                           	callstack 0
   947  00001E                     ___flsub@a:
   948                           	callstack 0
   949  00001E                     ___fldiv@a:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0x1D
   953  00001E                     	ds	4
   954  000022                     ??___fldiv:
   955  000022                     ??___flge:
   956                           
   957                           ; 1 bytes @ 0x21
   958  000022                     	ds	4
   959  000026                     ___fldiv@rem:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x25
   963  000026                     	ds	4
   964  00002A                     ___fldiv@sign:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x29
   968  00002A                     	ds	1
   969  00002B                     ___fldiv@new_exp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x2A
   973  00002B                     	ds	2
   974  00002D                     ___fldiv@grs:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x2C
   978  00002D                     	ds	4
   979  000031                     ___fldiv@bexp:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x30
   983  000031                     	ds	1
   984  000032                     ___fldiv@aexp:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x31
   988  000032                     	ds	1
   989  000033                     ?_floorf:
   990                           	callstack 0
   991  000033                     floorf@x:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x32
   995  000033                     	ds	4
   996  000037                     ??_floorf:
   997                           
   998                           ; 1 bytes @ 0x36
   999  000037                     	ds	6
  1000  00003D                     floorf@m:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x3C
  1004  00003D                     	ds	4
  1005  000041                     floorf@e:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x40
  1009  000041                     	ds	2
  1010  000043                     floorf@u:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x42
  1014  000043                     	ds	4
  1015  000047                     ?_efgtoa:
  1016                           	callstack 0
  1017  000047                     efgtoa@fp:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x46
  1021  000047                     	ds	2
  1022  000049                     efgtoa@f:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x48
  1026  000049                     	ds	4
  1027  00004D                     efgtoa@c:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x4C
  1031  00004D                     	ds	1
  1032  00004E                     ??_efgtoa:
  1033                           
  1034                           ; 1 bytes @ 0x4D
  1035  00004E                     	ds	5
  1036  000053                     ?_vfpfcnvrt:
  1037                           	callstack 0
  1038  000053                     vfpfcnvrt@fp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x52
  1042  000053                     	ds	2
  1043  000055                     vfpfcnvrt@fmt:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x54
  1047  000055                     	ds	2
  1048  000057                     vfpfcnvrt@ap:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x56
  1052  000057                     	ds	2
  1053  000059                     ??_vfpfcnvrt:
  1054                           
  1055                           ; 1 bytes @ 0x58
  1056  000059                     	ds	4
  1057  00005D                     vfprintf@cfmt:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x5C
  1061  00005D                     	ds	2
  1062  00005F                     ??_Mostrar_Temperatura:
  1063                           
  1064                           ; 1 bytes @ 0x5E
  1065  00005F                     	ds	1
  1066                           
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 229 in file "Main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  cont            2   93[BANK0 ] int 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0
  1087 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1088 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1089 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1090 ;;Total ram usage:        4 bytes
  1091 ;; Hardware stack levels required when called: 9
  1092 ;; This function calls:
  1093 ;;		_ADC_Init
  1094 ;;		_Establecer_Hora
  1095 ;;		_I2C_Init
  1096 ;;		_Imprimir_Cadena
  1097 ;;		_LCD_Begin
  1098 ;;		_LCD_Clear
  1099 ;;		_Mostrar_Temperatura
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text0
  1106  002DB6                     __ptext0:
  1107                           	callstack 0
  1108  002DB6                     _main:
  1109                           	callstack 22
  1110  002DB6                     
  1111                           ;Main.c: 231:     I2C_Init(100000);
  1112  002DB6  0EA0               	movlw	160
  1113  002DB8  6E0E               	movwf	I2C_Init@frecuencia^0,c
  1114  002DBA  0E86               	movlw	134
  1115  002DBC  6E0F               	movwf	(I2C_Init@frecuencia+1)^0,c
  1116  002DBE  0E01               	movlw	1
  1117  002DC0  6E10               	movwf	(I2C_Init@frecuencia+2)^0,c
  1118  002DC2  0E00               	movlw	0
  1119  002DC4  6E11               	movwf	(I2C_Init@frecuencia+3)^0,c
  1120  002DC6  ECB8  F01D         	call	_I2C_Init	;wreg free
  1121                           
  1122                           ;Main.c: 232:     LCD_Begin();
  1123  002DCA  EC5B  F019         	call	_LCD_Begin	;wreg free
  1124  002DCE                     
  1125                           ;Main.c: 233:     ADC_Init();
  1126  002DCE  EC00  F020         	call	_ADC_Init	;wreg free
  1127  002DD2                     
  1128                           ;Main.c: 235:     TRISBbits.RB2 = 0;
  1129  002DD2  9493               	bcf	147,2,c	;volatile
  1130  002DD4                     
  1131                           ;Main.c: 236:     TRISBbits.RB3 = 0;
  1132  002DD4  9693               	bcf	147,3,c	;volatile
  1133  002DD6                     
  1134                           ;Main.c: 237:     TRISBbits.RB4 = 0;
  1135  002DD6  9893               	bcf	147,4,c	;volatile
  1136  002DD8                     
  1137                           ;Main.c: 238:     TRISBbits.RB5 = 0;
  1138  002DD8  9A93               	bcf	147,5,c	;volatile
  1139  002DDA                     
  1140                           ;Main.c: 241:     OSCCONbits.IRCF = 0b111;
  1141  002DDA  0E70               	movlw	112
  1142  002DDC  12D3               	iorwf	211,f,c	;volatile
  1143  002DDE                     
  1144                           ;Main.c: 242:     OSCCONbits.SCS = 0b10;
  1145  002DDE  50D3               	movf	211,w,c	;volatile
  1146  002DE0  0BFC               	andlw	-4
  1147  002DE2  0902               	iorlw	2
  1148  002DE4  6ED3               	movwf	211,c	;volatile
  1149  002DE6                     
  1150                           ;Main.c: 245:     TRISCbits.RC6 = 0;
  1151  002DE6  9C94               	bcf	148,6,c	;volatile
  1152  002DE8                     
  1153                           ;Main.c: 246:     TXSTAbits.TX9 = 0;
  1154  002DE8  9CAC               	bcf	172,6,c	;volatile
  1155  002DEA                     
  1156                           ;Main.c: 247:     TXSTAbits.TXEN = 1;
  1157  002DEA  8AAC               	bsf	172,5,c	;volatile
  1158  002DEC                     
  1159                           ;Main.c: 248:     TXSTAbits.SYNC = 0;
  1160  002DEC  98AC               	bcf	172,4,c	;volatile
  1161  002DEE                     
  1162                           ;Main.c: 249:     TXSTAbits.BRGH = 0;
  1163  002DEE  94AC               	bcf	172,2,c	;volatile
  1164  002DF0                     
  1165                           ;Main.c: 250:     BAUDCONbits.BRG16 = 0;
  1166  002DF0  96B8               	bcf	184,3,c	;volatile
  1167  002DF2                     
  1168                           ;Main.c: 251:     RCSTAbits.SPEN = 1;
  1169  002DF2  8EAB               	bsf	171,7,c	;volatile
  1170  002DF4                     
  1171                           ;Main.c: 252:     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  1172  002DF4  0E0C               	movlw	12
  1173  002DF6  6EAF               	movwf	175,c	;volatile
  1174  002DF8                     l4556:
  1175                           
  1176                           ;Main.c: 257:     {;Main.c: 258:         cont = 400;
  1177  002DF8  0E01               	movlw	1
  1178  002DFA  0100               	movlb	0	; () banked
  1179  002DFC  6FBE               	movwf	(main@cont+1)& (0+255),b
  1180  002DFE  0E90               	movlw	144
  1181  002E00  6FBD               	movwf	main@cont& (0+255),b
  1182                           
  1183                           ;Main.c: 259:         while(cont>0)
  1184  002E02  EF0C  F017         	goto	l4562
  1185  002E06                     l4558:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;Main.c: 260:         {;Main.c: 261:             Mostrar_Temperatura();
  1189  002E06  EC80  F013         	call	_Mostrar_Temperatura	;wreg free
  1190  002E0A                     
  1191                           ;Main.c: 262:             cont = cont - 5;
  1192  002E0A  0EFB               	movlw	251
  1193  002E0C  0100               	movlb	0	; () banked
  1194  002E0E  25BD               	addwf	main@cont& (0+255),w,b
  1195  002E10  6FBD               	movwf	main@cont& (0+255),b
  1196  002E12  0EFF               	movlw	255
  1197  002E14  21BE               	addwfc	(main@cont+1)& (0+255),w,b
  1198  002E16  6FBE               	movwf	(main@cont+1)& (0+255),b
  1199  002E18                     l4562:
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;Main.c: 259:         while(cont>0)
  1203  002E18  BFBE               	btfsc	(main@cont+1)& (0+255),7,b
  1204  002E1A  EF19  F017         	goto	u5090
  1205  002E1E  51BE               	movf	(main@cont+1)& (0+255),w,b
  1206  002E20  E106               	bnz	u5091
  1207  002E22  05BD               	decf	main@cont& (0+255),w,b
  1208  002E24  B0D8               	btfsc	status,0,c
  1209  002E26  EF17  F017         	goto	u5091
  1210  002E2A  EF19  F017         	goto	u5090
  1211  002E2E                     u5091:
  1212  002E2E  EF03  F017         	goto	l4558
  1213  002E32                     u5090:
  1214  002E32                     
  1215                           ; BSR set to: 0
  1216                           ;Main.c: 264:         Imprimir_Cadena(0,18);
  1217  002E32  0E00               	movlw	0
  1218  002E34  6E02               	movwf	(Imprimir_Cadena@a+1)^0,c
  1219  002E36  0E00               	movlw	0
  1220  002E38  6E01               	movwf	Imprimir_Cadena@a^0,c
  1221  002E3A  0E00               	movlw	0
  1222  002E3C  6E04               	movwf	(Imprimir_Cadena@b+1)^0,c
  1223  002E3E  0E12               	movlw	18
  1224  002E40  6E03               	movwf	Imprimir_Cadena@b^0,c
  1225  002E42  EC69  F01E         	call	_Imprimir_Cadena	;wreg free
  1226  002E46                     
  1227                           ;Main.c: 266:         LCD_Clear();
  1228  002E46  EC25  F020         	call	_LCD_Clear	;wreg free
  1229  002E4A                     
  1230                           ;Main.c: 267:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1231  002E4A  0E06               	movlw	6
  1232  002E4C  0100               	movlb	0	; () banked
  1233  002E4E  6FBC               	movwf	(??_main+1)& (0+255),b
  1234  002E50  0E13               	movlw	19
  1235  002E52  6FBB               	movwf	??_main& (0+255),b
  1236  002E54  0EAD               	movlw	173
  1237  002E56                     u5117:
  1238  002E56  2EE8               	decfsz	wreg,f,c
  1239  002E58  D7FE               	bra	u5117
  1240  002E5A  2FBB               	decfsz	??_main& (0+255),f,b
  1241  002E5C  D7FC               	bra	u5117
  1242  002E5E  2FBC               	decfsz	(??_main+1)& (0+255),f,b
  1243  002E60  D7FA               	bra	u5117
  1244  002E62  D000               	nop2	
  1245  002E64                     
  1246                           ;Main.c: 269:         cont = 200;
  1247  002E64  0E00               	movlw	0
  1248  002E66  0100               	movlb	0	; () banked
  1249  002E68  6FBE               	movwf	(main@cont+1)& (0+255),b
  1250  002E6A  0EC8               	movlw	200
  1251  002E6C  6FBD               	movwf	main@cont& (0+255),b
  1252                           
  1253                           ;Main.c: 270:         while(cont>0)
  1254  002E6E  EF42  F017         	goto	l4576
  1255  002E72                     l4572:
  1256                           
  1257                           ; BSR set to: 0
  1258                           ;Main.c: 271:         {;Main.c: 272:             Establecer_Hora();
  1259  002E72  ECDE  F01C         	call	_Establecer_Hora	;wreg free
  1260  002E76                     
  1261                           ;Main.c: 273:             cont = cont - 5;
  1262  002E76  0EFB               	movlw	251
  1263  002E78  0100               	movlb	0	; () banked
  1264  002E7A  25BD               	addwf	main@cont& (0+255),w,b
  1265  002E7C  6FBD               	movwf	main@cont& (0+255),b
  1266  002E7E  0EFF               	movlw	255
  1267  002E80  21BE               	addwfc	(main@cont+1)& (0+255),w,b
  1268  002E82  6FBE               	movwf	(main@cont+1)& (0+255),b
  1269  002E84                     l4576:
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;Main.c: 270:         while(cont>0)
  1273  002E84  BFBE               	btfsc	(main@cont+1)& (0+255),7,b
  1274  002E86  EF4F  F017         	goto	u5100
  1275  002E8A  51BE               	movf	(main@cont+1)& (0+255),w,b
  1276  002E8C  E106               	bnz	u5101
  1277  002E8E  05BD               	decf	main@cont& (0+255),w,b
  1278  002E90  B0D8               	btfsc	status,0,c
  1279  002E92  EF4D  F017         	goto	u5101
  1280  002E96  EF4F  F017         	goto	u5100
  1281  002E9A                     u5101:
  1282  002E9A  EF39  F017         	goto	l4572
  1283  002E9E                     u5100:
  1284  002E9E                     
  1285                           ; BSR set to: 0
  1286                           ;Main.c: 275:         Imprimir_Cadena(18,51);
  1287  002E9E  0E00               	movlw	0
  1288  002EA0  6E02               	movwf	(Imprimir_Cadena@a+1)^0,c
  1289  002EA2  0E12               	movlw	18
  1290  002EA4  6E01               	movwf	Imprimir_Cadena@a^0,c
  1291  002EA6  0E00               	movlw	0
  1292  002EA8  6E04               	movwf	(Imprimir_Cadena@b+1)^0,c
  1293  002EAA  0E33               	movlw	51
  1294  002EAC  6E03               	movwf	Imprimir_Cadena@b^0,c
  1295  002EAE  EC69  F01E         	call	_Imprimir_Cadena	;wreg free
  1296  002EB2                     
  1297                           ;Main.c: 277:         LCD_Clear();
  1298  002EB2  EC25  F020         	call	_LCD_Clear	;wreg free
  1299  002EB6                     
  1300                           ;Main.c: 278:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1301  002EB6  0E06               	movlw	6
  1302  002EB8  0100               	movlb	0	; () banked
  1303  002EBA  6FBC               	movwf	(??_main+1)& (0+255),b
  1304  002EBC  0E13               	movlw	19
  1305  002EBE  6FBB               	movwf	??_main& (0+255),b
  1306  002EC0  0EAD               	movlw	173
  1307  002EC2                     u5127:
  1308  002EC2  2EE8               	decfsz	wreg,f,c
  1309  002EC4  D7FE               	bra	u5127
  1310  002EC6  2FBB               	decfsz	??_main& (0+255),f,b
  1311  002EC8  D7FC               	bra	u5127
  1312  002ECA  2FBC               	decfsz	(??_main+1)& (0+255),f,b
  1313  002ECC  D7FA               	bra	u5127
  1314  002ECE  D000               	nop2	
  1315  002ED0  EFFC  F016         	goto	l4556
  1316  002ED4  EF00  F000         	goto	start
  1317  002ED8                     __end_of_main:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _Mostrar_Temperatura *****************
  1321 ;; Defined at:
  1322 ;;		line 162 in file "Main.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  temp            4   87[BANK0 ] float 
  1327 ;;  value_adc       2   85[BANK0 ] int 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0
  1338 ;;      Locals:         0       6       0       0       0       0       0       0       0
  1339 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1340 ;;      Totals:         1       6       0       0       0       0       0       0       0
  1341 ;;Total ram usage:        7 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 8
  1344 ;; This function calls:
  1345 ;;		_ADC_Read
  1346 ;;		_LCD_Goto
  1347 ;;		_LCD_Print
  1348 ;;		___fldiv
  1349 ;;		___flge
  1350 ;;		___flmul
  1351 ;;		___xxtofl
  1352 ;;		_sprintf
  1353 ;; This function is called by:
  1354 ;;		_main
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text1
  1359  002700                     __ptext1:
  1360                           	callstack 0
  1361  002700                     _Mostrar_Temperatura:
  1362                           	callstack 22
  1363  002700                     
  1364                           ;Main.c: 166:     int value_adc = 0;
  1365  002700  0E00               	movlw	0
  1366  002702  0100               	movlb	0	; () banked
  1367  002704  6FB6               	movwf	(Mostrar_Temperatura@value_adc+1)& (0+255),b
  1368  002706  0E00               	movlw	0
  1369  002708  6FB5               	movwf	Mostrar_Temperatura@value_adc& (0+255),b
  1370  00270A                     
  1371                           ; BSR set to: 0
  1372                           ;Main.c: 168:     LCD_Goto(1,1);
  1373  00270A  0E01               	movlw	1
  1374  00270C  6E05               	movwf	LCD_Goto@row^0,c
  1375  00270E  0E01               	movlw	1
  1376  002710  EC1F  F01D         	call	_LCD_Goto
  1377  002714                     
  1378                           ;Main.c: 169:     LCD_Print("Temperatura:");
  1379  002714  0E01               	movlw	low STR_1
  1380  002716  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1381  002718  0E08               	movlw	high STR_1
  1382  00271A  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1383  00271C  ECEF  F01A         	call	_LCD_Print	;wreg free
  1384  002720                     
  1385                           ;Main.c: 170:     value_adc = ADC_Read(0);
  1386  002720  0E00               	movlw	0
  1387  002722  6E02               	movwf	(ADC_Read@channel+1)^0,c
  1388  002724  0E00               	movlw	0
  1389  002726  6E01               	movwf	ADC_Read@channel^0,c
  1390  002728  EC47  F01C         	call	_ADC_Read	;wreg free
  1391  00272C  C001  F0B5         	movff	?_ADC_Read,Mostrar_Temperatura@value_adc
  1392  002730  C002  F0B6         	movff	?_ADC_Read+1,Mostrar_Temperatura@value_adc+1
  1393  002734                     
  1394                           ;Main.c: 171:     temp = value_adc;
  1395  002734  C0B5  F001         	movff	Mostrar_Temperatura@value_adc,___xxtofl@val
  1396  002738  C0B6  F002         	movff	Mostrar_Temperatura@value_adc+1,___xxtofl@val+1
  1397  00273C  0E00               	movlw	0
  1398  00273E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1399  002740  0EFF               	movlw	-1
  1400  002742  6E03               	movwf	(___xxtofl@val+2)^0,c
  1401  002744  6E04               	movwf	(___xxtofl@val+3)^0,c
  1402  002746  0E01               	movlw	1
  1403  002748  EC56  F015         	call	___xxtofl
  1404  00274C  C001  F0B7         	movff	?___xxtofl,Mostrar_Temperatura@temp
  1405  002750  C002  F0B8         	movff	?___xxtofl+1,Mostrar_Temperatura@temp+1
  1406  002754  C003  F0B9         	movff	?___xxtofl+2,Mostrar_Temperatura@temp+2
  1407  002758  C004  F0BA         	movff	?___xxtofl+3,Mostrar_Temperatura@temp+3
  1408  00275C                     
  1409                           ;Main.c: 172:     temp = (temp * 500.0) / 1023.0;
  1410  00275C  0E00               	movlw	0
  1411  00275E  6E05               	movwf	___flmul@a^0,c
  1412  002760  0E00               	movlw	0
  1413  002762  6E06               	movwf	(___flmul@a+1)^0,c
  1414  002764  0EFA               	movlw	250
  1415  002766  6E07               	movwf	(___flmul@a+2)^0,c
  1416  002768  0E43               	movlw	67
  1417  00276A  6E08               	movwf	(___flmul@a+3)^0,c
  1418  00276C  C0B7  F001         	movff	Mostrar_Temperatura@temp,___flmul@b
  1419  002770  C0B8  F002         	movff	Mostrar_Temperatura@temp+1,___flmul@b+1
  1420  002774  C0B9  F003         	movff	Mostrar_Temperatura@temp+2,___flmul@b+2
  1421  002778  C0BA  F004         	movff	Mostrar_Temperatura@temp+3,___flmul@b+3
  1422  00277C  EC95  F00E         	call	___flmul	;wreg free
  1423  002780  C001  F01A         	movff	?___flmul,___fldiv@b
  1424  002784  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
  1425  002788  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
  1426  00278C  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
  1427  002790  0E00               	movlw	0
  1428  002792  6E1E               	movwf	___fldiv@a^0,c
  1429  002794  0EC0               	movlw	192
  1430  002796  6E1F               	movwf	(___fldiv@a+1)^0,c
  1431  002798  0E7F               	movlw	127
  1432  00279A  6E20               	movwf	(___fldiv@a+2)^0,c
  1433  00279C  0E44               	movlw	68
  1434  00279E  6E21               	movwf	(___fldiv@a+3)^0,c
  1435  0027A0  ECAA  F010         	call	___fldiv	;wreg free
  1436  0027A4  C01A  F0B7         	movff	?___fldiv,Mostrar_Temperatura@temp
  1437  0027A8  C01B  F0B8         	movff	?___fldiv+1,Mostrar_Temperatura@temp+1
  1438  0027AC  C01C  F0B9         	movff	?___fldiv+2,Mostrar_Temperatura@temp+2
  1439  0027B0  C01D  F0BA         	movff	?___fldiv+3,Mostrar_Temperatura@temp+3
  1440  0027B4                     
  1441                           ;Main.c: 173:     sprintf(temperatura,"%.2f",temp);
  1442  0027B4  0EF6               	movlw	low Mostrar_Temperatura@temperatura
  1443  0027B6  0100               	movlb	0	; () banked
  1444  0027B8  6FA0               	movwf	sprintf@s& (0+255),b
  1445  0027BA  0E00               	movlw	high Mostrar_Temperatura@temperatura
  1446  0027BC  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1447  0027BE  0E0E               	movlw	low STR_2
  1448  0027C0  6FA2               	movwf	sprintf@fmt& (0+255),b
  1449  0027C2  0E08               	movlw	high STR_2
  1450  0027C4  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1451  0027C6  C0B7  F0A4         	movff	Mostrar_Temperatura@temp,?_sprintf+4
  1452  0027CA  C0B8  F0A5         	movff	Mostrar_Temperatura@temp+1,?_sprintf+5
  1453  0027CE  C0B9  F0A6         	movff	Mostrar_Temperatura@temp+2,?_sprintf+6
  1454  0027D2  C0BA  F0A7         	movff	Mostrar_Temperatura@temp+3,?_sprintf+7
  1455  0027D6  EC17  F01E         	call	_sprintf	;wreg free
  1456  0027DA                     
  1457                           ;Main.c: 174:     LCD_Goto(6,2);
  1458  0027DA  0E02               	movlw	2
  1459  0027DC  6E05               	movwf	LCD_Goto@row^0,c
  1460  0027DE  0E06               	movlw	6
  1461  0027E0  EC1F  F01D         	call	_LCD_Goto
  1462  0027E4                     
  1463                           ;Main.c: 175:     LCD_Print(temperatura);
  1464  0027E4  0EF6               	movlw	low Mostrar_Temperatura@temperatura
  1465  0027E6  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1466  0027E8  0E00               	movlw	high Mostrar_Temperatura@temperatura
  1467  0027EA  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1468  0027EC  ECEF  F01A         	call	_LCD_Print	;wreg free
  1469  0027F0                     
  1470                           ;Main.c: 176:     LCD_Goto(12,2);
  1471  0027F0  0E02               	movlw	2
  1472  0027F2  6E05               	movwf	LCD_Goto@row^0,c
  1473  0027F4  0E0C               	movlw	12
  1474  0027F6  EC1F  F01D         	call	_LCD_Goto
  1475  0027FA                     
  1476                           ;Main.c: 177:     LCD_Print("C");
  1477  0027FA  0E26               	movlw	low STR_3
  1478  0027FC  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1479  0027FE  0E08               	movlw	high STR_3
  1480  002800  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1481  002802  ECEF  F01A         	call	_LCD_Print	;wreg free
  1482  002806                     
  1483                           ;Main.c: 180:     if(temp>=32 && temp<=34.9)
  1484  002806  C0B7  F01A         	movff	Mostrar_Temperatura@temp,___flge@ff1
  1485  00280A  C0B8  F01B         	movff	Mostrar_Temperatura@temp+1,___flge@ff1+1
  1486  00280E  C0B9  F01C         	movff	Mostrar_Temperatura@temp+2,___flge@ff1+2
  1487  002812  C0BA  F01D         	movff	Mostrar_Temperatura@temp+3,___flge@ff1+3
  1488  002816  0E00               	movlw	0
  1489  002818  6E1E               	movwf	___flge@ff2^0,c
  1490  00281A  0E00               	movlw	0
  1491  00281C  6E1F               	movwf	(___flge@ff2+1)^0,c
  1492  00281E  0E00               	movlw	0
  1493  002820  6E20               	movwf	(___flge@ff2+2)^0,c
  1494  002822  0E42               	movlw	66
  1495  002824  6E21               	movwf	(___flge@ff2+3)^0,c
  1496  002826  ECEF  F017         	call	___flge	;wreg free
  1497  00282A  A0D8               	btfss	status,0,c
  1498  00282C  EF1A  F014         	goto	u5041
  1499  002830  EF1C  F014         	goto	u5040
  1500  002834                     u5041:
  1501  002834  EF3B  F014         	goto	l4500
  1502  002838                     u5040:
  1503  002838  0E9A               	movlw	154
  1504  00283A  6E1A               	movwf	___flge@ff1^0,c
  1505  00283C  0E99               	movlw	153
  1506  00283E  6E1B               	movwf	(___flge@ff1+1)^0,c
  1507  002840  0E0B               	movlw	11
  1508  002842  6E1C               	movwf	(___flge@ff1+2)^0,c
  1509  002844  0E42               	movlw	66
  1510  002846  6E1D               	movwf	(___flge@ff1+3)^0,c
  1511  002848  C0B7  F01E         	movff	Mostrar_Temperatura@temp,___flge@ff2
  1512  00284C  C0B8  F01F         	movff	Mostrar_Temperatura@temp+1,___flge@ff2+1
  1513  002850  C0B9  F020         	movff	Mostrar_Temperatura@temp+2,___flge@ff2+2
  1514  002854  C0BA  F021         	movff	Mostrar_Temperatura@temp+3,___flge@ff2+3
  1515  002858  ECEF  F017         	call	___flge	;wreg free
  1516  00285C  A0D8               	btfss	status,0,c
  1517  00285E  EF33  F014         	goto	u5051
  1518  002862  EF35  F014         	goto	u5050
  1519  002866                     u5051:
  1520  002866  EF3B  F014         	goto	l4500
  1521  00286A                     u5050:
  1522  00286A                     
  1523                           ;Main.c: 181:     {;Main.c: 182:         RB2 = 0;
  1524  00286A  9481               	bcf	3969,2,c	;volatile
  1525                           
  1526                           ;Main.c: 183:         RB3 = 1;
  1527  00286C  8681               	bsf	3969,3,c	;volatile
  1528                           
  1529                           ;Main.c: 184:         RB4 = 0;
  1530  00286E  9881               	bcf	3969,4,c	;volatile
  1531                           
  1532                           ;Main.c: 185:         RB5 = 0;
  1533  002870  9A81               	bcf	3969,5,c	;volatile
  1534                           
  1535                           ;Main.c: 186:     }
  1536  002872  EF5C  F014         	goto	l215
  1537  002876                     l4500:
  1538                           
  1539                           ;Main.c: 188:     {;Main.c: 189:         if(temp > 34.9)
  1540  002876  0E9A               	movlw	154
  1541  002878  6E1A               	movwf	___flge@ff1^0,c
  1542  00287A  0E99               	movlw	153
  1543  00287C  6E1B               	movwf	(___flge@ff1+1)^0,c
  1544  00287E  0E0B               	movlw	11
  1545  002880  6E1C               	movwf	(___flge@ff1+2)^0,c
  1546  002882  0E42               	movlw	66
  1547  002884  6E1D               	movwf	(___flge@ff1+3)^0,c
  1548  002886  C0B7  F01E         	movff	Mostrar_Temperatura@temp,___flge@ff2
  1549  00288A  C0B8  F01F         	movff	Mostrar_Temperatura@temp+1,___flge@ff2+1
  1550  00288E  C0B9  F020         	movff	Mostrar_Temperatura@temp+2,___flge@ff2+2
  1551  002892  C0BA  F021         	movff	Mostrar_Temperatura@temp+3,___flge@ff2+3
  1552  002896  ECEF  F017         	call	___flge	;wreg free
  1553  00289A  B0D8               	btfsc	status,0,c
  1554  00289C  EF52  F014         	goto	u5061
  1555  0028A0  EF54  F014         	goto	u5060
  1556  0028A4                     u5061:
  1557  0028A4  EF58  F014         	goto	l216
  1558  0028A8                     u5060:
  1559  0028A8                     
  1560                           ;Main.c: 190:         {;Main.c: 191:             RB2 = 1;
  1561  0028A8  8481               	bsf	3969,2,c	;volatile
  1562                           
  1563                           ;Main.c: 192:             RB5 = 0;
  1564  0028AA  9A81               	bcf	3969,5,c	;volatile
  1565                           
  1566                           ;Main.c: 193:         }
  1567  0028AC  EF5A  F014         	goto	l217
  1568  0028B0                     l216:
  1569                           
  1570                           ;Main.c: 195:         {;Main.c: 196:             RB2 = 0;
  1571  0028B0  9481               	bcf	3969,2,c	;volatile
  1572                           
  1573                           ;Main.c: 197:             RB5 = 1;
  1574  0028B2  8A81               	bsf	3969,5,c	;volatile
  1575  0028B4                     l217:
  1576                           
  1577                           ;Main.c: 199:         RB3 = 0;
  1578  0028B4  9681               	bcf	3969,3,c	;volatile
  1579                           
  1580                           ;Main.c: 200:         RB4 = 1;
  1581  0028B6  8881               	bsf	3969,4,c	;volatile
  1582  0028B8                     l215:
  1583                           
  1584                           ;Main.c: 203:     buffer_TX[6] = temperatura[0];
  1585  0028B8  C0F6  F156         	movff	Mostrar_Temperatura@temperatura,_buffer_TX+6
  1586                           
  1587                           ;Main.c: 204:     buffer_TX[7] = temperatura[1];
  1588  0028BC  C0F7  F157         	movff	Mostrar_Temperatura@temperatura+1,_buffer_TX+7
  1589                           
  1590                           ;Main.c: 205:     buffer_TX[9] = temperatura[3];
  1591  0028C0  C0F9  F159         	movff	Mostrar_Temperatura@temperatura+3,_buffer_TX+9
  1592                           
  1593                           ;Main.c: 206:     buffer_TX[10] = temperatura[4];
  1594  0028C4  C0FA  F15A         	movff	Mostrar_Temperatura@temperatura+4,_buffer_TX+10
  1595  0028C8                     
  1596                           ;Main.c: 208:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1597  0028C8  0E82               	movlw	130
  1598  0028CA  6E5F               	movwf	??_Mostrar_Temperatura^0,c
  1599  0028CC  0EDE               	movlw	222
  1600  0028CE                     u5137:
  1601  0028CE  2EE8               	decfsz	wreg,f,c
  1602  0028D0  D7FE               	bra	u5137
  1603  0028D2  2E5F               	decfsz	??_Mostrar_Temperatura^0,f,c
  1604  0028D4  D7FC               	bra	u5137
  1605  0028D6  0012               	return		;funcret
  1606  0028D8                     __end_of_Mostrar_Temperatura:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _sprintf *****************
  1610 ;; Defined at:
  1611 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1614 ;;		 -> Mostrar_Temperatura@temperatura(4), 
  1615 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1616 ;;		 -> STR_2(5), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  f              11   74[BANK0 ] struct _IO_FILE
  1619 ;;  ap              2   72[BANK0 ] PTR void [1]
  1620 ;;		 -> ?_sprintf(2), 
  1621 ;;  ret             2    0        int 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2   64[BANK0 ] int 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1631 ;;      Params:         0       8       0       0       0       0       0       0       0
  1632 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1634 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1635 ;;Total ram usage:       21 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 7
  1638 ;; This function calls:
  1639 ;;		_vfprintf
  1640 ;; This function is called by:
  1641 ;;		_Mostrar_Temperatura
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text2
  1646  003C2E                     __ptext2:
  1647                           	callstack 0
  1648  003C2E                     _sprintf:
  1649                           	callstack 22
  1650  003C2E  0EA4               	movlw	low (?_sprintf+4)
  1651  003C30  0100               	movlb	0	; () banked
  1652  003C32  6FA8               	movwf	sprintf@ap& (0+255),b
  1653  003C34  0E00               	movlw	high (?_sprintf+4)
  1654  003C36  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1655  003C38  C0A0  F0AA         	movff	sprintf@s,sprintf@f
  1656  003C3C  C0A1  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1657  003C40                     
  1658                           ; BSR set to: 0
  1659  003C40  0E00               	movlw	0
  1660  003C42  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  1661  003C44  0E00               	movlw	0
  1662  003C46  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  1663  003C48                     
  1664                           ; BSR set to: 0
  1665  003C48  0E00               	movlw	0
  1666  003C4A  6FB4               	movwf	(sprintf@f+10)& (0+255),b
  1667  003C4C  0E00               	movlw	0
  1668  003C4E  6FB3               	movwf	(sprintf@f+9)& (0+255),b
  1669  003C50                     
  1670                           ; BSR set to: 0
  1671  003C50  0EAA               	movlw	low sprintf@f
  1672  003C52  6F9A               	movwf	vfprintf@fp& (0+255),b
  1673  003C54  0E00               	movlw	high sprintf@f
  1674  003C56  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
  1675  003C58  C0A2  F09C         	movff	sprintf@fmt,vfprintf@fmt
  1676  003C5C  C0A3  F09D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1677  003C60  0EA8               	movlw	low sprintf@ap
  1678  003C62  6F9E               	movwf	vfprintf@ap& (0+255),b
  1679  003C64  0E00               	movlw	high sprintf@ap
  1680  003C66  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
  1681  003C68  EC87  F01D         	call	_vfprintf	;wreg free
  1682  003C6C  0100               	movlb	0	; () banked
  1683  003C6E  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  1684  003C70  25A0               	addwf	sprintf@s& (0+255),w,b
  1685  003C72  6ED9               	movwf	fsr2l,c
  1686  003C74  51AE               	movf	(sprintf@f+4)& (0+255),w,b
  1687  003C76  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1688  003C78  6EDA               	movwf	fsr2h,c
  1689  003C7A  0E00               	movlw	0
  1690  003C7C  6EDF               	movwf	indf2,c
  1691  003C7E                     
  1692                           ; BSR set to: 0
  1693  003C7E  0012               	return		;funcret
  1694  003C80                     __end_of_sprintf:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _vfprintf *****************
  1698 ;; Defined at:
  1699 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
  1702 ;;		 -> sprintf@f(11), 
  1703 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  1704 ;;		 -> STR_2(5), 
  1705 ;;  ap              2   62[BANK0 ] PTR PTR void 
  1706 ;;		 -> sprintf@ap(2), 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1709 ;;		 -> STR_2(5), 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  2   58[BANK0 ] int 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1719 ;;      Params:         0       6       0       0       0       0       0       0       0
  1720 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1722 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1723 ;;Total ram usage:        8 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 6
  1726 ;; This function calls:
  1727 ;;		_vfpfcnvrt
  1728 ;; This function is called by:
  1729 ;;		_sprintf
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text3
  1734  003B0E                     __ptext3:
  1735                           	callstack 0
  1736  003B0E                     _vfprintf:
  1737                           	callstack 22
  1738  003B0E                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1740  003B0E  C09C  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1741  003B12  C09D  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1742  003B16                     
  1743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1744  003B16  0E00               	movlw	0
  1745  003B18  0100               	movlb	0	; () banked
  1746  003B1A  6FE8               	movwf	(_nout+1)& (0+255),b
  1747  003B1C  0E00               	movlw	0
  1748  003B1E  6FE7               	movwf	_nout& (0+255),b
  1749                           
  1750                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1751  003B20  EFA5  F01D         	goto	l4214
  1752  003B24                     l4212:
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1756  003B24  C09A  F053         	movff	vfprintf@fp,vfpfcnvrt@fp
  1757  003B28  C09B  F054         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1758  003B2C  0E5D               	movlw	low vfprintf@cfmt
  1759  003B2E  6E55               	movwf	vfpfcnvrt@fmt^0,c
  1760  003B30  0E00               	movlw	high vfprintf@cfmt
  1761  003B32  6E56               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1762  003B34  C09E  F057         	movff	vfprintf@ap,vfpfcnvrt@ap
  1763  003B38  C09F  F058         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1764  003B3C  EC7C  F00C         	call	_vfpfcnvrt	;wreg free
  1765  003B40  5053               	movf	?_vfpfcnvrt^0,w,c
  1766  003B42  0100               	movlb	0	; () banked
  1767  003B44  27E7               	addwf	_nout& (0+255),f,b
  1768  003B46  5054               	movf	(?_vfpfcnvrt+1)^0,w,c
  1769  003B48  23E8               	addwfc	(_nout+1)& (0+255),f,b
  1770  003B4A                     l4214:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1774  003B4A  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1775  003B4E  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1776  003B52                     	if	0	;tblptru may be non-zero
  1777  003B52                     	endif
  1778  003B52                     	if	0	;tblptru may be non-zero
  1779  003B52                     	endif
  1780  003B52  0008               	tblrd		*
  1781  003B54  50F5               	movf	tablat,w,c
  1782  003B56  0900               	iorlw	0
  1783  003B58  A4D8               	btfss	status,2,c
  1784  003B5A  EFB1  F01D         	goto	u4751
  1785  003B5E  EFB3  F01D         	goto	u4750
  1786  003B62                     u4751:
  1787  003B62  EF92  F01D         	goto	l4212
  1788  003B66                     u4750:
  1789  003B66                     
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1792  003B66  C0E7  F09A         	movff	_nout,?_vfprintf
  1793  003B6A  C0E8  F09B         	movff	_nout+1,?_vfprintf+1
  1794  003B6E                     
  1795                           ; BSR set to: 0
  1796  003B6E  0012               	return		;funcret
  1797  003B70                     __end_of_vfprintf:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _vfpfcnvrt *****************
  1801 ;; Defined at:
  1802 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1805 ;;		 -> sprintf@f(11), 
  1806 ;;  fmt             2   84[COMRAM] PTR PTR unsigned char 
  1807 ;;		 -> vfprintf@cfmt(2), 
  1808 ;;  ap              2   86[COMRAM] PTR PTR void 
  1809 ;;		 -> sprintf@ap(2), 
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;  llu             8    0        unsigned long long 
  1812 ;;  ll              8    0        long long 
  1813 ;;  f               4   50[BANK0 ] long long 
  1814 ;;  ct              3   54[BANK0 ] unsigned char [3]
  1815 ;;  vp              3    0        PTR void 
  1816 ;;  cp              3    0        PTR unsigned char 
  1817 ;;  i               2    0        int 
  1818 ;;  done            2    0        int 
  1819 ;;  c               1   57[BANK0 ] unsigned char 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  2   82[COMRAM] int 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1829 ;;      Params:         6       0       0       0       0       0       0       0       0
  1830 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1831 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1832 ;;      Totals:        10       8       0       0       0       0       0       0       0
  1833 ;;Total ram usage:       18 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 5
  1836 ;; This function calls:
  1837 ;;		_atoi
  1838 ;;		_efgtoa
  1839 ;;		_fputc
  1840 ;;		_isdigit
  1841 ;;		_isupper
  1842 ;;		_strncmp
  1843 ;;		_tolower
  1844 ;; This function is called by:
  1845 ;;		_vfprintf
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text4
  1850  0018F8                     __ptext4:
  1851                           	callstack 0
  1852  0018F8                     _vfpfcnvrt:
  1853                           	callstack 22
  1854  0018F8                     
  1855                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1856  0018F8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1857  0018FC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1858  001900  CFDE FFF6          	movff	postinc2,tblptrl
  1859  001904  CFDD FFF7          	movff	postdec2,tblptrh
  1860  001908                     	if	0	;tblptru may be non-zero
  1861  001908                     	endif
  1862  001908                     	if	0	;tblptru may be non-zero
  1863  001908                     	endif
  1864  001908  0008               	tblrd		*
  1865  00190A  50F5               	movf	tablat,w,c
  1866  00190C  0A25               	xorlw	37
  1867  00190E  A4D8               	btfss	status,2,c
  1868  001910  EF8C  F00C         	goto	u4611
  1869  001914  EF8E  F00C         	goto	u4610
  1870  001918                     u4611:
  1871  001918  EF79  F00E         	goto	l4170
  1872  00191C                     u4610:
  1873  00191C                     
  1874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1875  00191C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1876  001920  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1877  001924  2ADE               	incf	postinc2,f,c
  1878  001926  0E00               	movlw	0
  1879  001928  22DD               	addwfc	postdec2,f,c
  1880  00192A                     
  1881                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1882  00192A  0E00               	movlw	0
  1883  00192C  0100               	movlb	0	; () banked
  1884  00192E  6FEA               	movwf	(_width+1)& (0+255),b
  1885  001930  0E00               	movlw	0
  1886  001932  6FE9               	movwf	_width& (0+255),b
  1887  001934  C0E9  F0ED         	movff	_width,_flags
  1888  001938  C0EA  F0EE         	movff	_width+1,_flags+1
  1889  00193C                     
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1892  00193C  69EB               	setf	_prec& (0+255),b
  1893  00193E  69EC               	setf	(_prec+1)& (0+255),b
  1894  001940                     
  1895                           ; BSR set to: 0
  1896                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1897  001940  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1898  001944  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1899  001948  CFDE FFF6          	movff	postinc2,tblptrl
  1900  00194C  CFDD FFF7          	movff	postdec2,tblptrh
  1901  001950                     	if	0	;tblptru may be non-zero
  1902  001950                     	endif
  1903  001950                     	if	0	;tblptru may be non-zero
  1904  001950                     	endif
  1905  001950  0008               	tblrd		*
  1906  001952  50F5               	movf	tablat,w,c
  1907  001954  0A2E               	xorlw	46
  1908  001956  A4D8               	btfss	status,2,c
  1909  001958  EFB0  F00C         	goto	u4621
  1910  00195C  EFB2  F00C         	goto	u4620
  1911  001960                     u4621:
  1912  001960  EF22  F00D         	goto	l4116
  1913  001964                     u4620:
  1914  001964                     
  1915                           ; BSR set to: 0
  1916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1917  001964  0E00               	movlw	0
  1918  001966  6FEC               	movwf	(_prec+1)& (0+255),b
  1919  001968  0E00               	movlw	0
  1920  00196A  6FEB               	movwf	_prec& (0+255),b
  1921  00196C                     
  1922                           ; BSR set to: 0
  1923                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1924  00196C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1925  001970  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1926  001974  2ADE               	incf	postinc2,f,c
  1927  001976  0E00               	movlw	0
  1928  001978  22DD               	addwfc	postdec2,f,c
  1929  00197A                     
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1932  00197A  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1933  00197E  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1934  001982  CFDE FFF6          	movff	postinc2,tblptrl
  1935  001986  CFDD FFF7          	movff	postdec2,tblptrh
  1936  00198A                     	if	0	;tblptru may be non-zero
  1937  00198A                     	endif
  1938  00198A                     	if	0	;tblptru may be non-zero
  1939  00198A                     	endif
  1940  00198A  0008               	tblrd		*
  1941  00198C  50F5               	movf	tablat,w,c
  1942  00198E  0A2A               	xorlw	42
  1943  001990  A4D8               	btfss	status,2,c
  1944  001992  EFCD  F00C         	goto	u4631
  1945  001996  EFCF  F00C         	goto	u4630
  1946  00199A                     u4631:
  1947  00199A  EFEC  F00C         	goto	l4108
  1948  00199E                     u4630:
  1949  00199E                     
  1950                           ; BSR set to: 0
  1951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1952  00199E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1953  0019A2  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1954  0019A6  2ADE               	incf	postinc2,f,c
  1955  0019A8  0E00               	movlw	0
  1956  0019AA  22DD               	addwfc	postdec2,f,c
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1959  0019AC  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1960  0019B0  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1961  0019B4  CFDF F059          	movff	indf2,??_vfpfcnvrt
  1962  0019B8  0E02               	movlw	2
  1963  0019BA  26DE               	addwf	postinc2,f,c
  1964  0019BC  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  1965  0019C0  0E00               	movlw	0
  1966  0019C2  22DD               	addwfc	postdec2,f,c
  1967  0019C4  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1968  0019C8  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1969  0019CC  CFDE F0EB          	movff	postinc2,_prec
  1970  0019D0  CFDD F0EC          	movff	postdec2,_prec+1
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1973  0019D4  EF22  F00D         	goto	l4116
  1974  0019D8                     l4108:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1978  0019D8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1979  0019DC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1980  0019E0  CFDE F008          	movff	postinc2,atoi@s
  1981  0019E4  CFDD F009          	movff	postdec2,atoi@s+1
  1982  0019E8  EC30  F016         	call	_atoi	;wreg free
  1983  0019EC  C008  F0EB         	movff	?_atoi,_prec
  1984  0019F0  C009  F0EC         	movff	?_atoi+1,_prec+1
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1987  0019F4  EF03  F00D         	goto	l4114
  1988  0019F8                     l4110:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1991  0019F8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1992  0019FC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1993  001A00  2ADE               	incf	postinc2,f,c
  1994  001A02  0E00               	movlw	0
  1995  001A04  22DD               	addwfc	postdec2,f,c
  1996  001A06                     l4114:
  1997  001A06  0ED0               	movlw	208
  1998  001A08  6E59               	movwf	??_vfpfcnvrt^0,c
  1999  001A0A  0EFF               	movlw	255
  2000  001A0C  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  2001  001A0E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2002  001A12  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2003  001A16  CFDE FFF6          	movff	postinc2,tblptrl
  2004  001A1A  CFDD FFF7          	movff	postdec2,tblptrh
  2005  001A1E                     	if	0	;tblptru may be non-zero
  2006  001A1E                     	endif
  2007  001A1E                     	if	0	;tblptru may be non-zero
  2008  001A1E                     	endif
  2009  001A1E  0008               	tblrd		*
  2010  001A20  50F5               	movf	tablat,w,c
  2011  001A22  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  2012  001A24  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  2013  001A26  5059               	movf	??_vfpfcnvrt^0,w,c
  2014  001A28  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2015  001A2A  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2016  001A2C  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2017  001A2E  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2018  001A30  E109               	bnz	u4640
  2019  001A32  0E0A               	movlw	10
  2020  001A34  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2021  001A36  A0D8               	btfss	status,0,c
  2022  001A38  EF20  F00D         	goto	u4641
  2023  001A3C  EF22  F00D         	goto	u4640
  2024  001A40                     u4641:
  2025  001A40  EFFC  F00C         	goto	l4110
  2026  001A44                     u4640:
  2027  001A44                     l4116:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2030  001A44  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2031  001A48  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2032  001A4C  CFDE FFF6          	movff	postinc2,tblptrl
  2033  001A50  CFDD FFF7          	movff	postdec2,tblptrh
  2034  001A54                     	if	0	;tblptru may be non-zero
  2035  001A54                     	endif
  2036  001A54                     	if	0	;tblptru may be non-zero
  2037  001A54                     	endif
  2038  001A54  0008               	tblrd		*
  2039  001A56  50F5               	movf	tablat,w,c
  2040  001A58  6E07               	movwf	tolower@c^0,c
  2041  001A5A  6A08               	clrf	(tolower@c+1)^0,c
  2042  001A5C  ECB4  F01E         	call	_tolower	;wreg free
  2043  001A60  5007               	movf	?_tolower^0,w,c
  2044  001A62  0100               	movlb	0	; () banked
  2045  001A64  6F96               	movwf	vfpfcnvrt@ct& (0+255),b
  2046  001A66                     
  2047                           ; BSR set to: 0
  2048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2049  001A66  5196               	movf	vfpfcnvrt@ct& (0+255),w,b
  2050  001A68  B4D8               	btfsc	status,2,c
  2051  001A6A  EF39  F00D         	goto	u4651
  2052  001A6E  EF3B  F00D         	goto	u4650
  2053  001A72                     u4651:
  2054  001A72  EF75  F00D         	goto	l4126
  2055  001A76                     u4650:
  2056  001A76                     
  2057                           ; BSR set to: 0
  2058                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2059  001A76  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2060  001A7A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2061  001A7E  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2062  001A82  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2063  001A86  0E01               	movlw	1
  2064  001A88  2659               	addwf	??_vfpfcnvrt^0,f,c
  2065  001A8A  0E00               	movlw	0
  2066  001A8C  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2067  001A8E  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2068  001A92  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2069  001A96                     	if	0	;tblptru may be non-zero
  2070  001A96                     	endif
  2071  001A96                     	if	0	;tblptru may be non-zero
  2072  001A96                     	endif
  2073  001A96  0008               	tblrd		*
  2074  001A98  50F5               	movf	tablat,w,c
  2075  001A9A  6E07               	movwf	tolower@c^0,c
  2076  001A9C  6A08               	clrf	(tolower@c+1)^0,c
  2077  001A9E  ECB4  F01E         	call	_tolower	;wreg free
  2078  001AA2  5007               	movf	?_tolower^0,w,c
  2079  001AA4  0100               	movlb	0	; () banked
  2080  001AA6  6F97               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2081  001AA8                     
  2082                           ; BSR set to: 0
  2083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2084  001AA8  5197               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2085  001AAA  B4D8               	btfsc	status,2,c
  2086  001AAC  EF5A  F00D         	goto	u4661
  2087  001AB0  EF5C  F00D         	goto	u4660
  2088  001AB4                     u4661:
  2089  001AB4  EF75  F00D         	goto	l4126
  2090  001AB8                     u4660:
  2091  001AB8                     
  2092                           ; BSR set to: 0
  2093                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2094  001AB8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2095  001ABC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2096  001AC0  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2097  001AC4  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2098  001AC8  0E02               	movlw	2
  2099  001ACA  2659               	addwf	??_vfpfcnvrt^0,f,c
  2100  001ACC  0E00               	movlw	0
  2101  001ACE  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2102  001AD0  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2103  001AD4  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2104  001AD8                     	if	0	;tblptru may be non-zero
  2105  001AD8                     	endif
  2106  001AD8                     	if	0	;tblptru may be non-zero
  2107  001AD8                     	endif
  2108  001AD8  0008               	tblrd		*
  2109  001ADA  50F5               	movf	tablat,w,c
  2110  001ADC  6E07               	movwf	tolower@c^0,c
  2111  001ADE  6A08               	clrf	(tolower@c+1)^0,c
  2112  001AE0  ECB4  F01E         	call	_tolower	;wreg free
  2113  001AE4  5007               	movf	?_tolower^0,w,c
  2114  001AE6  0100               	movlb	0	; () banked
  2115  001AE8  6F98               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2116  001AEA                     l4126:
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2120  001AEA  0E66               	movlw	102
  2121  001AEC  1996               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2122  001AEE  A4D8               	btfss	status,2,c
  2123  001AF0  EF7C  F00D         	goto	u4671
  2124  001AF4  EF7E  F00D         	goto	u4670
  2125  001AF8                     u4671:
  2126  001AF8  EFBE  F00D         	goto	l4138
  2127  001AFC                     u4670:
  2128  001AFC                     
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2131  001AFC  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2132  001B00  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2133  001B04  CFDE FFF6          	movff	postinc2,tblptrl
  2134  001B08  CFDD FFF7          	movff	postdec2,tblptrh
  2135  001B0C                     	if	0	;tblptru may be non-zero
  2136  001B0C                     	endif
  2137  001B0C                     	if	0	;tblptru may be non-zero
  2138  001B0C                     	endif
  2139  001B0C  0008               	tblrd		*
  2140  001B0E  CFF5 F099          	movff	tablat,vfpfcnvrt@c
  2141  001B12                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2144  001B12  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145  001B16  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146  001B1A  2ADE               	incf	postinc2,f,c
  2147  001B1C  0E00               	movlw	0
  2148  001B1E  22DD               	addwfc	postdec2,f,c
  2149  001B20                     
  2150                           ; BSR set to: 0
  2151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2152  001B20  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2153  001B24  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2154  001B28  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2155  001B2C  0E04               	movlw	4
  2156  001B2E  26DE               	addwf	postinc2,f,c
  2157  001B30  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2158  001B34  0E00               	movlw	0
  2159  001B36  22DD               	addwfc	postdec2,f,c
  2160  001B38  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2161  001B3C  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2162  001B40  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2163  001B44  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2164  001B48  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2165  001B4C  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2166  001B50                     l4134:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2169  001B50  C053  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  2170  001B54  C054  F048         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2171  001B58  C092  F049         	movff	vfpfcnvrt@f,efgtoa@f
  2172  001B5C  C093  F04A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2173  001B60  C094  F04B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2174  001B64  C095  F04C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2175  001B68  C099  F04D         	movff	vfpfcnvrt@c,efgtoa@c
  2176  001B6C  EC15  F004         	call	_efgtoa	;wreg free
  2177  001B70  C047  F053         	movff	?_efgtoa,?_vfpfcnvrt
  2178  001B74  C048  F054         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2179  001B78  EF94  F00E         	goto	l1070
  2180  001B7C                     l4138:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2184  001B7C  0E96               	movlw	low vfpfcnvrt@ct
  2185  001B7E  6E01               	movwf	strncmp@_l^0,c
  2186  001B80  0E00               	movlw	high vfpfcnvrt@ct
  2187  001B82  6E02               	movwf	(strncmp@_l+1)^0,c
  2188  001B84  0E23               	movlw	low STR_12
  2189  001B86  6E03               	movwf	strncmp@_r^0,c
  2190  001B88  0E08               	movlw	high STR_12
  2191  001B8A  6E04               	movwf	(strncmp@_r+1)^0,c
  2192  001B8C  0E00               	movlw	0
  2193  001B8E  6E06               	movwf	(strncmp@n+1)^0,c
  2194  001B90  0E02               	movlw	2
  2195  001B92  6E05               	movwf	strncmp@n^0,c
  2196  001B94  ECF0  F018         	call	_strncmp	;wreg free
  2197  001B98  5001               	movf	?_strncmp^0,w,c
  2198  001B9A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2199  001B9C  A4D8               	btfss	status,2,c
  2200  001B9E  EFD3  F00D         	goto	u4681
  2201  001BA2  EFD5  F00D         	goto	u4680
  2202  001BA6                     u4681:
  2203  001BA6  EF43  F00E         	goto	l4154
  2204  001BAA                     u4680:
  2205  001BAA                     
  2206                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2207  001BAA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2208  001BAE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2209  001BB2  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2210  001BB6  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2211  001BBA  0E01               	movlw	1
  2212  001BBC  2659               	addwf	??_vfpfcnvrt^0,f,c
  2213  001BBE  0E00               	movlw	0
  2214  001BC0  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2215  001BC2  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2216  001BC6  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2217  001BCA                     	if	0	;tblptru may be non-zero
  2218  001BCA                     	endif
  2219  001BCA                     	if	0	;tblptru may be non-zero
  2220  001BCA                     	endif
  2221  001BCA  0008               	tblrd		*
  2222  001BCC  CFF5 F099          	movff	tablat,vfpfcnvrt@c
  2223  001BD0  0EBF               	movlw	191
  2224  001BD2  6E59               	movwf	??_vfpfcnvrt^0,c
  2225  001BD4  0EFF               	movlw	255
  2226  001BD6  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  2227  001BD8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2228  001BDC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2229  001BE0  CFDE FFF6          	movff	postinc2,tblptrl
  2230  001BE4  CFDD FFF7          	movff	postdec2,tblptrh
  2231  001BE8                     	if	0	;tblptru may be non-zero
  2232  001BE8                     	endif
  2233  001BE8                     	if	0	;tblptru may be non-zero
  2234  001BE8                     	endif
  2235  001BE8  0008               	tblrd		*
  2236  001BEA  50F5               	movf	tablat,w,c
  2237  001BEC  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  2238  001BEE  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  2239  001BF0  5059               	movf	??_vfpfcnvrt^0,w,c
  2240  001BF2  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2241  001BF4  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2242  001BF6  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2243  001BF8  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2244  001BFA  E107               	bnz	u4691
  2245  001BFC  0E1A               	movlw	26
  2246  001BFE  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2247  001C00  B0D8               	btfsc	status,0,c
  2248  001C02  EF05  F00E         	goto	u4691
  2249  001C06  EF07  F00E         	goto	u4690
  2250  001C0A                     u4691:
  2251  001C0A  EF21  F00E         	goto	l4148
  2252  001C0E                     u4690:
  2253  001C0E                     
  2254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2255  001C0E  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2256  001C12  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2257  001C16  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2258  001C1A  0E04               	movlw	4
  2259  001C1C  26DE               	addwf	postinc2,f,c
  2260  001C1E  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2261  001C22  0E00               	movlw	0
  2262  001C24  22DD               	addwfc	postdec2,f,c
  2263  001C26  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2264  001C2A  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2265  001C2E  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2266  001C32  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2267  001C36  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2268  001C3A  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2271  001C3E  EF39  F00E         	goto	l1075
  2272  001C42                     l4148:
  2273                           
  2274                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2275  001C42  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2276  001C46  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2277  001C4A  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2278  001C4E  0E04               	movlw	4
  2279  001C50  26DE               	addwf	postinc2,f,c
  2280  001C52  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2281  001C56  0E00               	movlw	0
  2282  001C58  22DD               	addwfc	postdec2,f,c
  2283  001C5A  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2284  001C5E  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2285  001C62  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2286  001C66  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2287  001C6A  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2288  001C6E  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2289  001C72                     l1075:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2292  001C72  0E02               	movlw	2
  2293  001C74  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2294  001C78  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2295  001C7C  26DE               	addwf	postinc2,f,c
  2296  001C7E  0E00               	movlw	0
  2297  001C80  22DD               	addwfc	postdec2,f,c
  2298  001C82  EFA8  F00D         	goto	l4134
  2299  001C86                     l4154:
  2300                           
  2301                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2302  001C86  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2303  001C8A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2304  001C8E  CFDE FFF6          	movff	postinc2,tblptrl
  2305  001C92  CFDD FFF7          	movff	postdec2,tblptrh
  2306  001C96                     	if	0	;tblptru may be non-zero
  2307  001C96                     	endif
  2308  001C96                     	if	0	;tblptru may be non-zero
  2309  001C96                     	endif
  2310  001C96  0008               	tblrd		*
  2311  001C98  50F5               	movf	tablat,w,c
  2312  001C9A  0A25               	xorlw	37
  2313  001C9C  A4D8               	btfss	status,2,c
  2314  001C9E  EF53  F00E         	goto	u4701
  2315  001CA2  EF55  F00E         	goto	u4700
  2316  001CA6                     u4701:
  2317  001CA6  EF6C  F00E         	goto	l4164
  2318  001CAA                     u4700:
  2319  001CAA                     
  2320                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2321  001CAA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2322  001CAE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2323  001CB2  2ADE               	incf	postinc2,f,c
  2324  001CB4  0E00               	movlw	0
  2325  001CB6  22DD               	addwfc	postdec2,f,c
  2326  001CB8                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2328  001CB8  0E00               	movlw	0
  2329  001CBA  6E02               	movwf	(fputc@c+1)^0,c
  2330  001CBC  0E25               	movlw	37
  2331  001CBE  6E01               	movwf	fputc@c^0,c
  2332  001CC0  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2333  001CC4  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2334  001CC8  ECC5  F019         	call	_fputc	;wreg free
  2335  001CCC                     l4160:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2338  001CCC  0E00               	movlw	0
  2339  001CCE  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2340  001CD0  0E01               	movlw	1
  2341  001CD2  6E53               	movwf	?_vfpfcnvrt^0,c
  2342  001CD4  EF94  F00E         	goto	l1070
  2343  001CD8                     l4164:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2346  001CD8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2347  001CDC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2348  001CE0  2ADE               	incf	postinc2,f,c
  2349  001CE2  0E00               	movlw	0
  2350  001CE4  22DD               	addwfc	postdec2,f,c
  2351  001CE6                     
  2352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2353  001CE6  0E00               	movlw	0
  2354  001CE8  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2355  001CEA  0E00               	movlw	0
  2356  001CEC  6E53               	movwf	?_vfpfcnvrt^0,c
  2357  001CEE  EF94  F00E         	goto	l1070
  2358  001CF2                     l4170:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2361  001CF2  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2362  001CF6  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2363  001CFA  CFDE FFF6          	movff	postinc2,tblptrl
  2364  001CFE  CFDD FFF7          	movff	postdec2,tblptrh
  2365  001D02                     	if	0	;tblptru may be non-zero
  2366  001D02                     	endif
  2367  001D02                     	if	0	;tblptru may be non-zero
  2368  001D02                     	endif
  2369  001D02  0008               	tblrd		*
  2370  001D04  50F5               	movf	tablat,w,c
  2371  001D06  6E01               	movwf	fputc@c^0,c
  2372  001D08  6A02               	clrf	(fputc@c+1)^0,c
  2373  001D0A  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2374  001D0E  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2375  001D12  ECC5  F019         	call	_fputc	;wreg free
  2376  001D16                     
  2377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2378  001D16  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2379  001D1A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2380  001D1E  2ADE               	incf	postinc2,f,c
  2381  001D20  0E00               	movlw	0
  2382  001D22  22DD               	addwfc	postdec2,f,c
  2383  001D24  EF66  F00E         	goto	l4160
  2384  001D28                     l1070:
  2385  001D28  0012               	return		;funcret
  2386  001D2A                     __end_of_vfpfcnvrt:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _strncmp *****************
  2390 ;; Defined at:
  2391 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2394 ;;		 -> vfpfcnvrt@ct(3), 
  2395 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2396 ;;		 -> STR_14(3), 
  2397 ;;  n               2    4[COMRAM] unsigned int 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2400 ;;		 -> STR_14(3), 
  2401 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2402 ;;		 -> vfpfcnvrt@ct(3), 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  2    0[COMRAM] int 
  2405 ;; Registers used:
  2406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2412 ;;      Params:         6       0       0       0       0       0       0       0       0
  2413 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2414 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2415 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2416 ;;Total ram usage:       11 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_vfpfcnvrt
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text5
  2426  0031E0                     __ptext5:
  2427                           	callstack 0
  2428  0031E0                     _strncmp:
  2429                           	callstack 26
  2430  0031E0  C001  F008         	movff	strncmp@_l,strncmp@l
  2431  0031E4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2432  0031E8  C003  F00A         	movff	strncmp@_r,strncmp@r
  2433  0031EC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2434  0031F0  0605               	decf	strncmp@n^0,f,c
  2435  0031F2  A0D8               	btfss	status,0,c
  2436  0031F4  0606               	decf	(strncmp@n+1)^0,f,c
  2437  0031F6  2805               	incf	strncmp@n^0,w,c
  2438  0031F8  E106               	bnz	u4541
  2439  0031FA  2806               	incf	(strncmp@n+1)^0,w,c
  2440  0031FC  A4D8               	btfss	status,2,c
  2441  0031FE  EF03  F019         	goto	u4541
  2442  003202  EF05  F019         	goto	u4540
  2443  003206                     u4541:
  2444  003206  EF12  F019         	goto	l4068
  2445  00320A                     u4540:
  2446  00320A  0E00               	movlw	0
  2447  00320C  6E02               	movwf	(?_strncmp+1)^0,c
  2448  00320E  0E00               	movlw	0
  2449  003210  6E01               	movwf	?_strncmp^0,c
  2450  003212  EF5A  F019         	goto	l1190
  2451  003216                     l4066:
  2452  003216  4A08               	infsnz	strncmp@l^0,f,c
  2453  003218  2A09               	incf	(strncmp@l+1)^0,f,c
  2454  00321A  4A0A               	infsnz	strncmp@r^0,f,c
  2455  00321C  2A0B               	incf	(strncmp@r+1)^0,f,c
  2456  00321E  0605               	decf	strncmp@n^0,f,c
  2457  003220  A0D8               	btfss	status,0,c
  2458  003222  0606               	decf	(strncmp@n+1)^0,f,c
  2459  003224                     l4068:
  2460  003224  C008  FFD9         	movff	strncmp@l,fsr2l
  2461  003228  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2462  00322C  50DF               	movf	indf2,w,c
  2463  00322E  B4D8               	btfsc	status,2,c
  2464  003230  EF1C  F019         	goto	u4551
  2465  003234  EF1E  F019         	goto	u4550
  2466  003238                     u4551:
  2467  003238  EF49  F019         	goto	l4076
  2468  00323C                     u4550:
  2469  00323C  C00A  FFF6         	movff	strncmp@r,tblptrl
  2470  003240  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2471  003244                     	if	0	;tblptru may be non-zero
  2472  003244                     	endif
  2473  003244                     	if	0	;tblptru may be non-zero
  2474  003244                     	endif
  2475  003244  0008               	tblrd		*
  2476  003246  50F5               	movf	tablat,w,c
  2477  003248  0900               	iorlw	0
  2478  00324A  B4D8               	btfsc	status,2,c
  2479  00324C  EF2A  F019         	goto	u4561
  2480  003250  EF2C  F019         	goto	u4560
  2481  003254                     u4561:
  2482  003254  EF49  F019         	goto	l4076
  2483  003258                     u4560:
  2484  003258  5005               	movf	strncmp@n^0,w,c
  2485  00325A  1006               	iorwf	(strncmp@n+1)^0,w,c
  2486  00325C  B4D8               	btfsc	status,2,c
  2487  00325E  EF33  F019         	goto	u4571
  2488  003262  EF35  F019         	goto	u4570
  2489  003266                     u4571:
  2490  003266  EF49  F019         	goto	l4076
  2491  00326A                     u4570:
  2492  00326A  C008  FFD9         	movff	strncmp@l,fsr2l
  2493  00326E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2494  003272  50DF               	movf	indf2,w,c
  2495  003274  6E07               	movwf	??_strncmp^0,c
  2496  003276  C00A  FFF6         	movff	strncmp@r,tblptrl
  2497  00327A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2498  00327E                     	if	0	;tblptru may be non-zero
  2499  00327E                     	endif
  2500  00327E                     	if	0	;tblptru may be non-zero
  2501  00327E                     	endif
  2502  00327E  0008               	tblrd		*
  2503  003280  50F5               	movf	tablat,w,c
  2504  003282  1807               	xorwf	??_strncmp^0,w,c
  2505  003284  B4D8               	btfsc	status,2,c
  2506  003286  EF47  F019         	goto	u4581
  2507  00328A  EF49  F019         	goto	u4580
  2508  00328E                     u4581:
  2509  00328E  EF0B  F019         	goto	l4066
  2510  003292                     u4580:
  2511  003292                     l4076:
  2512  003292  C008  FFD9         	movff	strncmp@l,fsr2l
  2513  003296  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2514  00329A  50DF               	movf	indf2,w,c
  2515  00329C  6E07               	movwf	??_strncmp^0,c
  2516  00329E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2517  0032A2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2518  0032A6                     	if	0	;tblptru may be non-zero
  2519  0032A6                     	endif
  2520  0032A6                     	if	0	;tblptru may be non-zero
  2521  0032A6                     	endif
  2522  0032A6  0008               	tblrd		*
  2523  0032A8  50F5               	movf	tablat,w,c
  2524  0032AA  5C07               	subwf	??_strncmp^0,w,c
  2525  0032AC  6E01               	movwf	?_strncmp^0,c
  2526  0032AE  6A02               	clrf	(?_strncmp+1)^0,c
  2527  0032B0  A0D8               	btfss	status,0,c
  2528  0032B2  0602               	decf	(?_strncmp+1)^0,f,c
  2529  0032B4                     l1190:
  2530  0032B4  0012               	return		;funcret
  2531  0032B6                     __end_of_strncmp:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _efgtoa *****************
  2535 ;; Defined at:
  2536 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2539 ;;		 -> sprintf@f(11), 
  2540 ;;  f               4   72[COMRAM] PTR struct _IO_FILE
  2541 ;;  c               1   76[COMRAM] unsigned char 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  u               4   46[BANK0 ] unsigned char 
  2544 ;;  g               4   38[BANK0 ] unsigned char 
  2545 ;;  l               4   32[BANK0 ] unsigned char 
  2546 ;;  h               4   28[BANK0 ] unsigned char 
  2547 ;;  ou              4   14[BANK0 ] unsigned char 
  2548 ;;  n               2   44[BANK0 ] int 
  2549 ;;  e               2   42[BANK0 ] int 
  2550 ;;  i               2   36[BANK0 ] int 
  2551 ;;  w               2   24[BANK0 ] int 
  2552 ;;  p               2   22[BANK0 ] int 
  2553 ;;  sign            2   20[BANK0 ] int 
  2554 ;;  d               2   18[BANK0 ] int 
  2555 ;;  m               2   12[BANK0 ] int 
  2556 ;;  ne              2   10[BANK0 ] int 
  2557 ;;  pp              2    8[BANK0 ] int 
  2558 ;;  t               2    6[BANK0 ] int 
  2559 ;;  mode            1   27[BANK0 ] unsigned char 
  2560 ;;  nmode           1   26[BANK0 ] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2   70[COMRAM] int 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2570 ;;      Params:         7       0       0       0       0       0       0       0       0
  2571 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2572 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2573 ;;      Totals:        12      50       0       0       0       0       0       0       0
  2574 ;;Total ram usage:       62 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 4
  2577 ;; This function calls:
  2578 ;;		___awdiv
  2579 ;;		___awmod
  2580 ;;		___fladd
  2581 ;;		___fldiv
  2582 ;;		___fleq
  2583 ;;		___flge
  2584 ;;		___flmul
  2585 ;;		___flneg
  2586 ;;		___flsub
  2587 ;;		___fltol
  2588 ;;		___fpclassifyf
  2589 ;;		_floorf
  2590 ;;		_isupper
  2591 ;;		_pad
  2592 ;;		_strcpy
  2593 ;;		_tolower
  2594 ;; This function is called by:
  2595 ;;		_vfpfcnvrt
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text6
  2600  00082A                     __ptext6:
  2601                           	callstack 0
  2602  00082A                     _efgtoa:
  2603                           	callstack 22
  2604  00082A                     
  2605                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2606  00082A  0E00               	movlw	0
  2607  00082C  0100               	movlb	0	; () banked
  2608  00082E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2609  000830  0E00               	movlw	0
  2610  000832  6F74               	movwf	efgtoa@sign& (0+255),b
  2611  000834                     
  2612                           ; BSR set to: 0
  2613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2614  000834  C049  F086         	movff	efgtoa@f,efgtoa@g
  2615  000838  C04A  F087         	movff	efgtoa@f+1,efgtoa@g+1
  2616  00083C  C04B  F088         	movff	efgtoa@f+2,efgtoa@g+2
  2617  000840  C04C  F089         	movff	efgtoa@f+3,efgtoa@g+3
  2618  000844                     
  2619                           ; BSR set to: 0
  2620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2621  000844  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2622  000846  EF29  F004         	goto	u4020
  2623  00084A  EF27  F004         	goto	u4021
  2624  00084E                     u4021:
  2625  00084E  EF3F  F004         	goto	l3732
  2626  000852                     u4020:
  2627  000852                     
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2630  000852  0E00               	movlw	0
  2631  000854  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2632  000856  0E01               	movlw	1
  2633  000858  6F74               	movwf	efgtoa@sign& (0+255),b
  2634  00085A                     
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2637  00085A  C086  F001         	movff	efgtoa@g,___flneg@f1
  2638  00085E  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2639  000862  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2640  000866  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2641  00086A  EC38  F01F         	call	___flneg	;wreg free
  2642  00086E  C001  F086         	movff	?___flneg,efgtoa@g
  2643  000872  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  2644  000876  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  2645  00087A  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  2646  00087E                     l3732:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2649  00087E  0E00               	movlw	0
  2650  000880  0100               	movlb	0	; () banked
  2651  000882  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  2652  000884  0E00               	movlw	0
  2653  000886  6F8C               	movwf	efgtoa@n& (0+255),b
  2654  000888                     
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2657  000888  C0E9  F078         	movff	_width,efgtoa@w
  2658  00088C  C0EA  F079         	movff	_width+1,efgtoa@w+1
  2659  000890                     
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2662  000890  5174               	movf	efgtoa@sign& (0+255),w,b
  2663  000892  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2664  000894  A4D8               	btfss	status,2,c
  2665  000896  EF4F  F004         	goto	u4031
  2666  00089A  EF51  F004         	goto	u4030
  2667  00089E                     u4031:
  2668  00089E  EF58  F004         	goto	l3740
  2669  0008A2                     u4030:
  2670  0008A2                     
  2671                           ; BSR set to: 0
  2672  0008A2  A5ED               	btfss	_flags& (0+255),2,b
  2673  0008A4  EF56  F004         	goto	u4041
  2674  0008A8  EF58  F004         	goto	u4040
  2675  0008AC                     u4041:
  2676  0008AC  EF72  F004         	goto	l3752
  2677  0008B0                     u4040:
  2678  0008B0                     l3740:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2682  0008B0  5174               	movf	efgtoa@sign& (0+255),w,b
  2683  0008B2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2684  0008B4  A4D8               	btfss	status,2,c
  2685  0008B6  EF5F  F004         	goto	u4051
  2686  0008BA  EF61  F004         	goto	u4050
  2687  0008BE                     u4051:
  2688  0008BE  EF67  F004         	goto	l3744
  2689  0008C2                     u4050:
  2690  0008C2                     
  2691                           ; BSR set to: 0
  2692  0008C2  0E00               	movlw	0
  2693  0008C4  6F61               	movwf	(_efgtoa$1473+1)& (0+255),b
  2694  0008C6  0E2B               	movlw	43
  2695  0008C8  6F60               	movwf	_efgtoa$1473& (0+255),b
  2696  0008CA  EF6B  F004         	goto	l3746
  2697  0008CE                     l3744:
  2698                           
  2699                           ; BSR set to: 0
  2700  0008CE  0E00               	movlw	0
  2701  0008D0  6F61               	movwf	(_efgtoa$1473+1)& (0+255),b
  2702  0008D2  0E2D               	movlw	45
  2703  0008D4  6F60               	movwf	_efgtoa$1473& (0+255),b
  2704  0008D6                     l3746:
  2705                           
  2706                           ; BSR set to: 0
  2707  0008D6  C060  F100         	movff	_efgtoa$1473,_dbuf
  2708  0008DA                     
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2711  0008DA  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2712  0008DC  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2713  0008DE                     
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2716  0008DE  0778               	decf	efgtoa@w& (0+255),f,b
  2717  0008E0  A0D8               	btfss	status,0,c
  2718  0008E2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2719  0008E4                     l3752:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2723  0008E4  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2724  0008E8  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2725  0008EC  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2726  0008F0  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2727  0008F4  EC71  F018         	call	___fpclassifyf	;wreg free
  2728  0008F8  0401               	decf	?___fpclassifyf^0,w,c
  2729  0008FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2730  0008FC  A4D8               	btfss	status,2,c
  2731  0008FE  EF83  F004         	goto	u4061
  2732  000902  EF85  F004         	goto	u4060
  2733  000906                     u4061:
  2734  000906  EFD0  F004         	goto	l3770
  2735  00090A                     u4060:
  2736  00090A  0EBF               	movlw	191
  2737  00090C  6E4E               	movwf	??_efgtoa^0,c
  2738  00090E  0EFF               	movlw	255
  2739  000910  6E4F               	movwf	(??_efgtoa+1)^0,c
  2740  000912  504D               	movf	efgtoa@c^0,w,c
  2741  000914  6E50               	movwf	(??_efgtoa+2)^0,c
  2742  000916  6A51               	clrf	(??_efgtoa+3)^0,c
  2743  000918  504E               	movf	??_efgtoa^0,w,c
  2744  00091A  2650               	addwf	(??_efgtoa+2)^0,f,c
  2745  00091C  504F               	movf	(??_efgtoa+1)^0,w,c
  2746  00091E  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2747  000920  5051               	movf	(??_efgtoa+3)^0,w,c
  2748  000922  E107               	bnz	u4071
  2749  000924  0E1A               	movlw	26
  2750  000926  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2751  000928  B0D8               	btfsc	status,0,c
  2752  00092A  EF99  F004         	goto	u4071
  2753  00092E  EF9B  F004         	goto	u4070
  2754  000932                     u4071:
  2755  000932  EFAA  F004         	goto	l3762
  2756  000936                     u4070:
  2757  000936                     
  2758                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2759  000936  0E00               	movlw	low _dbuf
  2760  000938  0100               	movlb	0	; () banked
  2761  00093A  258C               	addwf	efgtoa@n& (0+255),w,b
  2762  00093C  6E01               	movwf	strcpy@dest^0,c
  2763  00093E  0E01               	movlw	high _dbuf
  2764  000940  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2765  000942  6E02               	movwf	(strcpy@dest+1)^0,c
  2766  000944  0E13               	movlw	low STR_4
  2767  000946  6E03               	movwf	strcpy@src^0,c
  2768  000948  0E08               	movlw	high STR_4
  2769  00094A  6E04               	movwf	(strcpy@src+1)^0,c
  2770  00094C  ECE9  F01D         	call	_strcpy	;wreg free
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2773  000950  EFB7  F004         	goto	l3764
  2774  000954                     l3762:
  2775                           
  2776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2777  000954  0E00               	movlw	low _dbuf
  2778  000956  0100               	movlb	0	; () banked
  2779  000958  258C               	addwf	efgtoa@n& (0+255),w,b
  2780  00095A  6E01               	movwf	strcpy@dest^0,c
  2781  00095C  0E01               	movlw	high _dbuf
  2782  00095E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2783  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2784  000962  0E1B               	movlw	low STR_5
  2785  000964  6E03               	movwf	strcpy@src^0,c
  2786  000966  0E08               	movlw	high STR_5
  2787  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2788  00096A  ECE9  F01D         	call	_strcpy	;wreg free
  2789  00096E                     l3764:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2792  00096E  0100               	movlb	0	; () banked
  2793  000970  0EFD               	movlw	253
  2794  000972  2778               	addwf	efgtoa@w& (0+255),f,b
  2795  000974  0EFF               	movlw	255
  2796  000976  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2797  000978                     l3766:
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2800  000978  C047  F011         	movff	efgtoa@fp,pad@fp
  2801  00097C  C048  F012         	movff	efgtoa@fp+1,pad@fp+1
  2802  000980  0E00               	movlw	low _dbuf
  2803  000982  6E13               	movwf	pad@buf^0,c
  2804  000984  0E01               	movlw	high _dbuf
  2805  000986  6E14               	movwf	(pad@buf+1)^0,c
  2806  000988  C078  F015         	movff	efgtoa@w,pad@p
  2807  00098C  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2808  000990  EC2A  F01A         	call	_pad	;wreg free
  2809  000994  C011  F047         	movff	?_pad,?_efgtoa
  2810  000998  C012  F048         	movff	?_pad+1,?_efgtoa+1
  2811  00099C  EF1B  F00A         	goto	l984
  2812  0009A0                     l3770:
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2815  0009A0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2816  0009A4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2817  0009A8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2818  0009AC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2819  0009B0  EC71  F018         	call	___fpclassifyf	;wreg free
  2820  0009B4  5001               	movf	?___fpclassifyf^0,w,c
  2821  0009B6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2822  0009B8  A4D8               	btfss	status,2,c
  2823  0009BA  EFE1  F004         	goto	u4081
  2824  0009BE  EFE3  F004         	goto	u4080
  2825  0009C2                     u4081:
  2826  0009C2  EF17  F005         	goto	l3788
  2827  0009C6                     u4080:
  2828  0009C6  0EBF               	movlw	191
  2829  0009C8  6E4E               	movwf	??_efgtoa^0,c
  2830  0009CA  0EFF               	movlw	255
  2831  0009CC  6E4F               	movwf	(??_efgtoa+1)^0,c
  2832  0009CE  504D               	movf	efgtoa@c^0,w,c
  2833  0009D0  6E50               	movwf	(??_efgtoa+2)^0,c
  2834  0009D2  6A51               	clrf	(??_efgtoa+3)^0,c
  2835  0009D4  504E               	movf	??_efgtoa^0,w,c
  2836  0009D6  2650               	addwf	(??_efgtoa+2)^0,f,c
  2837  0009D8  504F               	movf	(??_efgtoa+1)^0,w,c
  2838  0009DA  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2839  0009DC  5051               	movf	(??_efgtoa+3)^0,w,c
  2840  0009DE  E107               	bnz	u4091
  2841  0009E0  0E1A               	movlw	26
  2842  0009E2  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2843  0009E4  B0D8               	btfsc	status,0,c
  2844  0009E6  EFF7  F004         	goto	u4091
  2845  0009EA  EFF9  F004         	goto	u4090
  2846  0009EE                     u4091:
  2847  0009EE  EF08  F005         	goto	l3780
  2848  0009F2                     u4090:
  2849  0009F2                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2851  0009F2  0E00               	movlw	low _dbuf
  2852  0009F4  0100               	movlb	0	; () banked
  2853  0009F6  258C               	addwf	efgtoa@n& (0+255),w,b
  2854  0009F8  6E01               	movwf	strcpy@dest^0,c
  2855  0009FA  0E01               	movlw	high _dbuf
  2856  0009FC  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2857  0009FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2858  000A00  0E17               	movlw	low STR_8
  2859  000A02  6E03               	movwf	strcpy@src^0,c
  2860  000A04  0E08               	movlw	high STR_8
  2861  000A06  6E04               	movwf	(strcpy@src+1)^0,c
  2862  000A08  ECE9  F01D         	call	_strcpy	;wreg free
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2865  000A0C  EFB7  F004         	goto	l3764
  2866  000A10                     l3780:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2869  000A10  0E00               	movlw	low _dbuf
  2870  000A12  0100               	movlb	0	; () banked
  2871  000A14  258C               	addwf	efgtoa@n& (0+255),w,b
  2872  000A16  6E01               	movwf	strcpy@dest^0,c
  2873  000A18  0E01               	movlw	high _dbuf
  2874  000A1A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2875  000A1C  6E02               	movwf	(strcpy@dest+1)^0,c
  2876  000A1E  0E1F               	movlw	low STR_9
  2877  000A20  6E03               	movwf	strcpy@src^0,c
  2878  000A22  0E08               	movlw	high STR_9
  2879  000A24  6E04               	movwf	(strcpy@src+1)^0,c
  2880  000A26  ECE9  F01D         	call	_strcpy	;wreg free
  2881  000A2A  EFB7  F004         	goto	l3764
  2882  000A2E                     l3788:
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2885  000A2E  0E00               	movlw	0
  2886  000A30  0100               	movlb	0	; () banked
  2887  000A32  6F8E               	movwf	efgtoa@u& (0+255),b
  2888  000A34  0E00               	movlw	0
  2889  000A36  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2890  000A38  0E80               	movlw	128
  2891  000A3A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2892  000A3C  0E3F               	movlw	63
  2893  000A3E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2896  000A40  0E00               	movlw	0
  2897  000A42  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2898  000A44  0E00               	movlw	0
  2899  000A46  6F8A               	movwf	efgtoa@e& (0+255),b
  2900  000A48                     
  2901                           ; BSR set to: 0
  2902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2903  000A48  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2904  000A4C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2905  000A50  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2906  000A54  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2907  000A58  0E00               	movlw	0
  2908  000A5A  6E05               	movwf	___fleq@ff2^0,c
  2909  000A5C  0E00               	movlw	0
  2910  000A5E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2911  000A60  0E00               	movlw	0
  2912  000A62  6E07               	movwf	(___fleq@ff2+2)^0,c
  2913  000A64  0E00               	movlw	0
  2914  000A66  6E08               	movwf	(___fleq@ff2+3)^0,c
  2915  000A68  ECA0  F01B         	call	___fleq	;wreg free
  2916  000A6C  B0D8               	btfsc	status,0,c
  2917  000A6E  EF3B  F005         	goto	u4101
  2918  000A72  EF3D  F005         	goto	u4100
  2919  000A76                     u4101:
  2920  000A76  EFC0  F005         	goto	l3806
  2921  000A7A                     u4100:
  2922  000A7A  EF5C  F005         	goto	l3798
  2923  000A7E                     l3794:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2926  000A7E  C08E  F001         	movff	efgtoa@u,___flmul@b
  2927  000A82  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2928  000A86  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2929  000A8A  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2930  000A8E  0E00               	movlw	0
  2931  000A90  6E05               	movwf	___flmul@a^0,c
  2932  000A92  0E00               	movlw	0
  2933  000A94  6E06               	movwf	(___flmul@a+1)^0,c
  2934  000A96  0E20               	movlw	32
  2935  000A98  6E07               	movwf	(___flmul@a+2)^0,c
  2936  000A9A  0E41               	movlw	65
  2937  000A9C  6E08               	movwf	(___flmul@a+3)^0,c
  2938  000A9E  EC95  F00E         	call	___flmul	;wreg free
  2939  000AA2  C001  F08E         	movff	?___flmul,efgtoa@u
  2940  000AA6  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  2941  000AAA  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  2942  000AAE  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  2943  000AB2                     
  2944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2945  000AB2  0100               	movlb	0	; () banked
  2946  000AB4  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2947  000AB6  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2948  000AB8                     l3798:
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2951  000AB8  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2952  000ABC  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2953  000AC0  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2954  000AC4  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2955  000AC8  0E00               	movlw	0
  2956  000ACA  6E05               	movwf	___flmul@a^0,c
  2957  000ACC  0E00               	movlw	0
  2958  000ACE  6E06               	movwf	(___flmul@a+1)^0,c
  2959  000AD0  0E20               	movlw	32
  2960  000AD2  6E07               	movwf	(___flmul@a+2)^0,c
  2961  000AD4  0E41               	movlw	65
  2962  000AD6  6E08               	movwf	(___flmul@a+3)^0,c
  2963  000AD8  C08E  F001         	movff	efgtoa@u,___flmul@b
  2964  000ADC  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2965  000AE0  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2966  000AE4  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2967  000AE8  EC95  F00E         	call	___flmul	;wreg free
  2968  000AEC  C001  F01E         	movff	?___flmul,___flge@ff2
  2969  000AF0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2970  000AF4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2971  000AF8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2972  000AFC  ECEF  F017         	call	___flge	;wreg free
  2973  000B00  B0D8               	btfsc	status,0,c
  2974  000B02  EF85  F005         	goto	u4111
  2975  000B06  EF87  F005         	goto	u4110
  2976  000B0A                     u4111:
  2977  000B0A  EF3F  F005         	goto	l3794
  2978  000B0E                     u4110:
  2979  000B0E  EFA7  F005         	goto	l3804
  2980  000B12                     l3800:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2983  000B12  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  2984  000B16  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2985  000B1A  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2986  000B1E  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2987  000B22  0E00               	movlw	0
  2988  000B24  6E1E               	movwf	___fldiv@a^0,c
  2989  000B26  0E00               	movlw	0
  2990  000B28  6E1F               	movwf	(___fldiv@a+1)^0,c
  2991  000B2A  0E20               	movlw	32
  2992  000B2C  6E20               	movwf	(___fldiv@a+2)^0,c
  2993  000B2E  0E41               	movlw	65
  2994  000B30  6E21               	movwf	(___fldiv@a+3)^0,c
  2995  000B32  ECAA  F010         	call	___fldiv	;wreg free
  2996  000B36  C01A  F08E         	movff	?___fldiv,efgtoa@u
  2997  000B3A  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2998  000B3E  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  2999  000B42  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  3000  000B46                     
  3001                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3002  000B46  0100               	movlb	0	; () banked
  3003  000B48  078A               	decf	efgtoa@e& (0+255),f,b
  3004  000B4A  A0D8               	btfss	status,0,c
  3005  000B4C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  3006  000B4E                     l3804:
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3009  000B4E  C086  F01A         	movff	efgtoa@g,___flge@ff1
  3010  000B52  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3011  000B56  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3012  000B5A  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3013  000B5E  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  3014  000B62  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3015  000B66  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3016  000B6A  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3017  000B6E  ECEF  F017         	call	___flge	;wreg free
  3018  000B72  A0D8               	btfss	status,0,c
  3019  000B74  EFBE  F005         	goto	u4121
  3020  000B78  EFC0  F005         	goto	u4120
  3021  000B7C                     u4121:
  3022  000B7C  EF89  F005         	goto	l3800
  3023  000B80                     u4120:
  3024  000B80                     l3806:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3027  000B80  C04D  F007         	movff	efgtoa@c,tolower@c
  3028  000B84  6A08               	clrf	(tolower@c+1)^0,c
  3029  000B86  ECB4  F01E         	call	_tolower	;wreg free
  3030  000B8A  5007               	movf	?_tolower^0,w,c
  3031  000B8C  0100               	movlb	0	; () banked
  3032  000B8E  6F7B               	movwf	efgtoa@mode& (0+255),b
  3033  000B90                     
  3034                           ; BSR set to: 0
  3035                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3036  000B90  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  3037  000B94                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3040  000B94  0E67               	movlw	103
  3041  000B96  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3042  000B98  A4D8               	btfss	status,2,c
  3043  000B9A  EFD1  F005         	goto	u4131
  3044  000B9E  EFD3  F005         	goto	u4130
  3045  000BA2                     u4131:
  3046  000BA2  EFF9  F005         	goto	l3820
  3047  000BA6                     u4130:
  3048  000BA6                     
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3051  000BA6  51EB               	movf	_prec& (0+255),w,b
  3052  000BA8  11EC               	iorwf	(_prec+1)& (0+255),w,b
  3053  000BAA  A4D8               	btfss	status,2,c
  3054  000BAC  EFDA  F005         	goto	u4141
  3055  000BB0  EFDC  F005         	goto	u4140
  3056  000BB4                     u4141:
  3057  000BB4  EFE0  F005         	goto	l3816
  3058  000BB8                     u4140:
  3059  000BB8                     
  3060                           ; BSR set to: 0
  3061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3062  000BB8  0E00               	movlw	0
  3063  000BBA  6FEC               	movwf	(_prec+1)& (0+255),b
  3064  000BBC  0E01               	movlw	1
  3065  000BBE  6FEB               	movwf	_prec& (0+255),b
  3066  000BC0                     l3816:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3070  000BC0  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  3071  000BC2  EFED  F005         	goto	u4150
  3072  000BC6  51EC               	movf	(_prec+1)& (0+255),w,b
  3073  000BC8  E106               	bnz	u4151
  3074  000BCA  05EB               	decf	_prec& (0+255),w,b
  3075  000BCC  B0D8               	btfsc	status,0,c
  3076  000BCE  EFEB  F005         	goto	u4151
  3077  000BD2  EFED  F005         	goto	u4150
  3078  000BD6                     u4151:
  3079  000BD6  EFF3  F005         	goto	l1000
  3080  000BDA                     u4150:
  3081  000BDA                     l3818:
  3082                           
  3083                           ; BSR set to: 0
  3084  000BDA  0E00               	movlw	0
  3085  000BDC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3086  000BDE  0E06               	movlw	6
  3087  000BE0  6F76               	movwf	efgtoa@p& (0+255),b
  3088  000BE2  EF02  F006         	goto	l3826
  3089  000BE6                     l1000:
  3090                           
  3091                           ; BSR set to: 0
  3092  000BE6  C0EB  F076         	movff	_prec,efgtoa@p
  3093  000BEA  C0EC  F077         	movff	_prec+1,efgtoa@p+1
  3094  000BEE  EF02  F006         	goto	l3826
  3095  000BF2                     l3820:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3099  000BF2  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  3100  000BF4  EFFE  F005         	goto	u4161
  3101  000BF8  EF00  F006         	goto	u4160
  3102  000BFC                     u4161:
  3103  000BFC  EFED  F005         	goto	l3818
  3104  000C00                     u4160:
  3105  000C00  EFF3  F005         	goto	l1000
  3106  000C04                     l3826:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3110  000C04  0E67               	movlw	103
  3111  000C06  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3112  000C08  A4D8               	btfss	status,2,c
  3113  000C0A  EF09  F006         	goto	u4171
  3114  000C0E  EF0B  F006         	goto	u4170
  3115  000C12                     u4171:
  3116  000C12  EF3A  F006         	goto	l3836
  3117  000C16                     u4170:
  3118  000C16                     
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3121  000C16  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  3122  000C18  EF19  F006         	goto	u4180
  3123  000C1C  0EFC               	movlw	252
  3124  000C1E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  3125  000C20  0EFF               	movlw	255
  3126  000C22  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3127  000C24  A0D8               	btfss	status,0,c
  3128  000C26  EF17  F006         	goto	u4181
  3129  000C2A  EF19  F006         	goto	u4180
  3130  000C2E                     u4181:
  3131  000C2E  EF38  F006         	goto	l3834
  3132  000C32                     u4180:
  3133  000C32                     
  3134                           ; BSR set to: 0
  3135  000C32  0EFF               	movlw	255
  3136  000C34  6E4E               	movwf	??_efgtoa^0,c
  3137  000C36  0EFF               	movlw	255
  3138  000C38  6E4F               	movwf	(??_efgtoa+1)^0,c
  3139  000C3A  C076  F050         	movff	efgtoa@p,??_efgtoa+2
  3140  000C3E  C077  F051         	movff	efgtoa@p+1,??_efgtoa+3
  3141  000C42  504E               	movf	??_efgtoa^0,w,c
  3142  000C44  2650               	addwf	(??_efgtoa+2)^0,f,c
  3143  000C46  504F               	movf	(??_efgtoa+1)^0,w,c
  3144  000C48  2251               	addwfc	(??_efgtoa+3)^0,f,c
  3145  000C4A  518A               	movf	efgtoa@e& (0+255),w,b
  3146  000C4C  5C50               	subwf	(??_efgtoa+2)^0,w,c
  3147  000C4E  5051               	movf	(??_efgtoa+3)^0,w,c
  3148  000C50  0A80               	xorlw	128
  3149  000C52  6E52               	movwf	(??_efgtoa+4)^0,c
  3150  000C54  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3151  000C56  0A80               	xorlw	128
  3152  000C58  5852               	subwfb	(??_efgtoa+4)^0,w,c
  3153  000C5A  A0D8               	btfss	status,0,c
  3154  000C5C  EF32  F006         	goto	u4191
  3155  000C60  EF34  F006         	goto	u4190
  3156  000C64                     u4191:
  3157  000C64  EF38  F006         	goto	l3834
  3158  000C68                     u4190:
  3159  000C68                     
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3162  000C68  0E66               	movlw	102
  3163  000C6A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3166  000C6C  EF3A  F006         	goto	l3836
  3167  000C70                     l3834:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3171  000C70  0E65               	movlw	101
  3172  000C72  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3173  000C74                     l3836:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3177  000C74  C076  F06C         	movff	efgtoa@p,efgtoa@m
  3178  000C78  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  3179  000C7C                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3182  000C7C  0E67               	movlw	103
  3183  000C7E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3184  000C80  A4D8               	btfss	status,2,c
  3185  000C82  EF45  F006         	goto	u4201
  3186  000C86  EF47  F006         	goto	u4200
  3187  000C8A                     u4201:
  3188  000C8A  EF57  F006         	goto	l3844
  3189  000C8E                     u4200:
  3190  000C8E                     
  3191                           ; BSR set to: 0
  3192  000C8E  0E66               	movlw	102
  3193  000C90  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3194  000C92  A4D8               	btfss	status,2,c
  3195  000C94  EF4E  F006         	goto	u4211
  3196  000C98  EF50  F006         	goto	u4210
  3197  000C9C                     u4211:
  3198  000C9C  EF59  F006         	goto	l3846
  3199  000CA0                     u4210:
  3200  000CA0                     
  3201                           ; BSR set to: 0
  3202  000CA0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3203  000CA2  EF57  F006         	goto	u4220
  3204  000CA6  EF55  F006         	goto	u4221
  3205  000CAA                     u4221:
  3206  000CAA  EF59  F006         	goto	l3846
  3207  000CAE                     u4220:
  3208  000CAE                     l3844:
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3212  000CAE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3213  000CB0  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3214  000CB2                     l3846:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3218  000CB2  0E66               	movlw	102
  3219  000CB4  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3220  000CB6  A4D8               	btfss	status,2,c
  3221  000CB8  EF60  F006         	goto	u4231
  3222  000CBC  EF62  F006         	goto	u4230
  3223  000CC0                     u4231:
  3224  000CC0  EF82  F006         	goto	l3856
  3225  000CC4                     u4230:
  3226  000CC4                     
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3229  000CC4  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3230  000CC6  EF69  F006         	goto	u4240
  3231  000CCA  EF67  F006         	goto	u4241
  3232  000CCE                     u4241:
  3233  000CCE  EF75  F006         	goto	l3852
  3234  000CD2                     u4240:
  3235  000CD2                     
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3238  000CD2  0E00               	movlw	0
  3239  000CD4  6F8E               	movwf	efgtoa@u& (0+255),b
  3240  000CD6  0E00               	movlw	0
  3241  000CD8  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3242  000CDA  0E80               	movlw	128
  3243  000CDC  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3244  000CDE  0E3F               	movlw	63
  3245  000CE0  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3248  000CE2  0E00               	movlw	0
  3249  000CE4  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3250  000CE6  0E00               	movlw	0
  3251  000CE8  6F8A               	movwf	efgtoa@e& (0+255),b
  3252  000CEA                     l3852:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3256  000CEA  0E67               	movlw	103
  3257  000CEC  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3258  000CEE  B4D8               	btfsc	status,2,c
  3259  000CF0  EF7C  F006         	goto	u4251
  3260  000CF4  EF7E  F006         	goto	u4250
  3261  000CF8                     u4251:
  3262  000CF8  EF82  F006         	goto	l3856
  3263  000CFC                     u4250:
  3264  000CFC                     
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3267  000CFC  518A               	movf	efgtoa@e& (0+255),w,b
  3268  000CFE  276C               	addwf	efgtoa@m& (0+255),f,b
  3269  000D00  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3270  000D02  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3271  000D04                     l3856:
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3275  000D04  0E00               	movlw	0
  3276  000D06  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3277  000D08  0E00               	movlw	0
  3278  000D0A  6F84               	movwf	efgtoa@i& (0+255),b
  3279  000D0C                     
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3282  000D0C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  3283  000D10  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  3284  000D14  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  3285  000D18  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  3286  000D1C                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3289  000D1C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  3290  000D20  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  3291  000D24  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  3292  000D28  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3295  000D2C  EF13  F007         	goto	l3870
  3296  000D30                     l3862:
  3297                           
  3298                           ; BSR set to: 0
  3299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3300  000D30  C07C  F01A         	movff	efgtoa@h,___fldiv@b
  3301  000D34  C07D  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3302  000D38  C07E  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3303  000D3C  C07F  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3304  000D40  C08E  F01E         	movff	efgtoa@u,___fldiv@a
  3305  000D44  C08F  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3306  000D48  C090  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3307  000D4C  C091  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3308  000D50  ECAA  F010         	call	___fldiv	;wreg free
  3309  000D54  C01A  F033         	movff	?___fldiv,floorf@x
  3310  000D58  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  3311  000D5C  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  3312  000D60  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  3313  000D64  EC77  F012         	call	_floorf	;wreg free
  3314  000D68  C033  F080         	movff	?_floorf,efgtoa@l
  3315  000D6C  C034  F081         	movff	?_floorf+1,efgtoa@l+1
  3316  000D70  C035  F082         	movff	?_floorf+2,efgtoa@l+2
  3317  000D74  C036  F083         	movff	?_floorf+3,efgtoa@l+3
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3320  000D78  C080  F001         	movff	efgtoa@l,___fltol@f1
  3321  000D7C  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3322  000D80  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3323  000D84  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3324  000D88  EC6C  F017         	call	___fltol	;wreg free
  3325  000D8C  C001  F072         	movff	?___fltol,efgtoa@d
  3326  000D90  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3327  000D94                     
  3328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3329  000D94  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3330  000D98  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3331  000D9C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3332  000DA0  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3333  000DA4  C08E  F005         	movff	efgtoa@u,___flmul@a
  3334  000DA8  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3335  000DAC  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3336  000DB0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3337  000DB4  C080  F001         	movff	efgtoa@l,___flmul@b
  3338  000DB8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3339  000DBC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3340  000DC0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3341  000DC4  EC95  F00E         	call	___flmul	;wreg free
  3342  000DC8  C001  F01E         	movff	?___flmul,___flsub@a
  3343  000DCC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3344  000DD0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3345  000DD4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3346  000DD8  ECD7  F01E         	call	___flsub	;wreg free
  3347  000DDC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3348  000DE0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3349  000DE4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3350  000DE8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3351  000DEC                     
  3352                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3353  000DEC  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  3354  000DF0  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3355  000DF4  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3356  000DF8  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3357  000DFC  0E00               	movlw	0
  3358  000DFE  6E1E               	movwf	___fldiv@a^0,c
  3359  000E00  0E00               	movlw	0
  3360  000E02  6E1F               	movwf	(___fldiv@a+1)^0,c
  3361  000E04  0E20               	movlw	32
  3362  000E06  6E20               	movwf	(___fldiv@a+2)^0,c
  3363  000E08  0E41               	movlw	65
  3364  000E0A  6E21               	movwf	(___fldiv@a+3)^0,c
  3365  000E0C  ECAA  F010         	call	___fldiv	;wreg free
  3366  000E10  C01A  F08E         	movff	?___fldiv,efgtoa@u
  3367  000E14  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3368  000E18  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  3369  000E1C  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  3370  000E20                     
  3371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3372  000E20  0100               	movlb	0	; () banked
  3373  000E22  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3374  000E24  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3375  000E26                     l3870:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3379  000E26  516C               	movf	efgtoa@m& (0+255),w,b
  3380  000E28  5D84               	subwf	efgtoa@i& (0+255),w,b
  3381  000E2A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3382  000E2C  0A80               	xorlw	128
  3383  000E2E  6E4E               	movwf	??_efgtoa^0,c
  3384  000E30  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3385  000E32  0A80               	xorlw	128
  3386  000E34  584E               	subwfb	??_efgtoa^0,w,c
  3387  000E36  A0D8               	btfss	status,0,c
  3388  000E38  EF20  F007         	goto	u4261
  3389  000E3C  EF22  F007         	goto	u4260
  3390  000E40                     u4261:
  3391  000E40  EF98  F006         	goto	l3862
  3392  000E44                     u4260:
  3393  000E44                     
  3394                           ; BSR set to: 0
  3395                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3396  000E44  C08E  F001         	movff	efgtoa@u,___flmul@b
  3397  000E48  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3398  000E4C  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3399  000E50  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3400  000E54  0E00               	movlw	0
  3401  000E56  6E05               	movwf	___flmul@a^0,c
  3402  000E58  0E00               	movlw	0
  3403  000E5A  6E06               	movwf	(___flmul@a+1)^0,c
  3404  000E5C  0EA0               	movlw	160
  3405  000E5E  6E07               	movwf	(___flmul@a+2)^0,c
  3406  000E60  0E40               	movlw	64
  3407  000E62  6E08               	movwf	(___flmul@a+3)^0,c
  3408  000E64  EC95  F00E         	call	___flmul	;wreg free
  3409  000E68  C001  F080         	movff	?___flmul,efgtoa@l
  3410  000E6C  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  3411  000E70  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  3412  000E74  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  3413  000E78                     
  3414                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3415  000E78  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3416  000E7C  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3417  000E80  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3418  000E84  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3419  000E88  C080  F01E         	movff	efgtoa@l,___flge@ff2
  3420  000E8C  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3421  000E90  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3422  000E94  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3423  000E98  ECEF  F017         	call	___flge	;wreg free
  3424  000E9C  B0D8               	btfsc	status,0,c
  3425  000E9E  EF53  F007         	goto	u4271
  3426  000EA2  EF55  F007         	goto	u4270
  3427  000EA6                     u4271:
  3428  000EA6  EF60  F007         	goto	l3878
  3429  000EAA                     u4270:
  3430  000EAA                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3432  000EAA  0E00               	movlw	0
  3433  000EAC  0100               	movlb	0	; () banked
  3434  000EAE  6F80               	movwf	efgtoa@l& (0+255),b
  3435  000EB0  0E00               	movlw	0
  3436  000EB2  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3437  000EB4  0E00               	movlw	0
  3438  000EB6  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3439  000EB8  0E00               	movlw	0
  3440  000EBA  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3443  000EBC  EF89  F007         	goto	l3884
  3444  000EC0                     l3878:
  3445                           
  3446                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3447  000EC0  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  3448  000EC4  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3449  000EC8  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3450  000ECC  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3451  000ED0  C080  F005         	movff	efgtoa@l,___fleq@ff2
  3452  000ED4  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3453  000ED8  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3454  000EDC  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3455  000EE0  ECA0  F01B         	call	___fleq	;wreg free
  3456  000EE4  A0D8               	btfss	status,0,c
  3457  000EE6  EF77  F007         	goto	u4281
  3458  000EEA  EF79  F007         	goto	u4280
  3459  000EEE                     u4281:
  3460  000EEE  EF89  F007         	goto	l3884
  3461  000EF2                     u4280:
  3462  000EF2  0100               	movlb	0	; () banked
  3463  000EF4  B172               	btfsc	efgtoa@d& (0+255),0,b
  3464  000EF6  EF7F  F007         	goto	u4291
  3465  000EFA  EF81  F007         	goto	u4290
  3466  000EFE                     u4291:
  3467  000EFE  EF89  F007         	goto	l3884
  3468  000F02                     u4290:
  3469  000F02                     
  3470                           ; BSR set to: 0
  3471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3472  000F02  0E00               	movlw	0
  3473  000F04  6F80               	movwf	efgtoa@l& (0+255),b
  3474  000F06  0E00               	movlw	0
  3475  000F08  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3476  000F0A  0E00               	movlw	0
  3477  000F0C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3478  000F0E  0E00               	movlw	0
  3479  000F10  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3480  000F12                     l3884:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3483  000F12  C086  F001         	movff	efgtoa@g,___fladd@b
  3484  000F16  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  3485  000F1A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  3486  000F1E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  3487  000F22  C080  F005         	movff	efgtoa@l,___fladd@a
  3488  000F26  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  3489  000F2A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  3490  000F2E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  3491  000F32  EC1C  F00A         	call	___fladd	;wreg free
  3492  000F36  C001  F07C         	movff	?___fladd,efgtoa@h
  3493  000F3A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  3494  000F3E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  3495  000F42  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  3496  000F46                     
  3497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3498  000F46  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3499  000F4A  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3500  000F4E  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3501  000F52  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3502  000F56  0E00               	movlw	0
  3503  000F58  6E05               	movwf	___flmul@a^0,c
  3504  000F5A  0E00               	movlw	0
  3505  000F5C  6E06               	movwf	(___flmul@a+1)^0,c
  3506  000F5E  0E20               	movlw	32
  3507  000F60  6E07               	movwf	(___flmul@a+2)^0,c
  3508  000F62  0E41               	movlw	65
  3509  000F64  6E08               	movwf	(___flmul@a+3)^0,c
  3510  000F66  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3511  000F6A  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3512  000F6E  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3513  000F72  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3514  000F76  EC95  F00E         	call	___flmul	;wreg free
  3515  000F7A  C001  F01E         	movff	?___flmul,___flge@ff2
  3516  000F7E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3517  000F82  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3518  000F86  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3519  000F8A  ECEF  F017         	call	___flge	;wreg free
  3520  000F8E  A0D8               	btfss	status,0,c
  3521  000F90  EFCC  F007         	goto	u4301
  3522  000F94  EFCE  F007         	goto	u4300
  3523  000F98                     u4301:
  3524  000F98  EFF7  F007         	goto	l3896
  3525  000F9C                     u4300:
  3526  000F9C                     
  3527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3528  000F9C  0100               	movlb	0	; () banked
  3529  000F9E  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3530  000FA0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3531  000FA2                     
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3534  000FA2  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3535  000FA6  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3536  000FAA  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3537  000FAE  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3538  000FB2  0E00               	movlw	0
  3539  000FB4  6E05               	movwf	___flmul@a^0,c
  3540  000FB6  0E00               	movlw	0
  3541  000FB8  6E06               	movwf	(___flmul@a+1)^0,c
  3542  000FBA  0E20               	movlw	32
  3543  000FBC  6E07               	movwf	(___flmul@a+2)^0,c
  3544  000FBE  0E41               	movlw	65
  3545  000FC0  6E08               	movwf	(___flmul@a+3)^0,c
  3546  000FC2  EC95  F00E         	call	___flmul	;wreg free
  3547  000FC6  C001  F06E         	movff	?___flmul,efgtoa@ou
  3548  000FCA  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  3549  000FCE  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  3550  000FD2  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  3551  000FD6                     
  3552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3553  000FD6  0E66               	movlw	102
  3554  000FD8  0100               	movlb	0	; () banked
  3555  000FDA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3556  000FDC  A4D8               	btfss	status,2,c
  3557  000FDE  EFF3  F007         	goto	u4311
  3558  000FE2  EFF5  F007         	goto	u4310
  3559  000FE6                     u4311:
  3560  000FE6  EFF7  F007         	goto	l3896
  3561  000FEA                     u4310:
  3562  000FEA                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3565  000FEA  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3566  000FEC  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3567  000FEE                     l3896:
  3568                           
  3569                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3570  000FEE  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  3571  000FF2  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  3572  000FF6  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  3573  000FFA  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  3574  000FFE                     
  3575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3576  000FFE  0E65               	movlw	101
  3577  001000  0100               	movlb	0	; () banked
  3578  001002  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3579  001004  B4D8               	btfsc	status,2,c
  3580  001006  EF07  F008         	goto	u4321
  3581  00100A  EF09  F008         	goto	u4320
  3582  00100E                     u4321:
  3583  00100E  EF0F  F008         	goto	l3902
  3584  001012                     u4320:
  3585  001012                     
  3586                           ; BSR set to: 0
  3587  001012  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  3588  001016  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  3589  00101A  EF13  F008         	goto	l1028
  3590  00101E                     l3902:
  3591                           
  3592                           ; BSR set to: 0
  3593  00101E  0E00               	movlw	0
  3594  001020  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  3595  001022  0E00               	movlw	0
  3596  001024  6F6A               	movwf	efgtoa@ne& (0+255),b
  3597  001026                     l1028:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3601  001026  0E00               	movlw	0
  3602  001028  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3603  00102A  0E00               	movlw	0
  3604  00102C  6F68               	movwf	efgtoa@pp& (0+255),b
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3607  00102E  0E00               	movlw	0
  3608  001030  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  3609  001032  0E00               	movlw	0
  3610  001034  6F66               	movwf	efgtoa@t& (0+255),b
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3613  001036  0E00               	movlw	0
  3614  001038  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3615  00103A  0E00               	movlw	0
  3616  00103C  6F84               	movwf	efgtoa@i& (0+255),b
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3619  00103E  EF0E  F009         	goto	l3952
  3620  001042                     l3904:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3624  001042  C07C  F01A         	movff	efgtoa@h,___fldiv@b
  3625  001046  C07D  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3626  00104A  C07E  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3627  00104E  C07F  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3628  001052  C08E  F01E         	movff	efgtoa@u,___fldiv@a
  3629  001056  C08F  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3630  00105A  C090  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3631  00105E  C091  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3632  001062  ECAA  F010         	call	___fldiv	;wreg free
  3633  001066  C01A  F033         	movff	?___fldiv,floorf@x
  3634  00106A  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  3635  00106E  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  3636  001072  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  3637  001076  EC77  F012         	call	_floorf	;wreg free
  3638  00107A  C033  F080         	movff	?_floorf,efgtoa@l
  3639  00107E  C034  F081         	movff	?_floorf+1,efgtoa@l+1
  3640  001082  C035  F082         	movff	?_floorf+2,efgtoa@l+2
  3641  001086  C036  F083         	movff	?_floorf+3,efgtoa@l+3
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3644  00108A  C080  F001         	movff	efgtoa@l,___fltol@f1
  3645  00108E  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3646  001092  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3647  001096  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3648  00109A  EC6C  F017         	call	___fltol	;wreg free
  3649  00109E  C001  F072         	movff	?___fltol,efgtoa@d
  3650  0010A2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3651  0010A6                     
  3652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3653  0010A6  0100               	movlb	0	; () banked
  3654  0010A8  B9ED               	btfsc	_flags& (0+255),4,b
  3655  0010AA  EF59  F008         	goto	u4331
  3656  0010AE  EF5B  F008         	goto	u4330
  3657  0010B2                     u4331:
  3658  0010B2  EF78  F008         	goto	l3916
  3659  0010B6                     u4330:
  3660  0010B6                     
  3661                           ; BSR set to: 0
  3662  0010B6  5172               	movf	efgtoa@d& (0+255),w,b
  3663  0010B8  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3664  0010BA  A4D8               	btfss	status,2,c
  3665  0010BC  EF62  F008         	goto	u4341
  3666  0010C0  EF64  F008         	goto	u4340
  3667  0010C4                     u4341:
  3668  0010C4  EF78  F008         	goto	l3916
  3669  0010C8                     u4340:
  3670  0010C8                     
  3671                           ; BSR set to: 0
  3672  0010C8  0E67               	movlw	103
  3673  0010CA  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3674  0010CC  A4D8               	btfss	status,2,c
  3675  0010CE  EF6B  F008         	goto	u4351
  3676  0010D2  EF6D  F008         	goto	u4350
  3677  0010D6                     u4351:
  3678  0010D6  EF78  F008         	goto	l3916
  3679  0010DA                     u4350:
  3680  0010DA                     
  3681                           ; BSR set to: 0
  3682  0010DA  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3683  0010DC  EF74  F008         	goto	u4360
  3684  0010E0  EF72  F008         	goto	u4361
  3685  0010E4                     u4361:
  3686  0010E4  EF78  F008         	goto	l3916
  3687  0010E8                     u4360:
  3688  0010E8                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3691  0010E8  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3692  0010EA  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3695  0010EC  EFC2  F008         	goto	l3944
  3696  0010F0                     l3916:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3700  0010F0  5168               	movf	efgtoa@pp& (0+255),w,b
  3701  0010F2  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3702  0010F4  A4D8               	btfss	status,2,c
  3703  0010F6  EF7F  F008         	goto	u4371
  3704  0010FA  EF81  F008         	goto	u4370
  3705  0010FE                     u4371:
  3706  0010FE  EFAB  F008         	goto	l3936
  3707  001102                     u4370:
  3708  001102                     
  3709                           ; BSR set to: 0
  3710  001102  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3711  001104  EF88  F008         	goto	u4380
  3712  001108  EF86  F008         	goto	u4381
  3713  00110C                     u4381:
  3714  00110C  EFAB  F008         	goto	l3936
  3715  001110                     u4380:
  3716  001110                     
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3719  001110  0E00               	movlw	low _dbuf
  3720  001112  258C               	addwf	efgtoa@n& (0+255),w,b
  3721  001114  6ED9               	movwf	fsr2l,c
  3722  001116  0E01               	movlw	high _dbuf
  3723  001118  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3724  00111A  6EDA               	movwf	fsr2h,c
  3725  00111C  0E2E               	movlw	46
  3726  00111E  6EDF               	movwf	indf2,c
  3727  001120                     
  3728                           ; BSR set to: 0
  3729  001120  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3730  001122  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3731  001124                     
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3734  001124  0778               	decf	efgtoa@w& (0+255),f,b
  3735  001126  A0D8               	btfss	status,0,c
  3736  001128  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3737  00112A                     
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3740  00112A  0E00               	movlw	0
  3741  00112C  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3742  00112E  0E01               	movlw	1
  3743  001130  6F68               	movwf	efgtoa@pp& (0+255),b
  3744  001132  EFAB  F008         	goto	l3936
  3745  001136                     l3928:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3749  001136  0E00               	movlw	low _dbuf
  3750  001138  258C               	addwf	efgtoa@n& (0+255),w,b
  3751  00113A  6ED9               	movwf	fsr2l,c
  3752  00113C  0E01               	movlw	high _dbuf
  3753  00113E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3754  001140  6EDA               	movwf	fsr2h,c
  3755  001142  0E30               	movlw	48
  3756  001144  6EDF               	movwf	indf2,c
  3757  001146                     
  3758                           ; BSR set to: 0
  3759  001146  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3760  001148  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3761  00114A                     
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3764  00114A  0778               	decf	efgtoa@w& (0+255),f,b
  3765  00114C  A0D8               	btfss	status,0,c
  3766  00114E  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3767  001150                     
  3768                           ; BSR set to: 0
  3769                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3770  001150  0766               	decf	efgtoa@t& (0+255),f,b
  3771  001152  A0D8               	btfss	status,0,c
  3772  001154  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3773  001156                     l3936:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3777  001156  5166               	movf	efgtoa@t& (0+255),w,b
  3778  001158  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3779  00115A  A4D8               	btfss	status,2,c
  3780  00115C  EFB2  F008         	goto	u4391
  3781  001160  EFB4  F008         	goto	u4390
  3782  001164                     u4391:
  3783  001164  EF9B  F008         	goto	l3928
  3784  001168                     u4390:
  3785  001168                     
  3786                           ; BSR set to: 0
  3787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3788  001168  0E00               	movlw	low _dbuf
  3789  00116A  258C               	addwf	efgtoa@n& (0+255),w,b
  3790  00116C  6ED9               	movwf	fsr2l,c
  3791  00116E  0E01               	movlw	high _dbuf
  3792  001170  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3793  001172  6EDA               	movwf	fsr2h,c
  3794  001174  5172               	movf	efgtoa@d& (0+255),w,b
  3795  001176  0F30               	addlw	48
  3796  001178  6EDF               	movwf	indf2,c
  3797  00117A                     
  3798                           ; BSR set to: 0
  3799  00117A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3800  00117C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3801  00117E                     
  3802                           ; BSR set to: 0
  3803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3804  00117E  0778               	decf	efgtoa@w& (0+255),f,b
  3805  001180  A0D8               	btfss	status,0,c
  3806  001182  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3807  001184                     l3944:
  3808                           
  3809                           ; BSR set to: 0
  3810                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3811  001184  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3812  001188  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3813  00118C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3814  001190  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3815  001194  C08E  F005         	movff	efgtoa@u,___flmul@a
  3816  001198  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3817  00119C  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3818  0011A0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3819  0011A4  C080  F001         	movff	efgtoa@l,___flmul@b
  3820  0011A8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3821  0011AC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3822  0011B0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3823  0011B4  EC95  F00E         	call	___flmul	;wreg free
  3824  0011B8  C001  F01E         	movff	?___flmul,___flsub@a
  3825  0011BC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3826  0011C0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3827  0011C4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3828  0011C8  ECD7  F01E         	call	___flsub	;wreg free
  3829  0011CC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3830  0011D0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3831  0011D4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3832  0011D8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3833  0011DC                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3835  0011DC  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  3836  0011E0  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3837  0011E4  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3838  0011E8  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3839  0011EC  0E00               	movlw	0
  3840  0011EE  6E1E               	movwf	___fldiv@a^0,c
  3841  0011F0  0E00               	movlw	0
  3842  0011F2  6E1F               	movwf	(___fldiv@a+1)^0,c
  3843  0011F4  0E20               	movlw	32
  3844  0011F6  6E20               	movwf	(___fldiv@a+2)^0,c
  3845  0011F8  0E41               	movlw	65
  3846  0011FA  6E21               	movwf	(___fldiv@a+3)^0,c
  3847  0011FC  ECAA  F010         	call	___fldiv	;wreg free
  3848  001200  C01A  F08E         	movff	?___fldiv,efgtoa@u
  3849  001204  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3850  001208  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  3851  00120C  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  3852  001210                     
  3853                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3854  001210  0100               	movlb	0	; () banked
  3855  001212  076A               	decf	efgtoa@ne& (0+255),f,b
  3856  001214  A0D8               	btfss	status,0,c
  3857  001216  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3858  001218                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3861  001218  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3862  00121A  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3863  00121C                     l3952:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3867  00121C  516C               	movf	efgtoa@m& (0+255),w,b
  3868  00121E  5D84               	subwf	efgtoa@i& (0+255),w,b
  3869  001220  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3870  001222  0A80               	xorlw	128
  3871  001224  6E4E               	movwf	??_efgtoa^0,c
  3872  001226  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3873  001228  0A80               	xorlw	128
  3874  00122A  584E               	subwfb	??_efgtoa^0,w,c
  3875  00122C  B0D8               	btfsc	status,0,c
  3876  00122E  EF1B  F009         	goto	u4401
  3877  001232  EF1D  F009         	goto	u4400
  3878  001236                     u4401:
  3879  001236  EF2B  F009         	goto	l3956
  3880  00123A                     u4400:
  3881  00123A                     
  3882                           ; BSR set to: 0
  3883  00123A  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3884  00123C  EF29  F009         	goto	u4411
  3885  001240  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3886  001242  E109               	bnz	u4410
  3887  001244  0E4B               	movlw	75
  3888  001246  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3889  001248  A0D8               	btfss	status,0,c
  3890  00124A  EF29  F009         	goto	u4411
  3891  00124E  EF2B  F009         	goto	u4410
  3892  001252                     u4411:
  3893  001252  EF21  F008         	goto	l3904
  3894  001256                     u4410:
  3895  001256                     l3956:
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3899  001256  5168               	movf	efgtoa@pp& (0+255),w,b
  3900  001258  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3901  00125A  A4D8               	btfss	status,2,c
  3902  00125C  EF32  F009         	goto	u4421
  3903  001260  EF34  F009         	goto	u4420
  3904  001264                     u4421:
  3905  001264  EF45  F009         	goto	l3964
  3906  001268                     u4420:
  3907  001268                     
  3908                           ; BSR set to: 0
  3909  001268  A9ED               	btfss	_flags& (0+255),4,b
  3910  00126A  EF39  F009         	goto	u4431
  3911  00126E  EF3B  F009         	goto	u4430
  3912  001272                     u4431:
  3913  001272  EF45  F009         	goto	l3964
  3914  001276                     u4430:
  3915  001276                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3918  001276  0E00               	movlw	low _dbuf
  3919  001278  258C               	addwf	efgtoa@n& (0+255),w,b
  3920  00127A  6ED9               	movwf	fsr2l,c
  3921  00127C  0E01               	movlw	high _dbuf
  3922  00127E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3923  001280  6EDA               	movwf	fsr2h,c
  3924  001282  0E2E               	movlw	46
  3925  001284  6EDF               	movwf	indf2,c
  3926  001286                     
  3927                           ; BSR set to: 0
  3928  001286  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3929  001288  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3930  00128A                     l3964:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3934  00128A  0E00               	movlw	low _dbuf
  3935  00128C  258C               	addwf	efgtoa@n& (0+255),w,b
  3936  00128E  6ED9               	movwf	fsr2l,c
  3937  001290  0E01               	movlw	high _dbuf
  3938  001292  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3939  001294  6EDA               	movwf	fsr2h,c
  3940  001296  0E00               	movlw	0
  3941  001298  6EDF               	movwf	indf2,c
  3942  00129A                     
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3945  00129A  0E65               	movlw	101
  3946  00129C  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3947  00129E  A4D8               	btfss	status,2,c
  3948  0012A0  EF54  F009         	goto	u4441
  3949  0012A4  EF56  F009         	goto	u4440
  3950  0012A8                     u4441:
  3951  0012A8  EFBC  F004         	goto	l3766
  3952  0012AC                     u4440:
  3953  0012AC                     
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3956  0012AC  0E00               	movlw	0
  3957  0012AE  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3958  0012B0  0E4F               	movlw	79
  3959  0012B2  6F84               	movwf	efgtoa@i& (0+255),b
  3960  0012B4                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3963  0012B4  0E00               	movlw	low _dbuf
  3964  0012B6  2584               	addwf	efgtoa@i& (0+255),w,b
  3965  0012B8  6ED9               	movwf	fsr2l,c
  3966  0012BA  0E01               	movlw	high _dbuf
  3967  0012BC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3968  0012BE  6EDA               	movwf	fsr2h,c
  3969  0012C0  0E00               	movlw	0
  3970  0012C2  6EDF               	movwf	indf2,c
  3971  0012C4                     
  3972                           ; BSR set to: 0
  3973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3974  0012C4  0E00               	movlw	0
  3975  0012C6  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3976  0012C8  0E00               	movlw	0
  3977  0012CA  6F74               	movwf	efgtoa@sign& (0+255),b
  3978  0012CC                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3981  0012CC  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3982  0012CE  EF6D  F009         	goto	u4450
  3983  0012D2  EF6B  F009         	goto	u4451
  3984  0012D6                     u4451:
  3985  0012D6  EF75  F009         	goto	l3980
  3986  0012DA                     u4450:
  3987  0012DA                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3990  0012DA  0E00               	movlw	0
  3991  0012DC  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3992  0012DE  0E01               	movlw	1
  3993  0012E0  6F74               	movwf	efgtoa@sign& (0+255),b
  3994  0012E2                     
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3997  0012E2  6D8A               	negf	efgtoa@e& (0+255),b
  3998  0012E4  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3999  0012E6  B0D8               	btfsc	status,0,c
  4000  0012E8  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  4001  0012EA                     l3980:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4005  0012EA  0E00               	movlw	0
  4006  0012EC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  4007  0012EE  0E02               	movlw	2
  4008  0012F0  6F76               	movwf	efgtoa@p& (0+255),b
  4009                           
  4010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4011  0012F2  EFA6  F009         	goto	l3992
  4012  0012F6                     l3982:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4016  0012F6  0784               	decf	efgtoa@i& (0+255),f,b
  4017  0012F8  A0D8               	btfss	status,0,c
  4018  0012FA  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4019  0012FC                     
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4022  0012FC  0E00               	movlw	low _dbuf
  4023  0012FE  2584               	addwf	efgtoa@i& (0+255),w,b
  4024  001300  6ED9               	movwf	fsr2l,c
  4025  001302  0E01               	movlw	high _dbuf
  4026  001304  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4027  001306  6EDA               	movwf	fsr2h,c
  4028  001308  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  4029  00130C  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4030  001310  0E00               	movlw	0
  4031  001312  6E04               	movwf	(___awmod@divisor+1)^0,c
  4032  001314  0E0A               	movlw	10
  4033  001316  6E03               	movwf	___awmod@divisor^0,c
  4034  001318  EC48  F01B         	call	___awmod	;wreg free
  4035  00131C  5001               	movf	?___awmod^0,w,c
  4036  00131E  0F30               	addlw	48
  4037  001320  6EDF               	movwf	indf2,c
  4038  001322                     
  4039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4040  001322  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  4041  001326  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4042  00132A  0E00               	movlw	0
  4043  00132C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4044  00132E  0E0A               	movlw	10
  4045  001330  6E03               	movwf	___awdiv@divisor^0,c
  4046  001332  EC8D  F01A         	call	___awdiv	;wreg free
  4047  001336  C001  F08A         	movff	?___awdiv,efgtoa@e
  4048  00133A  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  4049  00133E                     
  4050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4051  00133E  0100               	movlb	0	; () banked
  4052  001340  0776               	decf	efgtoa@p& (0+255),f,b
  4053  001342  A0D8               	btfss	status,0,c
  4054  001344  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  4055  001346                     
  4056                           ; BSR set to: 0
  4057                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4058  001346  0778               	decf	efgtoa@w& (0+255),f,b
  4059  001348  A0D8               	btfss	status,0,c
  4060  00134A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4061  00134C                     l3992:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4065  00134C  518A               	movf	efgtoa@e& (0+255),w,b
  4066  00134E  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4067  001350  A4D8               	btfss	status,2,c
  4068  001352  EFAD  F009         	goto	u4461
  4069  001356  EFAF  F009         	goto	u4460
  4070  00135A                     u4461:
  4071  00135A  EF7B  F009         	goto	l3982
  4072  00135E                     u4460:
  4073  00135E                     
  4074                           ; BSR set to: 0
  4075  00135E  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4076  001360  EFBC  F009         	goto	u4470
  4077  001364  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  4078  001366  E106               	bnz	u4471
  4079  001368  0576               	decf	efgtoa@p& (0+255),w,b
  4080  00136A  B0D8               	btfsc	status,0,c
  4081  00136C  EFBA  F009         	goto	u4471
  4082  001370  EFBC  F009         	goto	u4470
  4083  001374                     u4471:
  4084  001374  EF7B  F009         	goto	l3982
  4085  001378                     u4470:
  4086  001378                     
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  4089  001378  0784               	decf	efgtoa@i& (0+255),f,b
  4090  00137A  A0D8               	btfss	status,0,c
  4091  00137C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4092  00137E                     
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4095  00137E  5174               	movf	efgtoa@sign& (0+255),w,b
  4096  001380  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4097  001382  A4D8               	btfss	status,2,c
  4098  001384  EFC6  F009         	goto	u4481
  4099  001388  EFC8  F009         	goto	u4480
  4100  00138C                     u4481:
  4101  00138C  EFCE  F009         	goto	l4002
  4102  001390                     u4480:
  4103  001390                     
  4104                           ; BSR set to: 0
  4105  001390  0E00               	movlw	0
  4106  001392  6F63               	movwf	(_efgtoa$1481+1)& (0+255),b
  4107  001394  0E2B               	movlw	43
  4108  001396  6F62               	movwf	_efgtoa$1481& (0+255),b
  4109  001398  EFD2  F009         	goto	l4004
  4110  00139C                     l4002:
  4111                           
  4112                           ; BSR set to: 0
  4113  00139C  0E00               	movlw	0
  4114  00139E  6F63               	movwf	(_efgtoa$1481+1)& (0+255),b
  4115  0013A0  0E2D               	movlw	45
  4116  0013A2  6F62               	movwf	_efgtoa$1481& (0+255),b
  4117  0013A4                     l4004:
  4118                           
  4119                           ; BSR set to: 0
  4120  0013A4  0E00               	movlw	low _dbuf
  4121  0013A6  2584               	addwf	efgtoa@i& (0+255),w,b
  4122  0013A8  6ED9               	movwf	fsr2l,c
  4123  0013AA  0E01               	movlw	high _dbuf
  4124  0013AC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4125  0013AE  6EDA               	movwf	fsr2h,c
  4126  0013B0  C062  FFDF         	movff	_efgtoa$1481,indf2
  4127  0013B4                     
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4130  0013B4  0778               	decf	efgtoa@w& (0+255),f,b
  4131  0013B6  A0D8               	btfss	status,0,c
  4132  0013B8  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4133  0013BA                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4136  0013BA  0784               	decf	efgtoa@i& (0+255),f,b
  4137  0013BC  A0D8               	btfss	status,0,c
  4138  0013BE  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  4139  0013C0                     
  4140                           ; BSR set to: 0
  4141  0013C0  0EBF               	movlw	191
  4142  0013C2  6E4E               	movwf	??_efgtoa^0,c
  4143  0013C4  0EFF               	movlw	255
  4144  0013C6  6E4F               	movwf	(??_efgtoa+1)^0,c
  4145  0013C8  504D               	movf	efgtoa@c^0,w,c
  4146  0013CA  6E50               	movwf	(??_efgtoa+2)^0,c
  4147  0013CC  6A51               	clrf	(??_efgtoa+3)^0,c
  4148  0013CE  504E               	movf	??_efgtoa^0,w,c
  4149  0013D0  2650               	addwf	(??_efgtoa+2)^0,f,c
  4150  0013D2  504F               	movf	(??_efgtoa+1)^0,w,c
  4151  0013D4  2251               	addwfc	(??_efgtoa+3)^0,f,c
  4152  0013D6  5051               	movf	(??_efgtoa+3)^0,w,c
  4153  0013D8  E109               	bnz	u4490
  4154  0013DA  0E1A               	movlw	26
  4155  0013DC  5C50               	subwf	(??_efgtoa+2)^0,w,c
  4156  0013DE  A0D8               	btfss	status,0,c
  4157  0013E0  EFF4  F009         	goto	u4491
  4158  0013E4  EFF6  F009         	goto	u4490
  4159  0013E8                     u4491:
  4160  0013E8  EFFC  F009         	goto	l4016
  4161  0013EC                     u4490:
  4162  0013EC                     
  4163                           ; BSR set to: 0
  4164  0013EC  0E00               	movlw	0
  4165  0013EE  6F65               	movwf	(_efgtoa$1482+1)& (0+255),b
  4166  0013F0  0E65               	movlw	101
  4167  0013F2  6F64               	movwf	_efgtoa$1482& (0+255),b
  4168  0013F4  EF00  F00A         	goto	l4018
  4169  0013F8                     l4016:
  4170                           
  4171                           ; BSR set to: 0
  4172  0013F8  0E00               	movlw	0
  4173  0013FA  6F65               	movwf	(_efgtoa$1482+1)& (0+255),b
  4174  0013FC  0E45               	movlw	69
  4175  0013FE  6F64               	movwf	_efgtoa$1482& (0+255),b
  4176  001400                     l4018:
  4177                           
  4178                           ; BSR set to: 0
  4179  001400  0E00               	movlw	low _dbuf
  4180  001402  2584               	addwf	efgtoa@i& (0+255),w,b
  4181  001404  6ED9               	movwf	fsr2l,c
  4182  001406  0E01               	movlw	high _dbuf
  4183  001408  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4184  00140A  6EDA               	movwf	fsr2h,c
  4185  00140C  C064  FFDF         	movff	_efgtoa$1482,indf2
  4186  001410                     
  4187                           ; BSR set to: 0
  4188                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4189  001410  0778               	decf	efgtoa@w& (0+255),f,b
  4190  001412  A0D8               	btfss	status,0,c
  4191  001414  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4192  001416                     
  4193                           ; BSR set to: 0
  4194                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4195  001416  0E00               	movlw	low _dbuf
  4196  001418  258C               	addwf	efgtoa@n& (0+255),w,b
  4197  00141A  6E01               	movwf	strcpy@dest^0,c
  4198  00141C  0E01               	movlw	high _dbuf
  4199  00141E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4200  001420  6E02               	movwf	(strcpy@dest+1)^0,c
  4201  001422  0E00               	movlw	low _dbuf
  4202  001424  2584               	addwf	efgtoa@i& (0+255),w,b
  4203  001426  6E03               	movwf	strcpy@src^0,c
  4204  001428  0E01               	movlw	high _dbuf
  4205  00142A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4206  00142C  6E04               	movwf	(strcpy@src+1)^0,c
  4207  00142E  ECE9  F01D         	call	_strcpy	;wreg free
  4208  001432  EFBC  F004         	goto	l3766
  4209  001436                     l984:
  4210  001436  0012               	return		;funcret
  4211  001438                     __end_of_efgtoa:
  4212                           	callstack 0
  4213                           
  4214 ;; *************** function _tolower *****************
  4215 ;; Defined at:
  4216 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  c               2    6[COMRAM] int 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;		None
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  2    6[COMRAM] int 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4230 ;;      Params:         2       0       0       0       0       0       0       0       0
  4231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4232 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4233 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4234 ;;Total ram usage:        6 bytes
  4235 ;; Hardware stack levels used: 1
  4236 ;; Hardware stack levels required when called: 1
  4237 ;; This function calls:
  4238 ;;		_isupper
  4239 ;; This function is called by:
  4240 ;;		_efgtoa
  4241 ;;		_vfpfcnvrt
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text7
  4246  003D68                     __ptext7:
  4247                           	callstack 0
  4248  003D68                     _tolower:
  4249                           	callstack 25
  4250  003D68  0EBF               	movlw	191
  4251  003D6A  6E09               	movwf	??_tolower^0,c
  4252  003D6C  0EFF               	movlw	255
  4253  003D6E  6E0A               	movwf	(??_tolower+1)^0,c
  4254  003D70  C007  F00B         	movff	tolower@c,??_tolower+2
  4255  003D74  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4256  003D78  5009               	movf	??_tolower^0,w,c
  4257  003D7A  260B               	addwf	(??_tolower+2)^0,f,c
  4258  003D7C  500A               	movf	(??_tolower+1)^0,w,c
  4259  003D7E  220C               	addwfc	(??_tolower+3)^0,f,c
  4260  003D80  500C               	movf	(??_tolower+3)^0,w,c
  4261  003D82  E107               	bnz	u3861
  4262  003D84  0E1A               	movlw	26
  4263  003D86  5C0B               	subwf	(??_tolower+2)^0,w,c
  4264  003D88  B0D8               	btfsc	status,0,c
  4265  003D8A  EFC9  F01E         	goto	u3861
  4266  003D8E  EFCB  F01E         	goto	u3860
  4267  003D92                     u3861:
  4268  003D92  EFD2  F01E         	goto	l1200
  4269  003D96                     u3860:
  4270  003D96  0E20               	movlw	32
  4271  003D98  1007               	iorwf	tolower@c^0,w,c
  4272  003D9A  6E07               	movwf	?_tolower^0,c
  4273  003D9C  5008               	movf	(tolower@c+1)^0,w,c
  4274  003D9E  6E08               	movwf	(?_tolower+1)^0,c
  4275  003DA0  EFD6  F01E         	goto	l1203
  4276  003DA4                     l1200:
  4277  003DA4  C007  F007         	movff	tolower@c,?_tolower
  4278  003DA8  C008  F008         	movff	tolower@c+1,?_tolower+1
  4279  003DAC                     l1203:
  4280  003DAC  0012               	return		;funcret
  4281  003DAE                     __end_of_tolower:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _isupper *****************
  4285 ;; Defined at:
  4286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  c               2    0[COMRAM] int 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2    0[COMRAM] int 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4300 ;;      Params:         2       0       0       0       0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4302 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4303 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4304 ;;Total ram usage:        6 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_efgtoa
  4310 ;;		_vfpfcnvrt
  4311 ;;		_tolower
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text8
  4316  003E38                     __ptext8:
  4317                           	callstack 0
  4318  003E38                     _isupper:
  4319                           	callstack 25
  4320  003E38  0EBF               	movlw	191
  4321  003E3A  6E03               	movwf	??_isupper^0,c
  4322  003E3C  0EFF               	movlw	255
  4323  003E3E  6E04               	movwf	(??_isupper+1)^0,c
  4324  003E40  C001  F005         	movff	isupper@c,??_isupper+2
  4325  003E44  C002  F006         	movff	isupper@c+1,??_isupper+3
  4326  003E48  5003               	movf	??_isupper^0,w,c
  4327  003E4A  2605               	addwf	(??_isupper+2)^0,f,c
  4328  003E4C  5004               	movf	(??_isupper+1)^0,w,c
  4329  003E4E  2206               	addwfc	(??_isupper+3)^0,f,c
  4330  003E50  5006               	movf	(??_isupper+3)^0,w,c
  4331  003E52  E10A               	bnz	u3010
  4332  003E54  0E1A               	movlw	26
  4333  003E56  5C05               	subwf	(??_isupper+2)^0,w,c
  4334  003E58  A0D8               	btfss	status,0,c
  4335  003E5A  EF31  F01F         	goto	u3011
  4336  003E5E  EF34  F01F         	goto	u3010
  4337  003E62                     u3011:
  4338  003E62  0E01               	movlw	1
  4339  003E64  EF35  F01F         	goto	u3020
  4340  003E68                     u3010:
  4341  003E68  0E00               	movlw	0
  4342  003E6A                     u3020:
  4343  003E6A  6E01               	movwf	?_isupper^0,c
  4344  003E6C  6A02               	clrf	(?_isupper+1)^0,c
  4345  003E6E  0012               	return		;funcret
  4346  003E70                     __end_of_isupper:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function _strcpy *****************
  4350 ;; Defined at:
  4351 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4354 ;;		 -> dbuf(80), 
  4355 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4356 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4357 ;;		 -> dbuf(80), 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  d               2    8[COMRAM] PTR unsigned char 
  4360 ;;		 -> dbuf(80), 
  4361 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4362 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4363 ;;		 -> dbuf(80), 
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  2    0[COMRAM] PTR unsigned char 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4373 ;;      Params:         4       0       0       0       0       0       0       0       0
  4374 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4375 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4376 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4377 ;;Total ram usage:       10 bytes
  4378 ;; Hardware stack levels used: 1
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_efgtoa
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text9
  4387  003BD2                     __ptext9:
  4388                           	callstack 0
  4389  003BD2                     _strcpy:
  4390                           	callstack 25
  4391  003BD2  C003  F007         	movff	strcpy@src,strcpy@s
  4392  003BD6  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4393  003BDA  C001  F009         	movff	strcpy@dest,strcpy@d
  4394  003BDE  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4395  003BE2                     l3650:
  4396  003BE2  5007               	movf	strcpy@s^0,w,c
  4397  003BE4  6E05               	movwf	??_strcpy^0,c
  4398  003BE6  5008               	movf	(strcpy@s+1)^0,w,c
  4399  003BE8  6E06               	movwf	(??_strcpy+1)^0,c
  4400  003BEA  4A07               	infsnz	strcpy@s^0,f,c
  4401  003BEC  2A08               	incf	(strcpy@s+1)^0,f,c
  4402  003BEE  C005  FFF6         	movff	??_strcpy,tblptrl
  4403  003BF2  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4404  003BF6  6AF8               	clrf	tblptru,c
  4405  003BF8  C009  FFD9         	movff	strcpy@d,fsr2l
  4406  003BFC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4407  003C00  4A09               	infsnz	strcpy@d^0,f,c
  4408  003C02  2A0A               	incf	(strcpy@d+1)^0,f,c
  4409  003C04  0E07               	movlw	(high __ramtop+-1)
  4410  003C06  64F7               	cpfsgt	tblptrh,c
  4411  003C08  D003               	bra	u3847
  4412  003C0A  0008               	tblrd		*
  4413  003C0C  50F5               	movf	tablat,w,c
  4414  003C0E  D005               	bra	u3840
  4415  003C10                     u3847:
  4416  003C10  CFF6 FFE1          	movff	tblptrl,fsr1l
  4417  003C14  CFF7 FFE2          	movff	tblptrh,fsr1h
  4418  003C18  50E7               	movf	indf1,w,c
  4419  003C1A                     u3840:
  4420  003C1A  6EDF               	movwf	indf2,c
  4421  003C1C  50DF               	movf	indf2,w,c
  4422  003C1E  A4D8               	btfss	status,2,c
  4423  003C20  EF14  F01E         	goto	u3851
  4424  003C24  EF16  F01E         	goto	u3850
  4425  003C28                     u3851:
  4426  003C28  EFF1  F01D         	goto	l3650
  4427  003C2C                     u3850:
  4428  003C2C  0012               	return		;funcret
  4429  003C2E                     __end_of_strcpy:
  4430                           	callstack 0
  4431                           
  4432 ;; *************** function _pad *****************
  4433 ;; Defined at:
  4434 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4437 ;;		 -> sprintf@f(11), 
  4438 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4439 ;;		 -> dbuf(80), 
  4440 ;;  p               2   20[COMRAM] int 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  w               2   25[COMRAM] int 
  4443 ;;  i               2   23[COMRAM] int 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  2   16[COMRAM] int 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4453 ;;      Params:         6       0       0       0       0       0       0       0       0
  4454 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4455 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4456 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4457 ;;Total ram usage:       11 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 3
  4460 ;; This function calls:
  4461 ;;		_fputc
  4462 ;;		_fputs
  4463 ;;		_strlen
  4464 ;; This function is called by:
  4465 ;;		_efgtoa
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text10
  4470  003454                     __ptext10:
  4471                           	callstack 0
  4472  003454                     _pad:
  4473                           	callstack 22
  4474  003454                     
  4475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4476  003454  0100               	movlb	0	; () banked
  4477  003456  A1ED               	btfss	_flags& (0+255),0,b
  4478  003458  EF30  F01A         	goto	u3731
  4479  00345C  EF32  F01A         	goto	u3730
  4480  003460                     u3731:
  4481  003460  EF3C  F01A         	goto	l3608
  4482  003464                     u3730:
  4483  003464                     
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4486  003464  C013  F00A         	movff	pad@buf,fputs@s
  4487  003468  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4488  00346C  C011  F00C         	movff	pad@fp,fputs@fp
  4489  003470  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4490  003474  ECFA  F01E         	call	_fputs	;wreg free
  4491  003478                     l3608:
  4492                           
  4493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4494  003478  BE16               	btfsc	(pad@p+1)^0,7,c
  4495  00347A  EF41  F01A         	goto	u3741
  4496  00347E  EF43  F01A         	goto	u3740
  4497  003482                     u3741:
  4498  003482  EF49  F01A         	goto	l3612
  4499  003486                     u3740:
  4500  003486  C015  F01A         	movff	pad@p,pad@w
  4501  00348A  C016  F01B         	movff	pad@p+1,pad@w+1
  4502  00348E  EF4D  F01A         	goto	l963
  4503  003492                     l3612:
  4504  003492  0E00               	movlw	0
  4505  003494  6E1B               	movwf	(pad@w+1)^0,c
  4506  003496  0E00               	movlw	0
  4507  003498  6E1A               	movwf	pad@w^0,c
  4508  00349A                     l963:
  4509                           
  4510                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4511  00349A  0E00               	movlw	0
  4512  00349C  6E19               	movwf	(pad@i+1)^0,c
  4513  00349E  0E00               	movlw	0
  4514  0034A0  6E18               	movwf	pad@i^0,c
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4517  0034A2  EF5F  F01A         	goto	l3618
  4518  0034A6                     l3614:
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4521  0034A6  0E00               	movlw	0
  4522  0034A8  6E02               	movwf	(fputc@c+1)^0,c
  4523  0034AA  0E20               	movlw	32
  4524  0034AC  6E01               	movwf	fputc@c^0,c
  4525  0034AE  C011  F003         	movff	pad@fp,fputc@fp
  4526  0034B2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4527  0034B6  ECC5  F019         	call	_fputc	;wreg free
  4528  0034BA                     
  4529                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4530  0034BA  4A18               	infsnz	pad@i^0,f,c
  4531  0034BC  2A19               	incf	(pad@i+1)^0,f,c
  4532  0034BE                     l3618:
  4533                           
  4534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4535  0034BE  501A               	movf	pad@w^0,w,c
  4536  0034C0  5C18               	subwf	pad@i^0,w,c
  4537  0034C2  5019               	movf	(pad@i+1)^0,w,c
  4538  0034C4  0A80               	xorlw	128
  4539  0034C6  6E17               	movwf	??_pad^0,c
  4540  0034C8  501B               	movf	(pad@w+1)^0,w,c
  4541  0034CA  0A80               	xorlw	128
  4542  0034CC  5817               	subwfb	??_pad^0,w,c
  4543  0034CE  A0D8               	btfss	status,0,c
  4544  0034D0  EF6C  F01A         	goto	u3751
  4545  0034D4  EF6E  F01A         	goto	u3750
  4546  0034D8                     u3751:
  4547  0034D8  EF53  F01A         	goto	l3614
  4548  0034DC                     u3750:
  4549  0034DC                     
  4550                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4551  0034DC  0100               	movlb	0	; () banked
  4552  0034DE  B1ED               	btfsc	_flags& (0+255),0,b
  4553  0034E0  EF74  F01A         	goto	u3761
  4554  0034E4  EF76  F01A         	goto	u3760
  4555  0034E8                     u3761:
  4556  0034E8  EF80  F01A         	goto	l3622
  4557  0034EC                     u3760:
  4558  0034EC                     
  4559                           ; BSR set to: 0
  4560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4561  0034EC  C013  F00A         	movff	pad@buf,fputs@s
  4562  0034F0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4563  0034F4  C011  F00C         	movff	pad@fp,fputs@fp
  4564  0034F8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4565  0034FC  ECFA  F01E         	call	_fputs	;wreg free
  4566  003500                     l3622:
  4567                           
  4568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4569  003500  C013  F001         	movff	pad@buf,strlen@s
  4570  003504  C014  F002         	movff	pad@buf+1,strlen@s+1
  4571  003508  EC70  F01F         	call	_strlen	;wreg free
  4572  00350C  501A               	movf	pad@w^0,w,c
  4573  00350E  2401               	addwf	?_strlen^0,w,c
  4574  003510  6E11               	movwf	?_pad^0,c
  4575  003512  501B               	movf	(pad@w+1)^0,w,c
  4576  003514  2002               	addwfc	(?_strlen+1)^0,w,c
  4577  003516  6E12               	movwf	(?_pad+1)^0,c
  4578  003518  0012               	return		;funcret
  4579  00351A                     __end_of_pad:
  4580                           	callstack 0
  4581                           
  4582 ;; *************** function _strlen *****************
  4583 ;; Defined at:
  4584 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4587 ;;		 -> dbuf(80), 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4590 ;;		 -> dbuf(80), 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  2    0[COMRAM] unsigned int 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4600 ;;      Params:         2       0       0       0       0       0       0       0       0
  4601 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4603 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4604 ;;Total ram usage:        4 bytes
  4605 ;; Hardware stack levels used: 1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_pad
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text11
  4614  003EE0                     __ptext11:
  4615                           	callstack 0
  4616  003EE0                     _strlen:
  4617                           	callstack 24
  4618  003EE0  C001  F003         	movff	strlen@s,strlen@a
  4619  003EE4  C002  F004         	movff	strlen@s+1,strlen@a+1
  4620  003EE8  EF78  F01F         	goto	l3144
  4621  003EEC                     l3142:
  4622  003EEC  4A01               	infsnz	strlen@s^0,f,c
  4623  003EEE  2A02               	incf	(strlen@s+1)^0,f,c
  4624  003EF0                     l3144:
  4625  003EF0  C001  FFD9         	movff	strlen@s,fsr2l
  4626  003EF4  C002  FFDA         	movff	strlen@s+1,fsr2h
  4627  003EF8  50DF               	movf	indf2,w,c
  4628  003EFA  A4D8               	btfss	status,2,c
  4629  003EFC  EF82  F01F         	goto	u3001
  4630  003F00  EF84  F01F         	goto	u3000
  4631  003F04                     u3001:
  4632  003F04  EF76  F01F         	goto	l3142
  4633  003F08                     u3000:
  4634  003F08  5003               	movf	strlen@a^0,w,c
  4635  003F0A  5C01               	subwf	strlen@s^0,w,c
  4636  003F0C  6E01               	movwf	?_strlen^0,c
  4637  003F0E  5004               	movf	(strlen@a+1)^0,w,c
  4638  003F10  5802               	subwfb	(strlen@s+1)^0,w,c
  4639  003F12  6E02               	movwf	(?_strlen+1)^0,c
  4640  003F14  0012               	return		;funcret
  4641  003F16                     __end_of_strlen:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _fputs *****************
  4645 ;; Defined at:
  4646 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4649 ;;		 -> dbuf(80), 
  4650 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4651 ;;		 -> sprintf@f(11), 
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  i               2   14[COMRAM] int 
  4654 ;;  c               1   13[COMRAM] unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  2    9[COMRAM] int 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4664 ;;      Params:         4       0       0       0       0       0       0       0       0
  4665 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4667 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4668 ;;Total ram usage:        7 bytes
  4669 ;; Hardware stack levels used: 1
  4670 ;; Hardware stack levels required when called: 2
  4671 ;; This function calls:
  4672 ;;		_fputc
  4673 ;; This function is called by:
  4674 ;;		_pad
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text12
  4679  003DF4                     __ptext12:
  4680                           	callstack 0
  4681  003DF4                     _fputs:
  4682                           	callstack 22
  4683  003DF4  0E00               	movlw	0
  4684  003DF6  6E10               	movwf	(fputs@i+1)^0,c
  4685  003DF8  0E00               	movlw	0
  4686  003DFA  6E0F               	movwf	fputs@i^0,c
  4687  003DFC  EF0B  F01F         	goto	l3138
  4688  003E00                     l3134:
  4689  003E00  C00E  F001         	movff	fputs@c,fputc@c
  4690  003E04  6A02               	clrf	(fputc@c+1)^0,c
  4691  003E06  C00C  F003         	movff	fputs@fp,fputc@fp
  4692  003E0A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4693  003E0E  ECC5  F019         	call	_fputc	;wreg free
  4694  003E12  4A0F               	infsnz	fputs@i^0,f,c
  4695  003E14  2A10               	incf	(fputs@i+1)^0,f,c
  4696  003E16                     l3138:
  4697  003E16  500F               	movf	fputs@i^0,w,c
  4698  003E18  240A               	addwf	fputs@s^0,w,c
  4699  003E1A  6ED9               	movwf	fsr2l,c
  4700  003E1C  5010               	movf	(fputs@i+1)^0,w,c
  4701  003E1E  200B               	addwfc	(fputs@s+1)^0,w,c
  4702  003E20  6EDA               	movwf	fsr2h,c
  4703  003E22  50DF               	movf	indf2,w,c
  4704  003E24  6E0E               	movwf	fputs@c^0,c
  4705  003E26  500E               	movf	fputs@c^0,w,c
  4706  003E28  A4D8               	btfss	status,2,c
  4707  003E2A  EF19  F01F         	goto	u2991
  4708  003E2E  EF1B  F01F         	goto	u2990
  4709  003E32                     u2991:
  4710  003E32  EF00  F01F         	goto	l3134
  4711  003E36                     u2990:
  4712  003E36  0012               	return		;funcret
  4713  003E38                     __end_of_fputs:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function _fputc *****************
  4717 ;; Defined at:
  4718 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  c               2    0[COMRAM] int 
  4721 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4722 ;;		 -> sprintf@f(11), 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  2    0[COMRAM] int 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4734 ;;      Params:         4       0       0       0       0       0       0       0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4736 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4737 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4738 ;;Total ram usage:        9 bytes
  4739 ;; Hardware stack levels used: 1
  4740 ;; Hardware stack levels required when called: 1
  4741 ;; This function calls:
  4742 ;;		_putch
  4743 ;; This function is called by:
  4744 ;;		_pad
  4745 ;;		_vfpfcnvrt
  4746 ;;		_fputs
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text13
  4751  00338A                     __ptext13:
  4752                           	callstack 0
  4753  00338A                     _fputc:
  4754                           	callstack 25
  4755  00338A  5003               	movf	fputc@fp^0,w,c
  4756  00338C  1004               	iorwf	(fputc@fp+1)^0,w,c
  4757  00338E  B4D8               	btfsc	status,2,c
  4758  003390  EFCC  F019         	goto	u2561
  4759  003394  EFCE  F019         	goto	u2560
  4760  003398                     u2561:
  4761  003398  EFD7  F019         	goto	l2920
  4762  00339C                     u2560:
  4763  00339C  5003               	movf	fputc@fp^0,w,c
  4764  00339E  1004               	iorwf	(fputc@fp+1)^0,w,c
  4765  0033A0  A4D8               	btfss	status,2,c
  4766  0033A2  EFD5  F019         	goto	u2571
  4767  0033A6  EFD7  F019         	goto	u2570
  4768  0033AA                     u2571:
  4769  0033AA  EFDC  F019         	goto	l2922
  4770  0033AE                     u2570:
  4771  0033AE                     l2920:
  4772  0033AE  5001               	movf	fputc@c^0,w,c
  4773  0033B0  EC29  F020         	call	_putch
  4774  0033B4  EF29  F01A         	goto	l1163
  4775  0033B8                     l2922:
  4776  0033B8  EE20 F009          	lfsr	2,9
  4777  0033BC  5003               	movf	fputc@fp^0,w,c
  4778  0033BE  26D9               	addwf	fsr2l,f,c
  4779  0033C0  5004               	movf	(fputc@fp+1)^0,w,c
  4780  0033C2  22DA               	addwfc	fsr2h,f,c
  4781  0033C4  50DE               	movf	postinc2,w,c
  4782  0033C6  10DE               	iorwf	postinc2,w,c
  4783  0033C8  B4D8               	btfsc	status,2,c
  4784  0033CA  EFE9  F019         	goto	u2581
  4785  0033CE  EFEB  F019         	goto	u2580
  4786  0033D2                     u2581:
  4787  0033D2  EF06  F01A         	goto	l2926
  4788  0033D6                     u2580:
  4789  0033D6  EE20 F009          	lfsr	2,9
  4790  0033DA  5003               	movf	fputc@fp^0,w,c
  4791  0033DC  26D9               	addwf	fsr2l,f,c
  4792  0033DE  5004               	movf	(fputc@fp+1)^0,w,c
  4793  0033E0  22DA               	addwfc	fsr2h,f,c
  4794  0033E2  EE10 F003          	lfsr	1,3
  4795  0033E6  5003               	movf	fputc@fp^0,w,c
  4796  0033E8  26E1               	addwf	fsr1l,f,c
  4797  0033EA  5004               	movf	(fputc@fp+1)^0,w,c
  4798  0033EC  22E2               	addwfc	fsr1h,f,c
  4799  0033EE  50DE               	movf	postinc2,w,c
  4800  0033F0  5CE6               	subwf	postinc1,w,c
  4801  0033F2  50E6               	movf	postinc1,w,c
  4802  0033F4  0A80               	xorlw	128
  4803  0033F6  6E09               	movwf	(??_fputc+4)^0,c
  4804  0033F8  50DE               	movf	postinc2,w,c
  4805  0033FA  0A80               	xorlw	128
  4806  0033FC  5809               	subwfb	(??_fputc+4)^0,w,c
  4807  0033FE  B0D8               	btfsc	status,0,c
  4808  003400  EF04  F01A         	goto	u2591
  4809  003404  EF06  F01A         	goto	u2590
  4810  003408                     u2591:
  4811  003408  EF29  F01A         	goto	l1163
  4812  00340C                     u2590:
  4813  00340C                     l2926:
  4814  00340C  EE20 F003          	lfsr	2,3
  4815  003410  5003               	movf	fputc@fp^0,w,c
  4816  003412  26D9               	addwf	fsr2l,f,c
  4817  003414  5004               	movf	(fputc@fp+1)^0,w,c
  4818  003416  22DA               	addwfc	fsr2h,f,c
  4819  003418  CFDE F005          	movff	postinc2,??_fputc
  4820  00341C  CFDD F006          	movff	postdec2,??_fputc+1
  4821  003420  C003  FFD9         	movff	fputc@fp,fsr2l
  4822  003424  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4823  003428  CFDE F007          	movff	postinc2,??_fputc+2
  4824  00342C  CFDD F008          	movff	postdec2,??_fputc+3
  4825  003430  5005               	movf	??_fputc^0,w,c
  4826  003432  2407               	addwf	(??_fputc+2)^0,w,c
  4827  003434  6ED9               	movwf	fsr2l,c
  4828  003436  5006               	movf	(??_fputc+1)^0,w,c
  4829  003438  2008               	addwfc	(??_fputc+3)^0,w,c
  4830  00343A  6EDA               	movwf	fsr2h,c
  4831  00343C  C001  FFDF         	movff	fputc@c,indf2
  4832  003440  EE20 F003          	lfsr	2,3
  4833  003444  5003               	movf	fputc@fp^0,w,c
  4834  003446  26D9               	addwf	fsr2l,f,c
  4835  003448  5004               	movf	(fputc@fp+1)^0,w,c
  4836  00344A  22DA               	addwfc	fsr2h,f,c
  4837  00344C  2ADE               	incf	postinc2,f,c
  4838  00344E  0E00               	movlw	0
  4839  003450  22DD               	addwfc	postdec2,f,c
  4840  003452                     l1163:
  4841  003452  0012               	return		;funcret
  4842  003454                     __end_of_fputc:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _putch *****************
  4846 ;; Defined at:
  4847 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  c               1    wreg     unsigned char 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  c               1    0[COMRAM] unsigned char 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4861 ;;      Params:         0       0       0       0       0       0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4864 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_fputc
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text14
  4875  004052                     __ptext14:
  4876                           	callstack 0
  4877  004052                     _putch:
  4878                           	callstack 25
  4879  004052  0012               	return		;funcret
  4880  004054                     __end_of_putch:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _floorf *****************
  4884 ;; Defined at:
  4885 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  x               4   50[COMRAM] float 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  u               4   66[COMRAM] struct .
  4890 ;;  m               4   60[COMRAM] unsigned long 
  4891 ;;  e               2   64[COMRAM] int 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  4   50[COMRAM] float 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4901 ;;      Params:         4       0       0       0       0       0       0       0       0
  4902 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4903 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4904 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4905 ;;Total ram usage:       20 bytes
  4906 ;; Hardware stack levels used: 1
  4907 ;; This function calls:
  4908 ;;		Nothing
  4909 ;; This function is called by:
  4910 ;;		_efgtoa
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text15
  4915  0024EE                     __ptext15:
  4916                           	callstack 0
  4917  0024EE                     _floorf:
  4918                           	callstack 25
  4919  0024EE  C0DF  F043         	movff	floorf@F526,floorf@u
  4920  0024F2  C0E0  F044         	movff	floorf@F526+1,floorf@u+1
  4921  0024F6  C0E1  F045         	movff	floorf@F526+2,floorf@u+2
  4922  0024FA  C0E2  F046         	movff	floorf@F526+3,floorf@u+3
  4923  0024FE  C033  F043         	movff	floorf@x,floorf@u
  4924  002502  C034  F044         	movff	floorf@x+1,floorf@u+1
  4925  002506  C035  F045         	movff	floorf@x+2,floorf@u+2
  4926  00250A  C036  F046         	movff	floorf@x+3,floorf@u+3
  4927  00250E  0E81               	movlw	129
  4928  002510  6E37               	movwf	??_floorf^0,c
  4929  002512  0EFF               	movlw	255
  4930  002514  6E38               	movwf	(??_floorf+1)^0,c
  4931  002516  C043  F039         	movff	floorf@u,??_floorf+2
  4932  00251A  C044  F03A         	movff	floorf@u+1,??_floorf+3
  4933  00251E  C045  F03B         	movff	floorf@u+2,??_floorf+4
  4934  002522  C046  F03C         	movff	floorf@u+3,??_floorf+5
  4935  002526  0E18               	movlw	24
  4936  002528  EF9B  F012         	goto	u3870
  4937  00252C                     u3875:
  4938  00252C  90D8               	bcf	status,0,c
  4939  00252E  323C               	rrcf	(??_floorf+5)^0,f,c
  4940  002530  323B               	rrcf	(??_floorf+4)^0,f,c
  4941  002532  323A               	rrcf	(??_floorf+3)^0,f,c
  4942  002534  3239               	rrcf	(??_floorf+2)^0,f,c
  4943  002536                     u3870:
  4944  002536  2EE8               	decfsz	wreg,f,c
  4945  002538  EF96  F012         	goto	u3875
  4946  00253C  5039               	movf	(??_floorf+2)^0,w,c
  4947  00253E  2437               	addwf	??_floorf^0,w,c
  4948  002540  6E41               	movwf	floorf@e^0,c
  4949  002542  0E00               	movlw	0
  4950  002544  2038               	addwfc	(??_floorf+1)^0,w,c
  4951  002546  6E42               	movwf	(floorf@e+1)^0,c
  4952  002548  BE42               	btfsc	(floorf@e+1)^0,7,c
  4953  00254A  EFB0  F012         	goto	u3881
  4954  00254E  5042               	movf	(floorf@e+1)^0,w,c
  4955  002550  E109               	bnz	u3880
  4956  002552  0E17               	movlw	23
  4957  002554  5C41               	subwf	floorf@e^0,w,c
  4958  002556  A0D8               	btfss	status,0,c
  4959  002558  EFB0  F012         	goto	u3881
  4960  00255C  EFB2  F012         	goto	u3880
  4961  002560                     u3881:
  4962  002560  EFBC  F012         	goto	l3668
  4963  002564                     u3880:
  4964  002564                     l3666:
  4965  002564  C033  F033         	movff	floorf@x,?_floorf
  4966  002568  C034  F034         	movff	floorf@x+1,?_floorf+1
  4967  00256C  C035  F035         	movff	floorf@x+2,?_floorf+2
  4968  002570  C036  F036         	movff	floorf@x+3,?_floorf+3
  4969  002574  EF7F  F013         	goto	l1124
  4970  002578                     l3668:
  4971  002578  BE42               	btfsc	(floorf@e+1)^0,7,c
  4972  00257A  EFC1  F012         	goto	u3891
  4973  00257E  EFC3  F012         	goto	u3890
  4974  002582                     u3891:
  4975  002582  EF33  F013         	goto	l3678
  4976  002586                     u3890:
  4977  002586  C041  F037         	movff	floorf@e,??_floorf
  4978  00258A  0EFF               	movlw	255
  4979  00258C  6E38               	movwf	(??_floorf+1)^0,c
  4980  00258E  0EFF               	movlw	255
  4981  002590  6E39               	movwf	(??_floorf+2)^0,c
  4982  002592  0E7F               	movlw	127
  4983  002594  6E3A               	movwf	(??_floorf+3)^0,c
  4984  002596  0E00               	movlw	0
  4985  002598  6E3B               	movwf	(??_floorf+4)^0,c
  4986  00259A                     u3905:
  4987  00259A  6637               	tstfsz	??_floorf^0,c
  4988  00259C  EFD2  F012         	goto	u3906
  4989  0025A0  EFDA  F012         	goto	u3907
  4990  0025A4                     u3906:
  4991  0025A4  343B               	rlcf	(??_floorf+4)^0,w,c
  4992  0025A6  323B               	rrcf	(??_floorf+4)^0,f,c
  4993  0025A8  323A               	rrcf	(??_floorf+3)^0,f,c
  4994  0025AA  3239               	rrcf	(??_floorf+2)^0,f,c
  4995  0025AC  3238               	rrcf	(??_floorf+1)^0,f,c
  4996  0025AE  2E37               	decfsz	??_floorf^0,f,c
  4997  0025B0  EFCD  F012         	goto	u3905
  4998  0025B4                     u3907:
  4999  0025B4  C038  F03D         	movff	??_floorf+1,floorf@m
  5000  0025B8  C039  F03E         	movff	??_floorf+2,floorf@m+1
  5001  0025BC  C03A  F03F         	movff	??_floorf+3,floorf@m+2
  5002  0025C0  C03B  F040         	movff	??_floorf+4,floorf@m+3
  5003  0025C4  503D               	movf	floorf@m^0,w,c
  5004  0025C6  1443               	andwf	floorf@u^0,w,c
  5005  0025C8  6E37               	movwf	??_floorf^0,c
  5006  0025CA  503E               	movf	(floorf@m+1)^0,w,c
  5007  0025CC  1444               	andwf	(floorf@u+1)^0,w,c
  5008  0025CE  6E38               	movwf	(??_floorf+1)^0,c
  5009  0025D0  503F               	movf	(floorf@m+2)^0,w,c
  5010  0025D2  1445               	andwf	(floorf@u+2)^0,w,c
  5011  0025D4  6E39               	movwf	(??_floorf+2)^0,c
  5012  0025D6  5040               	movf	(floorf@m+3)^0,w,c
  5013  0025D8  1446               	andwf	(floorf@u+3)^0,w,c
  5014  0025DA  6E3A               	movwf	(??_floorf+3)^0,c
  5015  0025DC  5037               	movf	??_floorf^0,w,c
  5016  0025DE  1038               	iorwf	(??_floorf+1)^0,w,c
  5017  0025E0  1039               	iorwf	(??_floorf+2)^0,w,c
  5018  0025E2  103A               	iorwf	(??_floorf+3)^0,w,c
  5019  0025E4  A4D8               	btfss	status,2,c
  5020  0025E6  EFF7  F012         	goto	u3911
  5021  0025EA  EFF9  F012         	goto	u3910
  5022  0025EE                     u3911:
  5023  0025EE  EFFB  F012         	goto	l3674
  5024  0025F2                     u3910:
  5025  0025F2  EFB2  F012         	goto	l3666
  5026  0025F6                     l3674:
  5027  0025F6  C043  F037         	movff	floorf@u,??_floorf
  5028  0025FA  C044  F038         	movff	floorf@u+1,??_floorf+1
  5029  0025FE  C045  F039         	movff	floorf@u+2,??_floorf+2
  5030  002602  C046  F03A         	movff	floorf@u+3,??_floorf+3
  5031  002606  0E20               	movlw	32
  5032  002608  EF0B  F013         	goto	u3920
  5033  00260C                     u3925:
  5034  00260C  90D8               	bcf	status,0,c
  5035  00260E  323A               	rrcf	(??_floorf+3)^0,f,c
  5036  002610  3239               	rrcf	(??_floorf+2)^0,f,c
  5037  002612  3238               	rrcf	(??_floorf+1)^0,f,c
  5038  002614  3237               	rrcf	??_floorf^0,f,c
  5039  002616                     u3920:
  5040  002616  2EE8               	decfsz	wreg,f,c
  5041  002618  EF06  F013         	goto	u3925
  5042  00261C  5037               	movf	??_floorf^0,w,c
  5043  00261E  1038               	iorwf	(??_floorf+1)^0,w,c
  5044  002620  1039               	iorwf	(??_floorf+2)^0,w,c
  5045  002622  103A               	iorwf	(??_floorf+3)^0,w,c
  5046  002624  B4D8               	btfsc	status,2,c
  5047  002626  EF17  F013         	goto	u3931
  5048  00262A  EF19  F013         	goto	u3930
  5049  00262E                     u3931:
  5050  00262E  EF21  F013         	goto	l1127
  5051  002632                     u3930:
  5052  002632  503D               	movf	floorf@m^0,w,c
  5053  002634  2643               	addwf	floorf@u^0,f,c
  5054  002636  503E               	movf	(floorf@m+1)^0,w,c
  5055  002638  2244               	addwfc	(floorf@u+1)^0,f,c
  5056  00263A  503F               	movf	(floorf@m+2)^0,w,c
  5057  00263C  2245               	addwfc	(floorf@u+2)^0,f,c
  5058  00263E  5040               	movf	(floorf@m+3)^0,w,c
  5059  002640  2246               	addwfc	(floorf@u+3)^0,f,c
  5060  002642                     l1127:
  5061  002642  1C3D               	comf	floorf@m^0,w,c
  5062  002644  6E37               	movwf	??_floorf^0,c
  5063  002646  1C3E               	comf	(floorf@m+1)^0,w,c
  5064  002648  6E38               	movwf	(??_floorf+1)^0,c
  5065  00264A  1C3F               	comf	(floorf@m+2)^0,w,c
  5066  00264C  6E39               	movwf	(??_floorf+2)^0,c
  5067  00264E  1C40               	comf	(floorf@m+3)^0,w,c
  5068  002650  6E3A               	movwf	(??_floorf+3)^0,c
  5069  002652  5037               	movf	??_floorf^0,w,c
  5070  002654  1643               	andwf	floorf@u^0,f,c
  5071  002656  5038               	movf	(??_floorf+1)^0,w,c
  5072  002658  1644               	andwf	(floorf@u+1)^0,f,c
  5073  00265A  5039               	movf	(??_floorf+2)^0,w,c
  5074  00265C  1645               	andwf	(floorf@u+2)^0,f,c
  5075  00265E  503A               	movf	(??_floorf+3)^0,w,c
  5076  002660  1646               	andwf	(floorf@u+3)^0,f,c
  5077  002662  EF77  F013         	goto	l3686
  5078  002666                     l3678:
  5079  002666  C043  F037         	movff	floorf@u,??_floorf
  5080  00266A  C044  F038         	movff	floorf@u+1,??_floorf+1
  5081  00266E  C045  F039         	movff	floorf@u+2,??_floorf+2
  5082  002672  C046  F03A         	movff	floorf@u+3,??_floorf+3
  5083  002676  0E20               	movlw	32
  5084  002678  EF43  F013         	goto	u3940
  5085  00267C                     u3945:
  5086  00267C  90D8               	bcf	status,0,c
  5087  00267E  323A               	rrcf	(??_floorf+3)^0,f,c
  5088  002680  3239               	rrcf	(??_floorf+2)^0,f,c
  5089  002682  3238               	rrcf	(??_floorf+1)^0,f,c
  5090  002684  3237               	rrcf	??_floorf^0,f,c
  5091  002686                     u3940:
  5092  002686  2EE8               	decfsz	wreg,f,c
  5093  002688  EF3E  F013         	goto	u3945
  5094  00268C  5037               	movf	??_floorf^0,w,c
  5095  00268E  1038               	iorwf	(??_floorf+1)^0,w,c
  5096  002690  1039               	iorwf	(??_floorf+2)^0,w,c
  5097  002692  103A               	iorwf	(??_floorf+3)^0,w,c
  5098  002694  A4D8               	btfss	status,2,c
  5099  002696  EF4F  F013         	goto	u3951
  5100  00269A  EF51  F013         	goto	u3950
  5101  00269E                     u3951:
  5102  00269E  EF5B  F013         	goto	l3682
  5103  0026A2                     u3950:
  5104  0026A2  0E00               	movlw	0
  5105  0026A4  6E43               	movwf	floorf@u^0,c
  5106  0026A6  0E00               	movlw	0
  5107  0026A8  6E44               	movwf	(floorf@u+1)^0,c
  5108  0026AA  0E00               	movlw	0
  5109  0026AC  6E45               	movwf	(floorf@u+2)^0,c
  5110  0026AE  0E00               	movlw	0
  5111  0026B0  6E46               	movwf	(floorf@u+3)^0,c
  5112  0026B2  EF77  F013         	goto	l3686
  5113  0026B6                     l3682:
  5114  0026B6  90D8               	bcf	status,0,c
  5115  0026B8  3443               	rlcf	floorf@u^0,w,c
  5116  0026BA  6E37               	movwf	??_floorf^0,c
  5117  0026BC  3444               	rlcf	(floorf@u+1)^0,w,c
  5118  0026BE  6E38               	movwf	(??_floorf+1)^0,c
  5119  0026C0  3445               	rlcf	(floorf@u+2)^0,w,c
  5120  0026C2  6E39               	movwf	(??_floorf+2)^0,c
  5121  0026C4  3446               	rlcf	(floorf@u+3)^0,w,c
  5122  0026C6  6E3A               	movwf	(??_floorf+3)^0,c
  5123  0026C8  5037               	movf	??_floorf^0,w,c
  5124  0026CA  1038               	iorwf	(??_floorf+1)^0,w,c
  5125  0026CC  1039               	iorwf	(??_floorf+2)^0,w,c
  5126  0026CE  103A               	iorwf	(??_floorf+3)^0,w,c
  5127  0026D0  B4D8               	btfsc	status,2,c
  5128  0026D2  EF6D  F013         	goto	u3961
  5129  0026D6  EF6F  F013         	goto	u3960
  5130  0026DA                     u3961:
  5131  0026DA  EF77  F013         	goto	l3686
  5132  0026DE                     u3960:
  5133  0026DE  0E00               	movlw	0
  5134  0026E0  6E43               	movwf	floorf@u^0,c
  5135  0026E2  0E00               	movlw	0
  5136  0026E4  6E44               	movwf	(floorf@u+1)^0,c
  5137  0026E6  0E80               	movlw	128
  5138  0026E8  6E45               	movwf	(floorf@u+2)^0,c
  5139  0026EA  0EBF               	movlw	191
  5140  0026EC  6E46               	movwf	(floorf@u+3)^0,c
  5141  0026EE                     l3686:
  5142  0026EE  C043  F033         	movff	floorf@u,?_floorf
  5143  0026F2  C044  F034         	movff	floorf@u+1,?_floorf+1
  5144  0026F6  C045  F035         	movff	floorf@u+2,?_floorf+2
  5145  0026FA  C046  F036         	movff	floorf@u+3,?_floorf+3
  5146  0026FE                     l1124:
  5147  0026FE  0012               	return		;funcret
  5148  002700                     __end_of_floorf:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function ___fpclassifyf *****************
  5152 ;; Defined at:
  5153 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  x               4    0[COMRAM] float 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  u               4   10[COMRAM] struct .
  5158 ;;  e               2    8[COMRAM] int 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  2    0[COMRAM] int 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5168 ;;      Params:         4       0       0       0       0       0       0       0       0
  5169 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5170 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5171 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5172 ;;Total ram usage:       14 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_efgtoa
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text16
  5182  0030E2                     __ptext16:
  5183                           	callstack 0
  5184  0030E2                     ___fpclassifyf:
  5185                           	callstack 25
  5186  0030E2  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5187  0030E6  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5188  0030EA  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5189  0030EE  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5190  0030F2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5191  0030F6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5192  0030FA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5193  0030FE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5194  003102  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5195  003106  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5196  00310A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5197  00310E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5198  003112  0E18               	movlw	24
  5199  003114  EF91  F018         	goto	u3770
  5200  003118                     u3775:
  5201  003118  90D8               	bcf	status,0,c
  5202  00311A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5203  00311C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5204  00311E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5205  003120  3205               	rrcf	??___fpclassifyf^0,f,c
  5206  003122                     u3770:
  5207  003122  2EE8               	decfsz	wreg,f,c
  5208  003124  EF8C  F018         	goto	u3775
  5209  003128  5005               	movf	??___fpclassifyf^0,w,c
  5210  00312A  6E09               	movwf	___fpclassifyf@e^0,c
  5211  00312C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5212  00312E  5009               	movf	___fpclassifyf@e^0,w,c
  5213  003130  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5214  003132  A4D8               	btfss	status,2,c
  5215  003134  EF9E  F018         	goto	u3781
  5216  003138  EFA0  F018         	goto	u3780
  5217  00313C                     u3781:
  5218  00313C  EFC0  F018         	goto	l3638
  5219  003140                     u3780:
  5220  003140  90D8               	bcf	status,0,c
  5221  003142  340B               	rlcf	___fpclassifyf@u^0,w,c
  5222  003144  6E05               	movwf	??___fpclassifyf^0,c
  5223  003146  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5224  003148  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5225  00314A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5226  00314C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5227  00314E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5228  003150  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5229  003152  5005               	movf	??___fpclassifyf^0,w,c
  5230  003154  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5231  003156  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5232  003158  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5233  00315A  A4D8               	btfss	status,2,c
  5234  00315C  EFB2  F018         	goto	u3791
  5235  003160  EFB4  F018         	goto	u3790
  5236  003164                     u3791:
  5237  003164  EFBA  F018         	goto	l3634
  5238  003168                     u3790:
  5239  003168  0E00               	movlw	0
  5240  00316A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5241  00316C  0E02               	movlw	2
  5242  00316E  6E01               	movwf	?___fpclassifyf^0,c
  5243  003170  EFEF  F018         	goto	l1092
  5244  003174                     l3634:
  5245  003174  0E00               	movlw	0
  5246  003176  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5247  003178  0E03               	movlw	3
  5248  00317A  6E01               	movwf	?___fpclassifyf^0,c
  5249  00317C  EFEF  F018         	goto	l1092
  5250  003180                     l3638:
  5251  003180  2809               	incf	___fpclassifyf@e^0,w,c
  5252  003182  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5253  003184  A4D8               	btfss	status,2,c
  5254  003186  EFC7  F018         	goto	u3801
  5255  00318A  EFC9  F018         	goto	u3800
  5256  00318E                     u3801:
  5257  00318E  EFEB  F018         	goto	l3644
  5258  003192                     u3800:
  5259  003192  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5260  003196  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5261  00319A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5262  00319E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5263  0031A2  0E09               	movlw	9
  5264  0031A4                     u3815:
  5265  0031A4  90D8               	bcf	status,0,c
  5266  0031A6  3605               	rlcf	??___fpclassifyf^0,f,c
  5267  0031A8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5268  0031AA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5269  0031AC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5270  0031AE  2EE8               	decfsz	wreg,f,c
  5271  0031B0  EFD2  F018         	goto	u3815
  5272  0031B4  5005               	movf	??___fpclassifyf^0,w,c
  5273  0031B6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5274  0031B8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5275  0031BA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5276  0031BC  B4D8               	btfsc	status,2,c
  5277  0031BE  EFE3  F018         	goto	u3821
  5278  0031C2  EFE6  F018         	goto	u3820
  5279  0031C6                     u3821:
  5280  0031C6  0E01               	movlw	1
  5281  0031C8  EFE7  F018         	goto	u3830
  5282  0031CC                     u3820:
  5283  0031CC  0E00               	movlw	0
  5284  0031CE                     u3830:
  5285  0031CE  6E01               	movwf	?___fpclassifyf^0,c
  5286  0031D0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5287  0031D2  EFEF  F018         	goto	l1092
  5288  0031D6                     l3644:
  5289  0031D6  0E00               	movlw	0
  5290  0031D8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5291  0031DA  0E04               	movlw	4
  5292  0031DC  6E01               	movwf	?___fpclassifyf^0,c
  5293  0031DE                     l1092:
  5294  0031DE  0012               	return		;funcret
  5295  0031E0                     __end_of___fpclassifyf:
  5296                           	callstack 0
  5297                           
  5298 ;; *************** function ___fltol *****************
  5299 ;; Defined at:
  5300 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  f1              4    0[COMRAM] int 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  exp1            1    9[COMRAM] unsigned char 
  5305 ;;  sign1           1    8[COMRAM] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  4    0[COMRAM] long 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5315 ;;      Params:         4       0       0       0       0       0       0       0       0
  5316 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5318 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5319 ;;Total ram usage:       10 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_efgtoa
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text17
  5329  002ED8                     __ptext17:
  5330                           	callstack 0
  5331  002ED8                     ___fltol:
  5332                           	callstack 25
  5333  002ED8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5334  002EDA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5335  002EDC  6E0A               	movwf	___fltol@exp1^0,c
  5336  002EDE  500A               	movf	___fltol@exp1^0,w,c
  5337  002EE0  A4D8               	btfss	status,2,c
  5338  002EE2  EF75  F017         	goto	u3661
  5339  002EE6  EF77  F017         	goto	u3660
  5340  002EEA                     u3661:
  5341  002EEA  EF81  F017         	goto	l3566
  5342  002EEE                     u3660:
  5343  002EEE                     l3562:
  5344  002EEE  0E00               	movlw	0
  5345  002EF0  6E01               	movwf	?___fltol^0,c
  5346  002EF2  0E00               	movlw	0
  5347  002EF4  6E02               	movwf	(?___fltol+1)^0,c
  5348  002EF6  0E00               	movlw	0
  5349  002EF8  6E03               	movwf	(?___fltol+2)^0,c
  5350  002EFA  0E00               	movlw	0
  5351  002EFC  6E04               	movwf	(?___fltol+3)^0,c
  5352  002EFE  EFEE  F017         	goto	l541
  5353  002F02                     l3566:
  5354  002F02  C001  F005         	movff	___fltol@f1,??___fltol
  5355  002F06  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5356  002F0A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5357  002F0E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5358  002F12  0E20               	movlw	32
  5359  002F14  EF91  F017         	goto	u3670
  5360  002F18                     u3675:
  5361  002F18  90D8               	bcf	status,0,c
  5362  002F1A  3208               	rrcf	(??___fltol+3)^0,f,c
  5363  002F1C  3207               	rrcf	(??___fltol+2)^0,f,c
  5364  002F1E  3206               	rrcf	(??___fltol+1)^0,f,c
  5365  002F20  3205               	rrcf	??___fltol^0,f,c
  5366  002F22                     u3670:
  5367  002F22  2EE8               	decfsz	wreg,f,c
  5368  002F24  EF8C  F017         	goto	u3675
  5369  002F28  5005               	movf	??___fltol^0,w,c
  5370  002F2A  6E09               	movwf	___fltol@sign1^0,c
  5371  002F2C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5372  002F2E  0EFF               	movlw	255
  5373  002F30  1601               	andwf	___fltol@f1^0,f,c
  5374  002F32  0EFF               	movlw	255
  5375  002F34  1602               	andwf	(___fltol@f1+1)^0,f,c
  5376  002F36  0EFF               	movlw	255
  5377  002F38  1603               	andwf	(___fltol@f1+2)^0,f,c
  5378  002F3A  0E00               	movlw	0
  5379  002F3C  1604               	andwf	(___fltol@f1+3)^0,f,c
  5380  002F3E  0E96               	movlw	150
  5381  002F40  5E0A               	subwf	___fltol@exp1^0,f,c
  5382  002F42  BE0A               	btfsc	___fltol@exp1^0,7,c
  5383  002F44  EFA8  F017         	goto	u3680
  5384  002F48  EFA6  F017         	goto	u3681
  5385  002F4C                     u3681:
  5386  002F4C  EFBE  F017         	goto	l3586
  5387  002F50                     u3680:
  5388  002F50  500A               	movf	___fltol@exp1^0,w,c
  5389  002F52  0A80               	xorlw	128
  5390  002F54  0F97               	addlw	151
  5391  002F56  B0D8               	btfsc	status,0,c
  5392  002F58  EFB0  F017         	goto	u3691
  5393  002F5C  EFB2  F017         	goto	u3690
  5394  002F60                     u3691:
  5395  002F60  EFB4  F017         	goto	l3582
  5396  002F64                     u3690:
  5397  002F64  EF77  F017         	goto	l3562
  5398  002F68                     l3582:
  5399  002F68  90D8               	bcf	status,0,c
  5400  002F6A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5401  002F6C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5402  002F6E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5403  002F70  3201               	rrcf	___fltol@f1^0,f,c
  5404  002F72  3E0A               	incfsz	___fltol@exp1^0,f,c
  5405  002F74  EFB4  F017         	goto	l3582
  5406  002F78  EFD6  F017         	goto	l3596
  5407  002F7C                     l3586:
  5408  002F7C  0E1F               	movlw	31
  5409  002F7E  640A               	cpfsgt	___fltol@exp1^0,c
  5410  002F80  EFC4  F017         	goto	u3701
  5411  002F84  EFC6  F017         	goto	u3700
  5412  002F88                     u3701:
  5413  002F88  EFCE  F017         	goto	l3594
  5414  002F8C                     u3700:
  5415  002F8C  EF77  F017         	goto	l3562
  5416  002F90                     l3592:
  5417  002F90  90D8               	bcf	status,0,c
  5418  002F92  3601               	rlcf	___fltol@f1^0,f,c
  5419  002F94  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5420  002F96  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5421  002F98  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5422  002F9A  060A               	decf	___fltol@exp1^0,f,c
  5423  002F9C                     l3594:
  5424  002F9C  500A               	movf	___fltol@exp1^0,w,c
  5425  002F9E  A4D8               	btfss	status,2,c
  5426  002FA0  EFD4  F017         	goto	u3711
  5427  002FA4  EFD6  F017         	goto	u3710
  5428  002FA8                     u3711:
  5429  002FA8  EFC8  F017         	goto	l3592
  5430  002FAC                     u3710:
  5431  002FAC                     l3596:
  5432  002FAC  5009               	movf	___fltol@sign1^0,w,c
  5433  002FAE  B4D8               	btfsc	status,2,c
  5434  002FB0  EFDC  F017         	goto	u3721
  5435  002FB4  EFDE  F017         	goto	u3720
  5436  002FB8                     u3721:
  5437  002FB8  EFE6  F017         	goto	l3600
  5438  002FBC                     u3720:
  5439  002FBC  1E04               	comf	(___fltol@f1+3)^0,f,c
  5440  002FBE  1E03               	comf	(___fltol@f1+2)^0,f,c
  5441  002FC0  1E02               	comf	(___fltol@f1+1)^0,f,c
  5442  002FC2  6C01               	negf	___fltol@f1^0,c
  5443  002FC4  0E00               	movlw	0
  5444  002FC6  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5445  002FC8  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5446  002FCA  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5447  002FCC                     l3600:
  5448  002FCC  C001  F001         	movff	___fltol@f1,?___fltol
  5449  002FD0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5450  002FD4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5451  002FD8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5452  002FDC                     l541:
  5453  002FDC  0012               	return		;funcret
  5454  002FDE                     __end_of___fltol:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function ___flsub *****************
  5458 ;; Defined at:
  5459 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  b               4   25[COMRAM] long 
  5462 ;;  a               4   29[COMRAM] long 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  4   25[COMRAM] long 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5474 ;;      Params:         8       0       0       0       0       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5477 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5478 ;;Total ram usage:        8 bytes
  5479 ;; Hardware stack levels used: 1
  5480 ;; Hardware stack levels required when called: 1
  5481 ;; This function calls:
  5482 ;;		___fladd
  5483 ;; This function is called by:
  5484 ;;		_efgtoa
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text18
  5489  003DAE                     __ptext18:
  5490                           	callstack 0
  5491  003DAE                     ___flsub:
  5492                           	callstack 24
  5493  003DAE  0E00               	movlw	0
  5494  003DB0  1A1E               	xorwf	___flsub@a^0,f,c
  5495  003DB2  0E00               	movlw	0
  5496  003DB4  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5497  003DB6  0E00               	movlw	0
  5498  003DB8  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5499  003DBA  0E80               	movlw	128
  5500  003DBC  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5501  003DBE  C01A  F001         	movff	___flsub@b,___fladd@b
  5502  003DC2  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5503  003DC6  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5504  003DCA  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5505  003DCE  C01E  F005         	movff	___flsub@a,___fladd@a
  5506  003DD2  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5507  003DD6  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5508  003DDA  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5509  003DDE  EC1C  F00A         	call	___fladd	;wreg free
  5510  003DE2  C001  F01A         	movff	?___fladd,?___flsub
  5511  003DE6  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5512  003DEA  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5513  003DEE  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5514  003DF2  0012               	return		;funcret
  5515  003DF4                     __end_of___flsub:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function ___fladd *****************
  5519 ;; Defined at:
  5520 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  b               4    0[COMRAM] long 
  5523 ;;  a               4    4[COMRAM] long 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  grs             1   15[COMRAM] unsigned char 
  5526 ;;  bexp            1   14[COMRAM] unsigned char 
  5527 ;;  aexp            1   13[COMRAM] unsigned char 
  5528 ;;  signs           1   12[COMRAM] unsigned char 
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  4    0[COMRAM] unsigned char 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5538 ;;      Params:         8       0       0       0       0       0       0       0       0
  5539 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5540 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5541 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5542 ;;Total ram usage:       16 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		___flsub
  5548 ;;		_efgtoa
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text19
  5553  001438                     __ptext19:
  5554                           	callstack 0
  5555  001438                     ___fladd:
  5556                           	callstack 24
  5557  001438  5004               	movf	(___fladd@b+3)^0,w,c
  5558  00143A  0B80               	andlw	128
  5559  00143C  6E0D               	movwf	___fladd@signs^0,c
  5560  00143E  5004               	movf	(___fladd@b+3)^0,w,c
  5561  001440  2404               	addwf	(___fladd@b+3)^0,w,c
  5562  001442  6E0F               	movwf	___fladd@bexp^0,c
  5563  001444  AE03               	btfss	(___fladd@b+2)^0,7,c
  5564  001446  EF27  F00A         	goto	u2601
  5565  00144A  EF29  F00A         	goto	u2600
  5566  00144E                     u2601:
  5567  00144E  EF2A  F00A         	goto	l2936
  5568  001452                     u2600:
  5569  001452  800F               	bsf	___fladd@bexp^0,0,c
  5570  001454                     l2936:
  5571  001454  500F               	movf	___fladd@bexp^0,w,c
  5572  001456  B4D8               	btfsc	status,2,c
  5573  001458  EF30  F00A         	goto	u2611
  5574  00145C  EF32  F00A         	goto	u2610
  5575  001460                     u2611:
  5576  001460  EF47  F00A         	goto	l2946
  5577  001464                     u2610:
  5578  001464  280F               	incf	___fladd@bexp^0,w,c
  5579  001466  A4D8               	btfss	status,2,c
  5580  001468  EF38  F00A         	goto	u2621
  5581  00146C  EF3A  F00A         	goto	u2620
  5582  001470                     u2621:
  5583  001470  EF42  F00A         	goto	l2942
  5584  001474                     u2620:
  5585  001474  0E00               	movlw	0
  5586  001476  6E01               	movwf	___fladd@b^0,c
  5587  001478  0E00               	movlw	0
  5588  00147A  6E02               	movwf	(___fladd@b+1)^0,c
  5589  00147C  0E00               	movlw	0
  5590  00147E  6E03               	movwf	(___fladd@b+2)^0,c
  5591  001480  0E00               	movlw	0
  5592  001482  6E04               	movwf	(___fladd@b+3)^0,c
  5593  001484                     l2942:
  5594  001484  8E03               	bsf	(___fladd@b+2)^0,7,c
  5595  001486  0E00               	movlw	0
  5596  001488  6E04               	movwf	(___fladd@b+3)^0,c
  5597  00148A  EF4F  F00A         	goto	l2948
  5598  00148E                     l2946:
  5599  00148E  0E00               	movlw	0
  5600  001490  6E01               	movwf	___fladd@b^0,c
  5601  001492  0E00               	movlw	0
  5602  001494  6E02               	movwf	(___fladd@b+1)^0,c
  5603  001496  0E00               	movlw	0
  5604  001498  6E03               	movwf	(___fladd@b+2)^0,c
  5605  00149A  0E00               	movlw	0
  5606  00149C  6E04               	movwf	(___fladd@b+3)^0,c
  5607  00149E                     l2948:
  5608  00149E  5008               	movf	(___fladd@a+3)^0,w,c
  5609  0014A0  0B80               	andlw	128
  5610  0014A2  6E0E               	movwf	___fladd@aexp^0,c
  5611  0014A4  500D               	movf	___fladd@signs^0,w,c
  5612  0014A6  180E               	xorwf	___fladd@aexp^0,w,c
  5613  0014A8  B4D8               	btfsc	status,2,c
  5614  0014AA  EF59  F00A         	goto	u2631
  5615  0014AE  EF5B  F00A         	goto	u2630
  5616  0014B2                     u2631:
  5617  0014B2  EF5C  F00A         	goto	l2954
  5618  0014B6                     u2630:
  5619  0014B6  8C0D               	bsf	___fladd@signs^0,6,c
  5620  0014B8                     l2954:
  5621  0014B8  5008               	movf	(___fladd@a+3)^0,w,c
  5622  0014BA  2408               	addwf	(___fladd@a+3)^0,w,c
  5623  0014BC  6E0E               	movwf	___fladd@aexp^0,c
  5624  0014BE  AE07               	btfss	(___fladd@a+2)^0,7,c
  5625  0014C0  EF64  F00A         	goto	u2641
  5626  0014C4  EF66  F00A         	goto	u2640
  5627  0014C8                     u2641:
  5628  0014C8  EF67  F00A         	goto	l2960
  5629  0014CC                     u2640:
  5630  0014CC  800E               	bsf	___fladd@aexp^0,0,c
  5631  0014CE                     l2960:
  5632  0014CE  500E               	movf	___fladd@aexp^0,w,c
  5633  0014D0  B4D8               	btfsc	status,2,c
  5634  0014D2  EF6D  F00A         	goto	u2651
  5635  0014D6  EF6F  F00A         	goto	u2650
  5636  0014DA                     u2651:
  5637  0014DA  EF84  F00A         	goto	l2970
  5638  0014DE                     u2650:
  5639  0014DE  280E               	incf	___fladd@aexp^0,w,c
  5640  0014E0  A4D8               	btfss	status,2,c
  5641  0014E2  EF75  F00A         	goto	u2661
  5642  0014E6  EF77  F00A         	goto	u2660
  5643  0014EA                     u2661:
  5644  0014EA  EF7F  F00A         	goto	l2966
  5645  0014EE                     u2660:
  5646  0014EE  0E00               	movlw	0
  5647  0014F0  6E05               	movwf	___fladd@a^0,c
  5648  0014F2  0E00               	movlw	0
  5649  0014F4  6E06               	movwf	(___fladd@a+1)^0,c
  5650  0014F6  0E00               	movlw	0
  5651  0014F8  6E07               	movwf	(___fladd@a+2)^0,c
  5652  0014FA  0E00               	movlw	0
  5653  0014FC  6E08               	movwf	(___fladd@a+3)^0,c
  5654  0014FE                     l2966:
  5655  0014FE  8E07               	bsf	(___fladd@a+2)^0,7,c
  5656  001500  0E00               	movlw	0
  5657  001502  6E08               	movwf	(___fladd@a+3)^0,c
  5658  001504  EF8C  F00A         	goto	l2972
  5659  001508                     l2970:
  5660  001508  0E00               	movlw	0
  5661  00150A  6E05               	movwf	___fladd@a^0,c
  5662  00150C  0E00               	movlw	0
  5663  00150E  6E06               	movwf	(___fladd@a+1)^0,c
  5664  001510  0E00               	movlw	0
  5665  001512  6E07               	movwf	(___fladd@a+2)^0,c
  5666  001514  0E00               	movlw	0
  5667  001516  6E08               	movwf	(___fladd@a+3)^0,c
  5668  001518                     l2972:
  5669  001518  500F               	movf	___fladd@bexp^0,w,c
  5670  00151A  5C0E               	subwf	___fladd@aexp^0,w,c
  5671  00151C  B0D8               	btfsc	status,0,c
  5672  00151E  EF93  F00A         	goto	u2671
  5673  001522  EF95  F00A         	goto	u2670
  5674  001526                     u2671:
  5675  001526  EFBC  F00A         	goto	l3008
  5676  00152A                     u2670:
  5677  00152A  AC0D               	btfss	___fladd@signs^0,6,c
  5678  00152C  EF9A  F00A         	goto	u2681
  5679  001530  EF9C  F00A         	goto	u2680
  5680  001534                     u2681:
  5681  001534  EF9E  F00A         	goto	l2978
  5682  001538                     u2680:
  5683  001538  0E80               	movlw	128
  5684  00153A  1A0D               	xorwf	___fladd@signs^0,f,c
  5685  00153C                     l2978:
  5686  00153C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5687  001540  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5688  001544  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5689  001548  C001  F010         	movff	___fladd@b,___fladd@grs
  5690  00154C  C005  F001         	movff	___fladd@a,___fladd@b
  5691  001550  C010  F005         	movff	___fladd@grs,___fladd@a
  5692  001554  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5693  001558  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5694  00155C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5695  001560  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5696  001564  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5697  001568  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5698  00156C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5699  001570  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5700  001574  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5701  001578                     l3008:
  5702  001578  0E00               	movlw	0
  5703  00157A  6E10               	movwf	___fladd@grs^0,c
  5704  00157C  500F               	movf	___fladd@bexp^0,w,c
  5705  00157E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5706  001582  6A0A               	clrf	(??___fladd+1)^0,c
  5707  001584  5E09               	subwf	??___fladd^0,f,c
  5708  001586  0E00               	movlw	0
  5709  001588  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5710  00158A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5711  00158C  EFD1  F00A         	goto	u2691
  5712  001590  500A               	movf	(??___fladd+1)^0,w,c
  5713  001592  E109               	bnz	u2690
  5714  001594  0E1A               	movlw	26
  5715  001596  5C09               	subwf	??___fladd^0,w,c
  5716  001598  A0D8               	btfss	status,0,c
  5717  00159A  EFD1  F00A         	goto	u2691
  5718  00159E  EFD3  F00A         	goto	u2690
  5719  0015A2                     u2691:
  5720  0015A2  EF0A  F00B         	goto	l773
  5721  0015A6                     u2690:
  5722  0015A6  5001               	movf	___fladd@b^0,w,c
  5723  0015A8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5724  0015AA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5725  0015AC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5726  0015AE  A4D8               	btfss	status,2,c
  5727  0015B0  EFDC  F00A         	goto	u2701
  5728  0015B4  EFDF  F00A         	goto	u2700
  5729  0015B8                     u2701:
  5730  0015B8  0E01               	movlw	1
  5731  0015BA  EFE0  F00A         	goto	u2710
  5732  0015BE                     u2700:
  5733  0015BE  0E00               	movlw	0
  5734  0015C0                     u2710:
  5735  0015C0  6E10               	movwf	___fladd@grs^0,c
  5736  0015C2  0E00               	movlw	0
  5737  0015C4  6E01               	movwf	___fladd@b^0,c
  5738  0015C6  0E00               	movlw	0
  5739  0015C8  6E02               	movwf	(___fladd@b+1)^0,c
  5740  0015CA  0E00               	movlw	0
  5741  0015CC  6E03               	movwf	(___fladd@b+2)^0,c
  5742  0015CE  0E00               	movlw	0
  5743  0015D0  6E04               	movwf	(___fladd@b+3)^0,c
  5744  0015D2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5745  0015D6  EF13  F00B         	goto	l772
  5746  0015DA                     l774:
  5747  0015DA  A010               	btfss	___fladd@grs^0,0,c
  5748  0015DC  EFF2  F00A         	goto	u2721
  5749  0015E0  EFF4  F00A         	goto	u2720
  5750  0015E4                     u2721:
  5751  0015E4  EFFA  F00A         	goto	l3020
  5752  0015E8                     u2720:
  5753  0015E8  90D8               	bcf	status,0,c
  5754  0015EA  3010               	rrcf	___fladd@grs^0,w,c
  5755  0015EC  0901               	iorlw	1
  5756  0015EE  6E10               	movwf	___fladd@grs^0,c
  5757  0015F0  EFFC  F00A         	goto	l3022
  5758  0015F4                     l3020:
  5759  0015F4  90D8               	bcf	status,0,c
  5760  0015F6  3210               	rrcf	___fladd@grs^0,f,c
  5761  0015F8                     l3022:
  5762  0015F8  A001               	btfss	___fladd@b^0,0,c
  5763  0015FA  EF01  F00B         	goto	u2731
  5764  0015FE  EF03  F00B         	goto	u2730
  5765  001602                     u2731:
  5766  001602  EF04  F00B         	goto	l3026
  5767  001606                     u2730:
  5768  001606  8E10               	bsf	___fladd@grs^0,7,c
  5769  001608                     l3026:
  5770  001608  3404               	rlcf	(___fladd@b+3)^0,w,c
  5771  00160A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5772  00160C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5773  00160E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5774  001610  3201               	rrcf	___fladd@b^0,f,c
  5775  001612  2A0F               	incf	___fladd@bexp^0,f,c
  5776  001614                     l773:
  5777  001614  500E               	movf	___fladd@aexp^0,w,c
  5778  001616  5C0F               	subwf	___fladd@bexp^0,w,c
  5779  001618  A0D8               	btfss	status,0,c
  5780  00161A  EF11  F00B         	goto	u2741
  5781  00161E  EF13  F00B         	goto	u2740
  5782  001622                     u2741:
  5783  001622  EFED  F00A         	goto	l774
  5784  001626                     u2740:
  5785  001626                     l772:
  5786  001626  BC0D               	btfsc	___fladd@signs^0,6,c
  5787  001628  EF18  F00B         	goto	u2751
  5788  00162C  EF1A  F00B         	goto	u2750
  5789  001630                     u2751:
  5790  001630  EF5A  F00B         	goto	l3054
  5791  001634                     u2750:
  5792  001634  500F               	movf	___fladd@bexp^0,w,c
  5793  001636  A4D8               	btfss	status,2,c
  5794  001638  EF20  F00B         	goto	u2761
  5795  00163C  EF22  F00B         	goto	u2760
  5796  001640                     u2761:
  5797  001640  EF2C  F00B         	goto	l3036
  5798  001644                     u2760:
  5799  001644  0E00               	movlw	0
  5800  001646  6E01               	movwf	?___fladd^0,c
  5801  001648  0E00               	movlw	0
  5802  00164A  6E02               	movwf	(?___fladd+1)^0,c
  5803  00164C  0E00               	movlw	0
  5804  00164E  6E03               	movwf	(?___fladd+2)^0,c
  5805  001650  0E00               	movlw	0
  5806  001652  6E04               	movwf	(?___fladd+3)^0,c
  5807  001654  EF7B  F00C         	goto	l781
  5808  001658                     l3036:
  5809  001658  5005               	movf	___fladd@a^0,w,c
  5810  00165A  2601               	addwf	___fladd@b^0,f,c
  5811  00165C  5006               	movf	(___fladd@a+1)^0,w,c
  5812  00165E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5813  001660  5007               	movf	(___fladd@a+2)^0,w,c
  5814  001662  2203               	addwfc	(___fladd@b+2)^0,f,c
  5815  001664  5008               	movf	(___fladd@a+3)^0,w,c
  5816  001666  2204               	addwfc	(___fladd@b+3)^0,f,c
  5817  001668  A004               	btfss	(___fladd@b+3)^0,0,c
  5818  00166A  EF39  F00B         	goto	u2771
  5819  00166E  EF3B  F00B         	goto	u2770
  5820  001672                     u2771:
  5821  001672  EFE7  F00B         	goto	l3090
  5822  001676                     u2770:
  5823  001676  A010               	btfss	___fladd@grs^0,0,c
  5824  001678  EF40  F00B         	goto	u2781
  5825  00167C  EF42  F00B         	goto	u2780
  5826  001680                     u2781:
  5827  001680  EF48  F00B         	goto	l3044
  5828  001684                     u2780:
  5829  001684  90D8               	bcf	status,0,c
  5830  001686  3010               	rrcf	___fladd@grs^0,w,c
  5831  001688  0901               	iorlw	1
  5832  00168A  6E10               	movwf	___fladd@grs^0,c
  5833  00168C  EF4A  F00B         	goto	l3046
  5834  001690                     l3044:
  5835  001690  90D8               	bcf	status,0,c
  5836  001692  3210               	rrcf	___fladd@grs^0,f,c
  5837  001694                     l3046:
  5838  001694  A001               	btfss	___fladd@b^0,0,c
  5839  001696  EF4F  F00B         	goto	u2791
  5840  00169A  EF51  F00B         	goto	u2790
  5841  00169E                     u2791:
  5842  00169E  EF52  F00B         	goto	l3050
  5843  0016A2                     u2790:
  5844  0016A2  8E10               	bsf	___fladd@grs^0,7,c
  5845  0016A4                     l3050:
  5846  0016A4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5847  0016A6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5848  0016A8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5849  0016AA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5850  0016AC  3201               	rrcf	___fladd@b^0,f,c
  5851  0016AE  2A0F               	incf	___fladd@bexp^0,f,c
  5852  0016B0  EFE7  F00B         	goto	l3090
  5853  0016B4                     l3054:
  5854  0016B4  5005               	movf	___fladd@a^0,w,c
  5855  0016B6  5C01               	subwf	___fladd@b^0,w,c
  5856  0016B8  5006               	movf	(___fladd@a+1)^0,w,c
  5857  0016BA  5802               	subwfb	(___fladd@b+1)^0,w,c
  5858  0016BC  5007               	movf	(___fladd@a+2)^0,w,c
  5859  0016BE  5803               	subwfb	(___fladd@b+2)^0,w,c
  5860  0016C0  5004               	movf	(___fladd@b+3)^0,w,c
  5861  0016C2  0A80               	xorlw	128
  5862  0016C4  6E09               	movwf	??___fladd^0,c
  5863  0016C6  5008               	movf	(___fladd@a+3)^0,w,c
  5864  0016C8  0A80               	xorlw	128
  5865  0016CA  5809               	subwfb	??___fladd^0,w,c
  5866  0016CC  B0D8               	btfsc	status,0,c
  5867  0016CE  EF6B  F00B         	goto	u2801
  5868  0016D2  EF6D  F00B         	goto	u2800
  5869  0016D6                     u2801:
  5870  0016D6  EF98  F00B         	goto	l3064
  5871  0016DA                     u2800:
  5872  0016DA  5001               	movf	___fladd@b^0,w,c
  5873  0016DC  5C05               	subwf	___fladd@a^0,w,c
  5874  0016DE  6E09               	movwf	??___fladd^0,c
  5875  0016E0  5002               	movf	(___fladd@b+1)^0,w,c
  5876  0016E2  5806               	subwfb	(___fladd@a+1)^0,w,c
  5877  0016E4  6E0A               	movwf	(??___fladd+1)^0,c
  5878  0016E6  5003               	movf	(___fladd@b+2)^0,w,c
  5879  0016E8  5807               	subwfb	(___fladd@a+2)^0,w,c
  5880  0016EA  6E0B               	movwf	(??___fladd+2)^0,c
  5881  0016EC  5004               	movf	(___fladd@b+3)^0,w,c
  5882  0016EE  5808               	subwfb	(___fladd@a+3)^0,w,c
  5883  0016F0  6E0C               	movwf	(??___fladd+3)^0,c
  5884  0016F2  0EFF               	movlw	255
  5885  0016F4  2409               	addwf	??___fladd^0,w,c
  5886  0016F6  6E01               	movwf	___fladd@b^0,c
  5887  0016F8  0EFF               	movlw	255
  5888  0016FA  200A               	addwfc	(??___fladd+1)^0,w,c
  5889  0016FC  6E02               	movwf	(___fladd@b+1)^0,c
  5890  0016FE  0EFF               	movlw	255
  5891  001700  200B               	addwfc	(??___fladd+2)^0,w,c
  5892  001702  6E03               	movwf	(___fladd@b+2)^0,c
  5893  001704  0EFF               	movlw	255
  5894  001706  200C               	addwfc	(??___fladd+3)^0,w,c
  5895  001708  6E04               	movwf	(___fladd@b+3)^0,c
  5896  00170A  0E80               	movlw	128
  5897  00170C  1A0D               	xorwf	___fladd@signs^0,f,c
  5898  00170E  6C10               	negf	___fladd@grs^0,c
  5899  001710  5010               	movf	___fladd@grs^0,w,c
  5900  001712  A4D8               	btfss	status,2,c
  5901  001714  EF8E  F00B         	goto	u2811
  5902  001718  EF90  F00B         	goto	u2810
  5903  00171C                     u2811:
  5904  00171C  EFA0  F00B         	goto	l789
  5905  001720                     u2810:
  5906  001720  0E01               	movlw	1
  5907  001722  2601               	addwf	___fladd@b^0,f,c
  5908  001724  0E00               	movlw	0
  5909  001726  2202               	addwfc	(___fladd@b+1)^0,f,c
  5910  001728  2203               	addwfc	(___fladd@b+2)^0,f,c
  5911  00172A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5912  00172C  EFA0  F00B         	goto	l789
  5913  001730                     l3064:
  5914  001730  5005               	movf	___fladd@a^0,w,c
  5915  001732  5E01               	subwf	___fladd@b^0,f,c
  5916  001734  5006               	movf	(___fladd@a+1)^0,w,c
  5917  001736  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5918  001738  5007               	movf	(___fladd@a+2)^0,w,c
  5919  00173A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5920  00173C  5008               	movf	(___fladd@a+3)^0,w,c
  5921  00173E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5922  001740                     l789:
  5923  001740  5001               	movf	___fladd@b^0,w,c
  5924  001742  1002               	iorwf	(___fladd@b+1)^0,w,c
  5925  001744  1003               	iorwf	(___fladd@b+2)^0,w,c
  5926  001746  1004               	iorwf	(___fladd@b+3)^0,w,c
  5927  001748  A4D8               	btfss	status,2,c
  5928  00174A  EFA9  F00B         	goto	u2821
  5929  00174E  EFAB  F00B         	goto	u2820
  5930  001752                     u2821:
  5931  001752  EFE0  F00B         	goto	l3088
  5932  001756                     u2820:
  5933  001756  5010               	movf	___fladd@grs^0,w,c
  5934  001758  A4D8               	btfss	status,2,c
  5935  00175A  EFB1  F00B         	goto	u2831
  5936  00175E  EFB3  F00B         	goto	u2830
  5937  001762                     u2831:
  5938  001762  EFE0  F00B         	goto	l3088
  5939  001766                     u2830:
  5940  001766  0E00               	movlw	0
  5941  001768  6E01               	movwf	?___fladd^0,c
  5942  00176A  0E00               	movlw	0
  5943  00176C  6E02               	movwf	(?___fladd+1)^0,c
  5944  00176E  0E00               	movlw	0
  5945  001770  6E03               	movwf	(?___fladd+2)^0,c
  5946  001772  0E00               	movlw	0
  5947  001774  6E04               	movwf	(?___fladd+3)^0,c
  5948  001776  EF7B  F00C         	goto	l781
  5949  00177A                     l3072:
  5950  00177A  90D8               	bcf	status,0,c
  5951  00177C  3601               	rlcf	___fladd@b^0,f,c
  5952  00177E  3602               	rlcf	(___fladd@b+1)^0,f,c
  5953  001780  3603               	rlcf	(___fladd@b+2)^0,f,c
  5954  001782  3604               	rlcf	(___fladd@b+3)^0,f,c
  5955  001784  AE10               	btfss	___fladd@grs^0,7,c
  5956  001786  EFC7  F00B         	goto	u2841
  5957  00178A  EFC9  F00B         	goto	u2840
  5958  00178E                     u2841:
  5959  00178E  EFCA  F00B         	goto	l3078
  5960  001792                     u2840:
  5961  001792  8001               	bsf	___fladd@b^0,0,c
  5962  001794                     l3078:
  5963  001794  A010               	btfss	___fladd@grs^0,0,c
  5964  001796  EFCF  F00B         	goto	u2851
  5965  00179A  EFD1  F00B         	goto	u2850
  5966  00179E                     u2851:
  5967  00179E  EFD5  F00B         	goto	l3082
  5968  0017A2                     u2850:
  5969  0017A2  80D8               	bsf	status,0,c
  5970  0017A4  3610               	rlcf	___fladd@grs^0,f,c
  5971  0017A6  EFD7  F00B         	goto	l3084
  5972  0017AA                     l3082:
  5973  0017AA  90D8               	bcf	status,0,c
  5974  0017AC  3610               	rlcf	___fladd@grs^0,f,c
  5975  0017AE                     l3084:
  5976  0017AE  500F               	movf	___fladd@bexp^0,w,c
  5977  0017B0  B4D8               	btfsc	status,2,c
  5978  0017B2  EFDD  F00B         	goto	u2861
  5979  0017B6  EFDF  F00B         	goto	u2860
  5980  0017BA                     u2861:
  5981  0017BA  EFE0  F00B         	goto	l3088
  5982  0017BE                     u2860:
  5983  0017BE  060F               	decf	___fladd@bexp^0,f,c
  5984  0017C0                     l3088:
  5985  0017C0  AE03               	btfss	(___fladd@b+2)^0,7,c
  5986  0017C2  EFE5  F00B         	goto	u2871
  5987  0017C6  EFE7  F00B         	goto	u2870
  5988  0017CA                     u2871:
  5989  0017CA  EFBD  F00B         	goto	l3072
  5990  0017CE                     u2870:
  5991  0017CE                     l3090:
  5992  0017CE  0E00               	movlw	0
  5993  0017D0  6E0E               	movwf	___fladd@aexp^0,c
  5994  0017D2  AE10               	btfss	___fladd@grs^0,7,c
  5995  0017D4  EFEE  F00B         	goto	u2881
  5996  0017D8  EFF0  F00B         	goto	u2880
  5997  0017DC                     u2881:
  5998  0017DC  EF08  F00C         	goto	l798
  5999  0017E0                     u2880:
  6000  0017E0  C010  F009         	movff	___fladd@grs,??___fladd
  6001  0017E4  0E7F               	movlw	127
  6002  0017E6  1609               	andwf	??___fladd^0,f,c
  6003  0017E8  B4D8               	btfsc	status,2,c
  6004  0017EA  EFF9  F00B         	goto	u2891
  6005  0017EE  EFFB  F00B         	goto	u2890
  6006  0017F2                     u2891:
  6007  0017F2  EFFF  F00B         	goto	l799
  6008  0017F6                     u2890:
  6009  0017F6                     l3096:
  6010  0017F6  0E01               	movlw	1
  6011  0017F8  6E0E               	movwf	___fladd@aexp^0,c
  6012  0017FA  EF08  F00C         	goto	l798
  6013  0017FE                     l799:
  6014  0017FE  A001               	btfss	___fladd@b^0,0,c
  6015  001800  EF04  F00C         	goto	u2901
  6016  001804  EF06  F00C         	goto	u2900
  6017  001808                     u2901:
  6018  001808  EF08  F00C         	goto	l798
  6019  00180C                     u2900:
  6020  00180C  EFFB  F00B         	goto	l3096
  6021  001810                     l798:
  6022  001810  500E               	movf	___fladd@aexp^0,w,c
  6023  001812  B4D8               	btfsc	status,2,c
  6024  001814  EF0E  F00C         	goto	u2911
  6025  001818  EF10  F00C         	goto	u2910
  6026  00181C                     u2911:
  6027  00181C  EF3B  F00C         	goto	l3108
  6028  001820                     u2910:
  6029  001820  0E01               	movlw	1
  6030  001822  2601               	addwf	___fladd@b^0,f,c
  6031  001824  0E00               	movlw	0
  6032  001826  2202               	addwfc	(___fladd@b+1)^0,f,c
  6033  001828  2203               	addwfc	(___fladd@b+2)^0,f,c
  6034  00182A  2204               	addwfc	(___fladd@b+3)^0,f,c
  6035  00182C  A004               	btfss	(___fladd@b+3)^0,0,c
  6036  00182E  EF1B  F00C         	goto	u2921
  6037  001832  EF1D  F00C         	goto	u2920
  6038  001836                     u2921:
  6039  001836  EF3B  F00C         	goto	l3108
  6040  00183A                     u2920:
  6041  00183A  C001  F009         	movff	___fladd@b,??___fladd
  6042  00183E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6043  001842  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6044  001846  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6045  00184A  340C               	rlcf	(??___fladd+3)^0,w,c
  6046  00184C  320C               	rrcf	(??___fladd+3)^0,f,c
  6047  00184E  320B               	rrcf	(??___fladd+2)^0,f,c
  6048  001850  320A               	rrcf	(??___fladd+1)^0,f,c
  6049  001852  3209               	rrcf	??___fladd^0,f,c
  6050  001854  C009  F001         	movff	??___fladd,___fladd@b
  6051  001858  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6052  00185C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6053  001860  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6054  001864  280F               	incf	___fladd@bexp^0,w,c
  6055  001866  B4D8               	btfsc	status,2,c
  6056  001868  EF38  F00C         	goto	u2931
  6057  00186C  EF3A  F00C         	goto	u2930
  6058  001870                     u2931:
  6059  001870  EF3B  F00C         	goto	l3108
  6060  001874                     u2930:
  6061  001874  2A0F               	incf	___fladd@bexp^0,f,c
  6062  001876                     l3108:
  6063  001876  280F               	incf	___fladd@bexp^0,w,c
  6064  001878  B4D8               	btfsc	status,2,c
  6065  00187A  EF41  F00C         	goto	u2941
  6066  00187E  EF43  F00C         	goto	u2940
  6067  001882                     u2941:
  6068  001882  EF4B  F00C         	goto	l3112
  6069  001886                     u2940:
  6070  001886  500F               	movf	___fladd@bexp^0,w,c
  6071  001888  A4D8               	btfss	status,2,c
  6072  00188A  EF49  F00C         	goto	u2951
  6073  00188E  EF4B  F00C         	goto	u2950
  6074  001892                     u2951:
  6075  001892  EF5D  F00C         	goto	l3116
  6076  001896                     u2950:
  6077  001896                     l3112:
  6078  001896  0E00               	movlw	0
  6079  001898  6E01               	movwf	___fladd@b^0,c
  6080  00189A  0E00               	movlw	0
  6081  00189C  6E02               	movwf	(___fladd@b+1)^0,c
  6082  00189E  0E00               	movlw	0
  6083  0018A0  6E03               	movwf	(___fladd@b+2)^0,c
  6084  0018A2  0E00               	movlw	0
  6085  0018A4  6E04               	movwf	(___fladd@b+3)^0,c
  6086  0018A6  500F               	movf	___fladd@bexp^0,w,c
  6087  0018A8  A4D8               	btfss	status,2,c
  6088  0018AA  EF59  F00C         	goto	u2961
  6089  0018AE  EF5B  F00C         	goto	u2960
  6090  0018B2                     u2961:
  6091  0018B2  EF5D  F00C         	goto	l3116
  6092  0018B6                     u2960:
  6093  0018B6  0E00               	movlw	0
  6094  0018B8  6E0D               	movwf	___fladd@signs^0,c
  6095  0018BA                     l3116:
  6096  0018BA  A00F               	btfss	___fladd@bexp^0,0,c
  6097  0018BC  EF62  F00C         	goto	u2971
  6098  0018C0  EF64  F00C         	goto	u2970
  6099  0018C4                     u2971:
  6100  0018C4  EF67  F00C         	goto	l3120
  6101  0018C8                     u2970:
  6102  0018C8  8E03               	bsf	(___fladd@b+2)^0,7,c
  6103  0018CA  EF68  F00C         	goto	l3122
  6104  0018CE                     l3120:
  6105  0018CE  9E03               	bcf	(___fladd@b+2)^0,7,c
  6106  0018D0                     l3122:
  6107  0018D0  90D8               	bcf	status,0,c
  6108  0018D2  300F               	rrcf	___fladd@bexp^0,w,c
  6109  0018D4  6E04               	movwf	(___fladd@b+3)^0,c
  6110  0018D6  AE0D               	btfss	___fladd@signs^0,7,c
  6111  0018D8  EF70  F00C         	goto	u2981
  6112  0018DC  EF72  F00C         	goto	u2980
  6113  0018E0                     u2981:
  6114  0018E0  EF73  F00C         	goto	l3128
  6115  0018E4                     u2980:
  6116  0018E4  8E04               	bsf	(___fladd@b+3)^0,7,c
  6117  0018E6                     l3128:
  6118  0018E6  C001  F001         	movff	___fladd@b,?___fladd
  6119  0018EA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6120  0018EE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6121  0018F2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6122  0018F6                     l781:
  6123  0018F6  0012               	return		;funcret
  6124  0018F8                     __end_of___fladd:
  6125                           	callstack 0
  6126                           
  6127 ;; *************** function ___flneg *****************
  6128 ;; Defined at:
  6129 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;  f1              4    0[COMRAM] unsigned char 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  4    0[COMRAM] unsigned char 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, status,0
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6143 ;;      Params:         4       0       0       0       0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6146 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6147 ;;Total ram usage:        4 bytes
  6148 ;; Hardware stack levels used: 1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_efgtoa
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text20
  6157  003E70                     __ptext20:
  6158                           	callstack 0
  6159  003E70                     ___flneg:
  6160                           	callstack 25
  6161  003E70  5001               	movf	___flneg@f1^0,w,c
  6162  003E72  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6163  003E74  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6164  003E76  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6165  003E78  B4D8               	btfsc	status,2,c
  6166  003E7A  EF41  F01F         	goto	u3651
  6167  003E7E  EF43  F01F         	goto	u3650
  6168  003E82                     u3651:
  6169  003E82  EF4B  F01F         	goto	l3556
  6170  003E86                     u3650:
  6171  003E86  0E00               	movlw	0
  6172  003E88  1A01               	xorwf	___flneg@f1^0,f,c
  6173  003E8A  0E00               	movlw	0
  6174  003E8C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6175  003E8E  0E00               	movlw	0
  6176  003E90  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6177  003E92  0E80               	movlw	128
  6178  003E94  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6179  003E96                     l3556:
  6180  003E96  C001  F001         	movff	___flneg@f1,?___flneg
  6181  003E9A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6182  003E9E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6183  003EA2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6184  003EA6  0012               	return		;funcret
  6185  003EA8                     __end_of___flneg:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function ___flmul *****************
  6189 ;; Defined at:
  6190 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  b               4    0[COMRAM] unsigned char 
  6193 ;;  a               4    4[COMRAM] unsigned char 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  prod            4   19[COMRAM] struct .
  6196 ;;  grs             4   13[COMRAM] unsigned long 
  6197 ;;  temp            2   23[COMRAM] struct .
  6198 ;;  bexp            1   18[COMRAM] unsigned char 
  6199 ;;  aexp            1   17[COMRAM] unsigned char 
  6200 ;;  sign            1   12[COMRAM] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  4    0[COMRAM] unsigned char 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0, prodl, prodh
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6210 ;;      Params:         8       0       0       0       0       0       0       0       0
  6211 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6212 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6213 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6214 ;;Total ram usage:       25 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_Mostrar_Temperatura
  6220 ;;		_efgtoa
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text21
  6225  001D2A                     __ptext21:
  6226                           	callstack 0
  6227  001D2A                     ___flmul:
  6228                           	callstack 25
  6229  001D2A  5004               	movf	(___flmul@b+3)^0,w,c
  6230  001D2C  0B80               	andlw	128
  6231  001D2E  6E0D               	movwf	___flmul@sign^0,c
  6232  001D30  5004               	movf	(___flmul@b+3)^0,w,c
  6233  001D32  2404               	addwf	(___flmul@b+3)^0,w,c
  6234  001D34  6E13               	movwf	___flmul@bexp^0,c
  6235  001D36  AE03               	btfss	(___flmul@b+2)^0,7,c
  6236  001D38  EFA0  F00E         	goto	u3261
  6237  001D3C  EFA2  F00E         	goto	u3260
  6238  001D40                     u3261:
  6239  001D40  EFA3  F00E         	goto	l3304
  6240  001D44                     u3260:
  6241  001D44  8013               	bsf	___flmul@bexp^0,0,c
  6242  001D46                     l3304:
  6243  001D46  5013               	movf	___flmul@bexp^0,w,c
  6244  001D48  B4D8               	btfsc	status,2,c
  6245  001D4A  EFA9  F00E         	goto	u3271
  6246  001D4E  EFAB  F00E         	goto	u3270
  6247  001D52                     u3271:
  6248  001D52  EFBE  F00E         	goto	l3312
  6249  001D56                     u3270:
  6250  001D56  2813               	incf	___flmul@bexp^0,w,c
  6251  001D58  A4D8               	btfss	status,2,c
  6252  001D5A  EFB1  F00E         	goto	u3281
  6253  001D5E  EFB3  F00E         	goto	u3280
  6254  001D62                     u3281:
  6255  001D62  EFBB  F00E         	goto	l3310
  6256  001D66                     u3280:
  6257  001D66  0E00               	movlw	0
  6258  001D68  6E01               	movwf	___flmul@b^0,c
  6259  001D6A  0E00               	movlw	0
  6260  001D6C  6E02               	movwf	(___flmul@b+1)^0,c
  6261  001D6E  0E00               	movlw	0
  6262  001D70  6E03               	movwf	(___flmul@b+2)^0,c
  6263  001D72  0E00               	movlw	0
  6264  001D74  6E04               	movwf	(___flmul@b+3)^0,c
  6265  001D76                     l3310:
  6266  001D76  8E03               	bsf	(___flmul@b+2)^0,7,c
  6267  001D78  EFC6  F00E         	goto	l3314
  6268  001D7C                     l3312:
  6269  001D7C  0E00               	movlw	0
  6270  001D7E  6E01               	movwf	___flmul@b^0,c
  6271  001D80  0E00               	movlw	0
  6272  001D82  6E02               	movwf	(___flmul@b+1)^0,c
  6273  001D84  0E00               	movlw	0
  6274  001D86  6E03               	movwf	(___flmul@b+2)^0,c
  6275  001D88  0E00               	movlw	0
  6276  001D8A  6E04               	movwf	(___flmul@b+3)^0,c
  6277  001D8C                     l3314:
  6278  001D8C  5008               	movf	(___flmul@a+3)^0,w,c
  6279  001D8E  0B80               	andlw	128
  6280  001D90  1A0D               	xorwf	___flmul@sign^0,f,c
  6281  001D92  5008               	movf	(___flmul@a+3)^0,w,c
  6282  001D94  2408               	addwf	(___flmul@a+3)^0,w,c
  6283  001D96  6E12               	movwf	___flmul@aexp^0,c
  6284  001D98  AE07               	btfss	(___flmul@a+2)^0,7,c
  6285  001D9A  EFD1  F00E         	goto	u3291
  6286  001D9E  EFD3  F00E         	goto	u3290
  6287  001DA2                     u3291:
  6288  001DA2  EFD4  F00E         	goto	l3322
  6289  001DA6                     u3290:
  6290  001DA6  8012               	bsf	___flmul@aexp^0,0,c
  6291  001DA8                     l3322:
  6292  001DA8  5012               	movf	___flmul@aexp^0,w,c
  6293  001DAA  B4D8               	btfsc	status,2,c
  6294  001DAC  EFDA  F00E         	goto	u3301
  6295  001DB0  EFDC  F00E         	goto	u3300
  6296  001DB4                     u3301:
  6297  001DB4  EFEF  F00E         	goto	l3330
  6298  001DB8                     u3300:
  6299  001DB8  2812               	incf	___flmul@aexp^0,w,c
  6300  001DBA  A4D8               	btfss	status,2,c
  6301  001DBC  EFE2  F00E         	goto	u3311
  6302  001DC0  EFE4  F00E         	goto	u3310
  6303  001DC4                     u3311:
  6304  001DC4  EFEC  F00E         	goto	l3328
  6305  001DC8                     u3310:
  6306  001DC8  0E00               	movlw	0
  6307  001DCA  6E05               	movwf	___flmul@a^0,c
  6308  001DCC  0E00               	movlw	0
  6309  001DCE  6E06               	movwf	(___flmul@a+1)^0,c
  6310  001DD0  0E00               	movlw	0
  6311  001DD2  6E07               	movwf	(___flmul@a+2)^0,c
  6312  001DD4  0E00               	movlw	0
  6313  001DD6  6E08               	movwf	(___flmul@a+3)^0,c
  6314  001DD8                     l3328:
  6315  001DD8  8E07               	bsf	(___flmul@a+2)^0,7,c
  6316  001DDA  EFF7  F00E         	goto	l858
  6317  001DDE                     l3330:
  6318  001DDE  0E00               	movlw	0
  6319  001DE0  6E05               	movwf	___flmul@a^0,c
  6320  001DE2  0E00               	movlw	0
  6321  001DE4  6E06               	movwf	(___flmul@a+1)^0,c
  6322  001DE6  0E00               	movlw	0
  6323  001DE8  6E07               	movwf	(___flmul@a+2)^0,c
  6324  001DEA  0E00               	movlw	0
  6325  001DEC  6E08               	movwf	(___flmul@a+3)^0,c
  6326  001DEE                     l858:
  6327  001DEE  5012               	movf	___flmul@aexp^0,w,c
  6328  001DF0  B4D8               	btfsc	status,2,c
  6329  001DF2  EFFD  F00E         	goto	u3321
  6330  001DF6  EFFF  F00E         	goto	u3320
  6331  001DFA                     u3321:
  6332  001DFA  EF07  F00F         	goto	l3334
  6333  001DFE                     u3320:
  6334  001DFE  5013               	movf	___flmul@bexp^0,w,c
  6335  001E00  A4D8               	btfss	status,2,c
  6336  001E02  EF05  F00F         	goto	u3331
  6337  001E06  EF07  F00F         	goto	u3330
  6338  001E0A                     u3331:
  6339  001E0A  EF11  F00F         	goto	l3338
  6340  001E0E                     u3330:
  6341  001E0E                     l3334:
  6342  001E0E  0E00               	movlw	0
  6343  001E10  6E01               	movwf	?___flmul^0,c
  6344  001E12  0E00               	movlw	0
  6345  001E14  6E02               	movwf	(?___flmul+1)^0,c
  6346  001E16  0E00               	movlw	0
  6347  001E18  6E03               	movwf	(?___flmul+2)^0,c
  6348  001E1A  0E00               	movlw	0
  6349  001E1C  6E04               	movwf	(?___flmul+3)^0,c
  6350  001E1E  EFA9  F010         	goto	l862
  6351  001E22                     l3338:
  6352  001E22  5007               	movf	(___flmul@a+2)^0,w,c
  6353  001E24  0201               	mulwf	___flmul@b^0,c
  6354  001E26  CFF3 F018          	movff	prodl,___flmul@temp
  6355  001E2A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6356  001E2E  5018               	movf	___flmul@temp^0,w,c
  6357  001E30  6E0E               	movwf	___flmul@grs^0,c
  6358  001E32  6A0F               	clrf	(___flmul@grs+1)^0,c
  6359  001E34  6A10               	clrf	(___flmul@grs+2)^0,c
  6360  001E36  6A11               	clrf	(___flmul@grs+3)^0,c
  6361  001E38  5019               	movf	(___flmul@temp+1)^0,w,c
  6362  001E3A  6E14               	movwf	___flmul@prod^0,c
  6363  001E3C  6A15               	clrf	(___flmul@prod+1)^0,c
  6364  001E3E  6A16               	clrf	(___flmul@prod+2)^0,c
  6365  001E40  6A17               	clrf	(___flmul@prod+3)^0,c
  6366  001E42  5006               	movf	(___flmul@a+1)^0,w,c
  6367  001E44  0202               	mulwf	(___flmul@b+1)^0,c
  6368  001E46  CFF3 F018          	movff	prodl,___flmul@temp
  6369  001E4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6370  001E4E  5018               	movf	___flmul@temp^0,w,c
  6371  001E50  260E               	addwf	___flmul@grs^0,f,c
  6372  001E52  0E00               	movlw	0
  6373  001E54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6374  001E56  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6375  001E58  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6376  001E5A  5019               	movf	(___flmul@temp+1)^0,w,c
  6377  001E5C  2614               	addwf	___flmul@prod^0,f,c
  6378  001E5E  0E00               	movlw	0
  6379  001E60  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6380  001E62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6381  001E64  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6382  001E66  5005               	movf	___flmul@a^0,w,c
  6383  001E68  0203               	mulwf	(___flmul@b+2)^0,c
  6384  001E6A  CFF3 F018          	movff	prodl,___flmul@temp
  6385  001E6E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6386  001E72  5018               	movf	___flmul@temp^0,w,c
  6387  001E74  260E               	addwf	___flmul@grs^0,f,c
  6388  001E76  0E00               	movlw	0
  6389  001E78  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6390  001E7A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6391  001E7C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6392  001E7E  5019               	movf	(___flmul@temp+1)^0,w,c
  6393  001E80  2614               	addwf	___flmul@prod^0,f,c
  6394  001E82  0E00               	movlw	0
  6395  001E84  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6396  001E86  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6397  001E88  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6398  001E8A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6399  001E8E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6400  001E92  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6401  001E96  6A0E               	clrf	___flmul@grs^0,c
  6402  001E98  5005               	movf	___flmul@a^0,w,c
  6403  001E9A  0202               	mulwf	(___flmul@b+1)^0,c
  6404  001E9C  CFF3 F018          	movff	prodl,___flmul@temp
  6405  001EA0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6406  001EA4  5018               	movf	___flmul@temp^0,w,c
  6407  001EA6  260E               	addwf	___flmul@grs^0,f,c
  6408  001EA8  5019               	movf	(___flmul@temp+1)^0,w,c
  6409  001EAA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6410  001EAC  0E00               	movlw	0
  6411  001EAE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6412  001EB0  0E00               	movlw	0
  6413  001EB2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6414  001EB4  5006               	movf	(___flmul@a+1)^0,w,c
  6415  001EB6  0201               	mulwf	___flmul@b^0,c
  6416  001EB8  CFF3 F018          	movff	prodl,___flmul@temp
  6417  001EBC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6418  001EC0  5018               	movf	___flmul@temp^0,w,c
  6419  001EC2  260E               	addwf	___flmul@grs^0,f,c
  6420  001EC4  5019               	movf	(___flmul@temp+1)^0,w,c
  6421  001EC6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6422  001EC8  0E00               	movlw	0
  6423  001ECA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6424  001ECC  0E00               	movlw	0
  6425  001ECE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6426  001ED0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6427  001ED4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6428  001ED8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6429  001EDC  6A0E               	clrf	___flmul@grs^0,c
  6430  001EDE  5005               	movf	___flmul@a^0,w,c
  6431  001EE0  0201               	mulwf	___flmul@b^0,c
  6432  001EE2  CFF3 F018          	movff	prodl,___flmul@temp
  6433  001EE6  CFF4 F019          	movff	prodh,___flmul@temp+1
  6434  001EEA  5018               	movf	___flmul@temp^0,w,c
  6435  001EEC  260E               	addwf	___flmul@grs^0,f,c
  6436  001EEE  5019               	movf	(___flmul@temp+1)^0,w,c
  6437  001EF0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6438  001EF2  0E00               	movlw	0
  6439  001EF4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6440  001EF6  0E00               	movlw	0
  6441  001EF8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6442  001EFA  5007               	movf	(___flmul@a+2)^0,w,c
  6443  001EFC  0202               	mulwf	(___flmul@b+1)^0,c
  6444  001EFE  CFF3 F018          	movff	prodl,___flmul@temp
  6445  001F02  CFF4 F019          	movff	prodh,___flmul@temp+1
  6446  001F06  5018               	movf	___flmul@temp^0,w,c
  6447  001F08  2614               	addwf	___flmul@prod^0,f,c
  6448  001F0A  5019               	movf	(___flmul@temp+1)^0,w,c
  6449  001F0C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6450  001F0E  0E00               	movlw	0
  6451  001F10  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6452  001F12  0E00               	movlw	0
  6453  001F14  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6454  001F16  5006               	movf	(___flmul@a+1)^0,w,c
  6455  001F18  0203               	mulwf	(___flmul@b+2)^0,c
  6456  001F1A  CFF3 F018          	movff	prodl,___flmul@temp
  6457  001F1E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6458  001F22  5018               	movf	___flmul@temp^0,w,c
  6459  001F24  2614               	addwf	___flmul@prod^0,f,c
  6460  001F26  5019               	movf	(___flmul@temp+1)^0,w,c
  6461  001F28  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6462  001F2A  0E00               	movlw	0
  6463  001F2C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6464  001F2E  0E00               	movlw	0
  6465  001F30  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6466  001F32  5007               	movf	(___flmul@a+2)^0,w,c
  6467  001F34  0203               	mulwf	(___flmul@b+2)^0,c
  6468  001F36  CFF3 F018          	movff	prodl,___flmul@temp
  6469  001F3A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6470  001F3E  5018               	movf	___flmul@temp^0,w,c
  6471  001F40  6E09               	movwf	??___flmul^0,c
  6472  001F42  5019               	movf	(___flmul@temp+1)^0,w,c
  6473  001F44  6E0A               	movwf	(??___flmul+1)^0,c
  6474  001F46  6A0B               	clrf	(??___flmul+2)^0,c
  6475  001F48  6A0C               	clrf	(??___flmul+3)^0,c
  6476  001F4A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6477  001F4E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6478  001F52  C009  F00A         	movff	??___flmul,??___flmul+1
  6479  001F56  6A09               	clrf	??___flmul^0,c
  6480  001F58  5009               	movf	??___flmul^0,w,c
  6481  001F5A  2614               	addwf	___flmul@prod^0,f,c
  6482  001F5C  500A               	movf	(??___flmul+1)^0,w,c
  6483  001F5E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6484  001F60  500B               	movf	(??___flmul+2)^0,w,c
  6485  001F62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6486  001F64  500C               	movf	(??___flmul+3)^0,w,c
  6487  001F66  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6488  001F68  C00E  F009         	movff	___flmul@grs,??___flmul
  6489  001F6C  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6490  001F70  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6491  001F74  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6492  001F78  0E19               	movlw	25
  6493  001F7A  EFC4  F00F         	goto	u3340
  6494  001F7E                     u3345:
  6495  001F7E  90D8               	bcf	status,0,c
  6496  001F80  320C               	rrcf	(??___flmul+3)^0,f,c
  6497  001F82  320B               	rrcf	(??___flmul+2)^0,f,c
  6498  001F84  320A               	rrcf	(??___flmul+1)^0,f,c
  6499  001F86  3209               	rrcf	??___flmul^0,f,c
  6500  001F88                     u3340:
  6501  001F88  2EE8               	decfsz	wreg,f,c
  6502  001F8A  EFBF  F00F         	goto	u3345
  6503  001F8E  5009               	movf	??___flmul^0,w,c
  6504  001F90  2614               	addwf	___flmul@prod^0,f,c
  6505  001F92  500A               	movf	(??___flmul+1)^0,w,c
  6506  001F94  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6507  001F96  500B               	movf	(??___flmul+2)^0,w,c
  6508  001F98  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6509  001F9A  500C               	movf	(??___flmul+3)^0,w,c
  6510  001F9C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6511  001F9E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6512  001FA2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6513  001FA6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6514  001FAA  6A0E               	clrf	___flmul@grs^0,c
  6515  001FAC  5012               	movf	___flmul@aexp^0,w,c
  6516  001FAE  C013  F009         	movff	___flmul@bexp,??___flmul
  6517  001FB2  6A0A               	clrf	(??___flmul+1)^0,c
  6518  001FB4  2609               	addwf	??___flmul^0,f,c
  6519  001FB6  0E00               	movlw	0
  6520  001FB8  220A               	addwfc	(??___flmul+1)^0,f,c
  6521  001FBA  0E82               	movlw	130
  6522  001FBC  2409               	addwf	??___flmul^0,w,c
  6523  001FBE  6E18               	movwf	___flmul@temp^0,c
  6524  001FC0  0EFF               	movlw	255
  6525  001FC2  200A               	addwfc	(??___flmul+1)^0,w,c
  6526  001FC4  6E19               	movwf	(___flmul@temp+1)^0,c
  6527  001FC6  EFFA  F00F         	goto	l3386
  6528  001FCA                     l3380:
  6529  001FCA  90D8               	bcf	status,0,c
  6530  001FCC  3614               	rlcf	___flmul@prod^0,f,c
  6531  001FCE  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6532  001FD0  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6533  001FD2  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6534  001FD4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6535  001FD6  EFEF  F00F         	goto	u3351
  6536  001FDA  EFF1  F00F         	goto	u3350
  6537  001FDE                     u3351:
  6538  001FDE  EFF2  F00F         	goto	l865
  6539  001FE2                     u3350:
  6540  001FE2  8014               	bsf	___flmul@prod^0,0,c
  6541  001FE4                     l865:
  6542  001FE4  90D8               	bcf	status,0,c
  6543  001FE6  360E               	rlcf	___flmul@grs^0,f,c
  6544  001FE8  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6545  001FEA  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6546  001FEC  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6547  001FEE  0618               	decf	___flmul@temp^0,f,c
  6548  001FF0  A0D8               	btfss	status,0,c
  6549  001FF2  0619               	decf	(___flmul@temp+1)^0,f,c
  6550  001FF4                     l3386:
  6551  001FF4  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6552  001FF6  EFFF  F00F         	goto	u3361
  6553  001FFA  EF01  F010         	goto	u3360
  6554  001FFE                     u3361:
  6555  001FFE  EFE5  F00F         	goto	l3380
  6556  002002                     u3360:
  6557  002002  0E00               	movlw	0
  6558  002004  6E12               	movwf	___flmul@aexp^0,c
  6559  002006  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6560  002008  EF08  F010         	goto	u3371
  6561  00200C  EF0A  F010         	goto	u3370
  6562  002010                     u3371:
  6563  002010  EF2E  F010         	goto	l867
  6564  002014                     u3370:
  6565  002014  0EFF               	movlw	255
  6566  002016  140E               	andwf	___flmul@grs^0,w,c
  6567  002018  6E09               	movwf	??___flmul^0,c
  6568  00201A  0EFF               	movlw	255
  6569  00201C  140F               	andwf	(___flmul@grs+1)^0,w,c
  6570  00201E  6E0A               	movwf	(??___flmul+1)^0,c
  6571  002020  0EFF               	movlw	255
  6572  002022  1410               	andwf	(___flmul@grs+2)^0,w,c
  6573  002024  6E0B               	movwf	(??___flmul+2)^0,c
  6574  002026  0E7F               	movlw	127
  6575  002028  1411               	andwf	(___flmul@grs+3)^0,w,c
  6576  00202A  6E0C               	movwf	(??___flmul+3)^0,c
  6577  00202C  5009               	movf	??___flmul^0,w,c
  6578  00202E  100A               	iorwf	(??___flmul+1)^0,w,c
  6579  002030  100B               	iorwf	(??___flmul+2)^0,w,c
  6580  002032  100C               	iorwf	(??___flmul+3)^0,w,c
  6581  002034  B4D8               	btfsc	status,2,c
  6582  002036  EF1F  F010         	goto	u3381
  6583  00203A  EF21  F010         	goto	u3380
  6584  00203E                     u3381:
  6585  00203E  EF25  F010         	goto	l868
  6586  002042                     u3380:
  6587  002042                     l3394:
  6588  002042  0E01               	movlw	1
  6589  002044  6E12               	movwf	___flmul@aexp^0,c
  6590  002046  EF2E  F010         	goto	l867
  6591  00204A                     l868:
  6592  00204A  A014               	btfss	___flmul@prod^0,0,c
  6593  00204C  EF2A  F010         	goto	u3391
  6594  002050  EF2C  F010         	goto	u3390
  6595  002054                     u3391:
  6596  002054  EF2E  F010         	goto	l867
  6597  002058                     u3390:
  6598  002058  EF21  F010         	goto	l3394
  6599  00205C                     l867:
  6600  00205C  5012               	movf	___flmul@aexp^0,w,c
  6601  00205E  B4D8               	btfsc	status,2,c
  6602  002060  EF34  F010         	goto	u3401
  6603  002064  EF36  F010         	goto	u3400
  6604  002068                     u3401:
  6605  002068  EF5A  F010         	goto	l3406
  6606  00206C                     u3400:
  6607  00206C  0E01               	movlw	1
  6608  00206E  2614               	addwf	___flmul@prod^0,f,c
  6609  002070  0E00               	movlw	0
  6610  002072  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6611  002074  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6612  002076  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6613  002078  A017               	btfss	(___flmul@prod+3)^0,0,c
  6614  00207A  EF41  F010         	goto	u3411
  6615  00207E  EF43  F010         	goto	u3410
  6616  002082                     u3411:
  6617  002082  EF5A  F010         	goto	l3406
  6618  002086                     u3410:
  6619  002086  C014  F009         	movff	___flmul@prod,??___flmul
  6620  00208A  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6621  00208E  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6622  002092  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6623  002096  340C               	rlcf	(??___flmul+3)^0,w,c
  6624  002098  320C               	rrcf	(??___flmul+3)^0,f,c
  6625  00209A  320B               	rrcf	(??___flmul+2)^0,f,c
  6626  00209C  320A               	rrcf	(??___flmul+1)^0,f,c
  6627  00209E  3209               	rrcf	??___flmul^0,f,c
  6628  0020A0  C009  F014         	movff	??___flmul,___flmul@prod
  6629  0020A4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6630  0020A8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6631  0020AC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6632  0020B0  4A18               	infsnz	___flmul@temp^0,f,c
  6633  0020B2  2A19               	incf	(___flmul@temp+1)^0,f,c
  6634  0020B4                     l3406:
  6635  0020B4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6636  0020B6  EF65  F010         	goto	u3421
  6637  0020BA  5019               	movf	(___flmul@temp+1)^0,w,c
  6638  0020BC  E108               	bnz	u3420
  6639  0020BE  2818               	incf	___flmul@temp^0,w,c
  6640  0020C0  A0D8               	btfss	status,0,c
  6641  0020C2  EF65  F010         	goto	u3421
  6642  0020C6  EF67  F010         	goto	u3420
  6643  0020CA                     u3421:
  6644  0020CA  EF71  F010         	goto	l3410
  6645  0020CE                     u3420:
  6646  0020CE  0E00               	movlw	0
  6647  0020D0  6E14               	movwf	___flmul@prod^0,c
  6648  0020D2  0E00               	movlw	0
  6649  0020D4  6E15               	movwf	(___flmul@prod+1)^0,c
  6650  0020D6  0E80               	movlw	128
  6651  0020D8  6E16               	movwf	(___flmul@prod+2)^0,c
  6652  0020DA  0E7F               	movlw	127
  6653  0020DC  6E17               	movwf	(___flmul@prod+3)^0,c
  6654  0020DE  EF9F  F010         	goto	l3422
  6655  0020E2                     l3410:
  6656  0020E2  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6657  0020E4  EF7E  F010         	goto	u3430
  6658  0020E8  5019               	movf	(___flmul@temp+1)^0,w,c
  6659  0020EA  E106               	bnz	u3431
  6660  0020EC  0418               	decf	___flmul@temp^0,w,c
  6661  0020EE  B0D8               	btfsc	status,0,c
  6662  0020F0  EF7C  F010         	goto	u3431
  6663  0020F4  EF7E  F010         	goto	u3430
  6664  0020F8                     u3431:
  6665  0020F8  EF8A  F010         	goto	l875
  6666  0020FC                     u3430:
  6667  0020FC  0E00               	movlw	0
  6668  0020FE  6E14               	movwf	___flmul@prod^0,c
  6669  002100  0E00               	movlw	0
  6670  002102  6E15               	movwf	(___flmul@prod+1)^0,c
  6671  002104  0E00               	movlw	0
  6672  002106  6E16               	movwf	(___flmul@prod+2)^0,c
  6673  002108  0E00               	movlw	0
  6674  00210A  6E17               	movwf	(___flmul@prod+3)^0,c
  6675  00210C  0E00               	movlw	0
  6676  00210E  6E0D               	movwf	___flmul@sign^0,c
  6677  002110  EF9F  F010         	goto	l3422
  6678  002114                     l875:
  6679  002114  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6680  002118  0EFF               	movlw	255
  6681  00211A  1614               	andwf	___flmul@prod^0,f,c
  6682  00211C  0EFF               	movlw	255
  6683  00211E  1615               	andwf	(___flmul@prod+1)^0,f,c
  6684  002120  0E7F               	movlw	127
  6685  002122  1616               	andwf	(___flmul@prod+2)^0,f,c
  6686  002124  0E00               	movlw	0
  6687  002126  1617               	andwf	(___flmul@prod+3)^0,f,c
  6688  002128  A013               	btfss	___flmul@bexp^0,0,c
  6689  00212A  EF99  F010         	goto	u3441
  6690  00212E  EF9B  F010         	goto	u3440
  6691  002132                     u3441:
  6692  002132  EF9C  F010         	goto	l3420
  6693  002136                     u3440:
  6694  002136  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6695  002138                     l3420:
  6696  002138  90D8               	bcf	status,0,c
  6697  00213A  3013               	rrcf	___flmul@bexp^0,w,c
  6698  00213C  6E17               	movwf	(___flmul@prod+3)^0,c
  6699  00213E                     l3422:
  6700  00213E  500D               	movf	___flmul@sign^0,w,c
  6701  002140  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6702  002142  C014  F001         	movff	___flmul@prod,?___flmul
  6703  002146  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6704  00214A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6705  00214E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6706  002152                     l862:
  6707  002152  0012               	return		;funcret
  6708  002154                     __end_of___flmul:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function ___flge *****************
  6712 ;; Defined at:
  6713 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  ff1             4   25[COMRAM] unsigned char 
  6716 ;;  ff2             4   29[COMRAM] unsigned char 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;		None               void
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6728 ;;      Params:         8       0       0       0       0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6730 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6731 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6732 ;;Total ram usage:       12 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_Mostrar_Temperatura
  6738 ;;		_efgtoa
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text22
  6743  002FDE                     __ptext22:
  6744                           	callstack 0
  6745  002FDE                     ___flge:
  6746                           	callstack 25
  6747  002FDE  0E00               	movlw	0
  6748  002FE0  141A               	andwf	___flge@ff1^0,w,c
  6749  002FE2  6E22               	movwf	??___flge^0,c
  6750  002FE4  0E00               	movlw	0
  6751  002FE6  141B               	andwf	(___flge@ff1+1)^0,w,c
  6752  002FE8  6E23               	movwf	(??___flge+1)^0,c
  6753  002FEA  0E80               	movlw	128
  6754  002FEC  141C               	andwf	(___flge@ff1+2)^0,w,c
  6755  002FEE  6E24               	movwf	(??___flge+2)^0,c
  6756  002FF0  0E7F               	movlw	127
  6757  002FF2  141D               	andwf	(___flge@ff1+3)^0,w,c
  6758  002FF4  6E25               	movwf	(??___flge+3)^0,c
  6759  002FF6  5022               	movf	??___flge^0,w,c
  6760  002FF8  1023               	iorwf	(??___flge+1)^0,w,c
  6761  002FFA  1024               	iorwf	(??___flge+2)^0,w,c
  6762  002FFC  1025               	iorwf	(??___flge+3)^0,w,c
  6763  002FFE  A4D8               	btfss	status,2,c
  6764  003000  EF04  F018         	goto	u3601
  6765  003004  EF06  F018         	goto	u3600
  6766  003008                     u3601:
  6767  003008  EF0E  F018         	goto	l3534
  6768  00300C                     u3600:
  6769  00300C  0E00               	movlw	0
  6770  00300E  6E1A               	movwf	___flge@ff1^0,c
  6771  003010  0E00               	movlw	0
  6772  003012  6E1B               	movwf	(___flge@ff1+1)^0,c
  6773  003014  0E00               	movlw	0
  6774  003016  6E1C               	movwf	(___flge@ff1+2)^0,c
  6775  003018  0E00               	movlw	0
  6776  00301A  6E1D               	movwf	(___flge@ff1+3)^0,c
  6777  00301C                     l3534:
  6778  00301C  0E00               	movlw	0
  6779  00301E  141E               	andwf	___flge@ff2^0,w,c
  6780  003020  6E22               	movwf	??___flge^0,c
  6781  003022  0E00               	movlw	0
  6782  003024  141F               	andwf	(___flge@ff2+1)^0,w,c
  6783  003026  6E23               	movwf	(??___flge+1)^0,c
  6784  003028  0E80               	movlw	128
  6785  00302A  1420               	andwf	(___flge@ff2+2)^0,w,c
  6786  00302C  6E24               	movwf	(??___flge+2)^0,c
  6787  00302E  0E7F               	movlw	127
  6788  003030  1421               	andwf	(___flge@ff2+3)^0,w,c
  6789  003032  6E25               	movwf	(??___flge+3)^0,c
  6790  003034  5022               	movf	??___flge^0,w,c
  6791  003036  1023               	iorwf	(??___flge+1)^0,w,c
  6792  003038  1024               	iorwf	(??___flge+2)^0,w,c
  6793  00303A  1025               	iorwf	(??___flge+3)^0,w,c
  6794  00303C  A4D8               	btfss	status,2,c
  6795  00303E  EF23  F018         	goto	u3611
  6796  003042  EF25  F018         	goto	u3610
  6797  003046                     u3611:
  6798  003046  EF2D  F018         	goto	l3538
  6799  00304A                     u3610:
  6800  00304A  0E00               	movlw	0
  6801  00304C  6E1E               	movwf	___flge@ff2^0,c
  6802  00304E  0E00               	movlw	0
  6803  003050  6E1F               	movwf	(___flge@ff2+1)^0,c
  6804  003052  0E00               	movlw	0
  6805  003054  6E20               	movwf	(___flge@ff2+2)^0,c
  6806  003056  0E00               	movlw	0
  6807  003058  6E21               	movwf	(___flge@ff2+3)^0,c
  6808  00305A                     l3538:
  6809  00305A  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6810  00305C  EF32  F018         	goto	u3621
  6811  003060  EF34  F018         	goto	u3620
  6812  003064                     u3621:
  6813  003064  EF3D  F018         	goto	l3542
  6814  003068                     u3620:
  6815  003068  6C1A               	negf	___flge@ff1^0,c
  6816  00306A  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6817  00306C  B0D8               	btfsc	status,0,c
  6818  00306E  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6819  003070  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6820  003072  B0D8               	btfsc	status,0,c
  6821  003074  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6822  003076  0E80               	movlw	128
  6823  003078  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6824  00307A                     l3542:
  6825  00307A  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6826  00307C  EF42  F018         	goto	u3631
  6827  003080  EF44  F018         	goto	u3630
  6828  003084                     u3631:
  6829  003084  EF4D  F018         	goto	l509
  6830  003088                     u3630:
  6831  003088  6C1E               	negf	___flge@ff2^0,c
  6832  00308A  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6833  00308C  B0D8               	btfsc	status,0,c
  6834  00308E  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6835  003090  1E20               	comf	(___flge@ff2+2)^0,f,c
  6836  003092  B0D8               	btfsc	status,0,c
  6837  003094  2A20               	incf	(___flge@ff2+2)^0,f,c
  6838  003096  0E80               	movlw	128
  6839  003098  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6840  00309A                     l509:
  6841  00309A  0E00               	movlw	0
  6842  00309C  1A1A               	xorwf	___flge@ff1^0,f,c
  6843  00309E  0E00               	movlw	0
  6844  0030A0  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6845  0030A2  0E00               	movlw	0
  6846  0030A4  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6847  0030A6  0E80               	movlw	128
  6848  0030A8  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6849  0030AA  0E00               	movlw	0
  6850  0030AC  1A1E               	xorwf	___flge@ff2^0,f,c
  6851  0030AE  0E00               	movlw	0
  6852  0030B0  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6853  0030B2  0E00               	movlw	0
  6854  0030B4  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6855  0030B6  0E80               	movlw	128
  6856  0030B8  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6857  0030BA  501E               	movf	___flge@ff2^0,w,c
  6858  0030BC  5C1A               	subwf	___flge@ff1^0,w,c
  6859  0030BE  501F               	movf	(___flge@ff2+1)^0,w,c
  6860  0030C0  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6861  0030C2  5020               	movf	(___flge@ff2+2)^0,w,c
  6862  0030C4  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6863  0030C6  5021               	movf	(___flge@ff2+3)^0,w,c
  6864  0030C8  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6865  0030CA  B0D8               	btfsc	status,0,c
  6866  0030CC  EF6A  F018         	goto	u3641
  6867  0030D0  EF6C  F018         	goto	u3640
  6868  0030D4                     u3641:
  6869  0030D4  EF6F  F018         	goto	l3548
  6870  0030D8                     u3640:
  6871  0030D8  90D8               	bcf	status,0,c
  6872  0030DA  EF70  F018         	goto	l514
  6873  0030DE                     l3548:
  6874  0030DE  80D8               	bsf	status,0,c
  6875  0030E0                     l514:
  6876  0030E0  0012               	return		;funcret
  6877  0030E2                     __end_of___flge:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function ___fleq *****************
  6881 ;; Defined at:
  6882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  ff1             4    0[COMRAM] unsigned char 
  6885 ;;  ff2             4    4[COMRAM] unsigned char 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;		None               void
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6897 ;;      Params:         8       0       0       0       0       0       0       0       0
  6898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6899 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6900 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6901 ;;Total ram usage:       12 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_efgtoa
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text23
  6911  003740                     __ptext23:
  6912                           	callstack 0
  6913  003740                     ___fleq:
  6914                           	callstack 25
  6915  003740  0E00               	movlw	0
  6916  003742  1401               	andwf	___fleq@ff1^0,w,c
  6917  003744  6E09               	movwf	??___fleq^0,c
  6918  003746  0E00               	movlw	0
  6919  003748  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6920  00374A  6E0A               	movwf	(??___fleq+1)^0,c
  6921  00374C  0E80               	movlw	128
  6922  00374E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6923  003750  6E0B               	movwf	(??___fleq+2)^0,c
  6924  003752  0E7F               	movlw	127
  6925  003754  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6926  003756  6E0C               	movwf	(??___fleq+3)^0,c
  6927  003758  5009               	movf	??___fleq^0,w,c
  6928  00375A  100A               	iorwf	(??___fleq+1)^0,w,c
  6929  00375C  100B               	iorwf	(??___fleq+2)^0,w,c
  6930  00375E  100C               	iorwf	(??___fleq+3)^0,w,c
  6931  003760  A4D8               	btfss	status,2,c
  6932  003762  EFB5  F01B         	goto	u3571
  6933  003766  EFB7  F01B         	goto	u3570
  6934  00376A                     u3571:
  6935  00376A  EFBF  F01B         	goto	l3518
  6936  00376E                     u3570:
  6937  00376E  0E00               	movlw	0
  6938  003770  6E01               	movwf	___fleq@ff1^0,c
  6939  003772  0E00               	movlw	0
  6940  003774  6E02               	movwf	(___fleq@ff1+1)^0,c
  6941  003776  0E00               	movlw	0
  6942  003778  6E03               	movwf	(___fleq@ff1+2)^0,c
  6943  00377A  0E00               	movlw	0
  6944  00377C  6E04               	movwf	(___fleq@ff1+3)^0,c
  6945  00377E                     l3518:
  6946  00377E  0E00               	movlw	0
  6947  003780  1405               	andwf	___fleq@ff2^0,w,c
  6948  003782  6E09               	movwf	??___fleq^0,c
  6949  003784  0E00               	movlw	0
  6950  003786  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6951  003788  6E0A               	movwf	(??___fleq+1)^0,c
  6952  00378A  0E80               	movlw	128
  6953  00378C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6954  00378E  6E0B               	movwf	(??___fleq+2)^0,c
  6955  003790  0E7F               	movlw	127
  6956  003792  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6957  003794  6E0C               	movwf	(??___fleq+3)^0,c
  6958  003796  5009               	movf	??___fleq^0,w,c
  6959  003798  100A               	iorwf	(??___fleq+1)^0,w,c
  6960  00379A  100B               	iorwf	(??___fleq+2)^0,w,c
  6961  00379C  100C               	iorwf	(??___fleq+3)^0,w,c
  6962  00379E  A4D8               	btfss	status,2,c
  6963  0037A0  EFD4  F01B         	goto	u3581
  6964  0037A4  EFD6  F01B         	goto	u3580
  6965  0037A8                     u3581:
  6966  0037A8  EFDE  F01B         	goto	l3522
  6967  0037AC                     u3580:
  6968  0037AC  0E00               	movlw	0
  6969  0037AE  6E05               	movwf	___fleq@ff2^0,c
  6970  0037B0  0E00               	movlw	0
  6971  0037B2  6E06               	movwf	(___fleq@ff2+1)^0,c
  6972  0037B4  0E00               	movlw	0
  6973  0037B6  6E07               	movwf	(___fleq@ff2+2)^0,c
  6974  0037B8  0E00               	movlw	0
  6975  0037BA  6E08               	movwf	(___fleq@ff2+3)^0,c
  6976  0037BC                     l3522:
  6977  0037BC  5005               	movf	___fleq@ff2^0,w,c
  6978  0037BE  1801               	xorwf	___fleq@ff1^0,w,c
  6979  0037C0  E10F               	bnz	u3590
  6980  0037C2  5006               	movf	(___fleq@ff2+1)^0,w,c
  6981  0037C4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6982  0037C6  E10C               	bnz	u3590
  6983  0037C8  5007               	movf	(___fleq@ff2+2)^0,w,c
  6984  0037CA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6985  0037CC  E109               	bnz	u3590
  6986  0037CE  5008               	movf	(___fleq@ff2+3)^0,w,c
  6987  0037D0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6988  0037D2  B4D8               	btfsc	status,2,c
  6989  0037D4  EFEE  F01B         	goto	u3591
  6990  0037D8  EFF0  F01B         	goto	u3590
  6991  0037DC                     u3591:
  6992  0037DC  EFF3  F01B         	goto	l3526
  6993  0037E0                     u3590:
  6994  0037E0  90D8               	bcf	status,0,c
  6995  0037E2  EFF4  F01B         	goto	l503
  6996  0037E6                     l3526:
  6997  0037E6  80D8               	bsf	status,0,c
  6998  0037E8                     l503:
  6999  0037E8  0012               	return		;funcret
  7000  0037EA                     __end_of___fleq:
  7001                           	callstack 0
  7002                           
  7003 ;; *************** function ___fldiv *****************
  7004 ;; Defined at:
  7005 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  b               4   25[COMRAM] unsigned char 
  7008 ;;  a               4   29[COMRAM] unsigned char 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  grs             4   44[COMRAM] unsigned long 
  7011 ;;  rem             4   37[COMRAM] unsigned long 
  7012 ;;  new_exp         2   42[COMRAM] short 
  7013 ;;  aexp            1   49[COMRAM] unsigned char 
  7014 ;;  bexp            1   48[COMRAM] unsigned char 
  7015 ;;  sign            1   41[COMRAM] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  4   25[COMRAM] unsigned char 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7025 ;;      Params:         8       0       0       0       0       0       0       0       0
  7026 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7027 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7028 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7029 ;;Total ram usage:       25 bytes
  7030 ;; Hardware stack levels used: 1
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_Mostrar_Temperatura
  7035 ;;		_efgtoa
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text24
  7040  002154                     __ptext24:
  7041                           	callstack 0
  7042  002154                     ___fldiv:
  7043                           	callstack 25
  7044  002154  501D               	movf	(___fldiv@b+3)^0,w,c
  7045  002156  0B80               	andlw	128
  7046  002158  6E2A               	movwf	___fldiv@sign^0,c
  7047  00215A  501D               	movf	(___fldiv@b+3)^0,w,c
  7048  00215C  241D               	addwf	(___fldiv@b+3)^0,w,c
  7049  00215E  6E31               	movwf	___fldiv@bexp^0,c
  7050  002160  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  7051  002162  EFB5  F010         	goto	u3031
  7052  002166  EFB7  F010         	goto	u3030
  7053  00216A                     u3031:
  7054  00216A  EFB8  F010         	goto	l3166
  7055  00216E                     u3030:
  7056  00216E  8031               	bsf	___fldiv@bexp^0,0,c
  7057  002170                     l3166:
  7058  002170  5031               	movf	___fldiv@bexp^0,w,c
  7059  002172  B4D8               	btfsc	status,2,c
  7060  002174  EFBE  F010         	goto	u3041
  7061  002178  EFC0  F010         	goto	u3040
  7062  00217C                     u3041:
  7063  00217C  EFD5  F010         	goto	l3176
  7064  002180                     u3040:
  7065  002180  2831               	incf	___fldiv@bexp^0,w,c
  7066  002182  A4D8               	btfss	status,2,c
  7067  002184  EFC6  F010         	goto	u3051
  7068  002188  EFC8  F010         	goto	u3050
  7069  00218C                     u3051:
  7070  00218C  EFD0  F010         	goto	l3172
  7071  002190                     u3050:
  7072  002190  0E00               	movlw	0
  7073  002192  6E1A               	movwf	___fldiv@b^0,c
  7074  002194  0E00               	movlw	0
  7075  002196  6E1B               	movwf	(___fldiv@b+1)^0,c
  7076  002198  0E00               	movlw	0
  7077  00219A  6E1C               	movwf	(___fldiv@b+2)^0,c
  7078  00219C  0E00               	movlw	0
  7079  00219E  6E1D               	movwf	(___fldiv@b+3)^0,c
  7080  0021A0                     l3172:
  7081  0021A0  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  7082  0021A2  0E00               	movlw	0
  7083  0021A4  6E1D               	movwf	(___fldiv@b+3)^0,c
  7084  0021A6  EFDD  F010         	goto	l3178
  7085  0021AA                     l3176:
  7086  0021AA  0E00               	movlw	0
  7087  0021AC  6E1A               	movwf	___fldiv@b^0,c
  7088  0021AE  0E00               	movlw	0
  7089  0021B0  6E1B               	movwf	(___fldiv@b+1)^0,c
  7090  0021B2  0E00               	movlw	0
  7091  0021B4  6E1C               	movwf	(___fldiv@b+2)^0,c
  7092  0021B6  0E00               	movlw	0
  7093  0021B8  6E1D               	movwf	(___fldiv@b+3)^0,c
  7094  0021BA                     l3178:
  7095  0021BA  5021               	movf	(___fldiv@a+3)^0,w,c
  7096  0021BC  0B80               	andlw	128
  7097  0021BE  1A2A               	xorwf	___fldiv@sign^0,f,c
  7098  0021C0  5021               	movf	(___fldiv@a+3)^0,w,c
  7099  0021C2  2421               	addwf	(___fldiv@a+3)^0,w,c
  7100  0021C4  6E32               	movwf	___fldiv@aexp^0,c
  7101  0021C6  AE20               	btfss	(___fldiv@a+2)^0,7,c
  7102  0021C8  EFE8  F010         	goto	u3061
  7103  0021CC  EFEA  F010         	goto	u3060
  7104  0021D0                     u3061:
  7105  0021D0  EFEB  F010         	goto	l3186
  7106  0021D4                     u3060:
  7107  0021D4  8032               	bsf	___fldiv@aexp^0,0,c
  7108  0021D6                     l3186:
  7109  0021D6  5032               	movf	___fldiv@aexp^0,w,c
  7110  0021D8  B4D8               	btfsc	status,2,c
  7111  0021DA  EFF1  F010         	goto	u3071
  7112  0021DE  EFF3  F010         	goto	u3070
  7113  0021E2                     u3071:
  7114  0021E2  EF08  F011         	goto	l3196
  7115  0021E6                     u3070:
  7116  0021E6  2832               	incf	___fldiv@aexp^0,w,c
  7117  0021E8  A4D8               	btfss	status,2,c
  7118  0021EA  EFF9  F010         	goto	u3081
  7119  0021EE  EFFB  F010         	goto	u3080
  7120  0021F2                     u3081:
  7121  0021F2  EF03  F011         	goto	l3192
  7122  0021F6                     u3080:
  7123  0021F6  0E00               	movlw	0
  7124  0021F8  6E1E               	movwf	___fldiv@a^0,c
  7125  0021FA  0E00               	movlw	0
  7126  0021FC  6E1F               	movwf	(___fldiv@a+1)^0,c
  7127  0021FE  0E00               	movlw	0
  7128  002200  6E20               	movwf	(___fldiv@a+2)^0,c
  7129  002202  0E00               	movlw	0
  7130  002204  6E21               	movwf	(___fldiv@a+3)^0,c
  7131  002206                     l3192:
  7132  002206  8E20               	bsf	(___fldiv@a+2)^0,7,c
  7133  002208  0E00               	movlw	0
  7134  00220A  6E21               	movwf	(___fldiv@a+3)^0,c
  7135  00220C  EF10  F011         	goto	l3198
  7136  002210                     l3196:
  7137  002210  0E00               	movlw	0
  7138  002212  6E1E               	movwf	___fldiv@a^0,c
  7139  002214  0E00               	movlw	0
  7140  002216  6E1F               	movwf	(___fldiv@a+1)^0,c
  7141  002218  0E00               	movlw	0
  7142  00221A  6E20               	movwf	(___fldiv@a+2)^0,c
  7143  00221C  0E00               	movlw	0
  7144  00221E  6E21               	movwf	(___fldiv@a+3)^0,c
  7145  002220                     l3198:
  7146  002220  501E               	movf	___fldiv@a^0,w,c
  7147  002222  101F               	iorwf	(___fldiv@a+1)^0,w,c
  7148  002224  1020               	iorwf	(___fldiv@a+2)^0,w,c
  7149  002226  1021               	iorwf	(___fldiv@a+3)^0,w,c
  7150  002228  A4D8               	btfss	status,2,c
  7151  00222A  EF19  F011         	goto	u3091
  7152  00222E  EF1B  F011         	goto	u3090
  7153  002232                     u3091:
  7154  002232  EF33  F011         	goto	l3210
  7155  002236                     u3090:
  7156  002236  0E00               	movlw	0
  7157  002238  6E1A               	movwf	___fldiv@b^0,c
  7158  00223A  0E00               	movlw	0
  7159  00223C  6E1B               	movwf	(___fldiv@b+1)^0,c
  7160  00223E  0E00               	movlw	0
  7161  002240  6E1C               	movwf	(___fldiv@b+2)^0,c
  7162  002242  0E00               	movlw	0
  7163  002244  6E1D               	movwf	(___fldiv@b+3)^0,c
  7164  002246  0E80               	movlw	128
  7165  002248  121C               	iorwf	(___fldiv@b+2)^0,f,c
  7166  00224A  0E7F               	movlw	127
  7167  00224C  121D               	iorwf	(___fldiv@b+3)^0,f,c
  7168  00224E                     l3204:
  7169  00224E  502A               	movf	___fldiv@sign^0,w,c
  7170  002250  121D               	iorwf	(___fldiv@b+3)^0,f,c
  7171  002252  C01A  F01A         	movff	___fldiv@b,?___fldiv
  7172  002256  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  7173  00225A  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  7174  00225E  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  7175  002262  EF76  F012         	goto	l826
  7176  002266                     l3210:
  7177  002266  5031               	movf	___fldiv@bexp^0,w,c
  7178  002268  A4D8               	btfss	status,2,c
  7179  00226A  EF39  F011         	goto	u3101
  7180  00226E  EF3B  F011         	goto	u3100
  7181  002272                     u3101:
  7182  002272  EF45  F011         	goto	l3218
  7183  002276                     u3100:
  7184  002276  0E00               	movlw	0
  7185  002278  6E1A               	movwf	?___fldiv^0,c
  7186  00227A  0E00               	movlw	0
  7187  00227C  6E1B               	movwf	(?___fldiv+1)^0,c
  7188  00227E  0E00               	movlw	0
  7189  002280  6E1C               	movwf	(?___fldiv+2)^0,c
  7190  002282  0E00               	movlw	0
  7191  002284  6E1D               	movwf	(?___fldiv+3)^0,c
  7192  002286  EF76  F012         	goto	l826
  7193  00228A                     l3218:
  7194  00228A  5032               	movf	___fldiv@aexp^0,w,c
  7195  00228C  C031  F022         	movff	___fldiv@bexp,??___fldiv
  7196  002290  6A23               	clrf	(??___fldiv+1)^0,c
  7197  002292  5E22               	subwf	??___fldiv^0,f,c
  7198  002294  0E00               	movlw	0
  7199  002296  5A23               	subwfb	(??___fldiv+1)^0,f,c
  7200  002298  0E7F               	movlw	127
  7201  00229A  2422               	addwf	??___fldiv^0,w,c
  7202  00229C  6E2B               	movwf	___fldiv@new_exp^0,c
  7203  00229E  0E00               	movlw	0
  7204  0022A0  2023               	addwfc	(??___fldiv+1)^0,w,c
  7205  0022A2  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  7206  0022A4  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  7207  0022A8  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  7208  0022AC  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  7209  0022B0  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  7210  0022B4  0E00               	movlw	0
  7211  0022B6  6E1A               	movwf	___fldiv@b^0,c
  7212  0022B8  0E00               	movlw	0
  7213  0022BA  6E1B               	movwf	(___fldiv@b+1)^0,c
  7214  0022BC  0E00               	movlw	0
  7215  0022BE  6E1C               	movwf	(___fldiv@b+2)^0,c
  7216  0022C0  0E00               	movlw	0
  7217  0022C2  6E1D               	movwf	(___fldiv@b+3)^0,c
  7218  0022C4  0E00               	movlw	0
  7219  0022C6  6E2D               	movwf	___fldiv@grs^0,c
  7220  0022C8  0E00               	movlw	0
  7221  0022CA  6E2E               	movwf	(___fldiv@grs+1)^0,c
  7222  0022CC  0E00               	movlw	0
  7223  0022CE  6E2F               	movwf	(___fldiv@grs+2)^0,c
  7224  0022D0  0E00               	movlw	0
  7225  0022D2  6E30               	movwf	(___fldiv@grs+3)^0,c
  7226  0022D4  0E00               	movlw	0
  7227  0022D6  6E32               	movwf	___fldiv@aexp^0,c
  7228  0022D8  EFA6  F011         	goto	l828
  7229  0022DC                     l3228:
  7230  0022DC  5032               	movf	___fldiv@aexp^0,w,c
  7231  0022DE  B4D8               	btfsc	status,2,c
  7232  0022E0  EF74  F011         	goto	u3111
  7233  0022E4  EF76  F011         	goto	u3110
  7234  0022E8                     u3111:
  7235  0022E8  EF8D  F011         	goto	l3236
  7236  0022EC                     u3110:
  7237  0022EC  90D8               	bcf	status,0,c
  7238  0022EE  3626               	rlcf	___fldiv@rem^0,f,c
  7239  0022F0  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  7240  0022F2  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  7241  0022F4  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  7242  0022F6  90D8               	bcf	status,0,c
  7243  0022F8  361A               	rlcf	___fldiv@b^0,f,c
  7244  0022FA  361B               	rlcf	(___fldiv@b+1)^0,f,c
  7245  0022FC  361C               	rlcf	(___fldiv@b+2)^0,f,c
  7246  0022FE  361D               	rlcf	(___fldiv@b+3)^0,f,c
  7247  002300  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  7248  002302  EF85  F011         	goto	u3121
  7249  002306  EF87  F011         	goto	u3120
  7250  00230A                     u3121:
  7251  00230A  EF88  F011         	goto	l831
  7252  00230E                     u3120:
  7253  00230E  801A               	bsf	___fldiv@b^0,0,c
  7254  002310                     l831:
  7255  002310  90D8               	bcf	status,0,c
  7256  002312  362D               	rlcf	___fldiv@grs^0,f,c
  7257  002314  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  7258  002316  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  7259  002318  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  7260  00231A                     l3236:
  7261  00231A  501E               	movf	___fldiv@a^0,w,c
  7262  00231C  5C26               	subwf	___fldiv@rem^0,w,c
  7263  00231E  501F               	movf	(___fldiv@a+1)^0,w,c
  7264  002320  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  7265  002322  5020               	movf	(___fldiv@a+2)^0,w,c
  7266  002324  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  7267  002326  5021               	movf	(___fldiv@a+3)^0,w,c
  7268  002328  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  7269  00232A  A0D8               	btfss	status,0,c
  7270  00232C  EF9A  F011         	goto	u3131
  7271  002330  EF9C  F011         	goto	u3130
  7272  002334                     u3131:
  7273  002334  EFA5  F011         	goto	l3242
  7274  002338                     u3130:
  7275  002338  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  7276  00233A  501E               	movf	___fldiv@a^0,w,c
  7277  00233C  5E26               	subwf	___fldiv@rem^0,f,c
  7278  00233E  501F               	movf	(___fldiv@a+1)^0,w,c
  7279  002340  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  7280  002342  5020               	movf	(___fldiv@a+2)^0,w,c
  7281  002344  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  7282  002346  5021               	movf	(___fldiv@a+3)^0,w,c
  7283  002348  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  7284  00234A                     l3242:
  7285  00234A  2A32               	incf	___fldiv@aexp^0,f,c
  7286  00234C                     l828:
  7287  00234C  0E19               	movlw	25
  7288  00234E  6432               	cpfsgt	___fldiv@aexp^0,c
  7289  002350  EFAC  F011         	goto	u3141
  7290  002354  EFAE  F011         	goto	u3140
  7291  002358                     u3141:
  7292  002358  EF6E  F011         	goto	l3228
  7293  00235C                     u3140:
  7294  00235C  5026               	movf	___fldiv@rem^0,w,c
  7295  00235E  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  7296  002360  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  7297  002362  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  7298  002364  B4D8               	btfsc	status,2,c
  7299  002366  EFB7  F011         	goto	u3151
  7300  00236A  EFB9  F011         	goto	u3150
  7301  00236E                     u3151:
  7302  00236E  EFD1  F011         	goto	l3254
  7303  002372                     u3150:
  7304  002372  802D               	bsf	___fldiv@grs^0,0,c
  7305  002374  EFD1  F011         	goto	l3254
  7306  002378                     l3248:
  7307  002378  90D8               	bcf	status,0,c
  7308  00237A  361A               	rlcf	___fldiv@b^0,f,c
  7309  00237C  361B               	rlcf	(___fldiv@b+1)^0,f,c
  7310  00237E  361C               	rlcf	(___fldiv@b+2)^0,f,c
  7311  002380  361D               	rlcf	(___fldiv@b+3)^0,f,c
  7312  002382  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  7313  002384  EFC6  F011         	goto	u3161
  7314  002388  EFC8  F011         	goto	u3160
  7315  00238C                     u3161:
  7316  00238C  EFC9  F011         	goto	l837
  7317  002390                     u3160:
  7318  002390  801A               	bsf	___fldiv@b^0,0,c
  7319  002392                     l837:
  7320  002392  90D8               	bcf	status,0,c
  7321  002394  362D               	rlcf	___fldiv@grs^0,f,c
  7322  002396  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  7323  002398  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  7324  00239A  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  7325  00239C  062B               	decf	___fldiv@new_exp^0,f,c
  7326  00239E  A0D8               	btfss	status,0,c
  7327  0023A0  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  7328  0023A2                     l3254:
  7329  0023A2  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  7330  0023A4  EFD6  F011         	goto	u3171
  7331  0023A8  EFD8  F011         	goto	u3170
  7332  0023AC                     u3171:
  7333  0023AC  EFBC  F011         	goto	l3248
  7334  0023B0                     u3170:
  7335  0023B0  0E00               	movlw	0
  7336  0023B2  6E32               	movwf	___fldiv@aexp^0,c
  7337  0023B4  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  7338  0023B6  EFDF  F011         	goto	u3181
  7339  0023BA  EFE1  F011         	goto	u3180
  7340  0023BE                     u3181:
  7341  0023BE  EF05  F012         	goto	l839
  7342  0023C2                     u3180:
  7343  0023C2  0EFF               	movlw	255
  7344  0023C4  142D               	andwf	___fldiv@grs^0,w,c
  7345  0023C6  6E22               	movwf	??___fldiv^0,c
  7346  0023C8  0EFF               	movlw	255
  7347  0023CA  142E               	andwf	(___fldiv@grs+1)^0,w,c
  7348  0023CC  6E23               	movwf	(??___fldiv+1)^0,c
  7349  0023CE  0EFF               	movlw	255
  7350  0023D0  142F               	andwf	(___fldiv@grs+2)^0,w,c
  7351  0023D2  6E24               	movwf	(??___fldiv+2)^0,c
  7352  0023D4  0E7F               	movlw	127
  7353  0023D6  1430               	andwf	(___fldiv@grs+3)^0,w,c
  7354  0023D8  6E25               	movwf	(??___fldiv+3)^0,c
  7355  0023DA  5022               	movf	??___fldiv^0,w,c
  7356  0023DC  1023               	iorwf	(??___fldiv+1)^0,w,c
  7357  0023DE  1024               	iorwf	(??___fldiv+2)^0,w,c
  7358  0023E0  1025               	iorwf	(??___fldiv+3)^0,w,c
  7359  0023E2  B4D8               	btfsc	status,2,c
  7360  0023E4  EFF6  F011         	goto	u3191
  7361  0023E8  EFF8  F011         	goto	u3190
  7362  0023EC                     u3191:
  7363  0023EC  EFFC  F011         	goto	l840
  7364  0023F0                     u3190:
  7365  0023F0                     l3262:
  7366  0023F0  0E01               	movlw	1
  7367  0023F2  6E32               	movwf	___fldiv@aexp^0,c
  7368  0023F4  EF05  F012         	goto	l839
  7369  0023F8                     l840:
  7370  0023F8  A01A               	btfss	___fldiv@b^0,0,c
  7371  0023FA  EF01  F012         	goto	u3201
  7372  0023FE  EF03  F012         	goto	u3200
  7373  002402                     u3201:
  7374  002402  EF05  F012         	goto	l839
  7375  002406                     u3200:
  7376  002406  EFF8  F011         	goto	l3262
  7377  00240A                     l839:
  7378  00240A  5032               	movf	___fldiv@aexp^0,w,c
  7379  00240C  B4D8               	btfsc	status,2,c
  7380  00240E  EF0B  F012         	goto	u3211
  7381  002412  EF0D  F012         	goto	u3210
  7382  002416                     u3211:
  7383  002416  EF31  F012         	goto	l3274
  7384  00241A                     u3210:
  7385  00241A  0E01               	movlw	1
  7386  00241C  261A               	addwf	___fldiv@b^0,f,c
  7387  00241E  0E00               	movlw	0
  7388  002420  221B               	addwfc	(___fldiv@b+1)^0,f,c
  7389  002422  221C               	addwfc	(___fldiv@b+2)^0,f,c
  7390  002424  221D               	addwfc	(___fldiv@b+3)^0,f,c
  7391  002426  A01D               	btfss	(___fldiv@b+3)^0,0,c
  7392  002428  EF18  F012         	goto	u3221
  7393  00242C  EF1A  F012         	goto	u3220
  7394  002430                     u3221:
  7395  002430  EF31  F012         	goto	l3274
  7396  002434                     u3220:
  7397  002434  C01A  F022         	movff	___fldiv@b,??___fldiv
  7398  002438  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  7399  00243C  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  7400  002440  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  7401  002444  3425               	rlcf	(??___fldiv+3)^0,w,c
  7402  002446  3225               	rrcf	(??___fldiv+3)^0,f,c
  7403  002448  3224               	rrcf	(??___fldiv+2)^0,f,c
  7404  00244A  3223               	rrcf	(??___fldiv+1)^0,f,c
  7405  00244C  3222               	rrcf	??___fldiv^0,f,c
  7406  00244E  C022  F01A         	movff	??___fldiv,___fldiv@b
  7407  002452  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  7408  002456  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  7409  00245A  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  7410  00245E  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  7411  002460  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  7412  002462                     l3274:
  7413  002462  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7414  002464  EF3C  F012         	goto	u3231
  7415  002468  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  7416  00246A  E108               	bnz	u3230
  7417  00246C  282B               	incf	___fldiv@new_exp^0,w,c
  7418  00246E  A0D8               	btfss	status,0,c
  7419  002470  EF3C  F012         	goto	u3231
  7420  002474  EF3E  F012         	goto	u3230
  7421  002478                     u3231:
  7422  002478  EF49  F012         	goto	l3278
  7423  00247C                     u3230:
  7424  00247C  0E00               	movlw	0
  7425  00247E  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  7426  002480  682B               	setf	___fldiv@new_exp^0,c
  7427  002482  0E00               	movlw	0
  7428  002484  6E1A               	movwf	___fldiv@b^0,c
  7429  002486  0E00               	movlw	0
  7430  002488  6E1B               	movwf	(___fldiv@b+1)^0,c
  7431  00248A  0E00               	movlw	0
  7432  00248C  6E1C               	movwf	(___fldiv@b+2)^0,c
  7433  00248E  0E00               	movlw	0
  7434  002490  6E1D               	movwf	(___fldiv@b+3)^0,c
  7435  002492                     l3278:
  7436  002492  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7437  002494  EF56  F012         	goto	u3240
  7438  002498  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  7439  00249A  E106               	bnz	u3241
  7440  00249C  042B               	decf	___fldiv@new_exp^0,w,c
  7441  00249E  B0D8               	btfsc	status,0,c
  7442  0024A0  EF54  F012         	goto	u3241
  7443  0024A4  EF56  F012         	goto	u3240
  7444  0024A8                     u3241:
  7445  0024A8  EF64  F012         	goto	l3282
  7446  0024AC                     u3240:
  7447  0024AC  0E00               	movlw	0
  7448  0024AE  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  7449  0024B0  0E00               	movlw	0
  7450  0024B2  6E2B               	movwf	___fldiv@new_exp^0,c
  7451  0024B4  0E00               	movlw	0
  7452  0024B6  6E1A               	movwf	___fldiv@b^0,c
  7453  0024B8  0E00               	movlw	0
  7454  0024BA  6E1B               	movwf	(___fldiv@b+1)^0,c
  7455  0024BC  0E00               	movlw	0
  7456  0024BE  6E1C               	movwf	(___fldiv@b+2)^0,c
  7457  0024C0  0E00               	movlw	0
  7458  0024C2  6E1D               	movwf	(___fldiv@b+3)^0,c
  7459  0024C4  0E00               	movlw	0
  7460  0024C6  6E2A               	movwf	___fldiv@sign^0,c
  7461  0024C8                     l3282:
  7462  0024C8  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  7463  0024CC  A031               	btfss	___fldiv@bexp^0,0,c
  7464  0024CE  EF6B  F012         	goto	u3251
  7465  0024D2  EF6D  F012         	goto	u3250
  7466  0024D6                     u3251:
  7467  0024D6  EF70  F012         	goto	l3288
  7468  0024DA                     u3250:
  7469  0024DA  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  7470  0024DC  EF71  F012         	goto	l3290
  7471  0024E0                     l3288:
  7472  0024E0  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  7473  0024E2                     l3290:
  7474  0024E2  90D8               	bcf	status,0,c
  7475  0024E4  3031               	rrcf	___fldiv@bexp^0,w,c
  7476  0024E6  6E1D               	movwf	(___fldiv@b+3)^0,c
  7477  0024E8  EF27  F011         	goto	l3204
  7478  0024EC                     l826:
  7479  0024EC  0012               	return		;funcret
  7480  0024EE                     __end_of___fldiv:
  7481                           	callstack 0
  7482                           
  7483 ;; *************** function _atoi *****************
  7484 ;; Defined at:
  7485 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7488 ;;		 -> STR_2(5), 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  n               2   15[COMRAM] int 
  7491 ;;  neg             2   13[COMRAM] int 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  2    7[COMRAM] int 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7501 ;;      Params:         2       0       0       0       0       0       0       0       0
  7502 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7503 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7504 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7505 ;;Total ram usage:       10 bytes
  7506 ;; Hardware stack levels used: 1
  7507 ;; Hardware stack levels required when called: 1
  7508 ;; This function calls:
  7509 ;;		___wmul
  7510 ;;		_isdigit
  7511 ;;		_isspace
  7512 ;; This function is called by:
  7513 ;;		_vfpfcnvrt
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text25
  7518  002C60                     __ptext25:
  7519                           	callstack 0
  7520  002C60                     _atoi:
  7521                           	callstack 25
  7522  002C60  0E00               	movlw	0
  7523  002C62  6E11               	movwf	(atoi@n+1)^0,c
  7524  002C64  0E00               	movlw	0
  7525  002C66  6E10               	movwf	atoi@n^0,c
  7526  002C68  0E00               	movlw	0
  7527  002C6A  6E0F               	movwf	(atoi@neg+1)^0,c
  7528  002C6C  0E00               	movlw	0
  7529  002C6E  6E0E               	movwf	atoi@neg^0,c
  7530  002C70  EF3C  F016         	goto	l4034
  7531  002C74                     l4030:
  7532  002C74  4A08               	infsnz	atoi@s^0,f,c
  7533  002C76  2A09               	incf	(atoi@s+1)^0,f,c
  7534  002C78                     l4034:
  7535  002C78  C008  FFF6         	movff	atoi@s,tblptrl
  7536  002C7C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7537  002C80                     	if	0	;tblptru may be non-zero
  7538  002C80                     	endif
  7539  002C80                     	if	0	;tblptru may be non-zero
  7540  002C80                     	endif
  7541  002C80  0008               	tblrd		*
  7542  002C82  50F5               	movf	tablat,w,c
  7543  002C84  0A20               	xorlw	32
  7544  002C86  B4D8               	btfsc	status,2,c
  7545  002C88  EF48  F016         	goto	u4501
  7546  002C8C  EF4A  F016         	goto	u4500
  7547  002C90                     u4501:
  7548  002C90  EF3A  F016         	goto	l4030
  7549  002C94                     u4500:
  7550  002C94  0EF7               	movlw	247
  7551  002C96  6E0A               	movwf	??_atoi^0,c
  7552  002C98  0EFF               	movlw	255
  7553  002C9A  6E0B               	movwf	(??_atoi+1)^0,c
  7554  002C9C  C008  FFF6         	movff	atoi@s,tblptrl
  7555  002CA0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7556  002CA4                     	if	0	;tblptru may be non-zero
  7557  002CA4                     	endif
  7558  002CA4                     	if	0	;tblptru may be non-zero
  7559  002CA4                     	endif
  7560  002CA4  0008               	tblrd		*
  7561  002CA6  50F5               	movf	tablat,w,c
  7562  002CA8  6E0C               	movwf	(??_atoi+2)^0,c
  7563  002CAA  6A0D               	clrf	(??_atoi+3)^0,c
  7564  002CAC  500A               	movf	??_atoi^0,w,c
  7565  002CAE  260C               	addwf	(??_atoi+2)^0,f,c
  7566  002CB0  500B               	movf	(??_atoi+1)^0,w,c
  7567  002CB2  220D               	addwfc	(??_atoi+3)^0,f,c
  7568  002CB4  500D               	movf	(??_atoi+3)^0,w,c
  7569  002CB6  E109               	bnz	u4510
  7570  002CB8  0E05               	movlw	5
  7571  002CBA  5C0C               	subwf	(??_atoi+2)^0,w,c
  7572  002CBC  A0D8               	btfss	status,0,c
  7573  002CBE  EF63  F016         	goto	u4511
  7574  002CC2  EF65  F016         	goto	u4510
  7575  002CC6                     u4511:
  7576  002CC6  EF3A  F016         	goto	l4030
  7577  002CCA                     u4510:
  7578  002CCA  EF6F  F016         	goto	l4042
  7579  002CCE                     l4038:
  7580  002CCE  0E00               	movlw	0
  7581  002CD0  6E0F               	movwf	(atoi@neg+1)^0,c
  7582  002CD2  0E01               	movlw	1
  7583  002CD4  6E0E               	movwf	atoi@neg^0,c
  7584  002CD6                     l4040:
  7585  002CD6  4A08               	infsnz	atoi@s^0,f,c
  7586  002CD8  2A09               	incf	(atoi@s+1)^0,f,c
  7587  002CDA  EFA4  F016         	goto	l4050
  7588  002CDE                     l4042:
  7589  002CDE  C008  FFF6         	movff	atoi@s,tblptrl
  7590  002CE2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7591  002CE6                     	if	0	;tblptru may be non-zero
  7592  002CE6                     	endif
  7593  002CE6                     	if	0	;tblptru may be non-zero
  7594  002CE6                     	endif
  7595  002CE6  0008               	tblrd		*
  7596  002CE8  50F5               	movf	tablat,w,c
  7597  002CEA  6E0A               	movwf	??_atoi^0,c
  7598  002CEC  6A0B               	clrf	(??_atoi+1)^0,c
  7599                           
  7600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7601                           ; Switch size 1, requested type "simple"
  7602                           ; Number of cases is 1, Range of values is 0 to 0
  7603                           ; switch strategies available:
  7604                           ; Name         Instructions Cycles
  7605                           ; simple_byte            4     3 (average)
  7606                           ;	Chosen strategy is simple_byte
  7607  002CEE  500B               	movf	(??_atoi+1)^0,w,c
  7608  002CF0  0A00               	xorlw	0	; case 0
  7609  002CF2  B4D8               	btfsc	status,2,c
  7610  002CF4  EF7E  F016         	goto	l4624
  7611  002CF8  EFA4  F016         	goto	l4050
  7612  002CFC                     l4624:
  7613                           
  7614                           ; Switch size 1, requested type "simple"
  7615                           ; Number of cases is 2, Range of values is 43 to 45
  7616                           ; switch strategies available:
  7617                           ; Name         Instructions Cycles
  7618                           ; simple_byte            7     4 (average)
  7619                           ;	Chosen strategy is simple_byte
  7620  002CFC  500A               	movf	??_atoi^0,w,c
  7621  002CFE  0A2B               	xorlw	43	; case 43
  7622  002D00  B4D8               	btfsc	status,2,c
  7623  002D02  EF6B  F016         	goto	l4040
  7624  002D06  0A06               	xorlw	6	; case 45
  7625  002D08  B4D8               	btfsc	status,2,c
  7626  002D0A  EF67  F016         	goto	l4038
  7627  002D0E  EFA4  F016         	goto	l4050
  7628  002D12                     l4044:
  7629  002D12  C010  F001         	movff	atoi@n,___wmul@multiplier
  7630  002D16  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7631  002D1A  0E00               	movlw	0
  7632  002D1C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7633  002D1E  0E0A               	movlw	10
  7634  002D20  6E03               	movwf	___wmul@multiplicand^0,c
  7635  002D22  ECA5  F01F         	call	___wmul	;wreg free
  7636  002D26  C008  FFF6         	movff	atoi@s,tblptrl
  7637  002D2A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7638  002D2E                     	if	0	;tblptru may be non-zero
  7639  002D2E                     	endif
  7640  002D2E                     	if	0	;tblptru may be non-zero
  7641  002D2E                     	endif
  7642  002D2E  0008               	tblrd		*
  7643  002D30  50F5               	movf	tablat,w,c
  7644  002D32  5E01               	subwf	?___wmul^0,f,c
  7645  002D34  0E00               	movlw	0
  7646  002D36  5A02               	subwfb	(?___wmul+1)^0,f,c
  7647  002D38  0E30               	movlw	48
  7648  002D3A  2401               	addwf	?___wmul^0,w,c
  7649  002D3C  6E10               	movwf	atoi@n^0,c
  7650  002D3E  0E00               	movlw	0
  7651  002D40  2002               	addwfc	(?___wmul+1)^0,w,c
  7652  002D42  6E11               	movwf	(atoi@n+1)^0,c
  7653  002D44  EF6B  F016         	goto	l4040
  7654  002D48                     l4050:
  7655  002D48  0ED0               	movlw	208
  7656  002D4A  6E0A               	movwf	??_atoi^0,c
  7657  002D4C  0EFF               	movlw	255
  7658  002D4E  6E0B               	movwf	(??_atoi+1)^0,c
  7659  002D50  C008  FFF6         	movff	atoi@s,tblptrl
  7660  002D54  C009  FFF7         	movff	atoi@s+1,tblptrh
  7661  002D58                     	if	0	;tblptru may be non-zero
  7662  002D58                     	endif
  7663  002D58                     	if	0	;tblptru may be non-zero
  7664  002D58                     	endif
  7665  002D58  0008               	tblrd		*
  7666  002D5A  50F5               	movf	tablat,w,c
  7667  002D5C  6E0C               	movwf	(??_atoi+2)^0,c
  7668  002D5E  6A0D               	clrf	(??_atoi+3)^0,c
  7669  002D60  500A               	movf	??_atoi^0,w,c
  7670  002D62  260C               	addwf	(??_atoi+2)^0,f,c
  7671  002D64  500B               	movf	(??_atoi+1)^0,w,c
  7672  002D66  220D               	addwfc	(??_atoi+3)^0,f,c
  7673  002D68  500D               	movf	(??_atoi+3)^0,w,c
  7674  002D6A  E109               	bnz	u4520
  7675  002D6C  0E0A               	movlw	10
  7676  002D6E  5C0C               	subwf	(??_atoi+2)^0,w,c
  7677  002D70  A0D8               	btfss	status,0,c
  7678  002D72  EFBD  F016         	goto	u4521
  7679  002D76  EFBF  F016         	goto	u4520
  7680  002D7A                     u4521:
  7681  002D7A  EF89  F016         	goto	l4044
  7682  002D7E                     u4520:
  7683  002D7E  500E               	movf	atoi@neg^0,w,c
  7684  002D80  100F               	iorwf	(atoi@neg+1)^0,w,c
  7685  002D82  A4D8               	btfss	status,2,c
  7686  002D84  EFC6  F016         	goto	u4531
  7687  002D88  EFC8  F016         	goto	u4530
  7688  002D8C                     u4531:
  7689  002D8C  EFD6  F016         	goto	l1115
  7690  002D90                     u4530:
  7691  002D90  C010  F00A         	movff	atoi@n,??_atoi
  7692  002D94  C011  F00B         	movff	atoi@n+1,??_atoi+1
  7693  002D98  1E0A               	comf	??_atoi^0,f,c
  7694  002D9A  1E0B               	comf	(??_atoi+1)^0,f,c
  7695  002D9C  4A0A               	infsnz	??_atoi^0,f,c
  7696  002D9E  2A0B               	incf	(??_atoi+1)^0,f,c
  7697  002DA0  C00A  F008         	movff	??_atoi,?_atoi
  7698  002DA4  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7699  002DA8  EFDA  F016         	goto	l1118
  7700  002DAC                     l1115:
  7701  002DAC  C010  F008         	movff	atoi@n,?_atoi
  7702  002DB0  C011  F009         	movff	atoi@n+1,?_atoi+1
  7703  002DB4                     l1118:
  7704  002DB4  0012               	return		;funcret
  7705  002DB6                     __end_of_atoi:
  7706                           	callstack 0
  7707                           
  7708 ;; *************** function _isspace *****************
  7709 ;; Defined at:
  7710 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;  c               2    0[COMRAM] int 
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  2    0[COMRAM] int 
  7717 ;; Registers used:
  7718 ;;		wreg, status,2, status,0
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7724 ;;      Params:         2       0       0       0       0       0       0       0       0
  7725 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7726 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7727 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7728 ;;Total ram usage:        7 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; This function calls:
  7731 ;;		Nothing
  7732 ;; This function is called by:
  7733 ;;		_atoi
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text26
  7738  003C80                     __ptext26:
  7739                           	callstack 0
  7740  003C80                     _isspace:
  7741                           	callstack 25
  7742  003C80  0E01               	movlw	1
  7743  003C82  6E07               	movwf	_isspace$1560^0,c
  7744  003C84  0E20               	movlw	32
  7745  003C86  1801               	xorwf	isspace@c^0,w,c
  7746  003C88  1002               	iorwf	(isspace@c+1)^0,w,c
  7747  003C8A  B4D8               	btfsc	status,2,c
  7748  003C8C  EF4A  F01E         	goto	u3991
  7749  003C90  EF4C  F01E         	goto	u3990
  7750  003C94                     u3991:
  7751  003C94  EF65  F01E         	goto	l3702
  7752  003C98                     u3990:
  7753  003C98  0EF7               	movlw	247
  7754  003C9A  6E03               	movwf	??_isspace^0,c
  7755  003C9C  0EFF               	movlw	255
  7756  003C9E  6E04               	movwf	(??_isspace+1)^0,c
  7757  003CA0  C001  F005         	movff	isspace@c,??_isspace+2
  7758  003CA4  C002  F006         	movff	isspace@c+1,??_isspace+3
  7759  003CA8  5003               	movf	??_isspace^0,w,c
  7760  003CAA  2605               	addwf	(??_isspace+2)^0,f,c
  7761  003CAC  5004               	movf	(??_isspace+1)^0,w,c
  7762  003CAE  2206               	addwfc	(??_isspace+3)^0,f,c
  7763  003CB0  5006               	movf	(??_isspace+3)^0,w,c
  7764  003CB2  E109               	bnz	u4000
  7765  003CB4  0E05               	movlw	5
  7766  003CB6  5C05               	subwf	(??_isspace+2)^0,w,c
  7767  003CB8  A0D8               	btfss	status,0,c
  7768  003CBA  EF61  F01E         	goto	u4001
  7769  003CBE  EF63  F01E         	goto	u4000
  7770  003CC2                     u4001:
  7771  003CC2  EF65  F01E         	goto	l3702
  7772  003CC6                     u4000:
  7773  003CC6  0E00               	movlw	0
  7774  003CC8  6E07               	movwf	_isspace$1560^0,c
  7775  003CCA                     l3702:
  7776  003CCA  C007  F001         	movff	_isspace$1560,?_isspace
  7777  003CCE  6A02               	clrf	(?_isspace+1)^0,c
  7778  003CD0  0012               	return		;funcret
  7779  003CD2                     __end_of_isspace:
  7780                           	callstack 0
  7781                           
  7782 ;; *************** function _isdigit *****************
  7783 ;; Defined at:
  7784 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  c               2    0[COMRAM] int 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  2    0[COMRAM] int 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7798 ;;      Params:         2       0       0       0       0       0       0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7800 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7801 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7802 ;;Total ram usage:        6 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; This function calls:
  7805 ;;		Nothing
  7806 ;; This function is called by:
  7807 ;;		_vfpfcnvrt
  7808 ;;		_atoi
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           	psect	text27
  7813  003EA8                     __ptext27:
  7814                           	callstack 0
  7815  003EA8                     _isdigit:
  7816                           	callstack 26
  7817  003EA8  0ED0               	movlw	208
  7818  003EAA  6E03               	movwf	??_isdigit^0,c
  7819  003EAC  0EFF               	movlw	255
  7820  003EAE  6E04               	movwf	(??_isdigit+1)^0,c
  7821  003EB0  C001  F005         	movff	isdigit@c,??_isdigit+2
  7822  003EB4  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7823  003EB8  5003               	movf	??_isdigit^0,w,c
  7824  003EBA  2605               	addwf	(??_isdigit+2)^0,f,c
  7825  003EBC  5004               	movf	(??_isdigit+1)^0,w,c
  7826  003EBE  2206               	addwfc	(??_isdigit+3)^0,f,c
  7827  003EC0  5006               	movf	(??_isdigit+3)^0,w,c
  7828  003EC2  E10A               	bnz	u3970
  7829  003EC4  0E0A               	movlw	10
  7830  003EC6  5C05               	subwf	(??_isdigit+2)^0,w,c
  7831  003EC8  A0D8               	btfss	status,0,c
  7832  003ECA  EF69  F01F         	goto	u3971
  7833  003ECE  EF6C  F01F         	goto	u3970
  7834  003ED2                     u3971:
  7835  003ED2  0E01               	movlw	1
  7836  003ED4  EF6D  F01F         	goto	u3980
  7837  003ED8                     u3970:
  7838  003ED8  0E00               	movlw	0
  7839  003EDA                     u3980:
  7840  003EDA  6E01               	movwf	?_isdigit^0,c
  7841  003EDC  6A02               	clrf	(?_isdigit+1)^0,c
  7842  003EDE  0012               	return		;funcret
  7843  003EE0                     __end_of_isdigit:
  7844                           	callstack 0
  7845                           
  7846 ;; *************** function ___wmul *****************
  7847 ;; Defined at:
  7848 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  multiplier      2    0[COMRAM] unsigned int 
  7851 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  product         2    4[COMRAM] unsigned int 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  2    0[COMRAM] unsigned int 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0, prodl, prodh
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7863 ;;      Params:         4       0       0       0       0       0       0       0       0
  7864 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7866 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7867 ;;Total ram usage:        6 bytes
  7868 ;; Hardware stack levels used: 1
  7869 ;; This function calls:
  7870 ;;		Nothing
  7871 ;; This function is called by:
  7872 ;;		_atoi
  7873 ;; This function uses a non-reentrant model
  7874 ;;
  7875                           
  7876                           	psect	text28
  7877  003F4A                     __ptext28:
  7878                           	callstack 0
  7879  003F4A                     ___wmul:
  7880                           	callstack 25
  7881  003F4A  5001               	movf	___wmul@multiplier^0,w,c
  7882  003F4C  0203               	mulwf	___wmul@multiplicand^0,c
  7883  003F4E  CFF3 F005          	movff	prodl,___wmul@product
  7884  003F52  CFF4 F006          	movff	prodh,___wmul@product+1
  7885  003F56  5001               	movf	___wmul@multiplier^0,w,c
  7886  003F58  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7887  003F5A  50F3               	movf	243,w,c
  7888  003F5C  2606               	addwf	(___wmul@product+1)^0,f,c
  7889  003F5E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7890  003F60  0203               	mulwf	___wmul@multiplicand^0,c
  7891  003F62  50F3               	movf	243,w,c
  7892  003F64  2606               	addwf	(___wmul@product+1)^0,f,c
  7893  003F66  C005  F001         	movff	___wmul@product,?___wmul
  7894  003F6A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7895  003F6E  0012               	return		;funcret
  7896  003F70                     __end_of___wmul:
  7897                           	callstack 0
  7898                           
  7899 ;; *************** function ___xxtofl *****************
  7900 ;; Defined at:
  7901 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;  sign            1    wreg     unsigned char 
  7904 ;;  val             4    0[COMRAM] long 
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;  sign            1    8[COMRAM] unsigned char 
  7907 ;;  arg             4   10[COMRAM] unsigned long 
  7908 ;;  exp             1    9[COMRAM] unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  4    0[COMRAM] unsigned char 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7918 ;;      Params:         4       0       0       0       0       0       0       0       0
  7919 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7920 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7921 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7922 ;;Total ram usage:       14 bytes
  7923 ;; Hardware stack levels used: 1
  7924 ;; This function calls:
  7925 ;;		Nothing
  7926 ;; This function is called by:
  7927 ;;		_Mostrar_Temperatura
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text29
  7932  002AAC                     __ptext29:
  7933                           	callstack 0
  7934  002AAC                     ___xxtofl:
  7935                           	callstack 29
  7936                           
  7937                           ;incstack = 0
  7938                           ;___xxtofl@sign stored from wreg
  7939  002AAC  6E09               	movwf	___xxtofl@sign^0,c
  7940  002AAE  5009               	movf	___xxtofl@sign^0,w,c
  7941  002AB0  B4D8               	btfsc	status,2,c
  7942  002AB2  EF5D  F015         	goto	u4931
  7943  002AB6  EF5F  F015         	goto	u4930
  7944  002ABA                     u4931:
  7945  002ABA  EF81  F015         	goto	l899
  7946  002ABE                     u4930:
  7947  002ABE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7948  002AC0  EF66  F015         	goto	u4940
  7949  002AC4  EF64  F015         	goto	u4941
  7950  002AC8                     u4941:
  7951  002AC8  EF81  F015         	goto	l899
  7952  002ACC                     u4940:
  7953  002ACC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7954  002AD0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7955  002AD4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7956  002AD8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7957  002ADC  1E05               	comf	??___xxtofl^0,f,c
  7958  002ADE  1E06               	comf	(??___xxtofl+1)^0,f,c
  7959  002AE0  1E07               	comf	(??___xxtofl+2)^0,f,c
  7960  002AE2  1E08               	comf	(??___xxtofl+3)^0,f,c
  7961  002AE4  2A05               	incf	??___xxtofl^0,f,c
  7962  002AE6  0E00               	movlw	0
  7963  002AE8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7964  002AEA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7965  002AEC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7966  002AEE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7967  002AF2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7968  002AF6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7969  002AFA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7970  002AFE  EF89  F015         	goto	l4342
  7971  002B02                     l899:
  7972  002B02  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7973  002B06  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7974  002B0A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7975  002B0E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7976  002B12                     l4342:
  7977  002B12  5001               	movf	___xxtofl@val^0,w,c
  7978  002B14  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7979  002B16  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7980  002B18  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7981  002B1A  A4D8               	btfss	status,2,c
  7982  002B1C  EF92  F015         	goto	u4951
  7983  002B20  EF94  F015         	goto	u4950
  7984  002B24                     u4951:
  7985  002B24  EF9E  F015         	goto	l4348
  7986  002B28                     u4950:
  7987  002B28  0E00               	movlw	0
  7988  002B2A  6E01               	movwf	?___xxtofl^0,c
  7989  002B2C  0E00               	movlw	0
  7990  002B2E  6E02               	movwf	(?___xxtofl+1)^0,c
  7991  002B30  0E00               	movlw	0
  7992  002B32  6E03               	movwf	(?___xxtofl+2)^0,c
  7993  002B34  0E00               	movlw	0
  7994  002B36  6E04               	movwf	(?___xxtofl+3)^0,c
  7995  002B38  EF2F  F016         	goto	l902
  7996  002B3C                     l4348:
  7997  002B3C  0E96               	movlw	150
  7998  002B3E  6E0A               	movwf	___xxtofl@exp^0,c
  7999  002B40  EFA8  F015         	goto	l4352
  8000  002B44                     l4350:
  8001  002B44  2A0A               	incf	___xxtofl@exp^0,f,c
  8002  002B46  90D8               	bcf	status,0,c
  8003  002B48  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8004  002B4A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8005  002B4C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8006  002B4E  320B               	rrcf	___xxtofl@arg^0,f,c
  8007  002B50                     l4352:
  8008  002B50  0E00               	movlw	0
  8009  002B52  140B               	andwf	___xxtofl@arg^0,w,c
  8010  002B54  6E05               	movwf	??___xxtofl^0,c
  8011  002B56  0E00               	movlw	0
  8012  002B58  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8013  002B5A  6E06               	movwf	(??___xxtofl+1)^0,c
  8014  002B5C  0E00               	movlw	0
  8015  002B5E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8016  002B60  6E07               	movwf	(??___xxtofl+2)^0,c
  8017  002B62  0EFE               	movlw	254
  8018  002B64  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8019  002B66  6E08               	movwf	(??___xxtofl+3)^0,c
  8020  002B68  5005               	movf	??___xxtofl^0,w,c
  8021  002B6A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8022  002B6C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8023  002B6E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8024  002B70  A4D8               	btfss	status,2,c
  8025  002B72  EFBD  F015         	goto	u4961
  8026  002B76  EFBF  F015         	goto	u4960
  8027  002B7A                     u4961:
  8028  002B7A  EFA2  F015         	goto	l4350
  8029  002B7E                     u4960:
  8030  002B7E  EFCD  F015         	goto	l906
  8031  002B82                     l4354:
  8032  002B82  2A0A               	incf	___xxtofl@exp^0,f,c
  8033  002B84  0E01               	movlw	1
  8034  002B86  260B               	addwf	___xxtofl@arg^0,f,c
  8035  002B88  0E00               	movlw	0
  8036  002B8A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8037  002B8C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8038  002B8E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8039  002B90  90D8               	bcf	status,0,c
  8040  002B92  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8041  002B94  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8042  002B96  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8043  002B98  320B               	rrcf	___xxtofl@arg^0,f,c
  8044  002B9A                     l906:
  8045  002B9A  0E00               	movlw	0
  8046  002B9C  140B               	andwf	___xxtofl@arg^0,w,c
  8047  002B9E  6E05               	movwf	??___xxtofl^0,c
  8048  002BA0  0E00               	movlw	0
  8049  002BA2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8050  002BA4  6E06               	movwf	(??___xxtofl+1)^0,c
  8051  002BA6  0E00               	movlw	0
  8052  002BA8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8053  002BAA  6E07               	movwf	(??___xxtofl+2)^0,c
  8054  002BAC  0EFF               	movlw	255
  8055  002BAE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8056  002BB0  6E08               	movwf	(??___xxtofl+3)^0,c
  8057  002BB2  5005               	movf	??___xxtofl^0,w,c
  8058  002BB4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8059  002BB6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8060  002BB8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8061  002BBA  A4D8               	btfss	status,2,c
  8062  002BBC  EFE2  F015         	goto	u4971
  8063  002BC0  EFE4  F015         	goto	u4970
  8064  002BC4                     u4971:
  8065  002BC4  EFC1  F015         	goto	l4354
  8066  002BC8                     u4970:
  8067  002BC8  EFEC  F015         	goto	l4362
  8068  002BCC                     l4360:
  8069  002BCC  060A               	decf	___xxtofl@exp^0,f,c
  8070  002BCE  90D8               	bcf	status,0,c
  8071  002BD0  360B               	rlcf	___xxtofl@arg^0,f,c
  8072  002BD2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8073  002BD4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8074  002BD6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8075  002BD8                     l4362:
  8076  002BD8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8077  002BDA  EFF1  F015         	goto	u4981
  8078  002BDE  EFF3  F015         	goto	u4980
  8079  002BE2                     u4981:
  8080  002BE2  EFFB  F015         	goto	l913
  8081  002BE6                     u4980:
  8082  002BE6  0E02               	movlw	2
  8083  002BE8  600A               	cpfslt	___xxtofl@exp^0,c
  8084  002BEA  EFF9  F015         	goto	u4991
  8085  002BEE  EFFB  F015         	goto	u4990
  8086  002BF2                     u4991:
  8087  002BF2  EFE6  F015         	goto	l4360
  8088  002BF6                     u4990:
  8089  002BF6                     l913:
  8090  002BF6  B00A               	btfsc	___xxtofl@exp^0,0,c
  8091  002BF8  EF00  F016         	goto	u5001
  8092  002BFC  EF02  F016         	goto	u5000
  8093  002C00                     u5001:
  8094  002C00  EF03  F016         	goto	l4368
  8095  002C04                     u5000:
  8096  002C04  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8097  002C06                     l4368:
  8098  002C06  90D8               	bcf	status,0,c
  8099  002C08  320A               	rrcf	___xxtofl@exp^0,f,c
  8100  002C0A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8101  002C0E  6A06               	clrf	(??___xxtofl+1)^0,c
  8102  002C10  6A07               	clrf	(??___xxtofl+2)^0,c
  8103  002C12  6A08               	clrf	(??___xxtofl+3)^0,c
  8104  002C14  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8105  002C18  6A07               	clrf	(??___xxtofl+2)^0,c
  8106  002C1A  6A06               	clrf	(??___xxtofl+1)^0,c
  8107  002C1C  6A05               	clrf	??___xxtofl^0,c
  8108  002C1E  5005               	movf	??___xxtofl^0,w,c
  8109  002C20  120B               	iorwf	___xxtofl@arg^0,f,c
  8110  002C22  5006               	movf	(??___xxtofl+1)^0,w,c
  8111  002C24  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8112  002C26  5007               	movf	(??___xxtofl+2)^0,w,c
  8113  002C28  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8114  002C2A  5008               	movf	(??___xxtofl+3)^0,w,c
  8115  002C2C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8116  002C2E  5009               	movf	___xxtofl@sign^0,w,c
  8117  002C30  B4D8               	btfsc	status,2,c
  8118  002C32  EF1D  F016         	goto	u5011
  8119  002C36  EF1F  F016         	goto	u5010
  8120  002C3A                     u5011:
  8121  002C3A  EF27  F016         	goto	l4378
  8122  002C3E                     u5010:
  8123  002C3E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8124  002C40  EF26  F016         	goto	u5020
  8125  002C44  EF24  F016         	goto	u5021
  8126  002C48                     u5021:
  8127  002C48  EF27  F016         	goto	l4378
  8128  002C4C                     u5020:
  8129  002C4C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8130  002C4E                     l4378:
  8131  002C4E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8132  002C52  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8133  002C56  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8134  002C5A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8135  002C5E                     l902:
  8136  002C5E  0012               	return		;funcret
  8137  002C60                     __end_of___xxtofl:
  8138                           	callstack 0
  8139                           
  8140 ;; *************** function _ADC_Read *****************
  8141 ;; Defined at:
  8142 ;;		line 13 in file "adc_header.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  channel         2    0[COMRAM] int 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  digital         2    6[COMRAM] int 
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  2    0[COMRAM] int 
  8149 ;; Registers used:
  8150 ;;		wreg, status,2, status,0
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8156 ;;      Params:         2       0       0       0       0       0       0       0       0
  8157 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8158 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8159 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8160 ;;Total ram usage:        8 bytes
  8161 ;; Hardware stack levels used: 1
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_Mostrar_Temperatura
  8166 ;; This function uses a non-reentrant model
  8167 ;;
  8168                           
  8169                           	psect	text30
  8170  00388E                     __ptext30:
  8171                           	callstack 0
  8172  00388E                     _ADC_Read:
  8173                           	callstack 29
  8174  00388E                     
  8175                           ;adc_header.c: 13: int ADC_Read(int channel);adc_header.c: 14: {;adc_header.c: 15:     i
      +                          nt digital;;adc_header.c: 18:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b001111
      +                          00);
  8176  00388E  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  8177  003892  90D8               	bcf	status,0,c
  8178  003894  3603               	rlcf	??_ADC_Read^0,f,c
  8179  003896  90D8               	bcf	status,0,c
  8180  003898  3603               	rlcf	??_ADC_Read^0,f,c
  8181  00389A  0E3C               	movlw	60
  8182  00389C  1603               	andwf	??_ADC_Read^0,f,c
  8183  00389E  50C2               	movf	194,w,c	;volatile
  8184  0038A0  0BC3               	andlw	195
  8185  0038A2  1003               	iorwf	??_ADC_Read^0,w,c
  8186  0038A4  6EC2               	movwf	194,c	;volatile
  8187                           
  8188                           ;adc_header.c: 20:     ADCON0 |= ((1<<ADON)|(1<<GO));
  8189  0038A6  B2C2               	btfsc	4034,1,c	;volatile
  8190  0038A8  EF58  F01C         	goto	u4831
  8191  0038AC  EF5C  F01C         	goto	u4830
  8192  0038B0                     u4831:
  8193  0038B0  6A03               	clrf	??_ADC_Read^0,c
  8194  0038B2  2A03               	incf	??_ADC_Read^0,f,c
  8195  0038B4  EF5D  F01C         	goto	u4848
  8196  0038B8                     u4830:
  8197  0038B8  6A03               	clrf	??_ADC_Read^0,c
  8198  0038BA                     u4848:
  8199  0038BA  0E01               	movlw	1
  8200  0038BC  6E04               	movwf	(??_ADC_Read+1)^0,c
  8201  0038BE  2A03               	incf	??_ADC_Read^0,f,c
  8202  0038C0  EF64  F01C         	goto	u4854
  8203  0038C4                     u4855:
  8204  0038C4  90D8               	bcf	status,0,c
  8205  0038C6  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  8206  0038C8                     u4854:
  8207  0038C8  2E03               	decfsz	??_ADC_Read^0,f,c
  8208  0038CA  EF62  F01C         	goto	u4855
  8209  0038CE  B0C2               	btfsc	4034,0,c	;volatile
  8210  0038D0  EF6C  F01C         	goto	u4861
  8211  0038D4  EF70  F01C         	goto	u4860
  8212  0038D8                     u4861:
  8213  0038D8  6A05               	clrf	(??_ADC_Read+2)^0,c
  8214  0038DA  2A05               	incf	(??_ADC_Read+2)^0,f,c
  8215  0038DC  EF71  F01C         	goto	u4878
  8216  0038E0                     u4860:
  8217  0038E0  6A05               	clrf	(??_ADC_Read+2)^0,c
  8218  0038E2                     u4878:
  8219  0038E2  0E01               	movlw	1
  8220  0038E4  6E06               	movwf	(??_ADC_Read+3)^0,c
  8221  0038E6  2A05               	incf	(??_ADC_Read+2)^0,f,c
  8222  0038E8  EF78  F01C         	goto	u4884
  8223  0038EC                     u4885:
  8224  0038EC  90D8               	bcf	status,0,c
  8225  0038EE  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  8226  0038F0                     u4884:
  8227  0038F0  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  8228  0038F2  EF76  F01C         	goto	u4885
  8229  0038F6  5006               	movf	(??_ADC_Read+3)^0,w,c
  8230  0038F8  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  8231  0038FA  12C2               	iorwf	194,f,c	;volatile
  8232  0038FC                     l85:
  8233  0038FC  B2C2               	btfsc	194,1,c	;volatile
  8234  0038FE  EF83  F01C         	goto	u4891
  8235  003902  EF85  F01C         	goto	u4890
  8236  003906                     u4891:
  8237  003906  EF7E  F01C         	goto	l85
  8238  00390A                     u4890:
  8239  00390A                     
  8240                           ;adc_header.c: 25:     digital = (ADRESH*256) | (ADRESL);
  8241  00390A  50C3               	movf	195,w,c	;volatile
  8242  00390C  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8243  003910  6A04               	clrf	(??_ADC_Read+1)^0,c
  8244  003912  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8245  003916  6A03               	clrf	??_ADC_Read^0,c
  8246  003918  1003               	iorwf	??_ADC_Read^0,w,c
  8247  00391A  6E07               	movwf	ADC_Read@digital^0,c
  8248  00391C  5004               	movf	(??_ADC_Read+1)^0,w,c
  8249  00391E  6E08               	movwf	(ADC_Read@digital+1)^0,c
  8250  003920                     
  8251                           ;adc_header.c: 26:     return(digital);
  8252  003920  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  8253  003924  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  8254  003928  0012               	return		;funcret
  8255  00392A                     __end_of_ADC_Read:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function _LCD_Clear *****************
  8259 ;; Defined at:
  8260 ;;		line 147 in file "./LCD_librery.h"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;		None
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;		None
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0, cstack
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8274 ;;      Params:         0       0       0       0       0       0       0       0       0
  8275 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8277 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8278 ;;Total ram usage:        0 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 2
  8281 ;; This function calls:
  8282 ;;		_LCD_Cmd
  8283 ;; This function is called by:
  8284 ;;		_main
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text31
  8289  00404A                     __ptext31:
  8290                           	callstack 0
  8291  00404A                     _LCD_Clear:
  8292                           	callstack 28
  8293  00404A                     
  8294                           ;./LCD_librery.h: 149:      LCD_Cmd(0x01);
  8295  00404A  0E01               	movlw	1
  8296  00404C  EC90  F01E         	call	_LCD_Cmd
  8297  004050  0012               	return		;funcret
  8298  004052                     __end_of_LCD_Clear:
  8299                           	callstack 0
  8300                           
  8301 ;; *************** function _LCD_Begin *****************
  8302 ;; Defined at:
  8303 ;;		line 109 in file "./LCD_librery.h"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;		None
  8306 ;; Auto vars:     Size  Location     Type
  8307 ;;		None
  8308 ;; Return value:  Size  Location     Type
  8309 ;;                  1    wreg      void 
  8310 ;; Registers used:
  8311 ;;		wreg, status,2, status,0, cstack
  8312 ;; Tracked objects:
  8313 ;;		On entry : 0/0
  8314 ;;		On exit  : 0/0
  8315 ;;		Unchanged: 0/0
  8316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8317 ;;      Params:         0       0       0       0       0       0       0       0       0
  8318 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8319 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8320 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8321 ;;Total ram usage:        1 bytes
  8322 ;; Hardware stack levels used: 1
  8323 ;; Hardware stack levels required when called: 2
  8324 ;; This function calls:
  8325 ;;		_LCD_Cmd
  8326 ;; This function is called by:
  8327 ;;		_main
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           	psect	text32
  8332  0032B6                     __ptext32:
  8333                           	callstack 0
  8334  0032B6                     _LCD_Begin:
  8335                           	callstack 28
  8336  0032B6                     
  8337                           ;./LCD_librery.h: 111:   RS = 0;
  8338  0032B6  0100               	movlb	0	; () banked
  8339  0032B8  91FA               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  8340                           
  8341                           ;./LCD_librery.h: 113:   LATCbits.LC0 = 0;
  8342  0032BA  908B               	bcf	139,0,c	;volatile
  8343                           
  8344                           ;./LCD_librery.h: 114:   LATCbits.LC1 = 0;
  8345  0032BC  928B               	bcf	139,1,c	;volatile
  8346                           
  8347                           ;./LCD_librery.h: 115:   LATDbits.LD4 = 0;
  8348  0032BE  988C               	bcf	140,4,c	;volatile
  8349                           
  8350                           ;./LCD_librery.h: 116:   LATDbits.LD5 = 0;
  8351  0032C0  9A8C               	bcf	140,5,c	;volatile
  8352                           
  8353                           ;./LCD_librery.h: 117:   LATDbits.LD6 = 0;
  8354  0032C2  9C8C               	bcf	140,6,c	;volatile
  8355                           
  8356                           ;./LCD_librery.h: 118:   LATDbits.LD7 = 0;
  8357  0032C4  9E8C               	bcf	140,7,c	;volatile
  8358                           
  8359                           ;./LCD_librery.h: 119:   TRISCbits.RC0 = 0;
  8360  0032C6  9094               	bcf	148,0,c	;volatile
  8361                           
  8362                           ;./LCD_librery.h: 120:   TRISCbits.RC1 = 0;
  8363  0032C8  9294               	bcf	148,1,c	;volatile
  8364                           
  8365                           ;./LCD_librery.h: 121:   TRISDbits.RD4 = 0;
  8366  0032CA  9895               	bcf	149,4,c	;volatile
  8367                           
  8368                           ;./LCD_librery.h: 122:   TRISDbits.RD5 = 0;
  8369  0032CC  9A95               	bcf	149,5,c	;volatile
  8370                           
  8371                           ;./LCD_librery.h: 123:   TRISDbits.RD6 = 0;
  8372  0032CE  9C95               	bcf	149,6,c	;volatile
  8373                           
  8374                           ;./LCD_librery.h: 124:   TRISDbits.RD7 = 0;
  8375  0032D0  9E95               	bcf	149,7,c	;volatile
  8376  0032D2                     
  8377                           ; BSR set to: 0
  8378                           ;./LCD_librery.h: 126:   _delay((unsigned long)((40)*(8000000/4000.0)));
  8379  0032D2  0E68               	movlw	104
  8380  0032D4  6E05               	movwf	??_LCD_Begin^0,c
  8381  0032D6  0EE4               	movlw	228
  8382  0032D8                     u5147:
  8383  0032D8  2EE8               	decfsz	wreg,f,c
  8384  0032DA  D7FE               	bra	u5147
  8385  0032DC  2E05               	decfsz	??_LCD_Begin^0,f,c
  8386  0032DE  D7FC               	bra	u5147
  8387  0032E0  D000               	nop2	
  8388  0032E2                     
  8389                           ;./LCD_librery.h: 127:   LCD_Cmd(3);
  8390  0032E2  0E03               	movlw	3
  8391  0032E4  EC90  F01E         	call	_LCD_Cmd
  8392  0032E8                     
  8393                           ;./LCD_librery.h: 128:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8394  0032E8  0E0D               	movlw	13
  8395  0032EA  6E05               	movwf	??_LCD_Begin^0,c
  8396  0032EC  0EFC               	movlw	252
  8397  0032EE                     u5157:
  8398  0032EE  2EE8               	decfsz	wreg,f,c
  8399  0032F0  D7FE               	bra	u5157
  8400  0032F2  2E05               	decfsz	??_LCD_Begin^0,f,c
  8401  0032F4  D7FC               	bra	u5157
  8402                           
  8403                           ;./LCD_librery.h: 129:   LCD_Cmd(3);
  8404  0032F6  0E03               	movlw	3
  8405  0032F8  EC90  F01E         	call	_LCD_Cmd
  8406  0032FC                     
  8407                           ;./LCD_librery.h: 130:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8408  0032FC  0E0D               	movlw	13
  8409  0032FE  6E05               	movwf	??_LCD_Begin^0,c
  8410  003300  0EFC               	movlw	252
  8411  003302                     u5167:
  8412  003302  2EE8               	decfsz	wreg,f,c
  8413  003304  D7FE               	bra	u5167
  8414  003306  2E05               	decfsz	??_LCD_Begin^0,f,c
  8415  003308  D7FC               	bra	u5167
  8416  00330A                     
  8417                           ;./LCD_librery.h: 131:   LCD_Cmd(3);
  8418  00330A  0E03               	movlw	3
  8419  00330C  EC90  F01E         	call	_LCD_Cmd
  8420                           
  8421                           ;./LCD_librery.h: 132:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8422  003310  0E0D               	movlw	13
  8423  003312  6E05               	movwf	??_LCD_Begin^0,c
  8424  003314  0EFC               	movlw	252
  8425  003316                     u5177:
  8426  003316  2EE8               	decfsz	wreg,f,c
  8427  003318  D7FE               	bra	u5177
  8428  00331A  2E05               	decfsz	??_LCD_Begin^0,f,c
  8429  00331C  D7FC               	bra	u5177
  8430  00331E                     
  8431                           ;./LCD_librery.h: 133:   LCD_Cmd(0x02);
  8432  00331E  0E02               	movlw	2
  8433  003320  EC90  F01E         	call	_LCD_Cmd
  8434  003324                     
  8435                           ;./LCD_librery.h: 134:   _delay((unsigned long)((5)*(8000000/4000.0)));
  8436  003324  0E0D               	movlw	13
  8437  003326  6E05               	movwf	??_LCD_Begin^0,c
  8438  003328  0EFC               	movlw	252
  8439  00332A                     u5187:
  8440  00332A  2EE8               	decfsz	wreg,f,c
  8441  00332C  D7FE               	bra	u5187
  8442  00332E  2E05               	decfsz	??_LCD_Begin^0,f,c
  8443  003330  D7FC               	bra	u5187
  8444                           
  8445                           ;./LCD_librery.h: 135:   LCD_Cmd(0x20 | (2 << 2));
  8446  003332  0E28               	movlw	40
  8447  003334  EC90  F01E         	call	_LCD_Cmd
  8448  003338                     
  8449                           ;./LCD_librery.h: 136:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8450  003338  0E82               	movlw	130
  8451  00333A  6E05               	movwf	??_LCD_Begin^0,c
  8452  00333C  0EDE               	movlw	222
  8453  00333E                     u5197:
  8454  00333E  2EE8               	decfsz	wreg,f,c
  8455  003340  D7FE               	bra	u5197
  8456  003342  2E05               	decfsz	??_LCD_Begin^0,f,c
  8457  003344  D7FC               	bra	u5197
  8458  003346                     
  8459                           ;./LCD_librery.h: 137:   LCD_Cmd(0x0C);
  8460  003346  0E0C               	movlw	12
  8461  003348  EC90  F01E         	call	_LCD_Cmd
  8462                           
  8463                           ;./LCD_librery.h: 138:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8464  00334C  0E82               	movlw	130
  8465  00334E  6E05               	movwf	??_LCD_Begin^0,c
  8466  003350  0EDE               	movlw	222
  8467  003352                     u5207:
  8468  003352  2EE8               	decfsz	wreg,f,c
  8469  003354  D7FE               	bra	u5207
  8470  003356  2E05               	decfsz	??_LCD_Begin^0,f,c
  8471  003358  D7FC               	bra	u5207
  8472  00335A                     
  8473                           ;./LCD_librery.h: 139:   LCD_Cmd(0x01);
  8474  00335A  0E01               	movlw	1
  8475  00335C  EC90  F01E         	call	_LCD_Cmd
  8476  003360                     
  8477                           ;./LCD_librery.h: 140:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8478  003360  0E82               	movlw	130
  8479  003362  6E05               	movwf	??_LCD_Begin^0,c
  8480  003364  0EDE               	movlw	222
  8481  003366                     u5217:
  8482  003366  2EE8               	decfsz	wreg,f,c
  8483  003368  D7FE               	bra	u5217
  8484  00336A  2E05               	decfsz	??_LCD_Begin^0,f,c
  8485  00336C  D7FC               	bra	u5217
  8486                           
  8487                           ;./LCD_librery.h: 141:   LCD_Cmd(0x04 | 0x02);
  8488  00336E  0E06               	movlw	6
  8489  003370  EC90  F01E         	call	_LCD_Cmd
  8490  003374                     
  8491                           ;./LCD_librery.h: 142:   _delay((unsigned long)((50)*(8000000/4000.0)));
  8492  003374  0E82               	movlw	130
  8493  003376  6E05               	movwf	??_LCD_Begin^0,c
  8494  003378  0EDE               	movlw	222
  8495  00337A                     u5227:
  8496  00337A  2EE8               	decfsz	wreg,f,c
  8497  00337C  D7FE               	bra	u5227
  8498  00337E  2E05               	decfsz	??_LCD_Begin^0,f,c
  8499  003380  D7FC               	bra	u5227
  8500  003382                     
  8501                           ;./LCD_librery.h: 144:   LCD_Cmd(0x01);
  8502  003382  0E01               	movlw	1
  8503  003384  EC90  F01E         	call	_LCD_Cmd
  8504  003388  0012               	return		;funcret
  8505  00338A                     __end_of_LCD_Begin:
  8506                           	callstack 0
  8507                           
  8508 ;; *************** function _Imprimir_Cadena *****************
  8509 ;; Defined at:
  8510 ;;		line 216 in file "Main.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  a               2    0[COMRAM] int 
  8513 ;;  b               2    2[COMRAM] int 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;  i               2    5[COMRAM] int 
  8516 ;; Return value:  Size  Location     Type
  8517 ;;                  1    wreg      void 
  8518 ;; Registers used:
  8519 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8525 ;;      Params:         4       0       0       0       0       0       0       0       0
  8526 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8527 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8528 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8529 ;;Total ram usage:        7 bytes
  8530 ;; Hardware stack levels used: 1
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_main
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text33
  8539  003CD2                     __ptext33:
  8540                           	callstack 0
  8541  003CD2                     _Imprimir_Cadena:
  8542                           	callstack 30
  8543  003CD2                     
  8544                           ;Main.c: 216: void Imprimir_Cadena(int a, int b);Main.c: 217: {;Main.c: 218:     for (in
      +                          t i = a; i < b; i++)
  8545  003CD2  C001  F006         	movff	Imprimir_Cadena@a,Imprimir_Cadena@i
  8546  003CD6  C002  F007         	movff	Imprimir_Cadena@a+1,Imprimir_Cadena@i+1
  8547  003CDA  EF80  F01E         	goto	l4512
  8548  003CDE                     l223:
  8549                           
  8550                           ;Main.c: 221:         while (!TXSTAbits.TRMT) {
  8551  003CDE  A2AC               	btfss	172,1,c	;volatile
  8552  003CE0  EF74  F01E         	goto	u5071
  8553  003CE4  EF76  F01E         	goto	u5070
  8554  003CE8                     u5071:
  8555  003CE8  EF6F  F01E         	goto	l223
  8556  003CEC                     u5070:
  8557  003CEC                     
  8558                           ;Main.c: 224:             TXREG = buffer_TX[i];
  8559  003CEC  0E50               	movlw	low _buffer_TX
  8560  003CEE  2406               	addwf	Imprimir_Cadena@i^0,w,c
  8561  003CF0  6ED9               	movwf	fsr2l,c
  8562  003CF2  0E01               	movlw	high _buffer_TX
  8563  003CF4  2007               	addwfc	(Imprimir_Cadena@i+1)^0,w,c
  8564  003CF6  6EDA               	movwf	fsr2h,c
  8565  003CF8  50DF               	movf	indf2,w,c
  8566  003CFA  6EAD               	movwf	173,c	;volatile
  8567  003CFC                     
  8568                           ;Main.c: 225:     }
  8569  003CFC  4A06               	infsnz	Imprimir_Cadena@i^0,f,c
  8570  003CFE  2A07               	incf	(Imprimir_Cadena@i+1)^0,f,c
  8571  003D00                     l4512:
  8572  003D00  5003               	movf	Imprimir_Cadena@b^0,w,c
  8573  003D02  5C06               	subwf	Imprimir_Cadena@i^0,w,c
  8574  003D04  5007               	movf	(Imprimir_Cadena@i+1)^0,w,c
  8575  003D06  0A80               	xorlw	128
  8576  003D08  6E05               	movwf	??_Imprimir_Cadena^0,c
  8577  003D0A  5004               	movf	(Imprimir_Cadena@b+1)^0,w,c
  8578  003D0C  0A80               	xorlw	128
  8579  003D0E  5805               	subwfb	??_Imprimir_Cadena^0,w,c
  8580  003D10  A0D8               	btfss	status,0,c
  8581  003D12  EF8D  F01E         	goto	u5081
  8582  003D16  EF8F  F01E         	goto	u5080
  8583  003D1A                     u5081:
  8584  003D1A  EF6F  F01E         	goto	l223
  8585  003D1E                     u5080:
  8586  003D1E  0012               	return		;funcret
  8587  003D20                     __end_of_Imprimir_Cadena:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _I2C_Init *****************
  8591 ;; Defined at:
  8592 ;;		line 6 in file "I2C_librery.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  frecuencia      4   13[COMRAM] unsigned long 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0, cstack
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8606 ;;      Params:         4       0       0       0       0       0       0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8608 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8609 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8610 ;;Total ram usage:        8 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 1
  8613 ;; This function calls:
  8614 ;;		___lldiv
  8615 ;; This function is called by:
  8616 ;;		_main
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text34
  8621  003B70                     __ptext34:
  8622                           	callstack 0
  8623  003B70                     _I2C_Init:
  8624                           	callstack 29
  8625  003B70                     
  8626                           ;I2C_librery.c: 6: void I2C_Init (uint32_t frecuencia);I2C_librery.c: 7: {;I2C_librery.c
      +                          : 8:     TRISB|=(1<<0);
  8627  003B70  8093               	bsf	147,0,c	;volatile
  8628                           
  8629                           ;I2C_librery.c: 9:     TRISB|=(1<<1);
  8630  003B72  8293               	bsf	147,1,c	;volatile
  8631  003B74                     
  8632                           ;I2C_librery.c: 11:     SSPSTATbits.CKE=0;
  8633  003B74  9CC7               	bcf	199,6,c	;volatile
  8634  003B76                     
  8635                           ;I2C_librery.c: 16:     SSPSTATbits.SMP=1;
  8636  003B76  8EC7               	bsf	199,7,c	;volatile
  8637  003B78                     
  8638                           ;I2C_librery.c: 21:     SSPCON1bits.SSPEN=1;
  8639  003B78  8AC6               	bsf	198,5,c	;volatile
  8640  003B7A                     
  8641                           ;I2C_librery.c: 26:     SSPCON1bits.SSPM=0b1000;
  8642  003B7A  50C6               	movf	198,w,c	;volatile
  8643  003B7C  0BF0               	andlw	-16
  8644  003B7E  0908               	iorlw	8
  8645  003B80  6EC6               	movwf	198,c	;volatile
  8646  003B82                     
  8647                           ;I2C_librery.c: 35:     SSPCON2=0x00;
  8648  003B82  0E00               	movlw	0
  8649  003B84  6EC5               	movwf	197,c	;volatile
  8650  003B86                     
  8651                           ;I2C_librery.c: 37:     SSPADD = ((8000000/(4*frecuencia))-1);
  8652  003B86  0E00               	movlw	0
  8653  003B88  6E01               	movwf	___lldiv@dividend^0,c
  8654  003B8A  0E12               	movlw	18
  8655  003B8C  6E02               	movwf	(___lldiv@dividend+1)^0,c
  8656  003B8E  0E7A               	movlw	122
  8657  003B90  6E03               	movwf	(___lldiv@dividend+2)^0,c
  8658  003B92  0E00               	movlw	0
  8659  003B94  6E04               	movwf	(___lldiv@dividend+3)^0,c
  8660  003B96  C00E  F012         	movff	I2C_Init@frecuencia,??_I2C_Init
  8661  003B9A  C00F  F013         	movff	I2C_Init@frecuencia+1,??_I2C_Init+1
  8662  003B9E  C010  F014         	movff	I2C_Init@frecuencia+2,??_I2C_Init+2
  8663  003BA2  C011  F015         	movff	I2C_Init@frecuencia+3,??_I2C_Init+3
  8664  003BA6  0E02               	movlw	2
  8665  003BA8                     u5035:
  8666  003BA8  90D8               	bcf	status,0,c
  8667  003BAA  3612               	rlcf	??_I2C_Init^0,f,c
  8668  003BAC  3613               	rlcf	(??_I2C_Init+1)^0,f,c
  8669  003BAE  3614               	rlcf	(??_I2C_Init+2)^0,f,c
  8670  003BB0  3615               	rlcf	(??_I2C_Init+3)^0,f,c
  8671  003BB2  2EE8               	decfsz	wreg,f,c
  8672  003BB4  EFD4  F01D         	goto	u5035
  8673  003BB8  C012  F005         	movff	??_I2C_Init,___lldiv@divisor
  8674  003BBC  C013  F006         	movff	??_I2C_Init+1,___lldiv@divisor+1
  8675  003BC0  C014  F007         	movff	??_I2C_Init+2,___lldiv@divisor+2
  8676  003BC4  C015  F008         	movff	??_I2C_Init+3,___lldiv@divisor+3
  8677  003BC8  ECF5  F01B         	call	___lldiv	;wreg free
  8678  003BCC  0401               	decf	?___lldiv^0,w,c
  8679  003BCE  6EC8               	movwf	200,c	;volatile
  8680  003BD0  0012               	return		;funcret
  8681  003BD2                     __end_of_I2C_Init:
  8682                           	callstack 0
  8683                           
  8684 ;; *************** function ___lldiv *****************
  8685 ;; Defined at:
  8686 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  dividend        4    0[COMRAM] unsigned long 
  8689 ;;  divisor         4    4[COMRAM] unsigned long 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  quotient        4    8[COMRAM] unsigned long 
  8692 ;;  counter         1   12[COMRAM] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  4    0[COMRAM] unsigned long 
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8702 ;;      Params:         8       0       0       0       0       0       0       0       0
  8703 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8705 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8706 ;;Total ram usage:       13 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		_I2C_Init
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           	psect	text35
  8716  0037EA                     __ptext35:
  8717                           	callstack 0
  8718  0037EA                     ___lldiv:
  8719                           	callstack 29
  8720  0037EA  0E00               	movlw	0
  8721  0037EC  6E09               	movwf	___lldiv@quotient^0,c
  8722  0037EE  0E00               	movlw	0
  8723  0037F0  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  8724  0037F2  0E00               	movlw	0
  8725  0037F4  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  8726  0037F6  0E00               	movlw	0
  8727  0037F8  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  8728  0037FA  5005               	movf	___lldiv@divisor^0,w,c
  8729  0037FC  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  8730  0037FE  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  8731  003800  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  8732  003802  B4D8               	btfsc	status,2,c
  8733  003804  EF06  F01C         	goto	u4901
  8734  003808  EF08  F01C         	goto	u4900
  8735  00380C                     u4901:
  8736  00380C  EF3E  F01C         	goto	l271
  8737  003810                     u4900:
  8738  003810  0E01               	movlw	1
  8739  003812  6E0D               	movwf	___lldiv@counter^0,c
  8740  003814  EF12  F01C         	goto	l4322
  8741  003818                     l4320:
  8742  003818  90D8               	bcf	status,0,c
  8743  00381A  3605               	rlcf	___lldiv@divisor^0,f,c
  8744  00381C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  8745  00381E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  8746  003820  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  8747  003822  2A0D               	incf	___lldiv@counter^0,f,c
  8748  003824                     l4322:
  8749  003824  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  8750  003826  EF17  F01C         	goto	u4911
  8751  00382A  EF19  F01C         	goto	u4910
  8752  00382E                     u4911:
  8753  00382E  EF0C  F01C         	goto	l4320
  8754  003832                     u4910:
  8755  003832                     l4324:
  8756  003832  90D8               	bcf	status,0,c
  8757  003834  3609               	rlcf	___lldiv@quotient^0,f,c
  8758  003836  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8759  003838  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8760  00383A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8761  00383C  5005               	movf	___lldiv@divisor^0,w,c
  8762  00383E  5C01               	subwf	___lldiv@dividend^0,w,c
  8763  003840  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8764  003842  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  8765  003844  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8766  003846  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  8767  003848  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8768  00384A  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  8769  00384C  A0D8               	btfss	status,0,c
  8770  00384E  EF2B  F01C         	goto	u4921
  8771  003852  EF2D  F01C         	goto	u4920
  8772  003856                     u4921:
  8773  003856  EF36  F01C         	goto	l4332
  8774  00385A                     u4920:
  8775  00385A  5005               	movf	___lldiv@divisor^0,w,c
  8776  00385C  5E01               	subwf	___lldiv@dividend^0,f,c
  8777  00385E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  8778  003860  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  8779  003862  5007               	movf	(___lldiv@divisor+2)^0,w,c
  8780  003864  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  8781  003866  5008               	movf	(___lldiv@divisor+3)^0,w,c
  8782  003868  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  8783  00386A  8009               	bsf	___lldiv@quotient^0,0,c
  8784  00386C                     l4332:
  8785  00386C  90D8               	bcf	status,0,c
  8786  00386E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  8787  003870  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  8788  003872  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  8789  003874  3205               	rrcf	___lldiv@divisor^0,f,c
  8790  003876  2E0D               	decfsz	___lldiv@counter^0,f,c
  8791  003878  EF19  F01C         	goto	l4324
  8792  00387C                     l271:
  8793  00387C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  8794  003880  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  8795  003884  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  8796  003888  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  8797  00388C  0012               	return		;funcret
  8798  00388E                     __end_of___lldiv:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function _Establecer_Hora *****************
  8802 ;; Defined at:
  8803 ;;		line 130 in file "Main.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;		None
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      void 
  8810 ;; Registers used:
  8811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8819 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8820 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8821 ;;Total ram usage:        1 bytes
  8822 ;; Hardware stack levels used: 1
  8823 ;; Hardware stack levels required when called: 4
  8824 ;; This function calls:
  8825 ;;		_I2C_Ack
  8826 ;;		_I2C_NO_Ack
  8827 ;;		_I2C_ReStart
  8828 ;;		_I2C_Read
  8829 ;;		_I2C_Start
  8830 ;;		_I2C_Stop
  8831 ;;		_I2C_Write
  8832 ;;		_Reloj_Calendario
  8833 ;; This function is called by:
  8834 ;;		_main
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text36
  8839  0039BC                     __ptext36:
  8840                           	callstack 0
  8841  0039BC                     _Establecer_Hora:
  8842                           	callstack 26
  8843  0039BC                     
  8844                           ;Main.c: 132:     I2C_Start();
  8845  0039BC  EC13  F020         	call	_I2C_Start	;wreg free
  8846  0039C0                     
  8847                           ;Main.c: 133:     I2C_Write(0xD0);
  8848  0039C0  0ED0               	movlw	208
  8849  0039C2  ECC8  F01F         	call	_I2C_Write
  8850  0039C6                     
  8851                           ;Main.c: 134:     I2C_Write(0);
  8852  0039C6  0E00               	movlw	0
  8853  0039C8  ECC8  F01F         	call	_I2C_Write
  8854                           
  8855                           ;Main.c: 135:     I2C_ReStart();
  8856  0039CC  EC1C  F020         	call	_I2C_ReStart	;wreg free
  8857  0039D0                     
  8858                           ;Main.c: 136:     I2C_Write(0xD1);
  8859  0039D0  0ED1               	movlw	209
  8860  0039D2  ECC8  F01F         	call	_I2C_Write
  8861  0039D6                     
  8862                           ;Main.c: 137:     seconds=I2C_Read();
  8863  0039D6  ECDF  F01F         	call	_I2C_Read	;wreg free
  8864  0039DA  0100               	movlb	0	; () banked
  8865  0039DC  6FF3               	movwf	_seconds& (0+255),b
  8866  0039DE                     
  8867                           ; BSR set to: 0
  8868                           ;Main.c: 138:     I2C_Ack();
  8869  0039DE  ECF5  F01F         	call	_I2C_Ack	;wreg free
  8870  0039E2                     
  8871                           ;Main.c: 139:     minutes=I2C_Read();
  8872  0039E2  ECDF  F01F         	call	_I2C_Read	;wreg free
  8873  0039E6  0100               	movlb	0	; () banked
  8874  0039E8  6FF4               	movwf	_minutes& (0+255),b
  8875  0039EA                     
  8876                           ; BSR set to: 0
  8877                           ;Main.c: 140:     I2C_Ack();
  8878  0039EA  ECF5  F01F         	call	_I2C_Ack	;wreg free
  8879  0039EE                     
  8880                           ;Main.c: 141:     hours=I2C_Read();
  8881  0039EE  ECDF  F01F         	call	_I2C_Read	;wreg free
  8882  0039F2  0100               	movlb	0	; () banked
  8883  0039F4  6FF5               	movwf	_hours& (0+255),b
  8884  0039F6                     
  8885                           ; BSR set to: 0
  8886                           ;Main.c: 142:     I2C_Ack();
  8887  0039F6  ECF5  F01F         	call	_I2C_Ack	;wreg free
  8888  0039FA                     
  8889                           ;Main.c: 143:     I2C_Read();
  8890  0039FA  ECDF  F01F         	call	_I2C_Read	;wreg free
  8891  0039FE                     
  8892                           ;Main.c: 144:     I2C_Ack();
  8893  0039FE  ECF5  F01F         	call	_I2C_Ack	;wreg free
  8894  003A02                     
  8895                           ;Main.c: 145:     day=I2C_Read();
  8896  003A02  ECDF  F01F         	call	_I2C_Read	;wreg free
  8897  003A06  0100               	movlb	0	; () banked
  8898  003A08  6FF0               	movwf	_day& (0+255),b
  8899  003A0A                     
  8900                           ; BSR set to: 0
  8901                           ;Main.c: 146:     I2C_Ack();
  8902  003A0A  ECF5  F01F         	call	_I2C_Ack	;wreg free
  8903  003A0E                     
  8904                           ;Main.c: 147:     month=I2C_Read();
  8905  003A0E  ECDF  F01F         	call	_I2C_Read	;wreg free
  8906  003A12  0100               	movlb	0	; () banked
  8907  003A14  6FF1               	movwf	_month& (0+255),b
  8908  003A16                     
  8909                           ; BSR set to: 0
  8910                           ;Main.c: 148:     I2C_Ack();
  8911  003A16  ECF5  F01F         	call	_I2C_Ack	;wreg free
  8912  003A1A                     
  8913                           ;Main.c: 149:     year=I2C_Read();
  8914  003A1A  ECDF  F01F         	call	_I2C_Read	;wreg free
  8915  003A1E  0100               	movlb	0	; () banked
  8916  003A20  6FF2               	movwf	_year& (0+255),b
  8917  003A22                     
  8918                           ; BSR set to: 0
  8919                           ;Main.c: 150:     I2C_NO_Ack();
  8920  003A22  ECEA  F01F         	call	_I2C_NO_Ack	;wreg free
  8921  003A26                     
  8922                           ;Main.c: 151:     I2C_Stop();
  8923  003A26  EC0A  F020         	call	_I2C_Stop	;wreg free
  8924  003A2A                     
  8925                           ;Main.c: 153:     Reloj_Calendario();
  8926  003A2A  EC6C  F014         	call	_Reloj_Calendario	;wreg free
  8927  003A2E                     
  8928                           ;Main.c: 154:     _delay((unsigned long)((50)*(8000000/4000.0)));
  8929  003A2E  0E82               	movlw	130
  8930  003A30  6E09               	movwf	??_Establecer_Hora^0,c
  8931  003A32  0EDE               	movlw	222
  8932  003A34                     u5237:
  8933  003A34  2EE8               	decfsz	wreg,f,c
  8934  003A36  D7FE               	bra	u5237
  8935  003A38  2E09               	decfsz	??_Establecer_Hora^0,f,c
  8936  003A3A  D7FC               	bra	u5237
  8937  003A3C  0012               	return		;funcret
  8938  003A3E                     __end_of_Establecer_Hora:
  8939                           	callstack 0
  8940                           
  8941 ;; *************** function _Reloj_Calendario *****************
  8942 ;; Defined at:
  8943 ;;		line 79 in file "Main.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;		None
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;		None
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8957 ;;      Params:         0       0       0       0       0       0       0       0       0
  8958 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8960 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8961 ;;Total ram usage:        0 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; Hardware stack levels required when called: 3
  8964 ;; This function calls:
  8965 ;;		_BCD_a_Decimal
  8966 ;;		_LCD_Goto
  8967 ;;		_LCD_Print
  8968 ;;		___awdiv
  8969 ;;		___awmod
  8970 ;; This function is called by:
  8971 ;;		_Establecer_Hora
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text37
  8976  0028D8                     __ptext37:
  8977                           	callstack 0
  8978  0028D8                     _Reloj_Calendario:
  8979                           	callstack 26
  8980  0028D8                     
  8981                           ;Main.c: 81:     static char Time[] = "TIME: 00:00:00";;Main.c: 82:     static char Date
      +                          [] = "DATE: 00/00/2000";;Main.c: 84:     seconds = BCD_a_Decimal(seconds);
  8982  0028D8  0100               	movlb	0	; () banked
  8983  0028DA  51F3               	movf	_seconds& (0+255),w,b
  8984  0028DC  ECD4  F01F         	call	_BCD_a_Decimal
  8985  0028E0  0100               	movlb	0	; () banked
  8986  0028E2  6FF3               	movwf	_seconds& (0+255),b
  8987                           
  8988                           ;Main.c: 85:     minutes = BCD_a_Decimal(minutes);
  8989  0028E4  51F4               	movf	_minutes& (0+255),w,b
  8990  0028E6  ECD4  F01F         	call	_BCD_a_Decimal
  8991  0028EA  0100               	movlb	0	; () banked
  8992  0028EC  6FF4               	movwf	_minutes& (0+255),b
  8993                           
  8994                           ;Main.c: 86:     hours = BCD_a_Decimal(hours);
  8995  0028EE  51F5               	movf	_hours& (0+255),w,b
  8996  0028F0  ECD4  F01F         	call	_BCD_a_Decimal
  8997  0028F4  0100               	movlb	0	; () banked
  8998  0028F6  6FF5               	movwf	_hours& (0+255),b
  8999                           
  9000                           ;Main.c: 87:     day = BCD_a_Decimal(day);
  9001  0028F8  51F0               	movf	_day& (0+255),w,b
  9002  0028FA  ECD4  F01F         	call	_BCD_a_Decimal
  9003  0028FE  0100               	movlb	0	; () banked
  9004  002900  6FF0               	movwf	_day& (0+255),b
  9005                           
  9006                           ;Main.c: 88:     month = BCD_a_Decimal(month);
  9007  002902  51F1               	movf	_month& (0+255),w,b
  9008  002904  ECD4  F01F         	call	_BCD_a_Decimal
  9009  002908  0100               	movlb	0	; () banked
  9010  00290A  6FF1               	movwf	_month& (0+255),b
  9011                           
  9012                           ;Main.c: 89:     year = BCD_a_Decimal(year);
  9013  00290C  51F2               	movf	_year& (0+255),w,b
  9014  00290E  ECD4  F01F         	call	_BCD_a_Decimal
  9015  002912  0100               	movlb	0	; () banked
  9016  002914  6FF2               	movwf	_year& (0+255),b
  9017  002916                     
  9018                           ; BSR set to: 0
  9019                           ;Main.c: 91:     Time[6] = hours / 10 + '0';
  9020  002916  C0F5  F001         	movff	_hours,___awdiv@dividend
  9021  00291A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9022  00291C  0E00               	movlw	0
  9023  00291E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9024  002920  0E0A               	movlw	10
  9025  002922  6E03               	movwf	___awdiv@divisor^0,c
  9026  002924  EC8D  F01A         	call	___awdiv	;wreg free
  9027  002928  5001               	movf	?___awdiv^0,w,c
  9028  00292A  0F30               	addlw	48
  9029  00292C  0100               	movlb	0	; () banked
  9030  00292E  6FD6               	movwf	(Reloj_Calendario@Time+6)& (0+255),b
  9031  002930                     
  9032                           ; BSR set to: 0
  9033                           ;Main.c: 92:     Time[7] = hours % 10 + '0';
  9034  002930  C0F5  F001         	movff	_hours,___awmod@dividend
  9035  002934  6A02               	clrf	(___awmod@dividend+1)^0,c
  9036  002936  0E00               	movlw	0
  9037  002938  6E04               	movwf	(___awmod@divisor+1)^0,c
  9038  00293A  0E0A               	movlw	10
  9039  00293C  6E03               	movwf	___awmod@divisor^0,c
  9040  00293E  EC48  F01B         	call	___awmod	;wreg free
  9041  002942  5001               	movf	?___awmod^0,w,c
  9042  002944  0F30               	addlw	48
  9043  002946  0100               	movlb	0	; () banked
  9044  002948  6FD7               	movwf	(Reloj_Calendario@Time+7)& (0+255),b
  9045  00294A                     
  9046                           ; BSR set to: 0
  9047                           ;Main.c: 93:     Time[9] = minutes / 10 + '0';
  9048  00294A  C0F4  F001         	movff	_minutes,___awdiv@dividend
  9049  00294E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9050  002950  0E00               	movlw	0
  9051  002952  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9052  002954  0E0A               	movlw	10
  9053  002956  6E03               	movwf	___awdiv@divisor^0,c
  9054  002958  EC8D  F01A         	call	___awdiv	;wreg free
  9055  00295C  5001               	movf	?___awdiv^0,w,c
  9056  00295E  0F30               	addlw	48
  9057  002960  0100               	movlb	0	; () banked
  9058  002962  6FD9               	movwf	(Reloj_Calendario@Time+9)& (0+255),b
  9059  002964                     
  9060                           ; BSR set to: 0
  9061                           ;Main.c: 94:     Time[10]= minutes % 10 + '0';
  9062  002964  C0F4  F001         	movff	_minutes,___awmod@dividend
  9063  002968  6A02               	clrf	(___awmod@dividend+1)^0,c
  9064  00296A  0E00               	movlw	0
  9065  00296C  6E04               	movwf	(___awmod@divisor+1)^0,c
  9066  00296E  0E0A               	movlw	10
  9067  002970  6E03               	movwf	___awmod@divisor^0,c
  9068  002972  EC48  F01B         	call	___awmod	;wreg free
  9069  002976  5001               	movf	?___awmod^0,w,c
  9070  002978  0F30               	addlw	48
  9071  00297A  0100               	movlb	0	; () banked
  9072  00297C  6FDA               	movwf	(Reloj_Calendario@Time+10)& (0+255),b
  9073  00297E                     
  9074                           ; BSR set to: 0
  9075                           ;Main.c: 95:     Time[12]= seconds / 10 + '0';
  9076  00297E  C0F3  F001         	movff	_seconds,___awdiv@dividend
  9077  002982  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9078  002984  0E00               	movlw	0
  9079  002986  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9080  002988  0E0A               	movlw	10
  9081  00298A  6E03               	movwf	___awdiv@divisor^0,c
  9082  00298C  EC8D  F01A         	call	___awdiv	;wreg free
  9083  002990  5001               	movf	?___awdiv^0,w,c
  9084  002992  0F30               	addlw	48
  9085  002994  0100               	movlb	0	; () banked
  9086  002996  6FDC               	movwf	(Reloj_Calendario@Time+12)& (0+255),b
  9087  002998                     
  9088                           ; BSR set to: 0
  9089                           ;Main.c: 96:     Time[13]= seconds % 10 + '0';
  9090  002998  C0F3  F001         	movff	_seconds,___awmod@dividend
  9091  00299C  6A02               	clrf	(___awmod@dividend+1)^0,c
  9092  00299E  0E00               	movlw	0
  9093  0029A0  6E04               	movwf	(___awmod@divisor+1)^0,c
  9094  0029A2  0E0A               	movlw	10
  9095  0029A4  6E03               	movwf	___awmod@divisor^0,c
  9096  0029A6  EC48  F01B         	call	___awmod	;wreg free
  9097  0029AA  5001               	movf	?___awmod^0,w,c
  9098  0029AC  0F30               	addlw	48
  9099  0029AE  0100               	movlb	0	; () banked
  9100  0029B0  6FDD               	movwf	(Reloj_Calendario@Time+13)& (0+255),b
  9101  0029B2                     
  9102                           ; BSR set to: 0
  9103                           ;Main.c: 98:     Date[6] = day / 10 + '0';
  9104  0029B2  C0F0  F001         	movff	_day,___awdiv@dividend
  9105  0029B6  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9106  0029B8  0E00               	movlw	0
  9107  0029BA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9108  0029BC  0E0A               	movlw	10
  9109  0029BE  6E03               	movwf	___awdiv@divisor^0,c
  9110  0029C0  EC8D  F01A         	call	___awdiv	;wreg free
  9111  0029C4  5001               	movf	?___awdiv^0,w,c
  9112  0029C6  0F30               	addlw	48
  9113  0029C8  0100               	movlb	0	; () banked
  9114  0029CA  6FC5               	movwf	(Reloj_Calendario@Date+6)& (0+255),b
  9115  0029CC                     
  9116                           ; BSR set to: 0
  9117                           ;Main.c: 99:     Date[7] = day % 10 + '0';
  9118  0029CC  C0F0  F001         	movff	_day,___awmod@dividend
  9119  0029D0  6A02               	clrf	(___awmod@dividend+1)^0,c
  9120  0029D2  0E00               	movlw	0
  9121  0029D4  6E04               	movwf	(___awmod@divisor+1)^0,c
  9122  0029D6  0E0A               	movlw	10
  9123  0029D8  6E03               	movwf	___awmod@divisor^0,c
  9124  0029DA  EC48  F01B         	call	___awmod	;wreg free
  9125  0029DE  5001               	movf	?___awmod^0,w,c
  9126  0029E0  0F30               	addlw	48
  9127  0029E2  0100               	movlb	0	; () banked
  9128  0029E4  6FC6               	movwf	(Reloj_Calendario@Date+7)& (0+255),b
  9129  0029E6                     
  9130                           ; BSR set to: 0
  9131                           ;Main.c: 100:     Date[9] = month / 10 + '0';
  9132  0029E6  C0F1  F001         	movff	_month,___awdiv@dividend
  9133  0029EA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9134  0029EC  0E00               	movlw	0
  9135  0029EE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9136  0029F0  0E0A               	movlw	10
  9137  0029F2  6E03               	movwf	___awdiv@divisor^0,c
  9138  0029F4  EC8D  F01A         	call	___awdiv	;wreg free
  9139  0029F8  5001               	movf	?___awdiv^0,w,c
  9140  0029FA  0F30               	addlw	48
  9141  0029FC  0100               	movlb	0	; () banked
  9142  0029FE  6FC8               	movwf	(Reloj_Calendario@Date+9)& (0+255),b
  9143  002A00                     
  9144                           ; BSR set to: 0
  9145                           ;Main.c: 101:     Date[10]= month % 10 + '0';
  9146  002A00  C0F1  F001         	movff	_month,___awmod@dividend
  9147  002A04  6A02               	clrf	(___awmod@dividend+1)^0,c
  9148  002A06  0E00               	movlw	0
  9149  002A08  6E04               	movwf	(___awmod@divisor+1)^0,c
  9150  002A0A  0E0A               	movlw	10
  9151  002A0C  6E03               	movwf	___awmod@divisor^0,c
  9152  002A0E  EC48  F01B         	call	___awmod	;wreg free
  9153  002A12  5001               	movf	?___awmod^0,w,c
  9154  002A14  0F30               	addlw	48
  9155  002A16  0100               	movlb	0	; () banked
  9156  002A18  6FC9               	movwf	(Reloj_Calendario@Date+10)& (0+255),b
  9157  002A1A                     
  9158                           ; BSR set to: 0
  9159                           ;Main.c: 102:     Date[14]= year / 10 + '0';
  9160  002A1A  C0F2  F001         	movff	_year,___awdiv@dividend
  9161  002A1E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  9162  002A20  0E00               	movlw	0
  9163  002A22  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9164  002A24  0E0A               	movlw	10
  9165  002A26  6E03               	movwf	___awdiv@divisor^0,c
  9166  002A28  EC8D  F01A         	call	___awdiv	;wreg free
  9167  002A2C  5001               	movf	?___awdiv^0,w,c
  9168  002A2E  0F30               	addlw	48
  9169  002A30  0100               	movlb	0	; () banked
  9170  002A32  6FCD               	movwf	(Reloj_Calendario@Date+14)& (0+255),b
  9171  002A34                     
  9172                           ; BSR set to: 0
  9173                           ;Main.c: 103:     Date[15]= year % 10 + '0';
  9174  002A34  C0F2  F001         	movff	_year,___awmod@dividend
  9175  002A38  6A02               	clrf	(___awmod@dividend+1)^0,c
  9176  002A3A  0E00               	movlw	0
  9177  002A3C  6E04               	movwf	(___awmod@divisor+1)^0,c
  9178  002A3E  0E0A               	movlw	10
  9179  002A40  6E03               	movwf	___awmod@divisor^0,c
  9180  002A42  EC48  F01B         	call	___awmod	;wreg free
  9181  002A46  5001               	movf	?___awmod^0,w,c
  9182  002A48  0F30               	addlw	48
  9183  002A4A  0100               	movlb	0	; () banked
  9184  002A4C  6FCE               	movwf	(Reloj_Calendario@Date+15)& (0+255),b
  9185  002A4E                     
  9186                           ; BSR set to: 0
  9187                           ;Main.c: 105:     LCD_Goto(1, 1);
  9188  002A4E  0E01               	movlw	1
  9189  002A50  6E05               	movwf	LCD_Goto@row^0,c
  9190  002A52  0E01               	movlw	1
  9191  002A54  EC1F  F01D         	call	_LCD_Goto
  9192  002A58                     
  9193                           ;Main.c: 106:     LCD_Print(Time);
  9194  002A58  0ED0               	movlw	low Reloj_Calendario@Time
  9195  002A5A  6E03               	movwf	LCD_Print@LCD_Str^0,c
  9196  002A5C  0E00               	movlw	high Reloj_Calendario@Time
  9197  002A5E  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  9198  002A60  ECEF  F01A         	call	_LCD_Print	;wreg free
  9199  002A64                     
  9200                           ;Main.c: 107:     LCD_Goto(1, 2);
  9201  002A64  0E02               	movlw	2
  9202  002A66  6E05               	movwf	LCD_Goto@row^0,c
  9203  002A68  0E01               	movlw	1
  9204  002A6A  EC1F  F01D         	call	_LCD_Goto
  9205  002A6E                     
  9206                           ;Main.c: 108:     LCD_Print(Date);
  9207  002A6E  0EBF               	movlw	low Reloj_Calendario@Date
  9208  002A70  6E03               	movwf	LCD_Print@LCD_Str^0,c
  9209  002A72  0E00               	movlw	high Reloj_Calendario@Date
  9210  002A74  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  9211  002A76  ECEF  F01A         	call	_LCD_Print	;wreg free
  9212  002A7A                     
  9213                           ;Main.c: 110:     buffer_TX[25] = Time[6];
  9214  002A7A  C0D6  F169         	movff	Reloj_Calendario@Time+6,_buffer_TX+25
  9215  002A7E                     
  9216                           ;Main.c: 111:     buffer_TX[26] = Time[7];
  9217  002A7E  C0D7  F16A         	movff	Reloj_Calendario@Time+7,_buffer_TX+26
  9218  002A82                     
  9219                           ;Main.c: 112:     buffer_TX[28] = Time[9];
  9220  002A82  C0D9  F16C         	movff	Reloj_Calendario@Time+9,_buffer_TX+28
  9221  002A86                     
  9222                           ;Main.c: 113:     buffer_TX[29] = Time[10];
  9223  002A86  C0DA  F16D         	movff	Reloj_Calendario@Time+10,_buffer_TX+29
  9224  002A8A                     
  9225                           ;Main.c: 114:     buffer_TX[31] = Time[12];
  9226  002A8A  C0DC  F16F         	movff	Reloj_Calendario@Time+12,_buffer_TX+31
  9227  002A8E                     
  9228                           ;Main.c: 115:     buffer_TX[32] = Time[13];
  9229  002A8E  C0DD  F170         	movff	Reloj_Calendario@Time+13,_buffer_TX+32
  9230  002A92                     
  9231                           ;Main.c: 117:     buffer_TX[40] = Date[6];
  9232  002A92  C0C5  F178         	movff	Reloj_Calendario@Date+6,_buffer_TX+40
  9233  002A96                     
  9234                           ;Main.c: 118:     buffer_TX[41] = Date[7];
  9235  002A96  C0C6  F179         	movff	Reloj_Calendario@Date+7,_buffer_TX+41
  9236  002A9A                     
  9237                           ;Main.c: 119:     buffer_TX[43] = Date[9];
  9238  002A9A  C0C8  F17B         	movff	Reloj_Calendario@Date+9,_buffer_TX+43
  9239  002A9E                     
  9240                           ;Main.c: 120:     buffer_TX[44] = Date[10];
  9241  002A9E  C0C9  F17C         	movff	Reloj_Calendario@Date+10,_buffer_TX+44
  9242  002AA2                     
  9243                           ;Main.c: 121:     buffer_TX[46] = Date[14];
  9244  002AA2  C0CD  F17E         	movff	Reloj_Calendario@Date+14,_buffer_TX+46
  9245  002AA6                     
  9246                           ;Main.c: 122:     buffer_TX[47] = Date[15];
  9247  002AA6  C0CE  F17F         	movff	Reloj_Calendario@Date+15,_buffer_TX+47
  9248  002AAA  0012               	return		;funcret
  9249  002AAC                     __end_of_Reloj_Calendario:
  9250                           	callstack 0
  9251                           
  9252 ;; *************** function ___awmod *****************
  9253 ;; Defined at:
  9254 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  dividend        2    0[COMRAM] int 
  9257 ;;  divisor         2    2[COMRAM] int 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;  sign            1    5[COMRAM] unsigned char 
  9260 ;;  counter         1    4[COMRAM] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    0[COMRAM] int 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9270 ;;      Params:         4       0       0       0       0       0       0       0       0
  9271 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9273 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9274 ;;Total ram usage:        6 bytes
  9275 ;; Hardware stack levels used: 1
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_Reloj_Calendario
  9280 ;;		_efgtoa
  9281 ;;		_Decimal_a_BCD
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text38
  9286  003690                     __ptext38:
  9287                           	callstack 0
  9288  003690                     ___awmod:
  9289                           	callstack 25
  9290  003690  0E00               	movlw	0
  9291  003692  6E06               	movwf	___awmod@sign^0,c
  9292  003694  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9293  003696  EF51  F01B         	goto	u3510
  9294  00369A  EF4F  F01B         	goto	u3511
  9295  00369E                     u3511:
  9296  00369E  EF57  F01B         	goto	l3486
  9297  0036A2                     u3510:
  9298  0036A2  6C01               	negf	___awmod@dividend^0,c
  9299  0036A4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9300  0036A6  B0D8               	btfsc	status,0,c
  9301  0036A8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9302  0036AA  0E01               	movlw	1
  9303  0036AC  6E06               	movwf	___awmod@sign^0,c
  9304  0036AE                     l3486:
  9305  0036AE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9306  0036B0  EF5E  F01B         	goto	u3520
  9307  0036B4  EF5C  F01B         	goto	u3521
  9308  0036B8                     u3521:
  9309  0036B8  EF62  F01B         	goto	l3490
  9310  0036BC                     u3520:
  9311  0036BC  6C03               	negf	___awmod@divisor^0,c
  9312  0036BE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9313  0036C0  B0D8               	btfsc	status,0,c
  9314  0036C2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9315  0036C4                     l3490:
  9316  0036C4  5003               	movf	___awmod@divisor^0,w,c
  9317  0036C6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9318  0036C8  B4D8               	btfsc	status,2,c
  9319  0036CA  EF69  F01B         	goto	u3531
  9320  0036CE  EF6B  F01B         	goto	u3530
  9321  0036D2                     u3531:
  9322  0036D2  EF8F  F01B         	goto	l3506
  9323  0036D6                     u3530:
  9324  0036D6  0E01               	movlw	1
  9325  0036D8  6E05               	movwf	___awmod@counter^0,c
  9326  0036DA  EF73  F01B         	goto	l3496
  9327  0036DE                     l3494:
  9328  0036DE  90D8               	bcf	status,0,c
  9329  0036E0  3603               	rlcf	___awmod@divisor^0,f,c
  9330  0036E2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9331  0036E4  2A05               	incf	___awmod@counter^0,f,c
  9332  0036E6                     l3496:
  9333  0036E6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9334  0036E8  EF78  F01B         	goto	u3541
  9335  0036EC  EF7A  F01B         	goto	u3540
  9336  0036F0                     u3541:
  9337  0036F0  EF6F  F01B         	goto	l3494
  9338  0036F4                     u3540:
  9339  0036F4                     l3498:
  9340  0036F4  5003               	movf	___awmod@divisor^0,w,c
  9341  0036F6  5C01               	subwf	___awmod@dividend^0,w,c
  9342  0036F8  5004               	movf	(___awmod@divisor+1)^0,w,c
  9343  0036FA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9344  0036FC  A0D8               	btfss	status,0,c
  9345  0036FE  EF83  F01B         	goto	u3551
  9346  003702  EF85  F01B         	goto	u3550
  9347  003706                     u3551:
  9348  003706  EF89  F01B         	goto	l3502
  9349  00370A                     u3550:
  9350  00370A  5003               	movf	___awmod@divisor^0,w,c
  9351  00370C  5E01               	subwf	___awmod@dividend^0,f,c
  9352  00370E  5004               	movf	(___awmod@divisor+1)^0,w,c
  9353  003710  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9354  003712                     l3502:
  9355  003712  90D8               	bcf	status,0,c
  9356  003714  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9357  003716  3203               	rrcf	___awmod@divisor^0,f,c
  9358  003718  2E05               	decfsz	___awmod@counter^0,f,c
  9359  00371A  EF7A  F01B         	goto	l3498
  9360  00371E                     l3506:
  9361  00371E  5006               	movf	___awmod@sign^0,w,c
  9362  003720  B4D8               	btfsc	status,2,c
  9363  003722  EF95  F01B         	goto	u3561
  9364  003726  EF97  F01B         	goto	u3560
  9365  00372A                     u3561:
  9366  00372A  EF9B  F01B         	goto	l3510
  9367  00372E                     u3560:
  9368  00372E  6C01               	negf	___awmod@dividend^0,c
  9369  003730  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9370  003732  B0D8               	btfsc	status,0,c
  9371  003734  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9372  003736                     l3510:
  9373  003736  C001  F001         	movff	___awmod@dividend,?___awmod
  9374  00373A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9375  00373E  0012               	return		;funcret
  9376  003740                     __end_of___awmod:
  9377                           	callstack 0
  9378                           
  9379 ;; *************** function ___awdiv *****************
  9380 ;; Defined at:
  9381 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  dividend        2    0[COMRAM] int 
  9384 ;;  divisor         2    2[COMRAM] int 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;  quotient        2    6[COMRAM] int 
  9387 ;;  sign            1    5[COMRAM] unsigned char 
  9388 ;;  counter         1    4[COMRAM] unsigned char 
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  2    0[COMRAM] int 
  9391 ;; Registers used:
  9392 ;;		wreg, status,2, status,0
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9398 ;;      Params:         4       0       0       0       0       0       0       0       0
  9399 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9401 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9402 ;;Total ram usage:        8 bytes
  9403 ;; Hardware stack levels used: 1
  9404 ;; This function calls:
  9405 ;;		Nothing
  9406 ;; This function is called by:
  9407 ;;		_Reloj_Calendario
  9408 ;;		_efgtoa
  9409 ;;		_Decimal_a_BCD
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	text39
  9414  00351A                     __ptext39:
  9415                           	callstack 0
  9416  00351A                     ___awdiv:
  9417                           	callstack 25
  9418  00351A  0E00               	movlw	0
  9419  00351C  6E06               	movwf	___awdiv@sign^0,c
  9420  00351E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9421  003520  EF96  F01A         	goto	u3450
  9422  003524  EF94  F01A         	goto	u3451
  9423  003528                     u3451:
  9424  003528  EF9C  F01A         	goto	l3442
  9425  00352C                     u3450:
  9426  00352C  6C03               	negf	___awdiv@divisor^0,c
  9427  00352E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9428  003530  B0D8               	btfsc	status,0,c
  9429  003532  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9430  003534  0E01               	movlw	1
  9431  003536  6E06               	movwf	___awdiv@sign^0,c
  9432  003538                     l3442:
  9433  003538  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9434  00353A  EFA3  F01A         	goto	u3460
  9435  00353E  EFA1  F01A         	goto	u3461
  9436  003542                     u3461:
  9437  003542  EFA9  F01A         	goto	l3448
  9438  003546                     u3460:
  9439  003546  6C01               	negf	___awdiv@dividend^0,c
  9440  003548  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9441  00354A  B0D8               	btfsc	status,0,c
  9442  00354C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9443  00354E  0E01               	movlw	1
  9444  003550  1A06               	xorwf	___awdiv@sign^0,f,c
  9445  003552                     l3448:
  9446  003552  0E00               	movlw	0
  9447  003554  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9448  003556  0E00               	movlw	0
  9449  003558  6E07               	movwf	___awdiv@quotient^0,c
  9450  00355A  5003               	movf	___awdiv@divisor^0,w,c
  9451  00355C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9452  00355E  B4D8               	btfsc	status,2,c
  9453  003560  EFB4  F01A         	goto	u3471
  9454  003564  EFB6  F01A         	goto	u3470
  9455  003568                     u3471:
  9456  003568  EFDE  F01A         	goto	l3470
  9457  00356C                     u3470:
  9458  00356C  0E01               	movlw	1
  9459  00356E  6E05               	movwf	___awdiv@counter^0,c
  9460  003570  EFBE  F01A         	goto	l3456
  9461  003574                     l3454:
  9462  003574  90D8               	bcf	status,0,c
  9463  003576  3603               	rlcf	___awdiv@divisor^0,f,c
  9464  003578  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9465  00357A  2A05               	incf	___awdiv@counter^0,f,c
  9466  00357C                     l3456:
  9467  00357C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9468  00357E  EFC3  F01A         	goto	u3481
  9469  003582  EFC5  F01A         	goto	u3480
  9470  003586                     u3481:
  9471  003586  EFBA  F01A         	goto	l3454
  9472  00358A                     u3480:
  9473  00358A                     l3458:
  9474  00358A  90D8               	bcf	status,0,c
  9475  00358C  3607               	rlcf	___awdiv@quotient^0,f,c
  9476  00358E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9477  003590  5003               	movf	___awdiv@divisor^0,w,c
  9478  003592  5C01               	subwf	___awdiv@dividend^0,w,c
  9479  003594  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9480  003596  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9481  003598  A0D8               	btfss	status,0,c
  9482  00359A  EFD1  F01A         	goto	u3491
  9483  00359E  EFD3  F01A         	goto	u3490
  9484  0035A2                     u3491:
  9485  0035A2  EFD8  F01A         	goto	l3466
  9486  0035A6                     u3490:
  9487  0035A6  5003               	movf	___awdiv@divisor^0,w,c
  9488  0035A8  5E01               	subwf	___awdiv@dividend^0,f,c
  9489  0035AA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9490  0035AC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9491  0035AE  8007               	bsf	___awdiv@quotient^0,0,c
  9492  0035B0                     l3466:
  9493  0035B0  90D8               	bcf	status,0,c
  9494  0035B2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9495  0035B4  3203               	rrcf	___awdiv@divisor^0,f,c
  9496  0035B6  2E05               	decfsz	___awdiv@counter^0,f,c
  9497  0035B8  EFC5  F01A         	goto	l3458
  9498  0035BC                     l3470:
  9499  0035BC  5006               	movf	___awdiv@sign^0,w,c
  9500  0035BE  B4D8               	btfsc	status,2,c
  9501  0035C0  EFE4  F01A         	goto	u3501
  9502  0035C4  EFE6  F01A         	goto	u3500
  9503  0035C8                     u3501:
  9504  0035C8  EFEA  F01A         	goto	l3474
  9505  0035CC                     u3500:
  9506  0035CC  6C07               	negf	___awdiv@quotient^0,c
  9507  0035CE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9508  0035D0  B0D8               	btfsc	status,0,c
  9509  0035D2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9510  0035D4                     l3474:
  9511  0035D4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9512  0035D8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9513  0035DC  0012               	return		;funcret
  9514  0035DE                     __end_of___awdiv:
  9515                           	callstack 0
  9516                           
  9517 ;; *************** function _LCD_Print *****************
  9518 ;; Defined at:
  9519 ;;		line 98 in file "./LCD_librery.h"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;  LCD_Str         2    2[COMRAM] PTR unsigned char 
  9522 ;;		 -> STR_3(2), Mostrar_Temperatura@temperatura(4), STR_1(13), Reloj_Calendario@Date(17), 
  9523 ;;		 -> Reloj_Calendario@Time(15), 
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;  i               1    7[COMRAM] unsigned char 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      void 
  9528 ;; Registers used:
  9529 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9535 ;;      Params:         2       0       0       0       0       0       0       0       0
  9536 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9537 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9538 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9539 ;;Total ram usage:        6 bytes
  9540 ;; Hardware stack levels used: 1
  9541 ;; Hardware stack levels required when called: 1
  9542 ;; This function calls:
  9543 ;;		_LCD_Write_Nibble
  9544 ;; This function is called by:
  9545 ;;		_Reloj_Calendario
  9546 ;;		_Mostrar_Temperatura
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           	psect	text40
  9551  0035DE                     __ptext40:
  9552                           	callstack 0
  9553  0035DE                     _LCD_Print:
  9554                           	callstack 28
  9555  0035DE                     
  9556                           ;./LCD_librery.h: 98: void LCD_Print(char* LCD_Str);./LCD_librery.h: 99: {;./LCD_librery
      +                          .h: 100:   uint8_t i = 0;
  9557  0035DE  0E00               	movlw	0
  9558  0035E0  6E08               	movwf	LCD_Print@i^0,c
  9559  0035E2                     
  9560                           ;./LCD_librery.h: 101:   RS = 1;
  9561  0035E2  0100               	movlb	0	; () banked
  9562  0035E4  81FA               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  9563                           
  9564                           ;./LCD_librery.h: 102:   while(LCD_Str[i] != '\0')
  9565  0035E6  EF29  F01B         	goto	l4202
  9566  0035EA                     l4198:
  9567                           
  9568                           ;./LCD_librery.h: 103:   {;./LCD_librery.h: 104:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  9569  0035EA  5008               	movf	LCD_Print@i^0,w,c
  9570  0035EC  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  9571  0035EE  6E05               	movwf	??_LCD_Print^0,c
  9572  0035F0  0E00               	movlw	0
  9573  0035F2  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  9574  0035F4  6E06               	movwf	(??_LCD_Print+1)^0,c
  9575  0035F6  C005  FFF6         	movff	??_LCD_Print,tblptrl
  9576  0035FA  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  9577  0035FE  6AF8               	clrf	tblptru,c
  9578  003600  0E07               	movlw	(high __ramtop+-1)
  9579  003602  64F7               	cpfsgt	tblptrh,c
  9580  003604  D003               	bra	u4717
  9581  003606  0008               	tblrd		*
  9582  003608  50F5               	movf	tablat,w,c
  9583  00360A  D005               	bra	u4710
  9584  00360C                     u4717:
  9585  00360C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9586  003610  CFF7 FFE2          	movff	tblptrh,fsr1h
  9587  003614  50E7               	movf	indf1,w,c
  9588  003616                     u4710:
  9589  003616  6E07               	movwf	(??_LCD_Print+2)^0,c
  9590  003618  3807               	swapf	(??_LCD_Print+2)^0,w,c
  9591  00361A  0B0F               	andlw	15
  9592  00361C  EC95  F01C         	call	_LCD_Write_Nibble
  9593                           
  9594                           ;./LCD_librery.h: 105:     LCD_Write_Nibble(LCD_Str[i++] );
  9595  003620  5008               	movf	LCD_Print@i^0,w,c
  9596  003622  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  9597  003624  6E05               	movwf	??_LCD_Print^0,c
  9598  003626  0E00               	movlw	0
  9599  003628  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  9600  00362A  6E06               	movwf	(??_LCD_Print+1)^0,c
  9601  00362C  C005  FFF6         	movff	??_LCD_Print,tblptrl
  9602  003630  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  9603  003634  6AF8               	clrf	tblptru,c
  9604  003636  0E07               	movlw	(high __ramtop+-1)
  9605  003638  64F7               	cpfsgt	tblptrh,c
  9606  00363A  D003               	bra	u4727
  9607  00363C  0008               	tblrd		*
  9608  00363E  50F5               	movf	tablat,w,c
  9609  003640  D005               	bra	u4720
  9610  003642                     u4727:
  9611  003642  CFF6 FFE1          	movff	tblptrl,fsr1l
  9612  003646  CFF7 FFE2          	movff	tblptrh,fsr1h
  9613  00364A  50E7               	movf	indf1,w,c
  9614  00364C                     u4720:
  9615  00364C  EC95  F01C         	call	_LCD_Write_Nibble
  9616  003650  2A08               	incf	LCD_Print@i^0,f,c
  9617  003652                     l4202:
  9618                           
  9619                           ;./LCD_librery.h: 102:   while(LCD_Str[i] != '\0')
  9620  003652  5008               	movf	LCD_Print@i^0,w,c
  9621  003654  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  9622  003656  6E05               	movwf	??_LCD_Print^0,c
  9623  003658  0E00               	movlw	0
  9624  00365A  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  9625  00365C  6E06               	movwf	(??_LCD_Print+1)^0,c
  9626  00365E  C005  FFF6         	movff	??_LCD_Print,tblptrl
  9627  003662  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  9628  003666  6AF8               	clrf	tblptru,c
  9629  003668  0E07               	movlw	(high __ramtop+-1)
  9630  00366A  64F7               	cpfsgt	tblptrh,c
  9631  00366C  D003               	bra	u4737
  9632  00366E  0008               	tblrd		*
  9633  003670  50F5               	movf	tablat,w,c
  9634  003672  D005               	bra	u4730
  9635  003674                     u4737:
  9636  003674  CFF6 FFE1          	movff	tblptrl,fsr1l
  9637  003678  CFF7 FFE2          	movff	tblptrh,fsr1h
  9638  00367C  50E7               	movf	indf1,w,c
  9639  00367E                     u4730:
  9640  00367E  0900               	iorlw	0
  9641  003680  A4D8               	btfss	status,2,c
  9642  003682  EF45  F01B         	goto	u4741
  9643  003686  EF47  F01B         	goto	u4740
  9644  00368A                     u4741:
  9645  00368A  EFF5  F01A         	goto	l4198
  9646  00368E                     u4740:
  9647  00368E  0012               	return		;funcret
  9648  003690                     __end_of_LCD_Print:
  9649                           	callstack 0
  9650                           
  9651 ;; *************** function _LCD_Goto *****************
  9652 ;; Defined at:
  9653 ;;		line 72 in file "./LCD_librery.h"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  col             1    wreg     unsigned char 
  9656 ;;  row             1    4[COMRAM] unsigned char 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  col             1    7[COMRAM] unsigned char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg, status,2, status,0, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9668 ;;      Params:         1       0       0       0       0       0       0       0       0
  9669 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9670 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9671 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9672 ;;Total ram usage:        4 bytes
  9673 ;; Hardware stack levels used: 1
  9674 ;; Hardware stack levels required when called: 2
  9675 ;; This function calls:
  9676 ;;		_LCD_Cmd
  9677 ;; This function is called by:
  9678 ;;		_Reloj_Calendario
  9679 ;;		_Mostrar_Temperatura
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           	psect	text41
  9684  003A3E                     __ptext41:
  9685                           	callstack 0
  9686  003A3E                     _LCD_Goto:
  9687                           	callstack 27
  9688                           
  9689                           ;incstack = 0
  9690                           ;LCD_Goto@col stored from wreg
  9691  003A3E  6E08               	movwf	LCD_Goto@col^0,c
  9692  003A40                     
  9693                           ;./LCD_librery.h: 72: void LCD_Goto(uint8_t col, uint8_t row);./LCD_librery.h: 73: {;./L
      +                          CD_librery.h: 74:   switch(row)
  9694  003A40  EF3A  F01D         	goto	l4188
  9695  003A44                     l4180:
  9696                           
  9697                           ;./LCD_librery.h: 77:       LCD_Cmd(0xC0 + col - 1);
  9698  003A44  5008               	movf	LCD_Goto@col^0,w,c
  9699  003A46  0FBF               	addlw	191
  9700  003A48  EC90  F01E         	call	_LCD_Cmd
  9701                           
  9702                           ;./LCD_librery.h: 78:       break;
  9703  003A4C  EF53  F01D         	goto	l162
  9704  003A50                     l4182:
  9705                           
  9706                           ;./LCD_librery.h: 80:       LCD_Cmd(0x94 + col - 1);
  9707  003A50  5008               	movf	LCD_Goto@col^0,w,c
  9708  003A52  0F93               	addlw	147
  9709  003A54  EC90  F01E         	call	_LCD_Cmd
  9710                           
  9711                           ;./LCD_librery.h: 81:       break;
  9712  003A58  EF53  F01D         	goto	l162
  9713  003A5C                     l4184:
  9714                           
  9715                           ;./LCD_librery.h: 83:       LCD_Cmd(0xD4 + col - 1);
  9716  003A5C  5008               	movf	LCD_Goto@col^0,w,c
  9717  003A5E  0FD3               	addlw	211
  9718  003A60  EC90  F01E         	call	_LCD_Cmd
  9719                           
  9720                           ;./LCD_librery.h: 84:     break;
  9721  003A64  EF53  F01D         	goto	l162
  9722  003A68                     l4186:
  9723                           
  9724                           ;./LCD_librery.h: 86:       LCD_Cmd(0x80 + col - 1);
  9725  003A68  5008               	movf	LCD_Goto@col^0,w,c
  9726  003A6A  0F7F               	addlw	127
  9727  003A6C  EC90  F01E         	call	_LCD_Cmd
  9728                           
  9729                           ;./LCD_librery.h: 87:   }
  9730  003A70  EF53  F01D         	goto	l162
  9731  003A74                     l4188:
  9732  003A74  5005               	movf	LCD_Goto@row^0,w,c
  9733  003A76  6E06               	movwf	??_LCD_Goto^0,c
  9734  003A78  6A07               	clrf	(??_LCD_Goto+1)^0,c
  9735                           
  9736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9737                           ; Switch size 1, requested type "simple"
  9738                           ; Number of cases is 1, Range of values is 0 to 0
  9739                           ; switch strategies available:
  9740                           ; Name         Instructions Cycles
  9741                           ; simple_byte            4     3 (average)
  9742                           ;	Chosen strategy is simple_byte
  9743  003A7A  5007               	movf	(??_LCD_Goto+1)^0,w,c
  9744  003A7C  0A00               	xorlw	0	; case 0
  9745  003A7E  B4D8               	btfsc	status,2,c
  9746  003A80  EF44  F01D         	goto	l4626
  9747  003A84  EF34  F01D         	goto	l4186
  9748  003A88                     l4626:
  9749                           
  9750                           ; Switch size 1, requested type "simple"
  9751                           ; Number of cases is 3, Range of values is 2 to 4
  9752                           ; switch strategies available:
  9753                           ; Name         Instructions Cycles
  9754                           ; simple_byte           10     6 (average)
  9755                           ;	Chosen strategy is simple_byte
  9756  003A88  5006               	movf	??_LCD_Goto^0,w,c
  9757  003A8A  0A02               	xorlw	2	; case 2
  9758  003A8C  B4D8               	btfsc	status,2,c
  9759  003A8E  EF22  F01D         	goto	l4180
  9760  003A92  0A01               	xorlw	1	; case 3
  9761  003A94  B4D8               	btfsc	status,2,c
  9762  003A96  EF28  F01D         	goto	l4182
  9763  003A9A  0A07               	xorlw	7	; case 4
  9764  003A9C  B4D8               	btfsc	status,2,c
  9765  003A9E  EF2E  F01D         	goto	l4184
  9766  003AA2  EF34  F01D         	goto	l4186
  9767  003AA6                     l162:
  9768  003AA6  0012               	return		;funcret
  9769  003AA8                     __end_of_LCD_Goto:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function _LCD_Cmd *****************
  9773 ;; Defined at:
  9774 ;;		line 63 in file "./LCD_librery.h"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  Command         1    wreg     unsigned char 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;  Command         1    3[COMRAM] unsigned char 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0, cstack
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9788 ;;      Params:         0       0       0       0       0       0       0       0       0
  9789 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9790 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9791 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9792 ;;Total ram usage:        2 bytes
  9793 ;; Hardware stack levels used: 1
  9794 ;; Hardware stack levels required when called: 1
  9795 ;; This function calls:
  9796 ;;		_LCD_Write_Nibble
  9797 ;; This function is called by:
  9798 ;;		_LCD_Goto
  9799 ;;		_LCD_Begin
  9800 ;;		_LCD_Clear
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803                           
  9804                           	psect	text42
  9805  003D20                     __ptext42:
  9806                           	callstack 0
  9807  003D20                     _LCD_Cmd:
  9808                           	callstack 27
  9809                           
  9810                           ;incstack = 0
  9811                           ;LCD_Cmd@Command stored from wreg
  9812  003D20  6E04               	movwf	LCD_Cmd@Command^0,c
  9813  003D22                     
  9814                           ;./LCD_librery.h: 63: void LCD_Cmd(uint8_t Command);./LCD_librery.h: 64: {;./LCD_librery
      +                          .h: 65:   RS = 0;
  9815  003D22  0100               	movlb	0	; () banked
  9816  003D24  91FA               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  9817  003D26                     
  9818                           ; BSR set to: 0
  9819                           ;./LCD_librery.h: 66:   LCD_Write_Nibble(Command >> 4);
  9820  003D26  3804               	swapf	LCD_Cmd@Command^0,w,c
  9821  003D28  0B0F               	andlw	15
  9822  003D2A  EC95  F01C         	call	_LCD_Write_Nibble
  9823                           
  9824                           ;./LCD_librery.h: 67:   LCD_Write_Nibble(Command);
  9825  003D2E  5004               	movf	LCD_Cmd@Command^0,w,c
  9826  003D30  EC95  F01C         	call	_LCD_Write_Nibble
  9827  003D34                     
  9828                           ;./LCD_librery.h: 68:   if((Command == 0x01) || (Command == 0x02))
  9829  003D34  0404               	decf	LCD_Cmd@Command^0,w,c
  9830  003D36  B4D8               	btfsc	status,2,c
  9831  003D38  EFA0  F01E         	goto	u4591
  9832  003D3C  EFA2  F01E         	goto	u4590
  9833  003D40                     u4591:
  9834  003D40  EFAB  F01E         	goto	l4088
  9835  003D44                     u4590:
  9836  003D44  0E02               	movlw	2
  9837  003D46  1804               	xorwf	LCD_Cmd@Command^0,w,c
  9838  003D48  A4D8               	btfss	status,2,c
  9839  003D4A  EFA9  F01E         	goto	u4601
  9840  003D4E  EFAB  F01E         	goto	u4600
  9841  003D52                     u4601:
  9842  003D52  EFB3  F01E         	goto	l153
  9843  003D56                     u4600:
  9844  003D56                     l4088:
  9845                           
  9846                           ;./LCD_librery.h: 69:     _delay((unsigned long)((2)*(8000000/4000.0)));
  9847  003D56  0E06               	movlw	6
  9848  003D58  6E03               	movwf	??_LCD_Cmd^0,c
  9849  003D5A  0E30               	movlw	48
  9850  003D5C                     u5247:
  9851  003D5C  2EE8               	decfsz	wreg,f,c
  9852  003D5E  D7FE               	bra	u5247
  9853  003D60  2E03               	decfsz	??_LCD_Cmd^0,f,c
  9854  003D62  D7FC               	bra	u5247
  9855  003D64  D000               	nop2	
  9856  003D66                     l153:
  9857  003D66  0012               	return		;funcret
  9858  003D68                     __end_of_LCD_Cmd:
  9859                           	callstack 0
  9860                           
  9861 ;; *************** function _LCD_Write_Nibble *****************
  9862 ;; Defined at:
  9863 ;;		line 46 in file "./LCD_librery.h"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  n               1    wreg     unsigned char 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  n               1    1[COMRAM] unsigned char 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9877 ;;      Params:         0       0       0       0       0       0       0       0       0
  9878 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9879 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9880 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9881 ;;Total ram usage:        2 bytes
  9882 ;; Hardware stack levels used: 1
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_LCD_Cmd
  9887 ;;		_LCD_Print
  9888 ;;		_LCD_PutC
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891                           
  9892                           	psect	text43
  9893  00392A                     __ptext43:
  9894                           	callstack 0
  9895  00392A                     _LCD_Write_Nibble:
  9896                           	callstack 28
  9897                           
  9898                           ;incstack = 0
  9899                           ;LCD_Write_Nibble@n stored from wreg
  9900  00392A  6E02               	movwf	LCD_Write_Nibble@n^0,c
  9901  00392C                     
  9902                           ;./LCD_librery.h: 46: void LCD_Write_Nibble(uint8_t n);./LCD_librery.h: 47: {;./LCD_libr
      +                          ery.h: 48:   LATCbits.LC0 = RS;
  9903  00392C  0100               	movlb	0	; () banked
  9904  00392E  A1FA               	btfss	(_RS/(0+8))& (0+255),_RS& (0+7),b
  9905  003930  D002               	bra	u4015
  9906  003932  808B               	bsf	139,0,c	;volatile
  9907  003934  D001               	bra	u4017
  9908  003936                     u4015:
  9909  003936  908B               	bcf	139,0,c	;volatile
  9910  003938                     u4017:
  9911  003938                     
  9912                           ;./LCD_librery.h: 49:   LATDbits.LD4 = n & 0x01;
  9913  003938  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9914  00393C  0E01               	movlw	1
  9915  00393E  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9916  003940  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  9917  003942  508C               	movf	140,w,c	;volatile
  9918  003944  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9919  003946  0BEF               	andlw	-17
  9920  003948  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9921  00394A  6E8C               	movwf	140,c	;volatile
  9922                           
  9923                           ;./LCD_librery.h: 50:   LATDbits.LD5 = (n >> 1) & 0x01;
  9924  00394C  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9925  003950  90D8               	bcf	status,0,c
  9926  003952  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9927  003954  0E01               	movlw	1
  9928  003956  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9929  003958  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  9930  00395A  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  9931  00395C  508C               	movf	140,w,c	;volatile
  9932  00395E  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9933  003960  0BDF               	andlw	-33
  9934  003962  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9935  003964  6E8C               	movwf	140,c	;volatile
  9936                           
  9937                           ;./LCD_librery.h: 51:   LATDbits.LD6 = (n >> 2) & 0x01;
  9938  003966  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9939  00396A  90D8               	bcf	status,0,c
  9940  00396C  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9941  00396E  90D8               	bcf	status,0,c
  9942  003970  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9943  003972  0E01               	movlw	1
  9944  003974  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9945  003976  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  9946  003978  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  9947  00397A  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  9948  00397C  508C               	movf	140,w,c	;volatile
  9949  00397E  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9950  003980  0BBF               	andlw	-65
  9951  003982  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9952  003984  6E8C               	movwf	140,c	;volatile
  9953                           
  9954                           ;./LCD_librery.h: 52:   LATDbits.LD7 = (n >> 3) & 0x01;
  9955  003986  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  9956  00398A  90D8               	bcf	status,0,c
  9957  00398C  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9958  00398E  90D8               	bcf	status,0,c
  9959  003990  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9960  003992  90D8               	bcf	status,0,c
  9961  003994  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9962  003996  0E01               	movlw	1
  9963  003998  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  9964  00399A  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9965  00399C  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  9966  00399E  508C               	movf	140,w,c	;volatile
  9967  0039A0  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9968  0039A2  0B7F               	andlw	-129
  9969  0039A4  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  9970  0039A6  6E8C               	movwf	140,c	;volatile
  9971  0039A8                     
  9972                           ;./LCD_librery.h: 55:   LATCbits.LC1 = 0;
  9973  0039A8  928B               	bcf	139,1,c	;volatile
  9974  0039AA                     
  9975                           ;./LCD_librery.h: 56:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  9976  0039AA  D000               	nop2		;2 cycle nop
  9977  0039AC                     
  9978                           ;./LCD_librery.h: 57:   LATCbits.LC1 = 1;
  9979  0039AC  828B               	bsf	139,1,c	;volatile
  9980  0039AE                     
  9981                           ;./LCD_librery.h: 58:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  9982  0039AE  D000               	nop2		;2 cycle nop
  9983  0039B0                     
  9984                           ;./LCD_librery.h: 59:   LATCbits.LC1 = 0;
  9985  0039B0  928B               	bcf	139,1,c	;volatile
  9986  0039B2                     
  9987                           ;./LCD_librery.h: 60:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  9988  0039B2  0E42               	movlw	66
  9989  0039B4                     u5257:
  9990  0039B4  2EE8               	decfsz	wreg,f,c
  9991  0039B6  D7FE               	bra	u5257
  9992  0039B8  D000               	nop2	
  9993  0039BA  0012               	return		;funcret
  9994  0039BC                     __end_of_LCD_Write_Nibble:
  9995                           	callstack 0
  9996                           
  9997 ;; *************** function _BCD_a_Decimal *****************
  9998 ;; Defined at:
  9999 ;;		line 58 in file "Main.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  numero          1    wreg     unsigned char 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  numero          1    1[COMRAM] unsigned char 
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      unsigned char 
 10006 ;; Registers used:
 10007 ;;		wreg, status,2, status,0, prodl, prodh
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10013 ;;      Params:         0       0       0       0       0       0       0       0       0
 10014 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10015 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10016 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10017 ;;Total ram usage:        2 bytes
 10018 ;; Hardware stack levels used: 1
 10019 ;; This function calls:
 10020 ;;		Nothing
 10021 ;; This function is called by:
 10022 ;;		_Reloj_Calendario
 10023 ;; This function uses a non-reentrant model
 10024 ;;
 10025                           
 10026                           	psect	text44
 10027  003FA8                     __ptext44:
 10028                           	callstack 0
 10029  003FA8                     _BCD_a_Decimal:
 10030                           	callstack 28
 10031                           
 10032                           ;incstack = 0
 10033                           ;BCD_a_Decimal@numero stored from wreg
 10034  003FA8  6E02               	movwf	BCD_a_Decimal@numero^0,c
 10035  003FAA                     
 10036                           ;Main.c: 58: uint8_t BCD_a_Decimal (uint8_t numero);Main.c: 59: {;Main.c: 60:   return (
      +                          (numero >> 4) * 10 + (numero & 0x0F));
 10037  003FAA  C002  F001         	movff	BCD_a_Decimal@numero,??_BCD_a_Decimal
 10038  003FAE  0E0F               	movlw	15
 10039  003FB0  1601               	andwf	??_BCD_a_Decimal^0,f,c
 10040  003FB2  3802               	swapf	BCD_a_Decimal@numero^0,w,c
 10041  003FB4  0B0F               	andlw	15
 10042  003FB6  0D0A               	mullw	10
 10043  003FB8  50F3               	movf	243,w,c
 10044  003FBA  2401               	addwf	??_BCD_a_Decimal^0,w,c
 10045  003FBC  0012               	return		;funcret
 10046  003FBE                     __end_of_BCD_a_Decimal:
 10047                           	callstack 0
 10048                           
 10049 ;; *************** function _I2C_Write *****************
 10050 ;; Defined at:
 10051 ;;		line 117 in file "I2C_librery.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;  data            1    wreg     unsigned char 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;  data            1    0[COMRAM] unsigned char 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  1    wreg      void 
 10058 ;; Registers used:
 10059 ;;		wreg
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10065 ;;      Params:         0       0       0       0       0       0       0       0       0
 10066 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10068 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10069 ;;Total ram usage:        1 bytes
 10070 ;; Hardware stack levels used: 1
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_Establecer_Hora
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text45
 10079  003F90                     __ptext45:
 10080                           	callstack 0
 10081  003F90                     _I2C_Write:
 10082                           	callstack 29
 10083                           
 10084                           ;incstack = 0
 10085                           ;I2C_Write@data stored from wreg
 10086  003F90  6E01               	movwf	I2C_Write@data^0,c
 10087  003F92                     
 10088                           ;I2C_librery.c: 117: void I2C_Write (uint8_t data);I2C_librery.c: 118: {;I2C_librery.c: 
      +                          119:     PIR1bits.SSPIF=0;
 10089  003F92  969E               	bcf	158,3,c	;volatile
 10090  003F94                     
 10091                           ;I2C_librery.c: 123:     SSPBUF=data;
 10092  003F94  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
 10093  003F98                     l52:
 10094  003F98  A69E               	btfss	158,3,c	;volatile
 10095  003F9A  EFD1  F01F         	goto	u4811
 10096  003F9E  EFD3  F01F         	goto	u4810
 10097  003FA2                     u4811:
 10098  003FA2  EFCC  F01F         	goto	l52
 10099  003FA6                     u4810:
 10100  003FA6  0012               	return		;funcret
 10101  003FA8                     __end_of_I2C_Write:
 10102                           	callstack 0
 10103                           
 10104 ;; *************** function _I2C_Stop *****************
 10105 ;; Defined at:
 10106 ;;		line 64 in file "I2C_librery.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;		None
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;		None
 10111 ;; Return value:  Size  Location     Type
 10112 ;;                  1    wreg      void 
 10113 ;; Registers used:
 10114 ;;		None
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10120 ;;      Params:         0       0       0       0       0       0       0       0       0
 10121 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10122 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10123 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10124 ;;Total ram usage:        0 bytes
 10125 ;; Hardware stack levels used: 1
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		_Establecer_Hora
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text46
 10134  004014                     __ptext46:
 10135                           	callstack 0
 10136  004014                     _I2C_Stop:
 10137                           	callstack 29
 10138  004014                     
 10139                           ;I2C_librery.c: 66:     SSPCON2bits.PEN=1;
 10140  004014  84C5               	bsf	197,2,c	;volatile
 10141  004016                     l34:
 10142  004016  B4C5               	btfsc	197,2,c	;volatile
 10143  004018  EF10  F020         	goto	u4781
 10144  00401C  EF12  F020         	goto	u4780
 10145  004020                     u4781:
 10146  004020  EF0B  F020         	goto	l34
 10147  004024                     u4780:
 10148  004024  0012               	return		;funcret
 10149  004026                     __end_of_I2C_Stop:
 10150                           	callstack 0
 10151                           
 10152 ;; *************** function _I2C_Start *****************
 10153 ;; Defined at:
 10154 ;;		line 42 in file "I2C_librery.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;		None
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;		None
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  1    wreg      void 
 10161 ;; Registers used:
 10162 ;;		None
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10168 ;;      Params:         0       0       0       0       0       0       0       0       0
 10169 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10170 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10171 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10172 ;;Total ram usage:        0 bytes
 10173 ;; Hardware stack levels used: 1
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		_Establecer_Hora
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text47
 10182  004026                     __ptext47:
 10183                           	callstack 0
 10184  004026                     _I2C_Start:
 10185                           	callstack 29
 10186  004026                     
 10187                           ;I2C_librery.c: 44:     SSPCON2bits.SEN=1;
 10188  004026  80C5               	bsf	197,0,c	;volatile
 10189  004028                     l22:
 10190  004028  B0C5               	btfsc	197,0,c	;volatile
 10191  00402A  EF19  F020         	goto	u4761
 10192  00402E  EF1B  F020         	goto	u4760
 10193  004032                     u4761:
 10194  004032  EF14  F020         	goto	l22
 10195  004036                     u4760:
 10196  004036  0012               	return		;funcret
 10197  004038                     __end_of_I2C_Start:
 10198                           	callstack 0
 10199                           
 10200 ;; *************** function _I2C_Read *****************
 10201 ;; Defined at:
 10202 ;;		line 130 in file "I2C_librery.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;		None
 10205 ;; Auto vars:     Size  Location     Type
 10206 ;;		None
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  1    wreg      unsigned char 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2
 10211 ;; Tracked objects:
 10212 ;;		On entry : 0/0
 10213 ;;		On exit  : 0/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10216 ;;      Params:         0       0       0       0       0       0       0       0       0
 10217 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10218 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10219 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10220 ;;Total ram usage:        0 bytes
 10221 ;; Hardware stack levels used: 1
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_Establecer_Hora
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229                           	psect	text48
 10230  003FBE                     __ptext48:
 10231                           	callstack 0
 10232  003FBE                     _I2C_Read:
 10233                           	callstack 29
 10234  003FBE                     
 10235                           ;I2C_librery.c: 132:     PIR1bits.SSPIF=0;
 10236  003FBE  969E               	bcf	158,3,c	;volatile
 10237                           
 10238                           ;I2C_librery.c: 136:     SSPCON2bits.RCEN=1;
 10239  003FC0  86C5               	bsf	197,3,c	;volatile
 10240  003FC2                     l58:
 10241  003FC2  A69E               	btfss	158,3,c	;volatile
 10242  003FC4  EFE6  F01F         	goto	u4821
 10243  003FC8  EFE8  F01F         	goto	u4820
 10244  003FCC                     u4821:
 10245  003FCC  EFE1  F01F         	goto	l58
 10246  003FD0                     u4820:
 10247  003FD0                     
 10248                           ;I2C_librery.c: 143:     return SSPBUF;
 10249  003FD0  50C9               	movf	201,w,c	;volatile
 10250  003FD2  0012               	return		;funcret
 10251  003FD4                     __end_of_I2C_Read:
 10252                           	callstack 0
 10253                           
 10254 ;; *************** function _I2C_ReStart *****************
 10255 ;; Defined at:
 10256 ;;		line 53 in file "I2C_librery.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;		None
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1    wreg      void 
 10263 ;; Registers used:
 10264 ;;		None
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10270 ;;      Params:         0       0       0       0       0       0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10273 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10274 ;;Total ram usage:        0 bytes
 10275 ;; Hardware stack levels used: 1
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_Establecer_Hora
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text49
 10284  004038                     __ptext49:
 10285                           	callstack 0
 10286  004038                     _I2C_ReStart:
 10287                           	callstack 29
 10288  004038                     
 10289                           ;I2C_librery.c: 55:     SSPCON2bits.RSEN=1;
 10290  004038  82C5               	bsf	197,1,c	;volatile
 10291  00403A                     l28:
 10292  00403A  B2C5               	btfsc	197,1,c	;volatile
 10293  00403C  EF22  F020         	goto	u4771
 10294  004040  EF24  F020         	goto	u4770
 10295  004044                     u4771:
 10296  004044  EF1D  F020         	goto	l28
 10297  004048                     u4770:
 10298  004048  0012               	return		;funcret
 10299  00404A                     __end_of_I2C_ReStart:
 10300                           	callstack 0
 10301                           
 10302 ;; *************** function _I2C_NO_Ack *****************
 10303 ;; Defined at:
 10304 ;;		line 96 in file "I2C_librery.c"
 10305 ;; Parameters:    Size  Location     Type
 10306 ;;		None
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;		None
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		None
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10318 ;;      Params:         0       0       0       0       0       0       0       0       0
 10319 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10321 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10322 ;;Total ram usage:        0 bytes
 10323 ;; Hardware stack levels used: 1
 10324 ;; This function calls:
 10325 ;;		Nothing
 10326 ;; This function is called by:
 10327 ;;		_Establecer_Hora
 10328 ;; This function uses a non-reentrant model
 10329 ;;
 10330                           
 10331                           	psect	text50
 10332  003FD4                     __ptext50:
 10333                           	callstack 0
 10334  003FD4                     _I2C_NO_Ack:
 10335                           	callstack 29
 10336  003FD4                     
 10337                           ;I2C_librery.c: 98:     PIR1bits.SSPIF=0;
 10338  003FD4  969E               	bcf	158,3,c	;volatile
 10339                           
 10340                           ;I2C_librery.c: 102:     SSPCON2bits.ACKDT=1;
 10341  003FD6  8AC5               	bsf	197,5,c	;volatile
 10342                           
 10343                           ;I2C_librery.c: 107:     SSPCON2bits.ACKEN=1;
 10344  003FD8  88C5               	bsf	197,4,c	;volatile
 10345  003FDA                     l46:
 10346  003FDA  A69E               	btfss	158,3,c	;volatile
 10347  003FDC  EFF2  F01F         	goto	u4801
 10348  003FE0  EFF4  F01F         	goto	u4800
 10349  003FE4                     u4801:
 10350  003FE4  EFED  F01F         	goto	l46
 10351  003FE8                     u4800:
 10352  003FE8  0012               	return		;funcret
 10353  003FEA                     __end_of_I2C_NO_Ack:
 10354                           	callstack 0
 10355                           
 10356 ;; *************** function _I2C_Ack *****************
 10357 ;; Defined at:
 10358 ;;		line 75 in file "I2C_librery.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;		None
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		None
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10372 ;;      Params:         0       0       0       0       0       0       0       0       0
 10373 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10375 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10376 ;;Total ram usage:        0 bytes
 10377 ;; Hardware stack levels used: 1
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_Establecer_Hora
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text51
 10386  003FEA                     __ptext51:
 10387                           	callstack 0
 10388  003FEA                     _I2C_Ack:
 10389                           	callstack 29
 10390  003FEA                     
 10391                           ;I2C_librery.c: 77:     PIR1bits.SSPIF=0;
 10392  003FEA  969E               	bcf	158,3,c	;volatile
 10393                           
 10394                           ;I2C_librery.c: 81:     SSPCON2bits.ACKDT=0;
 10395  003FEC  9AC5               	bcf	197,5,c	;volatile
 10396                           
 10397                           ;I2C_librery.c: 86:     SSPCON2bits.ACKEN=1;
 10398  003FEE  88C5               	bsf	197,4,c	;volatile
 10399  003FF0                     l40:
 10400  003FF0  A69E               	btfss	158,3,c	;volatile
 10401  003FF2  EFFD  F01F         	goto	u4791
 10402  003FF6  EFFF  F01F         	goto	u4790
 10403  003FFA                     u4791:
 10404  003FFA  EFF8  F01F         	goto	l40
 10405  003FFE                     u4790:
 10406  003FFE  0012               	return		;funcret
 10407  004000                     __end_of_I2C_Ack:
 10408                           	callstack 0
 10409                           
 10410 ;; *************** function _ADC_Init *****************
 10411 ;; Defined at:
 10412 ;;		line 4 in file "adc_header.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10426 ;;      Params:         0       0       0       0       0       0       0       0       0
 10427 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10428 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10429 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10430 ;;Total ram usage:        0 bytes
 10431 ;; Hardware stack levels used: 1
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_main
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text52
 10440  004000                     __ptext52:
 10441                           	callstack 0
 10442  004000                     _ADC_Init:
 10443                           	callstack 30
 10444  004000                     
 10445                           ;adc_header.c: 6:     TRISA = 0xFF;
 10446  004000  6892               	setf	146,c	;volatile
 10447  004002                     
 10448                           ;adc_header.c: 7:     ADCON1 = 0x0E;
 10449  004002  0E0E               	movlw	14
 10450  004004  6EC1               	movwf	193,c	;volatile
 10451                           
 10452                           ;adc_header.c: 8:     ADCON2 = 0x92;
 10453  004006  0E92               	movlw	146
 10454  004008  6EC0               	movwf	192,c	;volatile
 10455                           
 10456                           ;adc_header.c: 9:     ADRESH=0;
 10457  00400A  0E00               	movlw	0
 10458  00400C  6EC4               	movwf	196,c	;volatile
 10459                           
 10460                           ;adc_header.c: 10:     ADRESL=0;
 10461  00400E  0E00               	movlw	0
 10462  004010  6EC3               	movwf	195,c	;volatile
 10463  004012  0012               	return		;funcret
 10464  004014                     __end_of_ADC_Init:
 10465                           	callstack 0
 10466                           
 10467                           	psect	rparam
 10468  0000                     
 10469                           	psect	idloc
 10470                           
 10471                           ;Config register IDLOC0 @ 0x200000
 10472                           ;	unspecified, using default values
 10473  200000                     	org	2097152
 10474  200000  FF                 	db	255
 10475                           
 10476                           ;Config register IDLOC1 @ 0x200001
 10477                           ;	unspecified, using default values
 10478  200001                     	org	2097153
 10479  200001  FF                 	db	255
 10480                           
 10481                           ;Config register IDLOC2 @ 0x200002
 10482                           ;	unspecified, using default values
 10483  200002                     	org	2097154
 10484  200002  FF                 	db	255
 10485                           
 10486                           ;Config register IDLOC3 @ 0x200003
 10487                           ;	unspecified, using default values
 10488  200003                     	org	2097155
 10489  200003  FF                 	db	255
 10490                           
 10491                           ;Config register IDLOC4 @ 0x200004
 10492                           ;	unspecified, using default values
 10493  200004                     	org	2097156
 10494  200004  FF                 	db	255
 10495                           
 10496                           ;Config register IDLOC5 @ 0x200005
 10497                           ;	unspecified, using default values
 10498  200005                     	org	2097157
 10499  200005  FF                 	db	255
 10500                           
 10501                           ;Config register IDLOC6 @ 0x200006
 10502                           ;	unspecified, using default values
 10503  200006                     	org	2097158
 10504  200006  FF                 	db	255
 10505                           
 10506                           ;Config register IDLOC7 @ 0x200007
 10507                           ;	unspecified, using default values
 10508  200007                     	org	2097159
 10509  200007  FF                 	db	255
 10510                           
 10511                           	psect	config
 10512                           
 10513                           ;Config register CONFIG1L @ 0x300000
 10514                           ;	PLL Prescaler Selection bits
 10515                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10516                           ;	System Clock Postscaler Selection bits
 10517                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10518                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10519                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10520  300000                     	org	3145728
 10521  300000  00                 	db	0
 10522                           
 10523                           ;Config register CONFIG1H @ 0x300001
 10524                           ;	Oscillator Selection bits
 10525                           ;	FOSC = HS, HS oscillator (HS)
 10526                           ;	Fail-Safe Clock Monitor Enable bit
 10527                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10528                           ;	Internal/External Oscillator Switchover bit
 10529                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10530  300001                     	org	3145729
 10531  300001  0C                 	db	12
 10532                           
 10533                           ;Config register CONFIG2L @ 0x300002
 10534                           ;	Power-up Timer Enable bit
 10535                           ;	PWRT = OFF, PWRT disabled
 10536                           ;	Brown-out Reset Enable bits
 10537                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10538                           ;	Brown-out Reset Voltage bits
 10539                           ;	BORV = 3, Minimum setting 2.05V
 10540                           ;	USB Voltage Regulator Enable bit
 10541                           ;	VREGEN = OFF, USB voltage regulator disabled
 10542  300002                     	org	3145730
 10543  300002  19                 	db	25
 10544                           
 10545                           ;Config register CONFIG2H @ 0x300003
 10546                           ;	Watchdog Timer Enable bit
 10547                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10548                           ;	Watchdog Timer Postscale Select bits
 10549                           ;	WDTPS = 32768, 1:32768
 10550  300003                     	org	3145731
 10551  300003  1E                 	db	30
 10552                           
 10553                           ; Padding undefined space
 10554  300004                     	org	3145732
 10555  300004  FF                 	db	255
 10556                           
 10557                           ;Config register CONFIG3H @ 0x300005
 10558                           ;	CCP2 MUX bit
 10559                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10560                           ;	PORTB A/D Enable bit
 10561                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10562                           ;	Low-Power Timer 1 Oscillator Enable bit
 10563                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10564                           ;	MCLR Pin Enable bit
 10565                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10566  300005                     	org	3145733
 10567  300005  83                 	db	131
 10568                           
 10569                           ;Config register CONFIG4L @ 0x300006
 10570                           ;	Stack Full/Underflow Reset Enable bit
 10571                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10572                           ;	Single-Supply ICSP Enable bit
 10573                           ;	LVP = OFF, Single-Supply ICSP disabled
 10574                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10575                           ;	ICPRT = OFF, ICPORT disabled
 10576                           ;	Extended Instruction Set Enable bit
 10577                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10578                           ;	Background Debugger Enable bit
 10579                           ;	DEBUG = 0x1, unprogrammed default
 10580  300006                     	org	3145734
 10581  300006  81                 	db	129
 10582                           
 10583                           ; Padding undefined space
 10584  300007                     	org	3145735
 10585  300007  FF                 	db	255
 10586                           
 10587                           ;Config register CONFIG5L @ 0x300008
 10588                           ;	Code Protection bit
 10589                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10590                           ;	Code Protection bit
 10591                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10592                           ;	Code Protection bit
 10593                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10594                           ;	Code Protection bit
 10595                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10596  300008                     	org	3145736
 10597  300008  0F                 	db	15
 10598                           
 10599                           ;Config register CONFIG5H @ 0x300009
 10600                           ;	Boot Block Code Protection bit
 10601                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10602                           ;	Data EEPROM Code Protection bit
 10603                           ;	CPD = OFF, Data EEPROM is not code-protected
 10604  300009                     	org	3145737
 10605  300009  C0                 	db	192
 10606                           
 10607                           ;Config register CONFIG6L @ 0x30000A
 10608                           ;	Write Protection bit
 10609                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10610                           ;	Write Protection bit
 10611                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10612                           ;	Write Protection bit
 10613                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10614                           ;	Write Protection bit
 10615                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10616  30000A                     	org	3145738
 10617  30000A  0F                 	db	15
 10618                           
 10619                           ;Config register CONFIG6H @ 0x30000B
 10620                           ;	Configuration Register Write Protection bit
 10621                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10622                           ;	Boot Block Write Protection bit
 10623                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10624                           ;	Data EEPROM Write Protection bit
 10625                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10626  30000B                     	org	3145739
 10627  30000B  E0                 	db	224
 10628                           
 10629                           ;Config register CONFIG7L @ 0x30000C
 10630                           ;	Table Read Protection bit
 10631                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10632                           ;	Table Read Protection bit
 10633                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10634                           ;	Table Read Protection bit
 10635                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10636                           ;	Table Read Protection bit
 10637                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10638  30000C                     	org	3145740
 10639  30000C  0F                 	db	15
 10640                           
 10641                           ;Config register CONFIG7H @ 0x30000D
 10642                           ;	Boot Block Table Read Protection bit
 10643                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10644  30000D                     	org	3145741
 10645  30000D  40                 	db	64
 10646                           tosu	equ	0xFFF
 10647                           tosh	equ	0xFFE
 10648                           tosl	equ	0xFFD
 10649                           stkptr	equ	0xFFC
 10650                           pclatu	equ	0xFFB
 10651                           pclath	equ	0xFFA
 10652                           pcl	equ	0xFF9
 10653                           tblptru	equ	0xFF8
 10654                           tblptrh	equ	0xFF7
 10655                           tblptrl	equ	0xFF6
 10656                           tablat	equ	0xFF5
 10657                           prodh	equ	0xFF4
 10658                           prodl	equ	0xFF3
 10659                           indf0	equ	0xFEF
 10660                           postinc0	equ	0xFEE
 10661                           postdec0	equ	0xFED
 10662                           preinc0	equ	0xFEC
 10663                           plusw0	equ	0xFEB
 10664                           fsr0h	equ	0xFEA
 10665                           fsr0l	equ	0xFE9
 10666                           wreg	equ	0xFE8
 10667                           indf1	equ	0xFE7
 10668                           postinc1	equ	0xFE6
 10669                           postdec1	equ	0xFE5
 10670                           preinc1	equ	0xFE4
 10671                           plusw1	equ	0xFE3
 10672                           fsr1h	equ	0xFE2
 10673                           fsr1l	equ	0xFE1
 10674                           bsr	equ	0xFE0
 10675                           indf2	equ	0xFDF
 10676                           postinc2	equ	0xFDE
 10677                           postdec2	equ	0xFDD
 10678                           preinc2	equ	0xFDC
 10679                           plusw2	equ	0xFDB
 10680                           fsr2h	equ	0xFDA
 10681                           fsr2l	equ	0xFD9
 10682                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        83
    BSS         107
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     95     155
    BANK1           256      0     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> Mostrar_Temperatura@temperatura(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1339$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1339$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[2]), Mostrar_Temperatura@temperatura(BANK0[4]), STR_1(CODE[13]), Reloj_Calendario@Date(BANK0[17]), 
		 -> Reloj_Calendario@Time(BANK0[15]), 


Critical Paths under _main in COMRAM

    _main->_Mostrar_Temperatura
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_Clear->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _I2C_Init->___lldiv
    _Reloj_Calendario->_LCD_Goto
    _Reloj_Calendario->_LCD_Print
    _Reloj_Calendario->___awdiv
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble

Critical Paths under _main in BANK0

    _main->_Mostrar_Temperatura
    _Mostrar_Temperatura->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   44514
                                             91 BANK0      4     4      0
                           _ADC_Init
                    _Establecer_Hora
                           _I2C_Init
                    _Imprimir_Cadena
                          _LCD_Begin
                          _LCD_Clear
                _Mostrar_Temperatura
 ---------------------------------------------------------------------------------
 (1) _Mostrar_Temperatura                                  7     7      0   38901
                                             94 COMRAM     1     1      0
                                             85 BANK0      6     6      0
                           _ADC_Read
                           _LCD_Goto
                          _LCD_Print
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   30764
                                             64 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30407
                                             92 COMRAM     2     2      0
                                             58 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   30035
                                             82 COMRAM    10     4      6
                                             50 BANK0      8     8      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   24880
                                             70 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             50 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1246
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     121
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     176
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            1     1      0     176
                                              4 COMRAM     1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Cadena                                      7     3      4     394
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Establecer_Hora                                      1     1      0    4362
                                              8 COMRAM     1     1      0
                            _I2C_Ack
                         _I2C_NO_Ack
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                   _Reloj_Calendario
 ---------------------------------------------------------------------------------
 (2) _Reloj_Calendario                                     0     0      0    4340
                      _BCD_a_Decimal
                           _LCD_Goto
                          _LCD_Print
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1512
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            6     4      2     602
                                              2 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     666
                                              4 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     176
                                              2 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BCD_a_Decimal                                        2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_NO_Ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Establecer_Hora
     _I2C_Ack
     _I2C_NO_Ack
     _I2C_ReStart
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Reloj_Calendario
       _BCD_a_Decimal
       _LCD_Goto
         _LCD_Cmd
           _LCD_Write_Nibble
       _LCD_Print
         _LCD_Write_Nibble
       ___awdiv
       ___awmod
   _I2C_Init
     ___lldiv
   _Imprimir_Cadena
   _LCD_Begin
     _LCD_Cmd
   _LCD_Clear
     _LCD_Cmd
   _Mostrar_Temperatura
     _ADC_Read
     _LCD_Goto
     _LCD_Print
     ___fldiv
       ___flmul (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___xxtofl
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      83       7       51.2%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     5F      9B       5       96.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRhlhll       C      0       0      25        0.0%
BITBIGSFRllh         9      0       0      28        0.0%
BITBIGSFRhhl         9      0       0      21        0.0%
BITBIGSFRhlhlhl      8      0       0      23        0.0%
BITBIGSFRhll         8      0       0      26        0.0%
BITBIGSFRhlhlhh      7      0       0      22        0.0%
BITBIGSFRlh          5      0       0      27        0.0%
BITBIGSFRhlhlhl      1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17D      30        0.0%
DATA                 0      0     17D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 08 14:11:45 2022

                  ___fldiv@aexp 0032                    ___fldiv@bexp 0031                               _i 00EF  
       Mostrar_Temperatura@temp 00B7                    ___fldiv@sign 002A                 _Imprimir_Cadena 3CD2  
                   _SSPSTATbits 000FC7                              l22 4028                              l31 4048  
                            l40 3FF0                              l25 4036                              l34 4016  
                            l43 3FFE                              l19 3BD0                              l28 403A  
                            l52 3F98                              l61 3FD2                              l37 4024  
                            l46 3FDA                              l55 3FA6                              l49 3FE8  
                            l82 4012                              l58 3FC2                              l85 38FC  
                            l88 3928                              _GO 007E11                              _RS 07D0  
                  ___awdiv@sign 0006             ___wmul@multiplicand 0003                             l206 2AAA  
                           l223 3CDE                             l215 28B8                             l216 28B0  
                           l153 3D66                             l209 3A3C                             l217 28B4  
                           l162 3AA6                             l218 28D6                             l147 39BA  
                           l171 368E                             l227 3D1E                             l244 3F6E  
                           l174 3388                             l271 387C                             l503 37E8  
                           l177 4050                             l514 30E0                             l196 3FBC  
                           l509 309A                             l541 2FDC                             l278 388C  
                           l518 3EA6                             l475 35DC                             l902 2C5E  
                           l814 3DF2                             l831 2310                             l488 373E  
                           l840 23F8                             l913 2BF6                             l906 2B9A  
                           l826 24EC                             l922 3C7E                             l828 234C  
                           l772 1626                             l837 2392                             l781 18F6  
                           l773 1614                             l862 2152                             l774 15DA  
                           l839 240A                             l865 1FE4                             l858 1DEE  
                           l875 2114                             l867 205C                             l963 349A  
                           l868 204A                             l789 1740                             l798 1810  
                           l966 34DC                             l799 17FE                             l968 3518  
                           l984 1436                             l899 2B02                             _RB2 007C0A  
                           _RB3 007C0B                             _RB4 007C0C                             _RB5 007C0D  
                           _day 00F0                 __end_of_I2C_Ack 4000                             _pad 3454  
                  ___awmod@sign 0006                             wreg 000FE8                    ___flmul@aexp 0012  
                  ___flmul@bexp 0013                    ___flmul@sign 000D                    ___flmul@temp 0018  
                  ___flmul@prod 0014                 __end_of_LCD_Cmd 3D68                    ___fltol@exp1 000A  
             ??_Establecer_Hora 0009                            l1000 0BE6                            l1200 3DA4  
                          l1115 2DAC                            l1203 3DAC                            l1124 26FE  
                          l1028 1026                            l1134 3EDE                            l1142 3CD0  
                          l1118 2DB4                            l1070 1D28                            l1127 2642  
                          l3000 1568                            l1081 3B66                            l3010 157C  
                          l3002 156C                            l1082 3B6E                            l1163 3452  
                          l1171 3E36                            l1075 1C72                            l3100 1820  
                          l3020 15F4                            l3012 15A6                            l3004 1570  
                          l1092 31DE                            l1180 3C2C                            l1148 3E6E  
                          l3110 1886                            l3102 182C                            l3030 1634  
                          l3022 15F8                            l3014 15C2                            l3006 1574  
                          l1174 4052                            l1190 32B4                            l3200 2236  
                          l3120 18CE                            l3112 1896                            l3104 183A  
                          l3040 1676                            l3032 1644                            l3024 1606  
                          l3016 15D2                            l3008 1578                            l4000 1390  
                          l3202 2246                            l3210 2266                            l3122 18D0  
                          l3114 18B6                            l3106 1874                            l3050 16A4  
                          l3042 1684                            l3026 1608                            l3018 15E8  
                          l1186 3F14                            l4002 139C                            l3220 22A4  
                          l3212 2276                            l3204 224E                            l3300 1D36  
                          l3124 18D6                            l3116 18BA                            l3108 1876  
                          l3060 1710                            l3052 16AE                            l3044 1690  
                          l3036 1658                            l3028 1612                            l3132 3DF4  
                          l3140 3EE0                            l4020 1410                            l4012 13C0  
                          l4004 13A4                            l4100 1964                            l4030 2C74  
                          l3230 22EC                            l3222 22B4                            l3214 2276  
                          l3206 2252                            l3310 1D76                            l3302 1D44  
                          l3126 18E4                            l3118 18C8                            l3062 1720  
                          l3046 1694                            l3038 1668                            l3054 16B4  
                          l3134 3E00                            l3142 3EEC                            l3150 3E38  
                          l4022 1416                            l4014 13EC                            l4006 13B4  
                          l4110 19F8                            l4102 196C                            l4200 3650  
                          l4040 2CD6                            l3240 233A                            l3232 2300  
                          l3224 22C4                            l3160 2154                            l3400 2078  
                          l3320 1DA6                            l3312 1D7C                            l3304 1D46  
                          l3128 18E6                            l3080 17A2                            l3072 177A  
                          l3056 16DA                            l3064 1730                            l3048 16A2  
                          l3136 3E12                            l3144 3EF0                            l4016 13F8  
                          l4008 13BA                            l4120 1A76                            l4104 197A  
                          l4202 3652                            l3154 3F4A                            l4050 2D48  
                          l4042 2CDE                            l4034 2C78                            l3250 2382  
                          l3242 234A                            l3234 230E                            l3226 22D4  
                          l3218 228A                            l3170 2190                            l3162 2160  
                          l3410 20E2                            l3402 2086                            l3330 1DDE  
                          l3322 1DA8                            l3314 1D8C                            l3306 1D56  
                          l3082 17AA                            l3074 1784                            l3066 1756  
                          l3058 170E                            l3090 17CE                            l3138 3E16  
                          l3146 3F08                            l4018 1400                            l4130 1B12  
                          l4122 1AA8                            l4114 1A06                            l4106 199E  
                          l4210 3B16                            l4220 4014                            l4204 3FAA  
                          l3500 370A                            l4300 2AA6                            l3156 3F66  
                          l4052 2D7E                            l4044 2D12                            l4036 2C94  
                          l4028 2C60                            l3260 23C2                            l3252 2390  
                          l3244 235C                            l3236 231A                            l3228 22DC  
                          l3180 21C0                            l3172 21A0                            l3164 216E  
                          l3420 2138                            l3412 20FC                            l3404 20B0  
                          l3340 1E2E                            l3332 1DFE                            l3324 1DB8  
                          l3316 1D92                            l3308 1D66                            l3092 17D2  
                          l3084 17AE                            l3076 1792                            l3068 1766  
                          l4060 31E0                            l4140 1BAA                            l4132 1B20  
                          l4124 1AB8                            l4108 19D8                            l4116 1A44  
                          l4212 3B24                            l4222 3FEA                            l4230 3FBE  
                          l3510 3736                            l3502 3712                            l4054 2D90  
                          l4038 2CCE                            l3270 2434                            l3262 23F0  
                          l3246 2372                            l3254 23A2                            l3238 2338  
                          l3190 21F6                            l3182 21C6                            l3174 21A2  
                          l3166 2170                            l3414 2118                            l3422 213E  
                          l3406 20B4                            l3350 1E7E                            l3342 1E38  
                          l3334 1E0E                            l3326 1DC8                            l3318 1D98  
                          l3094 17E0                            l3086 17BE                            l3078 1794  
                          l3430 3DBE                            l4070 323C                            l4062 320A  
                          l4134 1B50                            l4126 1AEA                            l4118 1A66  
                          l4214 3B4A                            l4310 3C6C                            l4302 3C2E  
                          l4224 3FD4                            l4232 3FD0                            l4216 4026  
                          l4080 3D22                            l3440 3534                            l3504 3718  
                          l4320 3818                            l4400 32B6                            l4240 3920  
                          l3280 24AC                            l3272 245E                            l3256 23B0  
                          l3248 2378                            l3192 2206                            l3184 21D4  
                          l3168 2180                            l3176 21AA                            l3520 37AC  
                          l3424 2142                            l3416 2128                            l3408 20CE  
                          l3360 1EC0                            l3352 1E8A                            l3344 1E4E  
                          l3328 1DD8                            l3096 17F6                            l3088 17C0  
                          l3600 2FCC                            l4072 3258                            l4160 1CCC  
                          l4144 1BD0                            l4128 1AFC                            l4208 3B0E  
                          l4304 3C40                            l4218 4038                            l4226 3F92  
                          l4082 3D26                            l3450 355A                            l3442 3538  
                          l3434 351A                            l3506 371E                            l4250 294A  
                          l4330 386A                            l4322 3824                            l4314 37EA  
                          l4410 330A                            l4402 32D2                            l3290 24E2  
                          l3282 24C8                            l3266 241A                            l3274 2462  
                          l3258 23B4                            l3194 2208                            l3186 21D6  
                          l3178 21BA                            l3522 37BC                            l3514 3740  
                          l3530 2FDE                            l3418 2136                            l3370 1F22  
                          l3362 1ED0                            l3354 1E98                            l3346 1E5A  
                          l3338 1E22                            l3610 3486                            l4074 326A  
                          l4066 3216                            l4146 1C0E                            l4154 1C86  
                          l4138 1B7C                            l4170 1CF2                            l4090 18F8  
                          l4306 3C48                            l4228 3F94                            l4084 3D34  
                          l4180 3A44                            l3460 3590                            l3452 356C  
                          l3444 3546                            l3436 351E                            l3508 372E  
                          l4260 29CC                            l4252 2964                            l4244 28D8  
                          l4332 386C                            l4324 3832                            l4316 37FA  
                          l4420 335A                            l4412 331E                            l4404 32E2  
                          l4236 388E                            l4340 2ACC                            l3700 3CC6  
                          l3284 24CC                            l3276 247C                            l3268 2426  
                          l3188 21E6                            l3196 2210                            l3524 37E0  
                          l3516 376E                            l3540 3068                            l3532 300C  
                          l3380 1FCA                            l3372 1F3E                            l3364 1EEA  
                          l3356 1EA4                            l3348 1E72                            l3428 3DAE  
                          l3620 34EC                            l3612 3492                            l3604 3454  
                          l4076 3292                            l4068 3224                            l4172 1D16  
                          l4156 1CAA                            l4164 1CD8                            l4148 1C42  
                          l4092 191C                            l4308 3C50                            l4500 2876  
                          l3710 39A8                            l4086 3D44                            l4182 3A50  
                          l3462 35A6                            l3454 3574                            l3470 35BC  
                          l3446 354E                            l3438 352C                            l4270 2A4E  
                          l4262 29E6                            l4254 297E                            l4246 2916  
                          l4430 39BC                            l4334 3876                            l4326 383C  
                          l4318 3810                            l4510 3CFC                            l4422 3360  
                          l4414 3324                            l4406 32E8                            l4238 390A  
                          l4350 2B44                            l4342 2B12                            l3702 3CCA  
                          l3286 24DA                            l3278 2492                            l3198 2220  
                          l3526 37E6                            l3518 377E                            l3542 307A  
                          l3534 301C                            l3390 2006                            l3382 1FD4  
                          l3374 1F68                            l3366 1EFA                            l3358 1EB4  
                          l3630 3140                            l3622 3500                            l3614 34A6  
                          l3606 3464                            l4166 1CE6                            l4158 1CB8  
                          l4094 192A                            l4502 28A8                            l3720 39B2  
                          l3712 39AA                            l4088 3D56                            l4184 3A5C  
                          l3472 35CC                            l3464 35AE                            l3456 357C  
                          l3448 3552                            l3480 3694                            l4280 2A7E  
                          l4272 2A58                            l4264 2A00                            l4256 2998  
                          l4248 2930                            l4440 39DE                            l4432 39C0  
                          l4328 385A                            l4512 3D00                            l4424 3374  
                          l4416 3338                            l4408 32FC                            l4360 2BCC  
                          l4352 2B50                            l4344 2B28                            l4336 2AAE  
                          l3288 24E0                            l3544 3088                            l3536 304A  
                          l3392 2014                            l3384 1FE2                            l3376 1F9E  
                          l3368 1F16                            l3552 3E70                            l3560 2ED8  
                          l3640 3192                            l3632 3168                            l2920 33AE  
                          l3616 34BA                            l3608 3478                            l3800 0B12  
                          l4096 193C                            l4504 28C8                            l3714 39AC  
                          l3706 392C                            l4186 3A68                            l4178 3A40  
                          l4194 35DE                            l3474 35D4                            l3466 35B0  
                          l3458 358A                            l3490 36C4                            l3482 36A2  
                          l4290 2A92                            l4282 2A82                            l4274 2A64  
                          l4266 2A1A                            l4258 29B2                            l4450 39FA  
                          l4442 39E2                            l4434 39C6                            l4506 3CD2  
                          l4426 3382                            l4418 3346                            l4370 2C0A  
                          l4362 2BD8                            l4354 2B82                            l4338 2ABE  
                          l3546 30D8                            l3538 305A                            l3394 2042  
                          l3386 1FF4                            l3378 1FAC                            l3298 1D2A  
                          l3554 3E86                            l2930 1438                            l3570 2F2E  
                          l3562 2EEE                            l3634 3174                            l3626 30E2  
                          l2922 33B8                            l3618 34BE                            l3650 3BE2  
                          l3810 0B94                            l3802 0B46                            l3730 085A  
                          l3722 082A                            l4098 1940                            l4530 2DD6  
                          l4522 2DB6                            l3716 39AE                            l3708 3938  
                          l4188 3A74                            l4196 35E2                            l3468 35B6  
                          l3492 36D6                            l3484 36AA                            l4292 2A96  
                          l4284 2A86                            l4276 2A6E                            l4268 2A34  
                          l4460 3A16                            l4452 39FE                            l4444 39EA  
                          l4436 39D0                            l4508 3CEC                            l4428 404A  
                          l4372 2C2E                            l4364 2BE6                            l4356 2B84  
                          l4348 2B3C                            l3548 30DE                            l3388 2002  
                          l3556 3E96                            l2940 1474                            l2932 1444  
                          l3572 2F3E                            l3644 31D6                            l3628 3102  
                          l2924 33D6                            l2916 338A                            l3652 3D68  
                          l3900 1012                            l3812 0BA6                            l3820 0BF2  
                          l3804 0B4E                            l3740 08B0                            l3732 087E  
                          l3724 0834                            l4540 2DE8                            l4532 2DD8  
                          l4524 2DCE                            l3718 39B0                            l4198 35EA  
                          l3494 36DE                            l3486 36AE                            l3478 3690  
                          l4294 2A9A                            l4286 2A8A                            l4278 2A7A  
                          l4470 3A2E                            l4462 3A1A                            l4454 3A02  
                          l4446 39EE                            l4438 39D6                            l4390 3B7A  
                          l4382 3B70                            l4374 2C3E                            l4366 2C04  
                          l4358 2B90                            l3398 206C                            l2950 14A4  
                          l2942 1484                            l2934 1452                            l3582 2F68  
                          l3574 2F42                            l3566 2F02                            l3638 3180  
                          l3670 2586                            l3662 24EE                            l2926 340C  
                          l2918 339C                            l3910 10C8                            l3902 101E  
                          l3830 0C32                            l3814 0BB8                            l3806 0B80  
                          l3750 08DE                            l3742 08C2                            l3734 0888  
                          l3726 0844                            l4550 2DF2                            l4542 2DEA  
                          l4534 2DDA                            l4526 2DD2                            ?_pad 0011  
                          l3496 36E6                            l3488 36BC                            l4296 2A9E  
                          l4288 2A8E                            l4464 3A22                            l4456 3A0A  
                          l4448 39F6                            l4392 3B82                            l4384 3B74  
                          l4376 2C4C                            l4368 2C06                            l4624 2CFC  
                          l2960 14CE                            l2952 14B6                            l2944 1486  
                          l2936 1454                            l3592 2F90                            l3584 2F72  
                          l3576 2F50                            l3568 2F2C                            l3680 26A2  
                          l3664 250E                            l3648 3BD2                            l3656 3D68  
                          l3920 1110                            l3912 10DA                            l3904 1042  
                          l3840 0C8E                            l3832 0C68                            l3816 0BC0  
                          l3808 0B90                            l3760 0936                            l3744 08CE  
                          l3752 08E4                            l3736 0890                            l3728 0852  
                          l4480 2734                            l4472 2700                            l4560 2E0A  
                          l4552 2DF4                            l4544 2DEC                            l4536 2DDE  
                          l4528 2DD4                            l4626 3A88                            l3498 36F4  
                          l4298 2AA2                            l4466 3A26                            l4458 3A0E  
                          l4394 3B86                            l4386 3B76                            l4378 2C4E  
                          l3690 3EA8                            l2962 14DE                            l2970 1508  
                          l2954 14B8                            l2938 1464                            l2946 148E  
                          l3594 2F9C                            l3586 2F7C                            l3682 26B6  
                          l3674 25F6                            l3666 2564                            l3658 3D96  
                          l3930 1146                            l3922 1120                            l3914 10E8  
                          l3906 10A6                            l3850 0CD2                            l3842 0CA0  
                          l3834 0C70                            l3826 0C04                            l3818 0BDA  
                          l3762 0954                            l3770 09A0                            l3746 08D6  
                          l3738 08A2                            l4490 27F0                            l4482 275C  
                          l4474 270A                            l4570 2E64                            l4562 2E18  
                          l4554 2DF8                            l4546 2DEE                            l4538 2DE6  
                          l4396 4000                            l4468 3A2A                            l4388 3B78  
                          l2980 1540                            l2972 1518                            l2964 14EE  
                          l2956 14BE                            l2948 149E                            l3596 2FAC  
                          l3684 26DE                            l3676 2632                            l3668 2578  
                          l3940 117A                            l3932 114A                            l3924 1124  
                          l3908 10B6                            l3916 10F0                            l3860 0D1C  
                          l3852 0CEA                            l3844 0CAE                            l3828 0C16  
                          l3836 0C74                            l3780 0A10                            l3764 096E  
                          l3748 08DA                            l4492 27FA                            l4484 27B4  
                          l4476 2714                            l4580 2EB2                            l4572 2E72  
                          l4564 2E32                            l4556 2DF8                            l4548 2DF0  
                          l4398 4002                            l3694 3C80                            l2990 1554  
                          l2982 1544                            l2974 152A                            l2966 14FE  
                          l2958 14CC                            l3598 2FBC                            l3686 26EE  
                          l3678 2666                            l3950 1218                            l3942 117E  
                          l3934 1150                            l3926 112A                            l3918 1102  
                          l3862 0D30                            l3870 0E26                            l3854 0CFC  
                          l3846 0CB2                            l3838 0C7C                            l3790 0A48  
                          l3766 0978                            l3758 090A                            l4494 2806  
                          l4486 27DA                            l4478 2720                            l4582 2EB6  
                          l4574 2E76                            l4566 2E46                            l4558 2E06  
                          l3696 3C84                            l2992 1558                            l2984 1548  
                          l2976 1538                            l2968 1500                            l3960 1276  
                          l3928 1136                            l3936 1156                            l3944 1184  
                          l3952 121C                            l3880 0EF2                            l3872 0E44  
                          l3864 0D94                            l3848 0CC4                            l3856 0D04  
                          l3776 09C6                            l4496 2838                            l4488 27E4  
                          l4576 2E84                            l4568 2E4A               ?_LCD_Write_Nibble 0001  
                          l3698 3C98                            l2994 155C                            l2986 154C  
                          l2978 153C                            l3970 12B4                            l3962 1286  
                          l3954 123A                            l3946 11DC                            l3938 1168  
                          l3890 0FA2                            l3882 0F02                            l3874 0E78  
                          l3866 0DEC                            l3858 0D0C                            l3794 0A7E  
                          l3778 09F2                            l4498 286A                            l4578 2E9E  
                          l2996 1560                            l2988 1550                            l3980 12EA  
                          l3972 12C4                            l3964 128A                            l3956 1256  
                          l3948 1210                            l3892 0FD6                            l3884 0F12  
                          l3876 0EAA                            l3868 0E20                            l3796 0AB2  
                          l3788 0A2E                            l2998 1564                            l3990 1346  
                          l3982 12F6                            l3974 12CC                            l3966 129A  
                          l3958 1268                            l3894 0FEA                            l3886 0F46  
                          l3878 0EC0                            l3798 0AB8                            l3984 12FC  
                          l3992 134C                            l3976 12DA                            l3968 12AC  
                          l3888 0F9C                            l3896 0FEE                            l3994 135E  
                          l3986 1322                            l3978 12E2                            l3898 0FFE  
                          l3996 1378                            l3988 133E                            l3998 137E  
                          _ADON 007E10                            STR_1 0801                            STR_2 080E  
                          STR_3 0826                            STR_4 0813                            STR_5 081B  
                          STR_8 0817                            STR_9 081F                            u3000 3F08  
                          u3001 3F04                            u3010 3E68                            u3011 3E62  
                          u3100 2276                            u3020 3E6A                            u3101 2272  
                          u3110 22EC                            u3030 216E                            u3111 22E8  
                          u3031 216A                            u4000 3CC6                            u3200 2406  
                          u3120 230E                            u3040 2180                            u4001 3CC2  
                          u3201 2402                            u3121 230A                            u3041 217C  
                          u3210 241A                            u3130 2338                            u3050 2190  
                          u3211 2416                            u3131 2334                            u3051 218C  
                          u3220 2434                            u3140 235C                            u3060 21D4  
                          u3300 1DB8                            u4100 0A7A                            u4020 0852  
                          u3221 2430                            u3141 2358                            u3061 21D0  
                          u3301 1DB4                            u4101 0A76                            u4021 084E  
                          u3230 247C                            u3150 2372                            u3070 21E6  
                          u3310 1DC8                            u4110 0B0E                            u4030 08A2  
                          u4015 3936                            u3231 2478                            u3151 236E  
                          u3071 21E2                            u3311 1DC4                            u4111 0B0A  
                          u4031 089E                            u5000 2C04                            u3240 24AC  
                          u3160 2390                            u3080 21F6                            u3400 206C  
                          u3320 1DFE                            u2600 1452                            u4200 0C8E  
                          u4120 0B80                            u4040 08B0                            u4017 3938  
                          u5001 2C00                            u3241 24A8                            u3161 238C  
                          u3081 21F2                            u3401 2068                            u3321 1DFA  
                          u2601 144E                            u4201 0C8A                            u4121 0B7C  
                          u4041 08AC                            u5010 2C3E                            u3250 24DA  
                          u3170 23B0                            u3090 2236                            u3410 2086  
                          u3330 1E0E                            u2610 1464                            u4210 0CA0  
                          u4130 0BA6                            u4050 08C2                            u5011 2C3A  
                          u3251 24D6                            u3171 23AC                            u3091 2232  
                          u3411 2082                            u3331 1E0A                            u2611 1460  
                          u4211 0C9C                            u4131 0BA2                            u4051 08BE  
                          u3500 35CC                            u5020 2C4C                            u3180 23C2  
                          u3420 20CE                            u3340 1F88                            u3260 1D44  
                          u2700 15BE                            u2620 1474                            u4300 0F9C  
                          u4220 0CAE                            u4140 0BB8                            u4060 090A  
                          u5100 2E9E                            u3501 35C8                            u5021 2C48  
                          u3181 23BE                            u3421 20CA                            u3261 1D40  
                          u2701 15B8                            u2621 1470                            u4301 0F98  
                          u4221 0CAA                            u4141 0BB4                            u4061 0906  
                          u5101 2E9A                            u3510 36A2                            u3190 23F0  
                          u3430 20FC                            u3350 1FE2                            u3270 1D56  
                          u2710 15C0                            u2630 14B6                            u4310 0FEA  
                          u4230 0CC4                            u4150 0BDA                            u4070 0936  
                          u3511 369E                            u3191 23EC                            u3431 20F8  
                          u3351 1FDE                            u3271 1D52                            u2631 14B2  
                          u4311 0FE6                            u4231 0CC0                            u4151 0BD6  
                          u4071 0932                            u3520 36BC                            u3600 300C  
                          u3440 2136                            u3360 2002                            u3280 1D66  
                          u2800 16DA                            u2720 15E8                            u2640 14CC  
                          u2560 339C                            u4400 123A                            u4320 1012  
                          u4240 0CD2                            u4160 0C00                            u4080 09C6  
                          u5040 2838                            u3521 36B8                            u3601 3008  
                          u3441 2132                            u3361 1FFE                            u3345 1F7E  
                          u3281 1D62                            u2801 16D6                            u2721 15E4  
                          u2641 14C8                            u2561 3398                            u4401 1236  
                          u4321 100E                            u4241 0CCE                            u4161 0BFC  
                          u4081 09C2                            u5041 2834                            u3450 352C  
                          u3530 36D6                            u3610 304A                            u3370 2014  
                          u3290 1DA6                            u2810 1720                            u2730 1606  
                          u2650 14DE                            u2570 33AE                            u4410 1256  
                          u4330 10B6                            u4250 0CFC                            u4170 0C16  
                          u4090 09F2                            u5050 286A                            u3451 3528  
                          u3531 36D2                            u5035 3BA8                            u3611 3046  
                          u3371 2010                            u3291 1DA2                            u2811 171C  
                          u2731 1602                            u2651 14DA                            u2571 33AA  
                          u4411 1252                            u4331 10B2                            u4251 0CF8  
                          u4171 0C12                            u4091 09EE                            u5051 2866  
                          u3460 3546                            u3540 36F4                            u4500 2C94  
                          u3620 3068                            u3380 2042                            u2900 180C  
                          u2820 1756                            u2740 1626                            u2660 14EE  
                          u3700 2F8C                            u2580 33D6                            u4420 1268  
                          u4340 10C8                            u4260 0E44                            u4180 0C32  
                          u5060 28A8                            u3461 3542                            u3541 36F0  
                          u4501 2C90                            u3621 3064                            u3381 203E  
                          u2901 1808                            u2821 1752                            u2741 1622  
                          u2661 14EA                            u3701 2F88                            u2581 33D2  
                          u4421 1264                            u4341 10C4                            u4261 0E40  
                          u4181 0C2E                            u5061 28A4                            u5117 2E56  
                          u3470 356C                            u3550 370A                            u5070 3CEC  
                          u4510 2CCA                            u3630 3088                            u3390 2058  
                          u2910 1820                            u2830 1766                            u2750 1634  
                          u2670 152A                            u3710 2FAC                            u2590 340C  
                          u4430 1276                            u4350 10DA                            u4270 0EAA  
                          u4190 0C68                            u3471 3568                            u3551 3706  
                          u5071 3CE8                            u5207 3352                            u4511 2CC6  
                          u3631 3084                            u3391 2054                            u2911 181C  
                          u2831 1762                            u2751 1630                            u2671 1526  
                          u3711 2FA8                            u2591 3408                            u4431 1272  
                          u4351 10D6                            u4271 0EA6                            u4191 0C64  
                          u5127 2EC2                            u4600 3D56                            u3480 358A  
                          u3560 372E                            u5080 3D1E                            u4520 2D7E  
                          u3640 30D8                            u2920 183A                            u2840 1792  
                          u2760 1644                            u2680 1538                            u3720 2FBC  
                          u3800 3192                            u4440 12AC                            u4360 10E8  
                          u4280 0EF2                            u4601 3D52                            u3481 3586  
                          u3561 372A                            u5081 3D1A                            u5217 3366  
                          u4521 2D7A                            u3641 30D4                            u2921 1836  
                          u2841 178E                            u2761 1640                            u2681 1534  
                          u3721 2FB8                            u3801 318E                            u4441 12A8  
                          u4361 10E4                            u4281 0EEE                            u5137 28CE  
                          u3490 35A6                            u4530 2D90                            u3570 376E  
                          u3650 3E86                            u2930 1874                            u2850 17A2  
                          u2770 1676                            u2690 15A6                            u3730 3464  
                          u4450 12DA                            u4370 1102                            u4290 0F02  
                          u4610 191C                            u5090 2E32                            u3491 35A2  
                          u5227 337A                            u5147 32D8                            u4531 2D8C  
                          u3571 376A                            u3651 3E82                            u2931 1870  
                          u2851 179E                            u2771 1672                            u2691 15A2  
                          u3731 3460                            u4451 12D6                            u4371 10FE  
                          u4291 0EFE                            u4611 1918                            u5091 2E2E  
                          u3580 37AC                            u2940 1886                            u2860 17BE  
                          u2780 1684                            u3660 2EEE                            u3820 31CC  
                          u3740 3486                            u4460 135E                            u4380 1110  
                          u4540 320A                            u4700 1CAA                            u4620 1964  
                          u5237 3A34                            u5157 32EE                            u3581 37A8  
                          u2941 1882                            u2861 17BA                            u2781 1680  
                          u3661 2EEA                            u3821 31C6                            u3741 3482  
                          u4461 135A                            u4381 110C                            u4541 3206  
                          u4701 1CA6                            u4621 1960                            u4710 3616  
                          u3590 37E0                            u2950 1896                            u2870 17CE  
                          u2790 16A2                            u3670 2F22                            u3830 31CE  
                          u3910 25F2                            u3750 34DC                            u4470 1378  
                          u4390 1168                            u4550 323C                            u4630 199E  
                          u5247 3D5C                            u5167 3302                            u3591 37DC  
                          u2951 1892                            u2871 17CA                            u2791 169E  
                          u3815 31A4                            u3911 25EE                            u3751 34D8  
                          u4471 1374                            u4391 1164                            u4551 3238  
                          u4631 199A                            u4800 3FE8                            u4720 364C  
                          u2960 18B6                            u2880 17E0                            u3680 2F50  
                          u3920 2616                            u3760 34EC                            u3840 3C1A  
                          u4480 1390                            u4560 3258                            u4640 1A44  
                          u4801 3FE4                            u5257 39B4                            u5177 3316  
                          u2961 18B2                            u2881 17DC                            u3681 2F4C  
                          u3905 259A                            u3761 34E8                            u4481 138C  
                          u4561 3254                            u4641 1A40                            u4810 3FA6  
                          u4730 367E                            u2970 18C8                            u2890 17F6  
                          u3690 2F64                            u3770 3122                            u3930 2632  
                          u3906 25A4                            u3850 3C2C                            u4490 13EC  
                          u4570 326A                            u4650 1A76                            u4811 3FA2  
                          u5187 332A                            u2971 18C4                            u2891 17F2  
                          u3691 2F60                            u3675 2F18                            u3931 262E  
                          u3907 25B4                            u3851 3C28                            u4491 13E8  
                          u4571 3266                            u4651 1A72                            u4820 3FD0  
                          u4740 368E                            u4900 3810                            u2980 18E4  
                          u3780 3140                            u3940 2686                            u3860 3D96  
                          u4580 3292                            u4660 1AB8                            u4821 3FCC  
                          u4741 368A                            u4717 360C                            u4901 380C  
                          u5197 333E                            u2981 18E0                            u3781 313C  
                          u3925 260C                            u3861 3D92                            u4581 328E  
                          u4661 1AB4                            u4590 3D44                            u4910 3832  
                          u4830 38B8                            u3790 3168                            u3950 26A2  
                          u3870 2536                            u2990 3E36                            u4670 1AFC  
                          u4750 3B66                            u4591 3D40                            u4727 3642  
                          u4911 382E                            u4831 38B0                            u3791 3164  
                          u3775 3118                            u3951 269E                            u2991 3E32  
                          u3847 3C10                            u4671 1AF8                            u4751 3B62  
                          u4760 4036                            u4920 385A                            u3960 26DE  
                          u3880 2564                            u4680 1BAA                            u4761 4032  
                          u4737 3674                            u4921 3856                            u3961 26DA  
                          u3945 267C                            u3881 2560                            u4681 1BA6  
                          u4770 4048                            u4930 2ABE                            u3970 3ED8  
                          u3890 2586                            u4690 1C0E                            u4771 4044  
                          u4931 2ABA                            u3971 3ED2                            u3891 2582  
                          u3875 252C                            u4691 1C0A                            u4780 4024  
                          u4860 38E0                            u4940 2ACC                            u3980 3EDA  
                          u4781 4020                            u4861 38D8                            u4941 2AC8  
                          u4790 3FFE                            u4854 38C8                            u4950 2B28  
                          u3990 3C98                            u4791 3FFA                            u4855 38C4  
                          u4951 2B24                            u3991 3C94                            u4848 38BA  
                          u4960 2B7E                            u4961 2B7A                            u4890 390A  
                          u4970 2BC8                            u4891 3906                            u4971 2BC4  
                          u4884 38F0                            u4980 2BE6                            u4885 38EC  
                          u4981 2BE2                            u4878 38E2                            u4990 2BF6  
                          u4991 2BF2              ??_LCD_Write_Nibble 0001                            _dbuf 0100  
                          _atoi 2C60                            _main 2DB6                            _prec 00EB  
              __end_of_I2C_Init 3BD2                __end_of_I2C_Read 3FD4                            _nout 00E7  
                          _year 00F2                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                __end_of_I2C_Stop 4026                __end_of_ADC_Init 4014  
              __end_of_ADC_Read 392A                   ___fpclassifyf 30E2                            prodh 000FF4  
                          prodl 000FF3                            start 0000                 ___fldiv@new_exp 002B  
                   LCD_Goto@col 0008                     LCD_Goto@row 0005                    ___param_bank 000000  
                         ??_pad 0017                __end_of_LCD_Goto 3AA8                   ___fltol@sign1 0009  
                         ?_atoi 0008                 __end_of___fladd 18F8                           ?_main 0001  
               __end_of___fldiv 24EE                 __end_of___awdiv 35DE                 __end_of___flneg 3EA8  
                         STR_12 0823                           STR_14 0823                 __end_of___awmod 3740  
               __end_of___flmul 2154                 __end_of___flsub 3DF4                 __end_of___fltol 2FDE  
               __end_of___lldiv 388E                 ___awdiv@divisor 0003                 ___awdiv@counter 0005  
                  vfpfcnvrt@fmt 0055                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TXREG 000FAD                           _flags 00ED  
                         _fputc 338A                           _fputs 3DF4                 __end_of_isdigit 3EE0  
                         _hours 00F5             _Mostrar_Temperatura 2700                           _month 00F1  
                         atoi@n 0010                           pad@fp 0011                           atoi@s 0008  
                         _width 00E9                           _putch 4052                 __end_of_isspace 3CD2  
             __end_of_I2C_Start 4038               __end_of_I2C_Write 3FA8                 __end_of_isupper 3E70  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 3C80  
                ?___fpclassifyf 0001                 __end_of_tolower 3DAE                 __end_of_strncmp 32B6  
       __end_of_Imprimir_Cadena 3D20                 __initialization 3AA8            Reloj_Calendario@Date 00BF  
          Reloj_Calendario@Time 00D0                    __end_of_atoi 2DB6                    __end_of_main 2ED8  
          ?_Mostrar_Temperatura 0001                       ??_I2C_Ack 0001                          ??_atoi 000A  
                        ??_main 00BB               __end_of_LCD_Begin 338A               __end_of_LCD_Clear 4052  
                 __activetblptr 000002                       ??_LCD_Cmd 0003               __end_of_LCD_Print 3690  
                  ??_I2C_NO_Ack 0001                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                          ?_fputc 0001                          ?_fputs 000A  
                        _ADRESH 000FC4                          _ADRESL 000FC3                ___awdiv@dividend 0001  
                        ?_putch 0001                          _SSPADD 000FC8                          _SSPBUF 000FC9  
              __end_of___xxtofl 2C60                Imprimir_Cadena@a 0001                Imprimir_Cadena@b 0003  
              Imprimir_Cadena@i 0006                    vfprintf@cfmt 005D                          ___flge 2FDE  
                        ___fleq 3740           ??_Mostrar_Temperatura 005F                       ??___fladd 0009  
                        ___wmul 3F4A                       ??___fldiv 0022                       ??___awdiv 0005  
            __end_of_I2C_NO_Ack 3FEA                       ??___flneg 0005                       ??___awmod 0005  
                     ??___flmul 0009                       ??___flsub 0022                       ??___fltol 0005  
                     ??___lldiv 0009                          _efgtoa 082A                 ADC_Read@channel 0001  
                        _floorf 24EE                 ADC_Read@digital 0007                          clear_0 3AEE  
                        clear_1 3AFE                ___awdiv@quotient 0007                 ___awmod@divisor 0003  
                        isa$std 000001                 ___awmod@counter 0005                          pad@buf 0013  
                        _strcpy 3BD2                          _strlen 3EE0                          fputc@c 0001  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                     ??_isdigit 0003                       ?_I2C_Init 000E                       ?_I2C_Read 0001  
                     ?_I2C_Stop 0001                 ___fpclassifyf@e 0009                       ?_ADC_Init 0001  
               ___fpclassifyf@u 000B                       ?_ADC_Read 0001                 ___fpclassifyf@x 0001  
                  __mediumconst 0000                       ??_isspace 0003                          tblptrh 000FF7  
                     ??_isupper 0003                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001                __end_of_vfprintf 3B70                       ??_sprintf 005F  
                     ??_tolower 0009                       ??_strncmp 0007                      ___flge@ff1 001A  
                    ___flge@ff2 001E                 ??___fpclassifyf 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      ___fleq@ff1 0001  
                    ___fleq@ff2 0005                      __accesstop 0060         __end_of__initialization 3B04  
                     ?_LCD_Goto 0005                      ___flneg@f1 0001                   ___rparam_used 000001  
                    ___fltol@f1 0001                ?_Imprimir_Cadena 0001                  __pcstackCOMRAM 0001  
                  __pidataBANK0 3F70                    __pidataBANK1 3F16                   __end_of_fputc 3454  
                 __end_of_fputs 3E38                  LCD_Cmd@Command 0004                   __end_of_putch 4054  
               _Establecer_Hora 39BC              I2C_Init@frecuencia 000E                      ??_I2C_Init 0012  
                    ??_I2C_Read 0001                      ??_I2C_Stop 0001                      ??_ADC_Init 0001  
                    ??_ADC_Read 0003                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 00DF                      __pbssBANK1 0100  
                    ??_LCD_Goto 0006                         ?___flge 001A                         ?___fleq 0001  
                       ?___wmul 0001                         ?_efgtoa 0047                         ?_floorf 0033  
                       _I2C_Ack 3FEA                   _BCD_a_Decimal 3FA8                   ??_I2C_ReStart 0001  
                       ?_strcpy 0001                         ?_strlen 0001                         _LCD_Cmd 3D20  
                     ?___xxtofl 0001                         _SSPCON2 000FC5                       _I2C_Start 4026  
                     _I2C_Write 3F90                         __Hparam 0000                         __Lparam 0000  
       __end_of_Establecer_Hora 3A3E                         ___fladd 1438                         ___fldiv 2154  
                       ___awdiv 351A                         ___flneg 3E70                         ___awmod 3690  
                       ___flmul 1D2A                         ___flsub 3DAE                         ___fltol 2ED8  
                       ___lldiv 37EA                       ?_vfprintf 009A                  ?_BCD_a_Decimal 0001  
                  __psmallconst 0800                         __pcinit 3AA8                         __ramtop 0800  
                       __ptext0 2DB6                         __ptext1 2700                         __ptext2 3C2E  
                       __ptext3 3B0E                         __ptext4 18F8                         __ptext5 31E0  
                       __ptext6 082A                         __ptext7 3D68                         __ptext8 3E38  
                       __ptext9 3BD2                         _isdigit 3EA8                      ??___xxtofl 0005  
              ___awmod@dividend 0001                         _minutes 00F4                         _seconds 00F3  
                       _isspace 3C80                         _isupper 3E38             __end_of_I2C_ReStart 404A  
                       efgtoa@c 004D                         efgtoa@d 0072                         efgtoa@e 008A  
                       efgtoa@f 0049                         efgtoa@g 0086                         efgtoa@h 007C  
                       efgtoa@i 0084                         efgtoa@l 0080                         efgtoa@m 006C  
                       efgtoa@n 008C                         efgtoa@p 0076                         efgtoa@t 0066  
                       efgtoa@u 008E                         efgtoa@w 0078                       _LCD_Begin 32B6  
                     _LCD_Clear 404A                         atoi@neg 000E                       _LCD_Print 35DE  
                       _sprintf 3C2E                         _tolower 3D68                         _strncmp 31E0  
          end_of_initialization 3B04                         floorf@e 0041                         floorf@m 003D  
                       floorf@u 0043                         floorf@x 0033                         fputc@fp 0003  
                 __Lmediumconst 0000                         fputs@fp 000C                _Reloj_Calendario 28D8  
                    ?_I2C_Start 0001                      ?_I2C_Write 0001                 ___lldiv@divisor 0005  
               ___lldiv@counter 000D               __end_of_vfpfcnvrt 1D2A                      efgtoa@mode 007B  
                    efgtoa@sign 0074                       _RCSTAbits 000FAB                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                      ??_vfprintf 005D               LCD_Write_Nibble@n 0002  
                       strcpy@d 0009                         strlen@a 0003                         strcpy@s 0007  
                       strlen@s 0001                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISBbits 000F93                       _TRISCbits 000F94                       _TRISDbits 000F95  
                    ?_LCD_Begin 0001                      ?_LCD_Clear 0001                     ___fldiv@grs 002D  
                   ___fldiv@rem 0026                      ?_LCD_Print 0003                     ___flmul@grs 000E  
   __end_of_Mostrar_Temperatura 28D8                       _TXSTAbits 000FAC                 ??_BCD_a_Decimal 0001  
              ?_Establecer_Hora 0001                _LCD_Write_Nibble 392A                      LCD_Print@i 0008  
                __end_of___flge 30E2                  __end_of___fleq 37EA                     vfpfcnvrt@ap 0057  
                   vfpfcnvrt@ct 0096                     vfpfcnvrt@fp 0053                  __end_of___wmul 3F70  
                   _BAUDCONbits 000FB8                  __end_of_efgtoa 1438                     _I2C_ReStart 4038  
                __end_of_floorf 2700                   __pbitbssBANK0 07D0                      floorf@F526 00DF  
                __end_of_strcpy 3C2E                  __end_of_strlen 3F16             start_initialization 3AA8  
                   __end_of_pad 351A           __end_of___fpclassifyf 31E0                     ??_I2C_Start 0001  
                   ??_I2C_Write 0001                     vfprintf@fmt 009C                        ??___flge 0022  
                      ??___fleq 0009                        ??___wmul 0005                        ??_efgtoa 004E  
                   __pdataBANK0 00BF                     __pdataBANK1 0150                        ??_floorf 0037  
                      ?_I2C_Ack 0001                        ??_strcpy 0005                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LCD_Cmd 0001  
                     ___fldiv@a 001E                       ___fldiv@b 001A                       ___flmul@a 0005  
                     ___flmul@b 0001                       ___flsub@a 001E                       ___flsub@b 001A  
                 __pcstackBANK0 0060                     ??_LCD_Begin 0005                     ??_LCD_Clear 0005  
                   ??_LCD_Print 0005                     _efgtoa$1481 0062                     _efgtoa$1473 0060  
                   _efgtoa$1482 0064                        ?___fladd 0001                        ?___fldiv 001A  
                      ?___awdiv 0001                        ?___flneg 0001                        ?___awmod 0001  
                      ?___flmul 0001                        ?___flsub 001A                        ?___fltol 0001  
                      ?___lldiv 0001                LCD_Print@LCD_Str 0003                       _buffer_TX 0150  
      __end_of_Reloj_Calendario 2AAC                     __smallconst 0800                        ?_isdigit 0001  
                      _I2C_Init 3B70                        _I2C_Read 3FBE                        _I2C_Stop 4014  
                      _ADC_Init 4000                        _ADC_Read 388E                        ?_isspace 0001  
                      ?_isupper 0001                        ?_sprintf 00A0                        ?_tolower 0007  
                      ?_strncmp 0001                        _LCD_Goto 3A3E                  ___wmul@product 0005  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _PIR1bits 000F9E  
                     _vfpfcnvrt 18F8    Mostrar_Temperatura@value_adc 00B5                      _ADCON0bits 000FC2  
             ___wmul@multiplier 0001               ??_Imprimir_Cadena 0005                      _I2C_NO_Ack 3FD4  
                  _isspace$1560 0007                      vfpfcnvrt@c 0099                      vfpfcnvrt@f 0092  
      __end_of_LCD_Write_Nibble 39BC                       copy_data0 3ABC                       copy_data1 3ADC  
Mostrar_Temperatura@temperatura 00F6                        __Hrparam 0000                      vfprintf@ap 009E  
                      __Lrparam 0000                      vfprintf@fp 009A                   I2C_Write@data 0001  
           BCD_a_Decimal@numero 0002                      ?_vfpfcnvrt 0053                    ?_I2C_ReStart 0001  
            ___fpclassifyf@F465 00E3                      sprintf@fmt 00A2                        ___xxtofl 2AAC  
                      __ptext10 3454                        __ptext11 3EE0                        __ptext20 3E70  
                      __ptext12 3DF4                        __ptext21 1D2A                        __ptext13 338A  
                      __ptext30 388E                        __ptext22 2FDE                        __ptext14 4052  
                      __ptext31 404A                        __ptext23 3740                        __ptext15 24EE  
                      __ptext40 35DE                        __ptext32 32B6                        __ptext24 2154  
                      __ptext16 30E2                        __ptext41 3A3E                        __ptext33 3CD2  
                      __ptext25 2C60                        __ptext17 2ED8                        __ptext50 3FD4  
                      __ptext42 3D20                        __ptext34 3B70                        __ptext26 3C80  
                      __ptext18 3DAE                        __ptext51 3FEA                        __ptext43 392A  
                      __ptext35 37EA                        __ptext27 3EA8                        __ptext19 1438  
                      __ptext52 4000                        __ptext44 3FA8                        __ptext36 39BC  
                      __ptext28 3F4A                        __ptext45 3F90                        __ptext37 28D8  
                      __ptext29 2AAC                        __ptext46 4014                        __ptext38 3690  
                      __ptext47 4026                        __ptext39 351A                        __ptext48 3FBE  
                      __ptext49 4038                      strcpy@dest 0001                        efgtoa@fp 0047  
                      efgtoa@ne 006A                        efgtoa@pp 0068                        efgtoa@ou 006E  
                      isa$xinst 000000           __end_of_BCD_a_Decimal 3FBE                        _vfprintf 3B0E  
                      main@cont 00BD                     ?_I2C_NO_Ack 0001                        isdigit@c 0001  
                     sprintf@ap 00A8                        isspace@c 0001                ___lldiv@dividend 0001  
                     strcpy@src 0003                        isupper@c 0001                       strncmp@_l 0001  
                     strncmp@_r 0003                      _OSCCONbits 000FD3                     efgtoa@nmode 007A  
                   ??_vfpfcnvrt 0059                        sprintf@f 00AA                        tolower@c 0007  
                      sprintf@s 00A0               ?_Reloj_Calendario 0001                ___lldiv@quotient 0009  
                      strncmp@l 0008                        strncmp@n 0005                        strncmp@r 000A  
            ??_Reloj_Calendario 0009                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                 ___fladd@signs 000D                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
