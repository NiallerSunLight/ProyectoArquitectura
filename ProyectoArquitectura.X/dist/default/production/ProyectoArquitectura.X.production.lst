

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Mar 08 18:09:50 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.40
    77                           ; Generated 17/11/2021 GMT
    78                           ; 
    79                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F4550 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataBANK0
   113  003FC2                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for Reloj_Calendario@Date
   117  003FC2  44                 	db	68
   118  003FC3  41                 	db	65
   119  003FC4  54                 	db	84
   120  003FC5  45                 	db	69
   121  003FC6  3A                 	db	58
   122  003FC7  20                 	db	32
   123  003FC8  30                 	db	48
   124  003FC9  30                 	db	48
   125  003FCA  2F                 	db	47
   126  003FCB  30                 	db	48
   127  003FCC  30                 	db	48
   128  003FCD  2F                 	db	47
   129  003FCE  32                 	db	50
   130  003FCF  30                 	db	48
   131  003FD0  30                 	db	48
   132  003FD1  30                 	db	48
   133  003FD2  00                 	db	0
   134                           
   135                           ;initializer for Reloj_Calendario@Time
   136  003FD3  54                 	db	84
   137  003FD4  49                 	db	73
   138  003FD5  4D                 	db	77
   139  003FD6  45                 	db	69
   140  003FD7  3A                 	db	58
   141  003FD8  20                 	db	32
   142  003FD9  30                 	db	48
   143  003FDA  30                 	db	48
   144  003FDB  3A                 	db	58
   145  003FDC  30                 	db	48
   146  003FDD  30                 	db	48
   147  003FDE  3A                 	db	58
   148  003FDF  30                 	db	48
   149  003FE0  30                 	db	48
   150  003FE1  00                 	db	0
   151                           
   152                           	psect	idataBANK1
   153  003F68                     __pidataBANK1:
   154                           	callstack 0
   155                           
   156                           ;initializer for _buffer_TX
   157  003F68  54                 	db	84
   158  003F69  45                 	db	69
   159  003F6A  4D                 	db	77
   160  003F6B  50                 	db	80
   161  003F6C  3A                 	db	58
   162  003F6D  20                 	db	32
   163  003F6E  78                 	db	120
   164  003F6F  78                 	db	120
   165  003F70  2C                 	db	44
   166  003F71  78                 	db	120
   167  003F72  78                 	db	120
   168  003F73  20                 	db	32
   169  003F74  67                 	db	103
   170  003F75  72                 	db	114
   171  003F76  61                 	db	97
   172  003F77  64                 	db	100
   173  003F78  6F                 	db	111
   174  003F79  73                 	db	115
   175  003F7A  20                 	db	32
   176  003F7B  48                 	db	72
   177  003F7C  4F                 	db	79
   178  003F7D  52                 	db	82
   179  003F7E  41                 	db	65
   180  003F7F  3A                 	db	58
   181  003F80  20                 	db	32
   182  003F81  78                 	db	120
   183  003F82  78                 	db	120
   184  003F83  3A                 	db	58
   185  003F84  78                 	db	120
   186  003F85  78                 	db	120
   187  003F86  3A                 	db	58
   188  003F87  78                 	db	120
   189  003F88  78                 	db	120
   190  003F89  20                 	db	32
   191  003F8A  44                 	db	68
   192  003F8B  41                 	db	65
   193  003F8C  54                 	db	84
   194  003F8D  45                 	db	69
   195  003F8E  3A                 	db	58
   196  003F8F  20                 	db	32
   197  003F90  78                 	db	120
   198  003F91  78                 	db	120
   199  003F92  2F                 	db	47
   200  003F93  78                 	db	120
   201  003F94  78                 	db	120
   202  003F95  2F                 	db	47
   203  003F96  78                 	db	120
   204  003F97  78                 	db	120
   205  003F98  0D                 	db	13
   206  003F99  0A                 	db	10
   207  003F9A  00                 	db	0
   208  0000                     _ADCON0	set	4034
   209  0000                     _ADRESL	set	4035
   210  0000                     _ADRESH	set	4036
   211  0000                     _TRISBbits	set	3987
   212  0000                     _ADCON0bits	set	4034
   213  0000                     _SSPCON2bits	set	4037
   214  0000                     _RB5	set	31757
   215  0000                     _RB4	set	31756
   216  0000                     _RB3	set	31755
   217  0000                     _GO	set	32273
   218  0000                     _ADON	set	32272
   219  0000                     _LATCbits	set	3979
   220  0000                     _TRISA	set	3986
   221  0000                     _TRISB	set	3987
   222  0000                     _RB2	set	31754
   223  0000                     _TRISDbits	set	3989
   224  0000                     _TRISCbits	set	3988
   225  0000                     _PIR1bits	set	3998
   226  0000                     _SSPCON2	set	4037
   227  0000                     _SSPCON1bits	set	4038
   228  0000                     _SSPSTATbits	set	4039
   229  0000                     _OSCCONbits	set	4051
   230  0000                     _SSPBUF	set	4041
   231  0000                     _SSPADD	set	4040
   232  0000                     _RCSTAbits	set	4011
   233  0000                     _TXSTAbits	set	4012
   234  0000                     _ADCON2	set	4032
   235  0000                     _ADCON1	set	4033
   236  0000                     _LATDbits	set	3980
   237  0000                     _SPBRG	set	4015
   238  0000                     _BAUDCONbits	set	4024
   239  0000                     _TXREG	set	4013
   240                           
   241                           	psect	smallconst
   242  000800                     __psmallconst:
   243                           	callstack 0
   244  000800  00                 	db	0
   245  000801                     STR_1:
   246  000801  54                 	db	84	;'T'
   247  000802  65                 	db	101	;'e'
   248  000803  6D                 	db	109	;'m'
   249  000804  70                 	db	112	;'p'
   250  000805  65                 	db	101	;'e'
   251  000806  72                 	db	114	;'r'
   252  000807  61                 	db	97	;'a'
   253  000808  74                 	db	116	;'t'
   254  000809  75                 	db	117	;'u'
   255  00080A  72                 	db	114	;'r'
   256  00080B  61                 	db	97	;'a'
   257  00080C  3A                 	db	58	;':'
   258  00080D  00                 	db	0
   259  00080E                     STR_2:
   260  00080E  25                 	db	37
   261  00080F  2E                 	db	46
   262  000810  32                 	db	50	;'2'
   263  000811  66                 	db	102	;'f'
   264  000812  00                 	db	0
   265  000813                     STR_4:
   266  000813  49                 	db	73	;'I'
   267  000814  4E                 	db	78	;'N'
   268  000815  46                 	db	70	;'F'
   269  000816  00                 	db	0
   270  000817                     STR_8:
   271  000817  4E                 	db	78	;'N'
   272  000818  41                 	db	65	;'A'
   273  000819  4E                 	db	78	;'N'
   274  00081A  00                 	db	0
   275  00081B                     STR_5:
   276  00081B  69                 	db	105	;'i'
   277  00081C  6E                 	db	110	;'n'
   278  00081D  66                 	db	102	;'f'
   279  00081E  00                 	db	0
   280  00081F                     STR_9:
   281  00081F  6E                 	db	110	;'n'
   282  000820  61                 	db	97	;'a'
   283  000821  6E                 	db	110	;'n'
   284  000822  00                 	db	0
   285  000823                     STR_12:
   286  000823  6C                 	db	108	;'l'
   287  000824  66                 	db	102	;'f'
   288  000825  00                 	db	0
   289  000826                     STR_3:
   290  000826  43                 	db	67	;'C'
   291  000827  00                 	db	0
   292  000828  00                 	db	0	; dummy byte at the end
   293  0000                     
   294                           ; #config settings
   295                           
   296                           	psect	cinit
   297  003AFA                     __pcinit:
   298                           	callstack 0
   299  003AFA                     start_initialization:
   300                           	callstack 0
   301  003AFA                     __initialization:
   302                           	callstack 0
   303                           
   304                           ; Initialize objects allocated to BANK1 (51 bytes)
   305                           ; load TBLPTR registers with __pidataBANK1
   306  003AFA  0E68               	movlw	low __pidataBANK1
   307  003AFC  6EF6               	movwf	tblptrl,c
   308  003AFE  0E3F               	movlw	high __pidataBANK1
   309  003B00  6EF7               	movwf	tblptrh,c
   310  003B02  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   311  003B04  6EF8               	movwf	tblptru,c
   312  003B06  EE01  F050         	lfsr	0,__pdataBANK1
   313  003B0A  EE10 F033          	lfsr	1,51
   314  003B0E                     copy_data0:
   315  003B0E  0009               	tblrd		*+
   316  003B10  CFF5 FFEE          	movff	tablat,postinc0
   317  003B14  50E5               	movf	postdec1,w,c
   318  003B16  50E1               	movf	fsr1l,w,c
   319  003B18  E1FA               	bnz	copy_data0
   320                           
   321                           ; Initialize objects allocated to BANK0 (32 bytes)
   322                           ; load TBLPTR registers with __pidataBANK0
   323  003B1A  0EC2               	movlw	low __pidataBANK0
   324  003B1C  6EF6               	movwf	tblptrl,c
   325  003B1E  0E3F               	movlw	high __pidataBANK0
   326  003B20  6EF7               	movwf	tblptrh,c
   327  003B22  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   328  003B24  6EF8               	movwf	tblptru,c
   329  003B26  EE00  F0BD         	lfsr	0,__pdataBANK0
   330  003B2A  EE10 F020          	lfsr	1,32
   331  003B2E                     copy_data1:
   332  003B2E  0009               	tblrd		*+
   333  003B30  CFF5 FFEE          	movff	tablat,postinc0
   334  003B34  50E5               	movf	postdec1,w,c
   335  003B36  50E1               	movf	fsr1l,w,c
   336  003B38  E1FA               	bnz	copy_data1
   337                           
   338                           ; Clear objects allocated to BANK1 (80 bytes)
   339  003B3A  EE01  F000         	lfsr	0,__pbssBANK1
   340  003B3E  0E50               	movlw	80
   341  003B40                     clear_0:
   342  003B40  6AEE               	clrf	postinc0,c
   343  003B42  06E8               	decf	wreg,f,c
   344  003B44  E1FD               	bnz	clear_0
   345                           
   346                           ; Clear objects allocated to BITBANK0 (1 bytes)
   347  003B46  0100               	movlb	0
   348  003B48  6BF8               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   349                           
   350                           ; Clear objects allocated to BANK0 (27 bytes)
   351  003B4A  EE00  F0DD         	lfsr	0,__pbssBANK0
   352  003B4E  0E1B               	movlw	27
   353  003B50                     clear_1:
   354  003B50  6AEE               	clrf	postinc0,c
   355  003B52  06E8               	decf	wreg,f,c
   356  003B54  E1FD               	bnz	clear_1
   357  003B56                     end_of_initialization:
   358                           	callstack 0
   359  003B56                     __end_of__initialization:
   360                           	callstack 0
   361  003B56  0E00               	movlw	low (__Lmediumconst shr (0+16))
   362  003B58  6EF8               	movwf	tblptru,c
   363  003B5A  0100               	movlb	0
   364  003B5C  EFEF  F015         	goto	_main	;jump to C main() function
   365                           
   366                           	psect	bitbssBANK0
   367  0007C0                     __pbitbssBANK0:
   368                           	callstack 0
   369  0007C0                     _RS:
   370                           	callstack 0
   371  0007C0                     	ds	1
   372                           
   373                           	psect	bssBANK0
   374  0000DD                     __pbssBANK0:
   375                           	callstack 0
   376  0000DD                     floorf@F526:
   377                           	callstack 0
   378  0000DD                     	ds	4
   379  0000E1                     ___fpclassifyf@F465:
   380                           	callstack 0
   381  0000E1                     	ds	4
   382  0000E5                     _nout:
   383                           	callstack 0
   384  0000E5                     	ds	2
   385  0000E7                     _width:
   386                           	callstack 0
   387  0000E7                     	ds	2
   388  0000E9                     _prec:
   389                           	callstack 0
   390  0000E9                     	ds	2
   391  0000EB                     _flags:
   392                           	callstack 0
   393  0000EB                     	ds	2
   394  0000ED                     _i:
   395                           	callstack 0
   396  0000ED                     	ds	1
   397  0000EE                     _day:
   398                           	callstack 0
   399  0000EE                     	ds	1
   400  0000EF                     _month:
   401                           	callstack 0
   402  0000EF                     	ds	1
   403  0000F0                     _year:
   404                           	callstack 0
   405  0000F0                     	ds	1
   406  0000F1                     _seconds:
   407                           	callstack 0
   408  0000F1                     	ds	1
   409  0000F2                     _minutes:
   410                           	callstack 0
   411  0000F2                     	ds	1
   412  0000F3                     _hours:
   413                           	callstack 0
   414  0000F3                     	ds	1
   415  0000F4                     Mostrar_Temperatura@temperatura:
   416                           	callstack 0
   417  0000F4                     	ds	4
   418                           
   419                           	psect	dataBANK0
   420  0000BD                     __pdataBANK0:
   421                           	callstack 0
   422  0000BD                     Reloj_Calendario@Date:
   423                           	callstack 0
   424  0000BD                     	ds	17
   425  0000CE                     Reloj_Calendario@Time:
   426                           	callstack 0
   427  0000CE                     	ds	15
   428                           
   429                           	psect	bssBANK1
   430  000100                     __pbssBANK1:
   431                           	callstack 0
   432  000100                     _dbuf:
   433                           	callstack 0
   434  000100                     	ds	80
   435                           
   436                           	psect	dataBANK1
   437  000150                     __pdataBANK1:
   438                           	callstack 0
   439  000150                     _buffer_TX:
   440                           	callstack 0
   441  000150                     	ds	51
   442                           
   443                           	psect	cstackBANK0
   444  000060                     __pcstackBANK0:
   445                           	callstack 0
   446  000060                     _efgtoa$1486:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x0
   450  000060                     	ds	2
   451  000062                     _efgtoa$1494:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x2
   455  000062                     	ds	2
   456  000064                     _efgtoa$1495:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x4
   460  000064                     	ds	2
   461  000066                     efgtoa@t:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x6
   465  000066                     	ds	2
   466  000068                     efgtoa@pp:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x8
   470  000068                     	ds	2
   471  00006A                     efgtoa@ne:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xA
   475  00006A                     	ds	2
   476  00006C                     efgtoa@m:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xC
   480  00006C                     	ds	2
   481  00006E                     efgtoa@ou:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0xE
   485  00006E                     	ds	4
   486  000072                     efgtoa@d:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x12
   490  000072                     	ds	2
   491  000074                     efgtoa@sign:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x14
   495  000074                     	ds	2
   496  000076                     efgtoa@p:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x16
   500  000076                     	ds	2
   501  000078                     efgtoa@w:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x18
   505  000078                     	ds	2
   506  00007A                     efgtoa@nmode:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x1A
   510  00007A                     	ds	1
   511  00007B                     efgtoa@mode:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x1B
   515  00007B                     	ds	1
   516  00007C                     efgtoa@h:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x1C
   520  00007C                     	ds	4
   521  000080                     efgtoa@l:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0x20
   525  000080                     	ds	4
   526  000084                     efgtoa@i:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x24
   530  000084                     	ds	2
   531  000086                     efgtoa@g:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x26
   535  000086                     	ds	4
   536  00008A                     efgtoa@e:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x2A
   540  00008A                     	ds	2
   541  00008C                     efgtoa@n:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x2C
   545  00008C                     	ds	2
   546  00008E                     efgtoa@u:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x2E
   550  00008E                     	ds	4
   551  000092                     vfpfcnvrt@f:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x32
   555  000092                     	ds	4
   556  000096                     vfpfcnvrt@ct:
   557                           	callstack 0
   558                           
   559                           ; 3 bytes @ 0x36
   560  000096                     	ds	3
   561  000099                     vfpfcnvrt@c:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x39
   565  000099                     	ds	1
   566  00009A                     ?_vfprintf:
   567                           	callstack 0
   568  00009A                     vfprintf@fp:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x3A
   572  00009A                     	ds	2
   573  00009C                     vfprintf@fmt:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x3C
   577  00009C                     	ds	2
   578  00009E                     vfprintf@ap:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x3E
   582  00009E                     	ds	2
   583  0000A0                     ?_sprintf:
   584                           	callstack 0
   585  0000A0                     sprintf@s:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x40
   589  0000A0                     	ds	2
   590  0000A2                     sprintf@fmt:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x42
   594  0000A2                     	ds	6
   595  0000A8                     sprintf@ap:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x48
   599  0000A8                     	ds	2
   600  0000AA                     sprintf@f:
   601                           	callstack 0
   602                           
   603                           ; 11 bytes @ 0x4A
   604  0000AA                     	ds	11
   605  0000B5                     Mostrar_Temperatura@temp:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x55
   609  0000B5                     	ds	4
   610  0000B9                     ??_main:
   611                           
   612                           ; 1 bytes @ 0x59
   613  0000B9                     	ds	2
   614  0000BB                     main@cont:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x5B
   618  0000BB                     	ds	2
   619                           
   620                           	psect	cstackCOMRAM
   621  000001                     __pcstackCOMRAM:
   622                           	callstack 0
   623  000001                     ??_LCD_Write_Nibble:
   624  000001                     ??_BCD_a_Decimal:
   625  000001                     ?_strlen:
   626                           	callstack 0
   627  000001                     ?___fpclassifyf:
   628                           	callstack 0
   629  000001                     ?_isupper:
   630                           	callstack 0
   631  000001                     ?_isdigit:
   632                           	callstack 0
   633  000001                     ?_strncmp:
   634                           	callstack 0
   635  000001                     ?_isspace:
   636                           	callstack 0
   637  000001                     ?_ADC_Read:
   638                           	callstack 0
   639  000001                     ?___wmul:
   640                           	callstack 0
   641  000001                     ?___awdiv:
   642                           	callstack 0
   643  000001                     ?___awmod:
   644                           	callstack 0
   645  000001                     ?___fladd:
   646                           	callstack 0
   647  000001                     ?___flmul:
   648                           	callstack 0
   649  000001                     ?___lldiv:
   650                           	callstack 0
   651  000001                     ?___flneg:
   652                           	callstack 0
   653  000001                     ?___fltol:
   654                           	callstack 0
   655  000001                     ?___xxtofl:
   656                           	callstack 0
   657  000001                     I2C_Write@data:
   658                           	callstack 0
   659  000001                     ADC_Read@channel:
   660                           	callstack 0
   661  000001                     Imprimir_Cadena@a:
   662                           	callstack 0
   663  000001                     ___wmul@multiplier:
   664                           	callstack 0
   665  000001                     ___awdiv@dividend:
   666                           	callstack 0
   667  000001                     ___awmod@dividend:
   668                           	callstack 0
   669  000001                     isdigit@c:
   670                           	callstack 0
   671  000001                     isspace@c:
   672                           	callstack 0
   673  000001                     isupper@c:
   674                           	callstack 0
   675  000001                     fputc@c:
   676                           	callstack 0
   677  000001                     strcpy@dest:
   678                           	callstack 0
   679  000001                     strlen@s:
   680                           	callstack 0
   681  000001                     strncmp@_l:
   682                           	callstack 0
   683  000001                     ___lldiv@dividend:
   684                           	callstack 0
   685  000001                     ___fleq@ff1:
   686                           	callstack 0
   687  000001                     ___flneg@f1:
   688                           	callstack 0
   689  000001                     ___fltol@f1:
   690                           	callstack 0
   691  000001                     ___fladd@b:
   692                           	callstack 0
   693  000001                     ___flmul@b:
   694                           	callstack 0
   695  000001                     ___xxtofl@val:
   696                           	callstack 0
   697  000001                     ___fpclassifyf@x:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x0
   701  000001                     	ds	1
   702  000002                     LCD_Write_Nibble@n:
   703                           	callstack 0
   704  000002                     BCD_a_Decimal@numero:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1
   708  000002                     	ds	1
   709  000003                     ??_isupper:
   710  000003                     ??_isdigit:
   711  000003                     ??_isspace:
   712  000003                     ??_ADC_Read:
   713  000003                     ??_LCD_Cmd:
   714  000003                     LCD_Print@LCD_Str:
   715                           	callstack 0
   716  000003                     Imprimir_Cadena@b:
   717                           	callstack 0
   718  000003                     ___wmul@multiplicand:
   719                           	callstack 0
   720  000003                     ___awdiv@divisor:
   721                           	callstack 0
   722  000003                     ___awmod@divisor:
   723                           	callstack 0
   724  000003                     fputc@fp:
   725                           	callstack 0
   726  000003                     strcpy@src:
   727                           	callstack 0
   728  000003                     strlen@a:
   729                           	callstack 0
   730  000003                     strncmp@_r:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x2
   734  000003                     	ds	1
   735  000004                     LCD_Cmd@Command:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x3
   739  000004                     	ds	1
   740  000005                     ??_fputc:
   741  000005                     ??___fpclassifyf:
   742  000005                     ??_strcpy:
   743  000005                     ??_LCD_Print:
   744  000005                     ??_LCD_Begin:
   745  000005                     ??_Imprimir_Cadena:
   746  000005                     ??___fltol:
   747  000005                     ??___xxtofl:
   748  000005                     LCD_Goto@row:
   749                           	callstack 0
   750  000005                     ___awdiv@counter:
   751                           	callstack 0
   752  000005                     ___awmod@counter:
   753                           	callstack 0
   754  000005                     ___wmul@product:
   755                           	callstack 0
   756  000005                     strncmp@n:
   757                           	callstack 0
   758  000005                     ___lldiv@divisor:
   759                           	callstack 0
   760  000005                     ___fleq@ff2:
   761                           	callstack 0
   762  000005                     ___fladd@a:
   763                           	callstack 0
   764  000005                     ___flmul@a:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x4
   768  000005                     	ds	1
   769  000006                     ??_LCD_Goto:
   770  000006                     ___awdiv@sign:
   771                           	callstack 0
   772  000006                     ___awmod@sign:
   773                           	callstack 0
   774  000006                     Imprimir_Cadena@i:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x5
   778  000006                     	ds	1
   779  000007                     ??_strncmp:
   780  000007                     ?_tolower:
   781                           	callstack 0
   782  000007                     _isspace$1573:
   783                           	callstack 0
   784  000007                     ADC_Read@digital:
   785                           	callstack 0
   786  000007                     ___awdiv@quotient:
   787                           	callstack 0
   788  000007                     strcpy@s:
   789                           	callstack 0
   790  000007                     tolower@c:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x6
   794  000007                     	ds	1
   795  000008                     ?_atoi:
   796                           	callstack 0
   797  000008                     LCD_Goto@col:
   798                           	callstack 0
   799  000008                     LCD_Print@i:
   800                           	callstack 0
   801  000008                     atoi@s:
   802                           	callstack 0
   803  000008                     strncmp@l:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x7
   807  000008                     	ds	1
   808  000009                     ??___fladd:
   809  000009                     ??___flmul:
   810  000009                     ??_tolower:
   811  000009                     ??___fleq:
   812  000009                     ___fltol@sign1:
   813                           	callstack 0
   814  000009                     ___xxtofl@sign:
   815                           	callstack 0
   816  000009                     ___fpclassifyf@e:
   817                           	callstack 0
   818  000009                     strcpy@d:
   819                           	callstack 0
   820  000009                     ___lldiv@quotient:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x8
   824  000009                     	ds	1
   825  00000A                     ??_atoi:
   826  00000A                     ___fltol@exp1:
   827                           	callstack 0
   828  00000A                     ___xxtofl@exp:
   829                           	callstack 0
   830  00000A                     fputs@s:
   831                           	callstack 0
   832  00000A                     strncmp@r:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x9
   836  00000A                     	ds	1
   837  00000B                     ___xxtofl@arg:
   838                           	callstack 0
   839  00000B                     ___fpclassifyf@u:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0xA
   843  00000B                     	ds	1
   844  00000C                     fputs@fp:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0xB
   848  00000C                     	ds	1
   849  00000D                     ___lldiv@counter:
   850                           	callstack 0
   851  00000D                     ___fladd@signs:
   852                           	callstack 0
   853  00000D                     ___flmul@sign:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0xC
   857  00000D                     	ds	1
   858  00000E                     ___fladd@aexp:
   859                           	callstack 0
   860  00000E                     fputs@c:
   861                           	callstack 0
   862  00000E                     atoi@neg:
   863                           	callstack 0
   864  00000E                     I2C_Init@frecuencia:
   865                           	callstack 0
   866  00000E                     ___flmul@grs:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xD
   870  00000E                     	ds	1
   871  00000F                     ___fladd@bexp:
   872                           	callstack 0
   873  00000F                     fputs@i:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0xE
   877  00000F                     	ds	1
   878  000010                     ___fladd@grs:
   879                           	callstack 0
   880  000010                     atoi@n:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0xF
   884  000010                     	ds	1
   885  000011                     ?_pad:
   886                           	callstack 0
   887  000011                     pad@fp:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x10
   891  000011                     	ds	1
   892  000012                     ??_I2C_Init:
   893  000012                     ___flmul@aexp:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0x11
   897  000012                     	ds	1
   898  000013                     ___flmul@bexp:
   899                           	callstack 0
   900  000013                     pad@buf:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x12
   904  000013                     	ds	1
   905  000014                     ___flmul@prod:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x13
   909  000014                     	ds	1
   910  000015                     pad@p:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x14
   914  000015                     	ds	2
   915  000017                     ??_pad:
   916                           
   917                           ; 1 bytes @ 0x16
   918  000017                     	ds	1
   919  000018                     ___flmul@temp:
   920                           	callstack 0
   921  000018                     pad@i:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x17
   925  000018                     	ds	2
   926  00001A                     ?___fldiv:
   927                           	callstack 0
   928  00001A                     ?___flsub:
   929                           	callstack 0
   930  00001A                     pad@w:
   931                           	callstack 0
   932  00001A                     ___flge@ff1:
   933                           	callstack 0
   934  00001A                     ___flsub@b:
   935                           	callstack 0
   936  00001A                     ___fldiv@b:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x19
   940  00001A                     	ds	4
   941  00001E                     ___flge@ff2:
   942                           	callstack 0
   943  00001E                     ___flsub@a:
   944                           	callstack 0
   945  00001E                     ___fldiv@a:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x1D
   949  00001E                     	ds	4
   950  000022                     ??___fldiv:
   951  000022                     ??___flge:
   952                           
   953                           ; 1 bytes @ 0x21
   954  000022                     	ds	4
   955  000026                     ___fldiv@rem:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x25
   959  000026                     	ds	4
   960  00002A                     ___fldiv@sign:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x29
   964  00002A                     	ds	1
   965  00002B                     ___fldiv@new_exp:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x2A
   969  00002B                     	ds	2
   970  00002D                     ___fldiv@grs:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x2C
   974  00002D                     	ds	4
   975  000031                     ___fldiv@bexp:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x30
   979  000031                     	ds	1
   980  000032                     ___fldiv@aexp:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x31
   984  000032                     	ds	1
   985  000033                     ?_Obtener_Temperatura:
   986                           	callstack 0
   987  000033                     ?_floorf:
   988                           	callstack 0
   989  000033                     floorf@x:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x32
   993  000033                     	ds	4
   994  000037                     ??_floorf:
   995  000037                     Obtener_Temperatura@value_adc:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x36
   999  000037                     	ds	2
  1000  000039                     Obtener_Temperatura@temp:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x38
  1004  000039                     	ds	4
  1005  00003D                     Encender_Act@temp:
  1006                           	callstack 0
  1007  00003D                     floorf@m:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x3C
  1011  00003D                     	ds	4
  1012  000041                     ??_Establecer_Hora:
  1013  000041                     floorf@e:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x40
  1017  000041                     	ds	2
  1018  000043                     floorf@u:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x42
  1022  000043                     	ds	4
  1023  000047                     ?_efgtoa:
  1024                           	callstack 0
  1025  000047                     efgtoa@fp:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x46
  1029  000047                     	ds	2
  1030  000049                     efgtoa@f:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x48
  1034  000049                     	ds	4
  1035  00004D                     efgtoa@c:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x4C
  1039  00004D                     	ds	1
  1040  00004E                     ??_efgtoa:
  1041                           
  1042                           ; 1 bytes @ 0x4D
  1043  00004E                     	ds	5
  1044  000053                     ?_vfpfcnvrt:
  1045                           	callstack 0
  1046  000053                     vfpfcnvrt@fp:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x52
  1050  000053                     	ds	2
  1051  000055                     vfpfcnvrt@fmt:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x54
  1055  000055                     	ds	2
  1056  000057                     vfpfcnvrt@ap:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x56
  1060  000057                     	ds	2
  1061  000059                     ??_vfpfcnvrt:
  1062                           
  1063                           ; 1 bytes @ 0x58
  1064  000059                     	ds	4
  1065  00005D                     vfprintf@cfmt:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x5C
  1069  00005D                     	ds	2
  1070  00005F                     ??_Mostrar_Temperatura:
  1071                           
  1072                           ; 1 bytes @ 0x5E
  1073  00005F                     	ds	1
  1074                           
  1075 ;;
  1076 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1077 ;;
  1078 ;; *************** function _main *****************
  1079 ;; Defined at:
  1080 ;;		line 258 in file "Main.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  cont            2   91[BANK0 ] int 
  1085 ;; Return value:  Size  Location     Type
  1086 ;;                  1    wreg      void 
  1087 ;; Registers used:
  1088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1094 ;;      Params:         0       0       0       0       0       0       0       0       0
  1095 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1096 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1097 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1098 ;;Total ram usage:        4 bytes
  1099 ;; Hardware stack levels required when called: 9
  1100 ;; This function calls:
  1101 ;;		_ADC_Init
  1102 ;;		_Establecer_Hora
  1103 ;;		_I2C_Init
  1104 ;;		_Imprimir_Cadena
  1105 ;;		_LCD_Begin
  1106 ;;		_LCD_Clear
  1107 ;;		_Mostrar_Temperatura
  1108 ;; This function is called by:
  1109 ;;		Startup code after reset
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text0
  1114  002BDE                     __ptext0:
  1115                           	callstack 0
  1116  002BDE                     _main:
  1117                           	callstack 22
  1118  002BDE                     
  1119                           ;Main.c: 260:     I2C_Init(100000);
  1120  002BDE  0EA0               	movlw	160
  1121  002BE0  6E0E               	movwf	I2C_Init@frecuencia^0,c
  1122  002BE2  0E86               	movlw	134
  1123  002BE4  6E0F               	movwf	(I2C_Init@frecuencia+1)^0,c
  1124  002BE6  0E01               	movlw	1
  1125  002BE8  6E10               	movwf	(I2C_Init@frecuencia+2)^0,c
  1126  002BEA  0E00               	movlw	0
  1127  002BEC  6E11               	movwf	(I2C_Init@frecuencia+3)^0,c
  1128  002BEE  ECE1  F01D         	call	_I2C_Init	;wreg free
  1129                           
  1130                           ;Main.c: 261:     LCD_Begin();
  1131  002BF2  EC6F  F018         	call	_LCD_Begin	;wreg free
  1132  002BF6                     
  1133                           ;Main.c: 262:     ADC_Init();
  1134  002BF6  EC29  F020         	call	_ADC_Init	;wreg free
  1135  002BFA                     
  1136                           ;Main.c: 264:     TRISBbits.RB2 = 0;
  1137  002BFA  9493               	bcf	147,2,c	;volatile
  1138  002BFC                     
  1139                           ;Main.c: 265:     TRISBbits.RB3 = 0;
  1140  002BFC  9693               	bcf	147,3,c	;volatile
  1141  002BFE                     
  1142                           ;Main.c: 266:     TRISBbits.RB4 = 0;
  1143  002BFE  9893               	bcf	147,4,c	;volatile
  1144  002C00                     
  1145                           ;Main.c: 267:     TRISBbits.RB5 = 0;
  1146  002C00  9A93               	bcf	147,5,c	;volatile
  1147  002C02                     
  1148                           ;Main.c: 270:     OSCCONbits.IRCF = 0b111;
  1149  002C02  0E70               	movlw	112
  1150  002C04  12D3               	iorwf	211,f,c	;volatile
  1151  002C06                     
  1152                           ;Main.c: 271:     OSCCONbits.SCS = 0b10;
  1153  002C06  50D3               	movf	211,w,c	;volatile
  1154  002C08  0BFC               	andlw	-4
  1155  002C0A  0902               	iorlw	2
  1156  002C0C  6ED3               	movwf	211,c	;volatile
  1157  002C0E                     
  1158                           ;Main.c: 274:     TRISCbits.RC6 = 0;
  1159  002C0E  9C94               	bcf	148,6,c	;volatile
  1160  002C10                     
  1161                           ;Main.c: 275:     TXSTAbits.TX9 = 0;
  1162  002C10  9CAC               	bcf	172,6,c	;volatile
  1163  002C12                     
  1164                           ;Main.c: 276:     TXSTAbits.TXEN = 1;
  1165  002C12  8AAC               	bsf	172,5,c	;volatile
  1166  002C14                     
  1167                           ;Main.c: 277:     TXSTAbits.SYNC = 0;
  1168  002C14  98AC               	bcf	172,4,c	;volatile
  1169  002C16                     
  1170                           ;Main.c: 278:     TXSTAbits.BRGH = 0;
  1171  002C16  94AC               	bcf	172,2,c	;volatile
  1172  002C18                     
  1173                           ;Main.c: 279:     BAUDCONbits.BRG16 = 0;
  1174  002C18  96B8               	bcf	184,3,c	;volatile
  1175  002C1A                     
  1176                           ;Main.c: 280:     RCSTAbits.SPEN = 1;
  1177  002C1A  8EAB               	bsf	171,7,c	;volatile
  1178  002C1C                     
  1179                           ;Main.c: 281:     SPBRG = (unsigned char) (((8000000 / 9600) / 64) - 1);
  1180  002C1C  0E0C               	movlw	12
  1181  002C1E  6EAF               	movwf	175,c	;volatile
  1182  002C20                     l4602:
  1183                           
  1184                           ;Main.c: 286:     {;Main.c: 287:         cont = 400;
  1185  002C20  0E01               	movlw	1
  1186  002C22  0100               	movlb	0	; () banked
  1187  002C24  6FBC               	movwf	(main@cont+1)& (0+255),b
  1188  002C26  0E90               	movlw	144
  1189  002C28  6FBB               	movwf	main@cont& (0+255),b
  1190                           
  1191                           ;Main.c: 288:         while(cont>0)
  1192  002C2A  EF20  F016         	goto	l4608
  1193  002C2E                     l4604:
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;Main.c: 289:         {;Main.c: 290:             Mostrar_Temperatura();
  1197  002C2E  ECB6  F01A         	call	_Mostrar_Temperatura	;wreg free
  1198  002C32                     
  1199                           ;Main.c: 291:             cont = cont - 5;
  1200  002C32  0EFB               	movlw	251
  1201  002C34  0100               	movlb	0	; () banked
  1202  002C36  25BB               	addwf	main@cont& (0+255),w,b
  1203  002C38  6FBB               	movwf	main@cont& (0+255),b
  1204  002C3A  0EFF               	movlw	255
  1205  002C3C  21BC               	addwfc	(main@cont+1)& (0+255),w,b
  1206  002C3E  6FBC               	movwf	(main@cont+1)& (0+255),b
  1207  002C40                     l4608:
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;Main.c: 288:         while(cont>0)
  1211  002C40  BFBC               	btfsc	(main@cont+1)& (0+255),7,b
  1212  002C42  EF2D  F016         	goto	u5090
  1213  002C46  51BC               	movf	(main@cont+1)& (0+255),w,b
  1214  002C48  E106               	bnz	u5091
  1215  002C4A  05BB               	decf	main@cont& (0+255),w,b
  1216  002C4C  B0D8               	btfsc	status,0,c
  1217  002C4E  EF2B  F016         	goto	u5091
  1218  002C52  EF2D  F016         	goto	u5090
  1219  002C56                     u5091:
  1220  002C56  EF17  F016         	goto	l4604
  1221  002C5A                     u5090:
  1222  002C5A                     
  1223                           ; BSR set to: 0
  1224                           ;Main.c: 293:         Imprimir_Cadena(0,18);
  1225  002C5A  0E00               	movlw	0
  1226  002C5C  6E02               	movwf	(Imprimir_Cadena@a+1)^0,c
  1227  002C5E  0E00               	movlw	0
  1228  002C60  6E01               	movwf	Imprimir_Cadena@a^0,c
  1229  002C62  0E00               	movlw	0
  1230  002C64  6E04               	movwf	(Imprimir_Cadena@b+1)^0,c
  1231  002C66  0E12               	movlw	18
  1232  002C68  6E03               	movwf	Imprimir_Cadena@b^0,c
  1233  002C6A  EC92  F01E         	call	_Imprimir_Cadena	;wreg free
  1234  002C6E                     
  1235                           ;Main.c: 295:         LCD_Clear();
  1236  002C6E  EC4E  F020         	call	_LCD_Clear	;wreg free
  1237  002C72                     
  1238                           ;Main.c: 296:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1239  002C72  0E06               	movlw	6
  1240  002C74  0100               	movlb	0	; () banked
  1241  002C76  6FBA               	movwf	(??_main+1)& (0+255),b
  1242  002C78  0E13               	movlw	19
  1243  002C7A  6FB9               	movwf	??_main& (0+255),b
  1244  002C7C  0EAD               	movlw	173
  1245  002C7E                     u5117:
  1246  002C7E  2EE8               	decfsz	wreg,f,c
  1247  002C80  D7FE               	bra	u5117
  1248  002C82  2FB9               	decfsz	??_main& (0+255),f,b
  1249  002C84  D7FC               	bra	u5117
  1250  002C86  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1251  002C88  D7FA               	bra	u5117
  1252  002C8A  D000               	nop2	
  1253  002C8C                     
  1254                           ;Main.c: 298:         cont = 200;
  1255  002C8C  0E00               	movlw	0
  1256  002C8E  0100               	movlb	0	; () banked
  1257  002C90  6FBC               	movwf	(main@cont+1)& (0+255),b
  1258  002C92  0EC8               	movlw	200
  1259  002C94  6FBB               	movwf	main@cont& (0+255),b
  1260                           
  1261                           ;Main.c: 299:         while(cont>0)
  1262  002C96  EF56  F016         	goto	l4622
  1263  002C9A                     l4618:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;Main.c: 300:         {;Main.c: 301:             Establecer_Hora();
  1267  002C9A  ECB2  F01C         	call	_Establecer_Hora	;wreg free
  1268  002C9E                     
  1269                           ;Main.c: 302:             cont = cont - 5;
  1270  002C9E  0EFB               	movlw	251
  1271  002CA0  0100               	movlb	0	; () banked
  1272  002CA2  25BB               	addwf	main@cont& (0+255),w,b
  1273  002CA4  6FBB               	movwf	main@cont& (0+255),b
  1274  002CA6  0EFF               	movlw	255
  1275  002CA8  21BC               	addwfc	(main@cont+1)& (0+255),w,b
  1276  002CAA  6FBC               	movwf	(main@cont+1)& (0+255),b
  1277  002CAC                     l4622:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;Main.c: 299:         while(cont>0)
  1281  002CAC  BFBC               	btfsc	(main@cont+1)& (0+255),7,b
  1282  002CAE  EF63  F016         	goto	u5100
  1283  002CB2  51BC               	movf	(main@cont+1)& (0+255),w,b
  1284  002CB4  E106               	bnz	u5101
  1285  002CB6  05BB               	decf	main@cont& (0+255),w,b
  1286  002CB8  B0D8               	btfsc	status,0,c
  1287  002CBA  EF61  F016         	goto	u5101
  1288  002CBE  EF63  F016         	goto	u5100
  1289  002CC2                     u5101:
  1290  002CC2  EF4D  F016         	goto	l4618
  1291  002CC6                     u5100:
  1292  002CC6                     
  1293                           ; BSR set to: 0
  1294                           ;Main.c: 304:         Imprimir_Cadena(18,51);
  1295  002CC6  0E00               	movlw	0
  1296  002CC8  6E02               	movwf	(Imprimir_Cadena@a+1)^0,c
  1297  002CCA  0E12               	movlw	18
  1298  002CCC  6E01               	movwf	Imprimir_Cadena@a^0,c
  1299  002CCE  0E00               	movlw	0
  1300  002CD0  6E04               	movwf	(Imprimir_Cadena@b+1)^0,c
  1301  002CD2  0E33               	movlw	51
  1302  002CD4  6E03               	movwf	Imprimir_Cadena@b^0,c
  1303  002CD6  EC92  F01E         	call	_Imprimir_Cadena	;wreg free
  1304  002CDA                     
  1305                           ;Main.c: 306:         LCD_Clear();
  1306  002CDA  EC4E  F020         	call	_LCD_Clear	;wreg free
  1307  002CDE                     
  1308                           ;Main.c: 307:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1309  002CDE  0E06               	movlw	6
  1310  002CE0  0100               	movlb	0	; () banked
  1311  002CE2  6FBA               	movwf	(??_main+1)& (0+255),b
  1312  002CE4  0E13               	movlw	19
  1313  002CE6  6FB9               	movwf	??_main& (0+255),b
  1314  002CE8  0EAD               	movlw	173
  1315  002CEA                     u5127:
  1316  002CEA  2EE8               	decfsz	wreg,f,c
  1317  002CEC  D7FE               	bra	u5127
  1318  002CEE  2FB9               	decfsz	??_main& (0+255),f,b
  1319  002CF0  D7FC               	bra	u5127
  1320  002CF2  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1321  002CF4  D7FA               	bra	u5127
  1322  002CF6  D000               	nop2	
  1323  002CF8  EF10  F016         	goto	l4602
  1324  002CFC  EF00  F000         	goto	start
  1325  002D00                     __end_of_main:
  1326                           	callstack 0
  1327                           
  1328 ;; *************** function _Mostrar_Temperatura *****************
  1329 ;; Defined at:
  1330 ;;		line 166 in file "Main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  temp            4   85[BANK0 ] float 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0
  1345 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1346 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1347 ;;      Totals:         1       4       0       0       0       0       0       0       0
  1348 ;;Total ram usage:        5 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 8
  1351 ;; This function calls:
  1352 ;;		_Encender_Act
  1353 ;;		_LCD_Goto
  1354 ;;		_LCD_Print
  1355 ;;		_Obtener_Temperatura
  1356 ;;		_sprintf
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text1
  1363  00356C                     __ptext1:
  1364                           	callstack 0
  1365  00356C                     _Mostrar_Temperatura:
  1366                           	callstack 22
  1367  00356C                     
  1368                           ;Main.c: 168:     static char temperatura [4];;Main.c: 169:     float temp = Obtener_Tem
      +                          peratura();
  1369  00356C  EC66  F01B         	call	_Obtener_Temperatura	;wreg free
  1370  003570  C033  F0B5         	movff	?_Obtener_Temperatura,Mostrar_Temperatura@temp
  1371  003574  C034  F0B6         	movff	?_Obtener_Temperatura+1,Mostrar_Temperatura@temp+1
  1372  003578  C035  F0B7         	movff	?_Obtener_Temperatura+2,Mostrar_Temperatura@temp+2
  1373  00357C  C036  F0B8         	movff	?_Obtener_Temperatura+3,Mostrar_Temperatura@temp+3
  1374  003580                     
  1375                           ;Main.c: 171:     LCD_Goto(1,1);
  1376  003580  0E01               	movlw	1
  1377  003582  6E05               	movwf	LCD_Goto@row^0,c
  1378  003584  0E01               	movlw	1
  1379  003586  EC48  F01D         	call	_LCD_Goto
  1380  00358A                     
  1381                           ;Main.c: 172:     LCD_Print("Temperatura:");
  1382  00358A  0E01               	movlw	low STR_1
  1383  00358C  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1384  00358E  0E08               	movlw	high STR_1
  1385  003590  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1386  003592  EC5D  F01A         	call	_LCD_Print	;wreg free
  1387  003596                     
  1388                           ;Main.c: 173:     sprintf(temperatura,"%.2f",temp);
  1389  003596  0EF4               	movlw	low Mostrar_Temperatura@temperatura
  1390  003598  0100               	movlb	0	; () banked
  1391  00359A  6FA0               	movwf	sprintf@s& (0+255),b
  1392  00359C  0E00               	movlw	high Mostrar_Temperatura@temperatura
  1393  00359E  6FA1               	movwf	(sprintf@s+1)& (0+255),b
  1394  0035A0  0E0E               	movlw	low STR_2
  1395  0035A2  6FA2               	movwf	sprintf@fmt& (0+255),b
  1396  0035A4  0E08               	movlw	high STR_2
  1397  0035A6  6FA3               	movwf	(sprintf@fmt+1)& (0+255),b
  1398  0035A8  C0B5  F0A4         	movff	Mostrar_Temperatura@temp,?_sprintf+4
  1399  0035AC  C0B6  F0A5         	movff	Mostrar_Temperatura@temp+1,?_sprintf+5
  1400  0035B0  C0B7  F0A6         	movff	Mostrar_Temperatura@temp+2,?_sprintf+6
  1401  0035B4  C0B8  F0A7         	movff	Mostrar_Temperatura@temp+3,?_sprintf+7
  1402  0035B8  EC40  F01E         	call	_sprintf	;wreg free
  1403  0035BC                     
  1404                           ;Main.c: 174:     LCD_Goto(6,2);
  1405  0035BC  0E02               	movlw	2
  1406  0035BE  6E05               	movwf	LCD_Goto@row^0,c
  1407  0035C0  0E06               	movlw	6
  1408  0035C2  EC48  F01D         	call	_LCD_Goto
  1409  0035C6                     
  1410                           ;Main.c: 175:     LCD_Print(temperatura);
  1411  0035C6  0EF4               	movlw	low Mostrar_Temperatura@temperatura
  1412  0035C8  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1413  0035CA  0E00               	movlw	high Mostrar_Temperatura@temperatura
  1414  0035CC  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1415  0035CE  EC5D  F01A         	call	_LCD_Print	;wreg free
  1416  0035D2                     
  1417                           ;Main.c: 176:     LCD_Goto(12,2);
  1418  0035D2  0E02               	movlw	2
  1419  0035D4  6E05               	movwf	LCD_Goto@row^0,c
  1420  0035D6  0E0C               	movlw	12
  1421  0035D8  EC48  F01D         	call	_LCD_Goto
  1422  0035DC                     
  1423                           ;Main.c: 177:     LCD_Print("C");
  1424  0035DC  0E26               	movlw	low STR_3
  1425  0035DE  6E03               	movwf	LCD_Print@LCD_Str^0,c
  1426  0035E0  0E08               	movlw	high STR_3
  1427  0035E2  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  1428  0035E4  EC5D  F01A         	call	_LCD_Print	;wreg free
  1429  0035E8                     
  1430                           ;Main.c: 179:     Encender_Act(temp);
  1431  0035E8  C0B5  F03D         	movff	Mostrar_Temperatura@temp,Encender_Act@temp
  1432  0035EC  C0B6  F03E         	movff	Mostrar_Temperatura@temp+1,Encender_Act@temp+1
  1433  0035F0  C0B7  F03F         	movff	Mostrar_Temperatura@temp+2,Encender_Act@temp+2
  1434  0035F4  C0B8  F040         	movff	Mostrar_Temperatura@temp+3,Encender_Act@temp+3
  1435  0035F8  EC03  F01A         	call	_Encender_Act	;wreg free
  1436  0035FC                     
  1437                           ;Main.c: 181:     buffer_TX[6] = temperatura[0];
  1438  0035FC  C0F4  F156         	movff	Mostrar_Temperatura@temperatura,_buffer_TX+6
  1439  003600                     
  1440                           ;Main.c: 182:     buffer_TX[7] = temperatura[1];
  1441  003600  C0F5  F157         	movff	Mostrar_Temperatura@temperatura+1,_buffer_TX+7
  1442  003604                     
  1443                           ;Main.c: 183:     buffer_TX[9] = temperatura[3];
  1444  003604  C0F7  F159         	movff	Mostrar_Temperatura@temperatura+3,_buffer_TX+9
  1445  003608                     
  1446                           ;Main.c: 184:     buffer_TX[10] = temperatura[4];
  1447  003608  C0F8  F15A         	movff	Mostrar_Temperatura@temperatura+4,_buffer_TX+10
  1448  00360C                     
  1449                           ;Main.c: 186:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1450  00360C  0E82               	movlw	130
  1451  00360E  6E5F               	movwf	??_Mostrar_Temperatura^0,c
  1452  003610  0EDE               	movlw	222
  1453  003612                     u5137:
  1454  003612  2EE8               	decfsz	wreg,f,c
  1455  003614  D7FE               	bra	u5137
  1456  003616  2E5F               	decfsz	??_Mostrar_Temperatura^0,f,c
  1457  003618  D7FC               	bra	u5137
  1458  00361A  0012               	return		;funcret
  1459  00361C                     __end_of_Mostrar_Temperatura:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function _sprintf *****************
  1463 ;; Defined at:
  1464 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  s               2   64[BANK0 ] PTR unsigned char 
  1467 ;;		 -> Mostrar_Temperatura@temperatura(4), 
  1468 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  1469 ;;		 -> STR_2(5), 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  f              11   74[BANK0 ] struct _IO_FILE
  1472 ;;  ap              2   72[BANK0 ] PTR void [1]
  1473 ;;		 -> ?_sprintf(2), 
  1474 ;;  ret             2    0        int 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2   64[BANK0 ] int 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         0       8       0       0       0       0       0       0       0
  1485 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1487 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1488 ;;Total ram usage:       21 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 7
  1491 ;; This function calls:
  1492 ;;		_vfprintf
  1493 ;; This function is called by:
  1494 ;;		_Mostrar_Temperatura
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text2
  1499  003C80                     __ptext2:
  1500                           	callstack 0
  1501  003C80                     _sprintf:
  1502                           	callstack 22
  1503  003C80  0EA4               	movlw	low (?_sprintf+4)
  1504  003C82  0100               	movlb	0	; () banked
  1505  003C84  6FA8               	movwf	sprintf@ap& (0+255),b
  1506  003C86  0E00               	movlw	high (?_sprintf+4)
  1507  003C88  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1508  003C8A  C0A0  F0AA         	movff	sprintf@s,sprintf@f
  1509  003C8E  C0A1  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1510  003C92                     
  1511                           ; BSR set to: 0
  1512  003C92  0E00               	movlw	0
  1513  003C94  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  1514  003C96  0E00               	movlw	0
  1515  003C98  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  1516  003C9A                     
  1517                           ; BSR set to: 0
  1518  003C9A  0E00               	movlw	0
  1519  003C9C  6FB4               	movwf	(sprintf@f+10)& (0+255),b
  1520  003C9E  0E00               	movlw	0
  1521  003CA0  6FB3               	movwf	(sprintf@f+9)& (0+255),b
  1522  003CA2                     
  1523                           ; BSR set to: 0
  1524  003CA2  0EAA               	movlw	low sprintf@f
  1525  003CA4  6F9A               	movwf	vfprintf@fp& (0+255),b
  1526  003CA6  0E00               	movlw	high sprintf@f
  1527  003CA8  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
  1528  003CAA  C0A2  F09C         	movff	sprintf@fmt,vfprintf@fmt
  1529  003CAE  C0A3  F09D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1530  003CB2  0EA8               	movlw	low sprintf@ap
  1531  003CB4  6F9E               	movwf	vfprintf@ap& (0+255),b
  1532  003CB6  0E00               	movlw	high sprintf@ap
  1533  003CB8  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
  1534  003CBA  ECB0  F01D         	call	_vfprintf	;wreg free
  1535  003CBE  0100               	movlb	0	; () banked
  1536  003CC0  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  1537  003CC2  25A0               	addwf	sprintf@s& (0+255),w,b
  1538  003CC4  6ED9               	movwf	fsr2l,c
  1539  003CC6  51AE               	movf	(sprintf@f+4)& (0+255),w,b
  1540  003CC8  21A1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1541  003CCA  6EDA               	movwf	fsr2h,c
  1542  003CCC  0E00               	movlw	0
  1543  003CCE  6EDF               	movwf	indf2,c
  1544  003CD0                     
  1545                           ; BSR set to: 0
  1546  003CD0  0012               	return		;funcret
  1547  003CD2                     __end_of_sprintf:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _vfprintf *****************
  1551 ;; Defined at:
  1552 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  fp              2   58[BANK0 ] PTR struct _IO_FILE
  1555 ;;		 -> sprintf@f(11), 
  1556 ;;  fmt             2   60[BANK0 ] PTR const unsigned char 
  1557 ;;		 -> STR_2(5), 
  1558 ;;  ap              2   62[BANK0 ] PTR PTR void 
  1559 ;;		 -> sprintf@ap(2), 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  1562 ;;		 -> STR_2(5), 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  2   58[BANK0 ] int 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1572 ;;      Params:         0       6       0       0       0       0       0       0       0
  1573 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1575 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1576 ;;Total ram usage:        8 bytes
  1577 ;; Hardware stack levels used: 1
  1578 ;; Hardware stack levels required when called: 6
  1579 ;; This function calls:
  1580 ;;		_vfpfcnvrt
  1581 ;; This function is called by:
  1582 ;;		_sprintf
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text3
  1587  003B60                     __ptext3:
  1588                           	callstack 0
  1589  003B60                     _vfprintf:
  1590                           	callstack 22
  1591  003B60                     
  1592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1593  003B60  C09C  F05D         	movff	vfprintf@fmt,vfprintf@cfmt
  1594  003B64  C09D  F05E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1595  003B68                     
  1596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1597  003B68  0E00               	movlw	0
  1598  003B6A  0100               	movlb	0	; () banked
  1599  003B6C  6FE6               	movwf	(_nout+1)& (0+255),b
  1600  003B6E  0E00               	movlw	0
  1601  003B70  6FE5               	movwf	_nout& (0+255),b
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1604  003B72  EFCE  F01D         	goto	l4296
  1605  003B76                     l4294:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1609  003B76  C09A  F053         	movff	vfprintf@fp,vfpfcnvrt@fp
  1610  003B7A  C09B  F054         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1611  003B7E  0E5D               	movlw	low vfprintf@cfmt
  1612  003B80  6E55               	movwf	vfpfcnvrt@fmt^0,c
  1613  003B82  0E00               	movlw	high vfprintf@cfmt
  1614  003B84  6E56               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1615  003B86  C09E  F057         	movff	vfprintf@ap,vfpfcnvrt@ap
  1616  003B8A  C09F  F058         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1617  003B8E  EC7C  F00C         	call	_vfpfcnvrt	;wreg free
  1618  003B92  5053               	movf	?_vfpfcnvrt^0,w,c
  1619  003B94  0100               	movlb	0	; () banked
  1620  003B96  27E5               	addwf	_nout& (0+255),f,b
  1621  003B98  5054               	movf	(?_vfpfcnvrt+1)^0,w,c
  1622  003B9A  23E6               	addwfc	(_nout+1)& (0+255),f,b
  1623  003B9C                     l4296:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1627  003B9C  C05D  FFF6         	movff	vfprintf@cfmt,tblptrl
  1628  003BA0  C05E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1629  003BA4                     	if	0	;tblptru may be non-zero
  1630  003BA4                     	endif
  1631  003BA4                     	if	0	;tblptru may be non-zero
  1632  003BA4                     	endif
  1633  003BA4  0008               	tblrd		*
  1634  003BA6  50F5               	movf	tablat,w,c
  1635  003BA8  0900               	iorlw	0
  1636  003BAA  A4D8               	btfss	status,2,c
  1637  003BAC  EFDA  F01D         	goto	u4921
  1638  003BB0  EFDC  F01D         	goto	u4920
  1639  003BB4                     u4921:
  1640  003BB4  EFBB  F01D         	goto	l4294
  1641  003BB8                     u4920:
  1642  003BB8                     
  1643                           ; BSR set to: 0
  1644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1645  003BB8  C0E5  F09A         	movff	_nout,?_vfprintf
  1646  003BBC  C0E6  F09B         	movff	_nout+1,?_vfprintf+1
  1647  003BC0                     
  1648                           ; BSR set to: 0
  1649  003BC0  0012               	return		;funcret
  1650  003BC2                     __end_of_vfprintf:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _vfpfcnvrt *****************
  1654 ;; Defined at:
  1655 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1658 ;;		 -> sprintf@f(11), 
  1659 ;;  fmt             2   84[COMRAM] PTR PTR unsigned char 
  1660 ;;		 -> vfprintf@cfmt(2), 
  1661 ;;  ap              2   86[COMRAM] PTR PTR void 
  1662 ;;		 -> sprintf@ap(2), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;  llu             8    0        unsigned long long 
  1665 ;;  ll              8    0        long long 
  1666 ;;  f               4   50[BANK0 ] long long 
  1667 ;;  ct              3   54[BANK0 ] unsigned char [3]
  1668 ;;  vp              3    0        PTR void 
  1669 ;;  cp              3    0        PTR unsigned char 
  1670 ;;  i               2    0        int 
  1671 ;;  done            2    0        int 
  1672 ;;  c               1   57[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2   82[COMRAM] int 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1682 ;;      Params:         6       0       0       0       0       0       0       0       0
  1683 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1684 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1685 ;;      Totals:        10       8       0       0       0       0       0       0       0
  1686 ;;Total ram usage:       18 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 5
  1689 ;; This function calls:
  1690 ;;		_atoi
  1691 ;;		_efgtoa
  1692 ;;		_fputc
  1693 ;;		_isdigit
  1694 ;;		_isupper
  1695 ;;		_strncmp
  1696 ;;		_tolower
  1697 ;; This function is called by:
  1698 ;;		_vfprintf
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text4
  1703  0018F8                     __ptext4:
  1704                           	callstack 0
  1705  0018F8                     _vfpfcnvrt:
  1706                           	callstack 22
  1707  0018F8                     
  1708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1709  0018F8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1710  0018FC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1711  001900  CFDE FFF6          	movff	postinc2,tblptrl
  1712  001904  CFDD FFF7          	movff	postdec2,tblptrh
  1713  001908                     	if	0	;tblptru may be non-zero
  1714  001908                     	endif
  1715  001908                     	if	0	;tblptru may be non-zero
  1716  001908                     	endif
  1717  001908  0008               	tblrd		*
  1718  00190A  50F5               	movf	tablat,w,c
  1719  00190C  0A25               	xorlw	37
  1720  00190E  A4D8               	btfss	status,2,c
  1721  001910  EF8C  F00C         	goto	u4611
  1722  001914  EF8E  F00C         	goto	u4610
  1723  001918                     u4611:
  1724  001918  EF79  F00E         	goto	l4198
  1725  00191C                     u4610:
  1726  00191C                     
  1727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1728  00191C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1729  001920  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1730  001924  2ADE               	incf	postinc2,f,c
  1731  001926  0E00               	movlw	0
  1732  001928  22DD               	addwfc	postdec2,f,c
  1733  00192A                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1735  00192A  0E00               	movlw	0
  1736  00192C  0100               	movlb	0	; () banked
  1737  00192E  6FE8               	movwf	(_width+1)& (0+255),b
  1738  001930  0E00               	movlw	0
  1739  001932  6FE7               	movwf	_width& (0+255),b
  1740  001934  C0E7  F0EB         	movff	_width,_flags
  1741  001938  C0E8  F0EC         	movff	_width+1,_flags+1
  1742  00193C                     
  1743                           ; BSR set to: 0
  1744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1745  00193C  69E9               	setf	_prec& (0+255),b
  1746  00193E  69EA               	setf	(_prec+1)& (0+255),b
  1747  001940                     
  1748                           ; BSR set to: 0
  1749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1750  001940  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1751  001944  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1752  001948  CFDE FFF6          	movff	postinc2,tblptrl
  1753  00194C  CFDD FFF7          	movff	postdec2,tblptrh
  1754  001950                     	if	0	;tblptru may be non-zero
  1755  001950                     	endif
  1756  001950                     	if	0	;tblptru may be non-zero
  1757  001950                     	endif
  1758  001950  0008               	tblrd		*
  1759  001952  50F5               	movf	tablat,w,c
  1760  001954  0A2E               	xorlw	46
  1761  001956  A4D8               	btfss	status,2,c
  1762  001958  EFB0  F00C         	goto	u4621
  1763  00195C  EFB2  F00C         	goto	u4620
  1764  001960                     u4621:
  1765  001960  EF22  F00D         	goto	l4144
  1766  001964                     u4620:
  1767  001964                     
  1768                           ; BSR set to: 0
  1769                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1770  001964  0E00               	movlw	0
  1771  001966  6FEA               	movwf	(_prec+1)& (0+255),b
  1772  001968  0E00               	movlw	0
  1773  00196A  6FE9               	movwf	_prec& (0+255),b
  1774  00196C                     
  1775                           ; BSR set to: 0
  1776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1777  00196C  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1778  001970  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1779  001974  2ADE               	incf	postinc2,f,c
  1780  001976  0E00               	movlw	0
  1781  001978  22DD               	addwfc	postdec2,f,c
  1782  00197A                     
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1785  00197A  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1786  00197E  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1787  001982  CFDE FFF6          	movff	postinc2,tblptrl
  1788  001986  CFDD FFF7          	movff	postdec2,tblptrh
  1789  00198A                     	if	0	;tblptru may be non-zero
  1790  00198A                     	endif
  1791  00198A                     	if	0	;tblptru may be non-zero
  1792  00198A                     	endif
  1793  00198A  0008               	tblrd		*
  1794  00198C  50F5               	movf	tablat,w,c
  1795  00198E  0A2A               	xorlw	42
  1796  001990  A4D8               	btfss	status,2,c
  1797  001992  EFCD  F00C         	goto	u4631
  1798  001996  EFCF  F00C         	goto	u4630
  1799  00199A                     u4631:
  1800  00199A  EFEC  F00C         	goto	l4136
  1801  00199E                     u4630:
  1802  00199E                     
  1803                           ; BSR set to: 0
  1804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1805  00199E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1806  0019A2  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1807  0019A6  2ADE               	incf	postinc2,f,c
  1808  0019A8  0E00               	movlw	0
  1809  0019AA  22DD               	addwfc	postdec2,f,c
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1812  0019AC  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1813  0019B0  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1814  0019B4  CFDF F059          	movff	indf2,??_vfpfcnvrt
  1815  0019B8  0E02               	movlw	2
  1816  0019BA  26DE               	addwf	postinc2,f,c
  1817  0019BC  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  1818  0019C0  0E00               	movlw	0
  1819  0019C2  22DD               	addwfc	postdec2,f,c
  1820  0019C4  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1821  0019C8  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1822  0019CC  CFDE F0E9          	movff	postinc2,_prec
  1823  0019D0  CFDD F0EA          	movff	postdec2,_prec+1
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1826  0019D4  EF22  F00D         	goto	l4144
  1827  0019D8                     l4136:
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1831  0019D8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1832  0019DC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1833  0019E0  CFDE F008          	movff	postinc2,atoi@s
  1834  0019E4  CFDD F009          	movff	postdec2,atoi@s+1
  1835  0019E8  EC44  F015         	call	_atoi	;wreg free
  1836  0019EC  C008  F0E9         	movff	?_atoi,_prec
  1837  0019F0  C009  F0EA         	movff	?_atoi+1,_prec+1
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1840  0019F4  EF03  F00D         	goto	l4142
  1841  0019F8                     l4138:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1844  0019F8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1845  0019FC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1846  001A00  2ADE               	incf	postinc2,f,c
  1847  001A02  0E00               	movlw	0
  1848  001A04  22DD               	addwfc	postdec2,f,c
  1849  001A06                     l4142:
  1850  001A06  0ED0               	movlw	208
  1851  001A08  6E59               	movwf	??_vfpfcnvrt^0,c
  1852  001A0A  0EFF               	movlw	255
  1853  001A0C  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  1854  001A0E  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1855  001A12  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1856  001A16  CFDE FFF6          	movff	postinc2,tblptrl
  1857  001A1A  CFDD FFF7          	movff	postdec2,tblptrh
  1858  001A1E                     	if	0	;tblptru may be non-zero
  1859  001A1E                     	endif
  1860  001A1E                     	if	0	;tblptru may be non-zero
  1861  001A1E                     	endif
  1862  001A1E  0008               	tblrd		*
  1863  001A20  50F5               	movf	tablat,w,c
  1864  001A22  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  1865  001A24  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  1866  001A26  5059               	movf	??_vfpfcnvrt^0,w,c
  1867  001A28  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1868  001A2A  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1869  001A2C  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1870  001A2E  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1871  001A30  E109               	bnz	u4640
  1872  001A32  0E0A               	movlw	10
  1873  001A34  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1874  001A36  A0D8               	btfss	status,0,c
  1875  001A38  EF20  F00D         	goto	u4641
  1876  001A3C  EF22  F00D         	goto	u4640
  1877  001A40                     u4641:
  1878  001A40  EFFC  F00C         	goto	l4138
  1879  001A44                     u4640:
  1880  001A44                     l4144:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1883  001A44  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1884  001A48  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1885  001A4C  CFDE FFF6          	movff	postinc2,tblptrl
  1886  001A50  CFDD FFF7          	movff	postdec2,tblptrh
  1887  001A54                     	if	0	;tblptru may be non-zero
  1888  001A54                     	endif
  1889  001A54                     	if	0	;tblptru may be non-zero
  1890  001A54                     	endif
  1891  001A54  0008               	tblrd		*
  1892  001A56  50F5               	movf	tablat,w,c
  1893  001A58  6E07               	movwf	tolower@c^0,c
  1894  001A5A  6A08               	clrf	(tolower@c+1)^0,c
  1895  001A5C  ECDD  F01E         	call	_tolower	;wreg free
  1896  001A60  5007               	movf	?_tolower^0,w,c
  1897  001A62  0100               	movlb	0	; () banked
  1898  001A64  6F96               	movwf	vfpfcnvrt@ct& (0+255),b
  1899  001A66                     
  1900                           ; BSR set to: 0
  1901                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1902  001A66  5196               	movf	vfpfcnvrt@ct& (0+255),w,b
  1903  001A68  B4D8               	btfsc	status,2,c
  1904  001A6A  EF39  F00D         	goto	u4651
  1905  001A6E  EF3B  F00D         	goto	u4650
  1906  001A72                     u4651:
  1907  001A72  EF75  F00D         	goto	l4154
  1908  001A76                     u4650:
  1909  001A76                     
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1912  001A76  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1913  001A7A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1914  001A7E  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  1915  001A82  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  1916  001A86  0E01               	movlw	1
  1917  001A88  2659               	addwf	??_vfpfcnvrt^0,f,c
  1918  001A8A  0E00               	movlw	0
  1919  001A8C  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1920  001A8E  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1921  001A92  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1922  001A96                     	if	0	;tblptru may be non-zero
  1923  001A96                     	endif
  1924  001A96                     	if	0	;tblptru may be non-zero
  1925  001A96                     	endif
  1926  001A96  0008               	tblrd		*
  1927  001A98  50F5               	movf	tablat,w,c
  1928  001A9A  6E07               	movwf	tolower@c^0,c
  1929  001A9C  6A08               	clrf	(tolower@c+1)^0,c
  1930  001A9E  ECDD  F01E         	call	_tolower	;wreg free
  1931  001AA2  5007               	movf	?_tolower^0,w,c
  1932  001AA4  0100               	movlb	0	; () banked
  1933  001AA6  6F97               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1934  001AA8                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1937  001AA8  5197               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1938  001AAA  B4D8               	btfsc	status,2,c
  1939  001AAC  EF5A  F00D         	goto	u4661
  1940  001AB0  EF5C  F00D         	goto	u4660
  1941  001AB4                     u4661:
  1942  001AB4  EF75  F00D         	goto	l4154
  1943  001AB8                     u4660:
  1944  001AB8                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1947  001AB8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948  001ABC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949  001AC0  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  1950  001AC4  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  1951  001AC8  0E02               	movlw	2
  1952  001ACA  2659               	addwf	??_vfpfcnvrt^0,f,c
  1953  001ACC  0E00               	movlw	0
  1954  001ACE  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1955  001AD0  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1956  001AD4  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1957  001AD8                     	if	0	;tblptru may be non-zero
  1958  001AD8                     	endif
  1959  001AD8                     	if	0	;tblptru may be non-zero
  1960  001AD8                     	endif
  1961  001AD8  0008               	tblrd		*
  1962  001ADA  50F5               	movf	tablat,w,c
  1963  001ADC  6E07               	movwf	tolower@c^0,c
  1964  001ADE  6A08               	clrf	(tolower@c+1)^0,c
  1965  001AE0  ECDD  F01E         	call	_tolower	;wreg free
  1966  001AE4  5007               	movf	?_tolower^0,w,c
  1967  001AE6  0100               	movlb	0	; () banked
  1968  001AE8  6F98               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1969  001AEA                     l4154:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1973  001AEA  0E66               	movlw	102
  1974  001AEC  1996               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1975  001AEE  A4D8               	btfss	status,2,c
  1976  001AF0  EF7C  F00D         	goto	u4671
  1977  001AF4  EF7E  F00D         	goto	u4670
  1978  001AF8                     u4671:
  1979  001AF8  EFBE  F00D         	goto	l4166
  1980  001AFC                     u4670:
  1981  001AFC                     
  1982                           ; BSR set to: 0
  1983                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1984  001AFC  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1985  001B00  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1986  001B04  CFDE FFF6          	movff	postinc2,tblptrl
  1987  001B08  CFDD FFF7          	movff	postdec2,tblptrh
  1988  001B0C                     	if	0	;tblptru may be non-zero
  1989  001B0C                     	endif
  1990  001B0C                     	if	0	;tblptru may be non-zero
  1991  001B0C                     	endif
  1992  001B0C  0008               	tblrd		*
  1993  001B0E  CFF5 F099          	movff	tablat,vfpfcnvrt@c
  1994  001B12                     
  1995                           ; BSR set to: 0
  1996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1997  001B12  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1998  001B16  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1999  001B1A  2ADE               	incf	postinc2,f,c
  2000  001B1C  0E00               	movlw	0
  2001  001B1E  22DD               	addwfc	postdec2,f,c
  2002  001B20                     
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2005  001B20  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2006  001B24  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2007  001B28  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2008  001B2C  0E04               	movlw	4
  2009  001B2E  26DE               	addwf	postinc2,f,c
  2010  001B30  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2011  001B34  0E00               	movlw	0
  2012  001B36  22DD               	addwfc	postdec2,f,c
  2013  001B38  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2014  001B3C  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2015  001B40  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2016  001B44  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2017  001B48  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2018  001B4C  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2019  001B50                     l4162:
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2022  001B50  C053  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  2023  001B54  C054  F048         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2024  001B58  C092  F049         	movff	vfpfcnvrt@f,efgtoa@f
  2025  001B5C  C093  F04A         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2026  001B60  C094  F04B         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2027  001B64  C095  F04C         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2028  001B68  C099  F04D         	movff	vfpfcnvrt@c,efgtoa@c
  2029  001B6C  EC15  F004         	call	_efgtoa	;wreg free
  2030  001B70  C047  F053         	movff	?_efgtoa,?_vfpfcnvrt
  2031  001B74  C048  F054         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2032  001B78  EF94  F00E         	goto	l1080
  2033  001B7C                     l4166:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2037  001B7C  0E96               	movlw	low vfpfcnvrt@ct
  2038  001B7E  6E01               	movwf	strncmp@_l^0,c
  2039  001B80  0E00               	movlw	high vfpfcnvrt@ct
  2040  001B82  6E02               	movwf	(strncmp@_l+1)^0,c
  2041  001B84  0E23               	movlw	low STR_12
  2042  001B86  6E03               	movwf	strncmp@_r^0,c
  2043  001B88  0E08               	movlw	high STR_12
  2044  001B8A  6E04               	movwf	(strncmp@_r+1)^0,c
  2045  001B8C  0E00               	movlw	0
  2046  001B8E  6E06               	movwf	(strncmp@n+1)^0,c
  2047  001B90  0E02               	movlw	2
  2048  001B92  6E05               	movwf	strncmp@n^0,c
  2049  001B94  EC04  F018         	call	_strncmp	;wreg free
  2050  001B98  5001               	movf	?_strncmp^0,w,c
  2051  001B9A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2052  001B9C  A4D8               	btfss	status,2,c
  2053  001B9E  EFD3  F00D         	goto	u4681
  2054  001BA2  EFD5  F00D         	goto	u4680
  2055  001BA6                     u4681:
  2056  001BA6  EF43  F00E         	goto	l4182
  2057  001BAA                     u4680:
  2058  001BAA                     
  2059                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2060  001BAA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2061  001BAE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2062  001BB2  CFDE F059          	movff	postinc2,??_vfpfcnvrt
  2063  001BB6  CFDD F05A          	movff	postdec2,??_vfpfcnvrt+1
  2064  001BBA  0E01               	movlw	1
  2065  001BBC  2659               	addwf	??_vfpfcnvrt^0,f,c
  2066  001BBE  0E00               	movlw	0
  2067  001BC0  225A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2068  001BC2  C059  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2069  001BC6  C05A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2070  001BCA                     	if	0	;tblptru may be non-zero
  2071  001BCA                     	endif
  2072  001BCA                     	if	0	;tblptru may be non-zero
  2073  001BCA                     	endif
  2074  001BCA  0008               	tblrd		*
  2075  001BCC  CFF5 F099          	movff	tablat,vfpfcnvrt@c
  2076  001BD0  0EBF               	movlw	191
  2077  001BD2  6E59               	movwf	??_vfpfcnvrt^0,c
  2078  001BD4  0EFF               	movlw	255
  2079  001BD6  6E5A               	movwf	(??_vfpfcnvrt+1)^0,c
  2080  001BD8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2081  001BDC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2082  001BE0  CFDE FFF6          	movff	postinc2,tblptrl
  2083  001BE4  CFDD FFF7          	movff	postdec2,tblptrh
  2084  001BE8                     	if	0	;tblptru may be non-zero
  2085  001BE8                     	endif
  2086  001BE8                     	if	0	;tblptru may be non-zero
  2087  001BE8                     	endif
  2088  001BE8  0008               	tblrd		*
  2089  001BEA  50F5               	movf	tablat,w,c
  2090  001BEC  6E5B               	movwf	(??_vfpfcnvrt+2)^0,c
  2091  001BEE  6A5C               	clrf	(??_vfpfcnvrt+3)^0,c
  2092  001BF0  5059               	movf	??_vfpfcnvrt^0,w,c
  2093  001BF2  265B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2094  001BF4  505A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2095  001BF6  225C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2096  001BF8  505C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2097  001BFA  E107               	bnz	u4691
  2098  001BFC  0E1A               	movlw	26
  2099  001BFE  5C5B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2100  001C00  B0D8               	btfsc	status,0,c
  2101  001C02  EF05  F00E         	goto	u4691
  2102  001C06  EF07  F00E         	goto	u4690
  2103  001C0A                     u4691:
  2104  001C0A  EF21  F00E         	goto	l4176
  2105  001C0E                     u4690:
  2106  001C0E                     
  2107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2108  001C0E  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2109  001C12  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2110  001C16  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2111  001C1A  0E04               	movlw	4
  2112  001C1C  26DE               	addwf	postinc2,f,c
  2113  001C1E  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2114  001C22  0E00               	movlw	0
  2115  001C24  22DD               	addwfc	postdec2,f,c
  2116  001C26  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2117  001C2A  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2118  001C2E  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2119  001C32  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2120  001C36  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2121  001C3A  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2124  001C3E  EF39  F00E         	goto	l1085
  2125  001C42                     l4176:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2128  001C42  C057  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2129  001C46  C058  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2130  001C4A  CFDF F059          	movff	indf2,??_vfpfcnvrt
  2131  001C4E  0E04               	movlw	4
  2132  001C50  26DE               	addwf	postinc2,f,c
  2133  001C52  CFDF F05A          	movff	indf2,??_vfpfcnvrt+1
  2134  001C56  0E00               	movlw	0
  2135  001C58  22DD               	addwfc	postdec2,f,c
  2136  001C5A  C059  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2137  001C5E  C05A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2138  001C62  CFDE F092          	movff	postinc2,vfpfcnvrt@f
  2139  001C66  CFDE F093          	movff	postinc2,vfpfcnvrt@f+1
  2140  001C6A  CFDE F094          	movff	postinc2,vfpfcnvrt@f+2
  2141  001C6E  CFDE F095          	movff	postinc2,vfpfcnvrt@f+3
  2142  001C72                     l1085:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2145  001C72  0E02               	movlw	2
  2146  001C74  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2147  001C78  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2148  001C7C  26DE               	addwf	postinc2,f,c
  2149  001C7E  0E00               	movlw	0
  2150  001C80  22DD               	addwfc	postdec2,f,c
  2151  001C82  EFA8  F00D         	goto	l4162
  2152  001C86                     l4182:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2155  001C86  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2156  001C8A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2157  001C8E  CFDE FFF6          	movff	postinc2,tblptrl
  2158  001C92  CFDD FFF7          	movff	postdec2,tblptrh
  2159  001C96                     	if	0	;tblptru may be non-zero
  2160  001C96                     	endif
  2161  001C96                     	if	0	;tblptru may be non-zero
  2162  001C96                     	endif
  2163  001C96  0008               	tblrd		*
  2164  001C98  50F5               	movf	tablat,w,c
  2165  001C9A  0A25               	xorlw	37
  2166  001C9C  A4D8               	btfss	status,2,c
  2167  001C9E  EF53  F00E         	goto	u4701
  2168  001CA2  EF55  F00E         	goto	u4700
  2169  001CA6                     u4701:
  2170  001CA6  EF6C  F00E         	goto	l4192
  2171  001CAA                     u4700:
  2172  001CAA                     
  2173                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2174  001CAA  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2175  001CAE  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2176  001CB2  2ADE               	incf	postinc2,f,c
  2177  001CB4  0E00               	movlw	0
  2178  001CB6  22DD               	addwfc	postdec2,f,c
  2179  001CB8                     
  2180                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2181  001CB8  0E00               	movlw	0
  2182  001CBA  6E02               	movwf	(fputc@c+1)^0,c
  2183  001CBC  0E25               	movlw	37
  2184  001CBE  6E01               	movwf	fputc@c^0,c
  2185  001CC0  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2186  001CC4  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2187  001CC8  ECD9  F018         	call	_fputc	;wreg free
  2188  001CCC                     l4188:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2191  001CCC  0E00               	movlw	0
  2192  001CCE  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2193  001CD0  0E01               	movlw	1
  2194  001CD2  6E53               	movwf	?_vfpfcnvrt^0,c
  2195  001CD4  EF94  F00E         	goto	l1080
  2196  001CD8                     l4192:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2199  001CD8  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2200  001CDC  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2201  001CE0  2ADE               	incf	postinc2,f,c
  2202  001CE2  0E00               	movlw	0
  2203  001CE4  22DD               	addwfc	postdec2,f,c
  2204  001CE6                     
  2205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2206  001CE6  0E00               	movlw	0
  2207  001CE8  6E54               	movwf	(?_vfpfcnvrt+1)^0,c
  2208  001CEA  0E00               	movlw	0
  2209  001CEC  6E53               	movwf	?_vfpfcnvrt^0,c
  2210  001CEE  EF94  F00E         	goto	l1080
  2211  001CF2                     l4198:
  2212                           
  2213                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2214  001CF2  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2215  001CF6  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2216  001CFA  CFDE FFF6          	movff	postinc2,tblptrl
  2217  001CFE  CFDD FFF7          	movff	postdec2,tblptrh
  2218  001D02                     	if	0	;tblptru may be non-zero
  2219  001D02                     	endif
  2220  001D02                     	if	0	;tblptru may be non-zero
  2221  001D02                     	endif
  2222  001D02  0008               	tblrd		*
  2223  001D04  50F5               	movf	tablat,w,c
  2224  001D06  6E01               	movwf	fputc@c^0,c
  2225  001D08  6A02               	clrf	(fputc@c+1)^0,c
  2226  001D0A  C053  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2227  001D0E  C054  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2228  001D12  ECD9  F018         	call	_fputc	;wreg free
  2229  001D16                     
  2230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2231  001D16  C055  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2232  001D1A  C056  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2233  001D1E  2ADE               	incf	postinc2,f,c
  2234  001D20  0E00               	movlw	0
  2235  001D22  22DD               	addwfc	postdec2,f,c
  2236  001D24  EF66  F00E         	goto	l4188
  2237  001D28                     l1080:
  2238  001D28  0012               	return		;funcret
  2239  001D2A                     __end_of_vfpfcnvrt:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _strncmp *****************
  2243 ;; Defined at:
  2244 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2247 ;;		 -> vfpfcnvrt@ct(3), 
  2248 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2249 ;;		 -> STR_14(3), 
  2250 ;;  n               2    4[COMRAM] unsigned int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2253 ;;		 -> STR_14(3), 
  2254 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2255 ;;		 -> vfpfcnvrt@ct(3), 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  2    0[COMRAM] int 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2265 ;;      Params:         6       0       0       0       0       0       0       0       0
  2266 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2267 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2268 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2269 ;;Total ram usage:       11 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_vfpfcnvrt
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text5
  2279  003008                     __ptext5:
  2280                           	callstack 0
  2281  003008                     _strncmp:
  2282                           	callstack 26
  2283  003008  C001  F008         	movff	strncmp@_l,strncmp@l
  2284  00300C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2285  003010  C003  F00A         	movff	strncmp@_r,strncmp@r
  2286  003014  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2287  003018  0605               	decf	strncmp@n^0,f,c
  2288  00301A  A0D8               	btfss	status,0,c
  2289  00301C  0606               	decf	(strncmp@n+1)^0,f,c
  2290  00301E  2805               	incf	strncmp@n^0,w,c
  2291  003020  E106               	bnz	u4541
  2292  003022  2806               	incf	(strncmp@n+1)^0,w,c
  2293  003024  A4D8               	btfss	status,2,c
  2294  003026  EF17  F018         	goto	u4541
  2295  00302A  EF19  F018         	goto	u4540
  2296  00302E                     u4541:
  2297  00302E  EF26  F018         	goto	l4096
  2298  003032                     u4540:
  2299  003032  0E00               	movlw	0
  2300  003034  6E02               	movwf	(?_strncmp+1)^0,c
  2301  003036  0E00               	movlw	0
  2302  003038  6E01               	movwf	?_strncmp^0,c
  2303  00303A  EF6E  F018         	goto	l1200
  2304  00303E                     l4094:
  2305  00303E  4A08               	infsnz	strncmp@l^0,f,c
  2306  003040  2A09               	incf	(strncmp@l+1)^0,f,c
  2307  003042  4A0A               	infsnz	strncmp@r^0,f,c
  2308  003044  2A0B               	incf	(strncmp@r+1)^0,f,c
  2309  003046  0605               	decf	strncmp@n^0,f,c
  2310  003048  A0D8               	btfss	status,0,c
  2311  00304A  0606               	decf	(strncmp@n+1)^0,f,c
  2312  00304C                     l4096:
  2313  00304C  C008  FFD9         	movff	strncmp@l,fsr2l
  2314  003050  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2315  003054  50DF               	movf	indf2,w,c
  2316  003056  B4D8               	btfsc	status,2,c
  2317  003058  EF30  F018         	goto	u4551
  2318  00305C  EF32  F018         	goto	u4550
  2319  003060                     u4551:
  2320  003060  EF5D  F018         	goto	l4104
  2321  003064                     u4550:
  2322  003064  C00A  FFF6         	movff	strncmp@r,tblptrl
  2323  003068  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2324  00306C                     	if	0	;tblptru may be non-zero
  2325  00306C                     	endif
  2326  00306C                     	if	0	;tblptru may be non-zero
  2327  00306C                     	endif
  2328  00306C  0008               	tblrd		*
  2329  00306E  50F5               	movf	tablat,w,c
  2330  003070  0900               	iorlw	0
  2331  003072  B4D8               	btfsc	status,2,c
  2332  003074  EF3E  F018         	goto	u4561
  2333  003078  EF40  F018         	goto	u4560
  2334  00307C                     u4561:
  2335  00307C  EF5D  F018         	goto	l4104
  2336  003080                     u4560:
  2337  003080  5005               	movf	strncmp@n^0,w,c
  2338  003082  1006               	iorwf	(strncmp@n+1)^0,w,c
  2339  003084  B4D8               	btfsc	status,2,c
  2340  003086  EF47  F018         	goto	u4571
  2341  00308A  EF49  F018         	goto	u4570
  2342  00308E                     u4571:
  2343  00308E  EF5D  F018         	goto	l4104
  2344  003092                     u4570:
  2345  003092  C008  FFD9         	movff	strncmp@l,fsr2l
  2346  003096  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2347  00309A  50DF               	movf	indf2,w,c
  2348  00309C  6E07               	movwf	??_strncmp^0,c
  2349  00309E  C00A  FFF6         	movff	strncmp@r,tblptrl
  2350  0030A2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2351  0030A6                     	if	0	;tblptru may be non-zero
  2352  0030A6                     	endif
  2353  0030A6                     	if	0	;tblptru may be non-zero
  2354  0030A6                     	endif
  2355  0030A6  0008               	tblrd		*
  2356  0030A8  50F5               	movf	tablat,w,c
  2357  0030AA  1807               	xorwf	??_strncmp^0,w,c
  2358  0030AC  B4D8               	btfsc	status,2,c
  2359  0030AE  EF5B  F018         	goto	u4581
  2360  0030B2  EF5D  F018         	goto	u4580
  2361  0030B6                     u4581:
  2362  0030B6  EF1F  F018         	goto	l4094
  2363  0030BA                     u4580:
  2364  0030BA                     l4104:
  2365  0030BA  C008  FFD9         	movff	strncmp@l,fsr2l
  2366  0030BE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2367  0030C2  50DF               	movf	indf2,w,c
  2368  0030C4  6E07               	movwf	??_strncmp^0,c
  2369  0030C6  C00A  FFF6         	movff	strncmp@r,tblptrl
  2370  0030CA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2371  0030CE                     	if	0	;tblptru may be non-zero
  2372  0030CE                     	endif
  2373  0030CE                     	if	0	;tblptru may be non-zero
  2374  0030CE                     	endif
  2375  0030CE  0008               	tblrd		*
  2376  0030D0  50F5               	movf	tablat,w,c
  2377  0030D2  5C07               	subwf	??_strncmp^0,w,c
  2378  0030D4  6E01               	movwf	?_strncmp^0,c
  2379  0030D6  6A02               	clrf	(?_strncmp+1)^0,c
  2380  0030D8  A0D8               	btfss	status,0,c
  2381  0030DA  0602               	decf	(?_strncmp+1)^0,f,c
  2382  0030DC                     l1200:
  2383  0030DC  0012               	return		;funcret
  2384  0030DE                     __end_of_strncmp:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function _efgtoa *****************
  2388 ;; Defined at:
  2389 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2392 ;;		 -> sprintf@f(11), 
  2393 ;;  f               4   72[COMRAM] PTR struct _IO_FILE
  2394 ;;  c               1   76[COMRAM] unsigned char 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  u               4   46[BANK0 ] unsigned char 
  2397 ;;  g               4   38[BANK0 ] unsigned char 
  2398 ;;  l               4   32[BANK0 ] unsigned char 
  2399 ;;  h               4   28[BANK0 ] unsigned char 
  2400 ;;  ou              4   14[BANK0 ] unsigned char 
  2401 ;;  n               2   44[BANK0 ] int 
  2402 ;;  e               2   42[BANK0 ] int 
  2403 ;;  i               2   36[BANK0 ] int 
  2404 ;;  w               2   24[BANK0 ] int 
  2405 ;;  p               2   22[BANK0 ] int 
  2406 ;;  sign            2   20[BANK0 ] int 
  2407 ;;  d               2   18[BANK0 ] int 
  2408 ;;  m               2   12[BANK0 ] int 
  2409 ;;  ne              2   10[BANK0 ] int 
  2410 ;;  pp              2    8[BANK0 ] int 
  2411 ;;  t               2    6[BANK0 ] int 
  2412 ;;  mode            1   27[BANK0 ] unsigned char 
  2413 ;;  nmode           1   26[BANK0 ] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  2   70[COMRAM] int 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2423 ;;      Params:         7       0       0       0       0       0       0       0       0
  2424 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2425 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2426 ;;      Totals:        12      50       0       0       0       0       0       0       0
  2427 ;;Total ram usage:       62 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 4
  2430 ;; This function calls:
  2431 ;;		___awdiv
  2432 ;;		___awmod
  2433 ;;		___fladd
  2434 ;;		___fldiv
  2435 ;;		___fleq
  2436 ;;		___flge
  2437 ;;		___flmul
  2438 ;;		___flneg
  2439 ;;		___flsub
  2440 ;;		___fltol
  2441 ;;		___fpclassifyf
  2442 ;;		_floorf
  2443 ;;		_isupper
  2444 ;;		_pad
  2445 ;;		_strcpy
  2446 ;;		_tolower
  2447 ;; This function is called by:
  2448 ;;		_vfpfcnvrt
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text6
  2453  00082A                     __ptext6:
  2454                           	callstack 0
  2455  00082A                     _efgtoa:
  2456                           	callstack 22
  2457  00082A                     
  2458                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2459  00082A  0E00               	movlw	0
  2460  00082C  0100               	movlb	0	; () banked
  2461  00082E  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2462  000830  0E00               	movlw	0
  2463  000832  6F74               	movwf	efgtoa@sign& (0+255),b
  2464  000834                     
  2465                           ; BSR set to: 0
  2466                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2467  000834  C049  F086         	movff	efgtoa@f,efgtoa@g
  2468  000838  C04A  F087         	movff	efgtoa@f+1,efgtoa@g+1
  2469  00083C  C04B  F088         	movff	efgtoa@f+2,efgtoa@g+2
  2470  000840  C04C  F089         	movff	efgtoa@f+3,efgtoa@g+3
  2471  000844                     
  2472                           ; BSR set to: 0
  2473                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2474  000844  BF89               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2475  000846  EF29  F004         	goto	u4020
  2476  00084A  EF27  F004         	goto	u4021
  2477  00084E                     u4021:
  2478  00084E  EF3F  F004         	goto	l3760
  2479  000852                     u4020:
  2480  000852                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2483  000852  0E00               	movlw	0
  2484  000854  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  2485  000856  0E01               	movlw	1
  2486  000858  6F74               	movwf	efgtoa@sign& (0+255),b
  2487  00085A                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2490  00085A  C086  F001         	movff	efgtoa@g,___flneg@f1
  2491  00085E  C087  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2492  000862  C088  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2493  000866  C089  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2494  00086A  EC61  F01F         	call	___flneg	;wreg free
  2495  00086E  C001  F086         	movff	?___flneg,efgtoa@g
  2496  000872  C002  F087         	movff	?___flneg+1,efgtoa@g+1
  2497  000876  C003  F088         	movff	?___flneg+2,efgtoa@g+2
  2498  00087A  C004  F089         	movff	?___flneg+3,efgtoa@g+3
  2499  00087E                     l3760:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2502  00087E  0E00               	movlw	0
  2503  000880  0100               	movlb	0	; () banked
  2504  000882  6F8D               	movwf	(efgtoa@n+1)& (0+255),b
  2505  000884  0E00               	movlw	0
  2506  000886  6F8C               	movwf	efgtoa@n& (0+255),b
  2507  000888                     
  2508                           ; BSR set to: 0
  2509                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2510  000888  C0E7  F078         	movff	_width,efgtoa@w
  2511  00088C  C0E8  F079         	movff	_width+1,efgtoa@w+1
  2512  000890                     
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2515  000890  5174               	movf	efgtoa@sign& (0+255),w,b
  2516  000892  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2517  000894  A4D8               	btfss	status,2,c
  2518  000896  EF4F  F004         	goto	u4031
  2519  00089A  EF51  F004         	goto	u4030
  2520  00089E                     u4031:
  2521  00089E  EF58  F004         	goto	l3768
  2522  0008A2                     u4030:
  2523  0008A2                     
  2524                           ; BSR set to: 0
  2525  0008A2  A5EB               	btfss	_flags& (0+255),2,b
  2526  0008A4  EF56  F004         	goto	u4041
  2527  0008A8  EF58  F004         	goto	u4040
  2528  0008AC                     u4041:
  2529  0008AC  EF72  F004         	goto	l3780
  2530  0008B0                     u4040:
  2531  0008B0                     l3768:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2535  0008B0  5174               	movf	efgtoa@sign& (0+255),w,b
  2536  0008B2  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2537  0008B4  A4D8               	btfss	status,2,c
  2538  0008B6  EF5F  F004         	goto	u4051
  2539  0008BA  EF61  F004         	goto	u4050
  2540  0008BE                     u4051:
  2541  0008BE  EF67  F004         	goto	l3772
  2542  0008C2                     u4050:
  2543  0008C2                     
  2544                           ; BSR set to: 0
  2545  0008C2  0E00               	movlw	0
  2546  0008C4  6F61               	movwf	(_efgtoa$1486+1)& (0+255),b
  2547  0008C6  0E2B               	movlw	43
  2548  0008C8  6F60               	movwf	_efgtoa$1486& (0+255),b
  2549  0008CA  EF6B  F004         	goto	l3774
  2550  0008CE                     l3772:
  2551                           
  2552                           ; BSR set to: 0
  2553  0008CE  0E00               	movlw	0
  2554  0008D0  6F61               	movwf	(_efgtoa$1486+1)& (0+255),b
  2555  0008D2  0E2D               	movlw	45
  2556  0008D4  6F60               	movwf	_efgtoa$1486& (0+255),b
  2557  0008D6                     l3774:
  2558                           
  2559                           ; BSR set to: 0
  2560  0008D6  C060  F100         	movff	_efgtoa$1486,_dbuf
  2561  0008DA                     
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2564  0008DA  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  2565  0008DC  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  2566  0008DE                     
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2569  0008DE  0778               	decf	efgtoa@w& (0+255),f,b
  2570  0008E0  A0D8               	btfss	status,0,c
  2571  0008E2  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  2572  0008E4                     l3780:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2576  0008E4  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2577  0008E8  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2578  0008EC  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2579  0008F0  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2580  0008F4  EC85  F017         	call	___fpclassifyf	;wreg free
  2581  0008F8  0401               	decf	?___fpclassifyf^0,w,c
  2582  0008FA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2583  0008FC  A4D8               	btfss	status,2,c
  2584  0008FE  EF83  F004         	goto	u4061
  2585  000902  EF85  F004         	goto	u4060
  2586  000906                     u4061:
  2587  000906  EFD0  F004         	goto	l3798
  2588  00090A                     u4060:
  2589  00090A  0EBF               	movlw	191
  2590  00090C  6E4E               	movwf	??_efgtoa^0,c
  2591  00090E  0EFF               	movlw	255
  2592  000910  6E4F               	movwf	(??_efgtoa+1)^0,c
  2593  000912  504D               	movf	efgtoa@c^0,w,c
  2594  000914  6E50               	movwf	(??_efgtoa+2)^0,c
  2595  000916  6A51               	clrf	(??_efgtoa+3)^0,c
  2596  000918  504E               	movf	??_efgtoa^0,w,c
  2597  00091A  2650               	addwf	(??_efgtoa+2)^0,f,c
  2598  00091C  504F               	movf	(??_efgtoa+1)^0,w,c
  2599  00091E  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2600  000920  5051               	movf	(??_efgtoa+3)^0,w,c
  2601  000922  E107               	bnz	u4071
  2602  000924  0E1A               	movlw	26
  2603  000926  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2604  000928  B0D8               	btfsc	status,0,c
  2605  00092A  EF99  F004         	goto	u4071
  2606  00092E  EF9B  F004         	goto	u4070
  2607  000932                     u4071:
  2608  000932  EFAA  F004         	goto	l3790
  2609  000936                     u4070:
  2610  000936                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2612  000936  0E00               	movlw	low _dbuf
  2613  000938  0100               	movlb	0	; () banked
  2614  00093A  258C               	addwf	efgtoa@n& (0+255),w,b
  2615  00093C  6E01               	movwf	strcpy@dest^0,c
  2616  00093E  0E01               	movlw	high _dbuf
  2617  000940  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2618  000942  6E02               	movwf	(strcpy@dest+1)^0,c
  2619  000944  0E13               	movlw	low STR_4
  2620  000946  6E03               	movwf	strcpy@src^0,c
  2621  000948  0E08               	movlw	high STR_4
  2622  00094A  6E04               	movwf	(strcpy@src+1)^0,c
  2623  00094C  EC12  F01E         	call	_strcpy	;wreg free
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2626  000950  EFB7  F004         	goto	l3792
  2627  000954                     l3790:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2630  000954  0E00               	movlw	low _dbuf
  2631  000956  0100               	movlb	0	; () banked
  2632  000958  258C               	addwf	efgtoa@n& (0+255),w,b
  2633  00095A  6E01               	movwf	strcpy@dest^0,c
  2634  00095C  0E01               	movlw	high _dbuf
  2635  00095E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2636  000960  6E02               	movwf	(strcpy@dest+1)^0,c
  2637  000962  0E1B               	movlw	low STR_5
  2638  000964  6E03               	movwf	strcpy@src^0,c
  2639  000966  0E08               	movlw	high STR_5
  2640  000968  6E04               	movwf	(strcpy@src+1)^0,c
  2641  00096A  EC12  F01E         	call	_strcpy	;wreg free
  2642  00096E                     l3792:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2645  00096E  0100               	movlb	0	; () banked
  2646  000970  0EFD               	movlw	253
  2647  000972  2778               	addwf	efgtoa@w& (0+255),f,b
  2648  000974  0EFF               	movlw	255
  2649  000976  2379               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2650  000978                     l3794:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2653  000978  C047  F011         	movff	efgtoa@fp,pad@fp
  2654  00097C  C048  F012         	movff	efgtoa@fp+1,pad@fp+1
  2655  000980  0E00               	movlw	low _dbuf
  2656  000982  6E13               	movwf	pad@buf^0,c
  2657  000984  0E01               	movlw	high _dbuf
  2658  000986  6E14               	movwf	(pad@buf+1)^0,c
  2659  000988  C078  F015         	movff	efgtoa@w,pad@p
  2660  00098C  C079  F016         	movff	efgtoa@w+1,pad@p+1
  2661  000990  EC3E  F019         	call	_pad	;wreg free
  2662  000994  C011  F047         	movff	?_pad,?_efgtoa
  2663  000998  C012  F048         	movff	?_pad+1,?_efgtoa+1
  2664  00099C  EF1B  F00A         	goto	l994
  2665  0009A0                     l3798:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2668  0009A0  C086  F001         	movff	efgtoa@g,___fpclassifyf@x
  2669  0009A4  C087  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2670  0009A8  C088  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2671  0009AC  C089  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2672  0009B0  EC85  F017         	call	___fpclassifyf	;wreg free
  2673  0009B4  5001               	movf	?___fpclassifyf^0,w,c
  2674  0009B6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2675  0009B8  A4D8               	btfss	status,2,c
  2676  0009BA  EFE1  F004         	goto	u4081
  2677  0009BE  EFE3  F004         	goto	u4080
  2678  0009C2                     u4081:
  2679  0009C2  EF17  F005         	goto	l3816
  2680  0009C6                     u4080:
  2681  0009C6  0EBF               	movlw	191
  2682  0009C8  6E4E               	movwf	??_efgtoa^0,c
  2683  0009CA  0EFF               	movlw	255
  2684  0009CC  6E4F               	movwf	(??_efgtoa+1)^0,c
  2685  0009CE  504D               	movf	efgtoa@c^0,w,c
  2686  0009D0  6E50               	movwf	(??_efgtoa+2)^0,c
  2687  0009D2  6A51               	clrf	(??_efgtoa+3)^0,c
  2688  0009D4  504E               	movf	??_efgtoa^0,w,c
  2689  0009D6  2650               	addwf	(??_efgtoa+2)^0,f,c
  2690  0009D8  504F               	movf	(??_efgtoa+1)^0,w,c
  2691  0009DA  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2692  0009DC  5051               	movf	(??_efgtoa+3)^0,w,c
  2693  0009DE  E107               	bnz	u4091
  2694  0009E0  0E1A               	movlw	26
  2695  0009E2  5C50               	subwf	(??_efgtoa+2)^0,w,c
  2696  0009E4  B0D8               	btfsc	status,0,c
  2697  0009E6  EFF7  F004         	goto	u4091
  2698  0009EA  EFF9  F004         	goto	u4090
  2699  0009EE                     u4091:
  2700  0009EE  EF08  F005         	goto	l3808
  2701  0009F2                     u4090:
  2702  0009F2                     
  2703                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2704  0009F2  0E00               	movlw	low _dbuf
  2705  0009F4  0100               	movlb	0	; () banked
  2706  0009F6  258C               	addwf	efgtoa@n& (0+255),w,b
  2707  0009F8  6E01               	movwf	strcpy@dest^0,c
  2708  0009FA  0E01               	movlw	high _dbuf
  2709  0009FC  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2710  0009FE  6E02               	movwf	(strcpy@dest+1)^0,c
  2711  000A00  0E17               	movlw	low STR_8
  2712  000A02  6E03               	movwf	strcpy@src^0,c
  2713  000A04  0E08               	movlw	high STR_8
  2714  000A06  6E04               	movwf	(strcpy@src+1)^0,c
  2715  000A08  EC12  F01E         	call	_strcpy	;wreg free
  2716                           
  2717                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2718  000A0C  EFB7  F004         	goto	l3792
  2719  000A10                     l3808:
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2722  000A10  0E00               	movlw	low _dbuf
  2723  000A12  0100               	movlb	0	; () banked
  2724  000A14  258C               	addwf	efgtoa@n& (0+255),w,b
  2725  000A16  6E01               	movwf	strcpy@dest^0,c
  2726  000A18  0E01               	movlw	high _dbuf
  2727  000A1A  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2728  000A1C  6E02               	movwf	(strcpy@dest+1)^0,c
  2729  000A1E  0E1F               	movlw	low STR_9
  2730  000A20  6E03               	movwf	strcpy@src^0,c
  2731  000A22  0E08               	movlw	high STR_9
  2732  000A24  6E04               	movwf	(strcpy@src+1)^0,c
  2733  000A26  EC12  F01E         	call	_strcpy	;wreg free
  2734  000A2A  EFB7  F004         	goto	l3792
  2735  000A2E                     l3816:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2738  000A2E  0E00               	movlw	0
  2739  000A30  0100               	movlb	0	; () banked
  2740  000A32  6F8E               	movwf	efgtoa@u& (0+255),b
  2741  000A34  0E00               	movlw	0
  2742  000A36  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  2743  000A38  0E80               	movlw	128
  2744  000A3A  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  2745  000A3C  0E3F               	movlw	63
  2746  000A3E  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2749  000A40  0E00               	movlw	0
  2750  000A42  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  2751  000A44  0E00               	movlw	0
  2752  000A46  6F8A               	movwf	efgtoa@e& (0+255),b
  2753  000A48                     
  2754                           ; BSR set to: 0
  2755                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2756  000A48  C086  F001         	movff	efgtoa@g,___fleq@ff1
  2757  000A4C  C087  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2758  000A50  C088  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2759  000A54  C089  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2760  000A58  0E00               	movlw	0
  2761  000A5A  6E05               	movwf	___fleq@ff2^0,c
  2762  000A5C  0E00               	movlw	0
  2763  000A5E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2764  000A60  0E00               	movlw	0
  2765  000A62  6E07               	movwf	(___fleq@ff2+2)^0,c
  2766  000A64  0E00               	movlw	0
  2767  000A66  6E08               	movwf	(___fleq@ff2+3)^0,c
  2768  000A68  ECBD  F01B         	call	___fleq	;wreg free
  2769  000A6C  B0D8               	btfsc	status,0,c
  2770  000A6E  EF3B  F005         	goto	u4101
  2771  000A72  EF3D  F005         	goto	u4100
  2772  000A76                     u4101:
  2773  000A76  EFC0  F005         	goto	l3834
  2774  000A7A                     u4100:
  2775  000A7A  EF5C  F005         	goto	l3826
  2776  000A7E                     l3822:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2779  000A7E  C08E  F001         	movff	efgtoa@u,___flmul@b
  2780  000A82  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2781  000A86  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2782  000A8A  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2783  000A8E  0E00               	movlw	0
  2784  000A90  6E05               	movwf	___flmul@a^0,c
  2785  000A92  0E00               	movlw	0
  2786  000A94  6E06               	movwf	(___flmul@a+1)^0,c
  2787  000A96  0E20               	movlw	32
  2788  000A98  6E07               	movwf	(___flmul@a+2)^0,c
  2789  000A9A  0E41               	movlw	65
  2790  000A9C  6E08               	movwf	(___flmul@a+3)^0,c
  2791  000A9E  EC95  F00E         	call	___flmul	;wreg free
  2792  000AA2  C001  F08E         	movff	?___flmul,efgtoa@u
  2793  000AA6  C002  F08F         	movff	?___flmul+1,efgtoa@u+1
  2794  000AAA  C003  F090         	movff	?___flmul+2,efgtoa@u+2
  2795  000AAE  C004  F091         	movff	?___flmul+3,efgtoa@u+3
  2796  000AB2                     
  2797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2798  000AB2  0100               	movlb	0	; () banked
  2799  000AB4  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  2800  000AB6  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  2801  000AB8                     l3826:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2804  000AB8  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2805  000ABC  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2806  000AC0  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2807  000AC4  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2808  000AC8  0E00               	movlw	0
  2809  000ACA  6E05               	movwf	___flmul@a^0,c
  2810  000ACC  0E00               	movlw	0
  2811  000ACE  6E06               	movwf	(___flmul@a+1)^0,c
  2812  000AD0  0E20               	movlw	32
  2813  000AD2  6E07               	movwf	(___flmul@a+2)^0,c
  2814  000AD4  0E41               	movlw	65
  2815  000AD6  6E08               	movwf	(___flmul@a+3)^0,c
  2816  000AD8  C08E  F001         	movff	efgtoa@u,___flmul@b
  2817  000ADC  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  2818  000AE0  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  2819  000AE4  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  2820  000AE8  EC95  F00E         	call	___flmul	;wreg free
  2821  000AEC  C001  F01E         	movff	?___flmul,___flge@ff2
  2822  000AF0  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2823  000AF4  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2824  000AF8  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2825  000AFC  EC03  F017         	call	___flge	;wreg free
  2826  000B00  B0D8               	btfsc	status,0,c
  2827  000B02  EF85  F005         	goto	u4111
  2828  000B06  EF87  F005         	goto	u4110
  2829  000B0A                     u4111:
  2830  000B0A  EF3F  F005         	goto	l3822
  2831  000B0E                     u4110:
  2832  000B0E  EFA7  F005         	goto	l3832
  2833  000B12                     l3828:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2836  000B12  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  2837  000B16  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2838  000B1A  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2839  000B1E  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2840  000B22  0E00               	movlw	0
  2841  000B24  6E1E               	movwf	___fldiv@a^0,c
  2842  000B26  0E00               	movlw	0
  2843  000B28  6E1F               	movwf	(___fldiv@a+1)^0,c
  2844  000B2A  0E20               	movlw	32
  2845  000B2C  6E20               	movwf	(___fldiv@a+2)^0,c
  2846  000B2E  0E41               	movlw	65
  2847  000B30  6E21               	movwf	(___fldiv@a+3)^0,c
  2848  000B32  ECAA  F010         	call	___fldiv	;wreg free
  2849  000B36  C01A  F08E         	movff	?___fldiv,efgtoa@u
  2850  000B3A  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  2851  000B3E  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  2852  000B42  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  2853  000B46                     
  2854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2855  000B46  0100               	movlb	0	; () banked
  2856  000B48  078A               	decf	efgtoa@e& (0+255),f,b
  2857  000B4A  A0D8               	btfss	status,0,c
  2858  000B4C  078B               	decf	(efgtoa@e+1)& (0+255),f,b
  2859  000B4E                     l3832:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2862  000B4E  C086  F01A         	movff	efgtoa@g,___flge@ff1
  2863  000B52  C087  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2864  000B56  C088  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2865  000B5A  C089  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2866  000B5E  C08E  F01E         	movff	efgtoa@u,___flge@ff2
  2867  000B62  C08F  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2868  000B66  C090  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2869  000B6A  C091  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2870  000B6E  EC03  F017         	call	___flge	;wreg free
  2871  000B72  A0D8               	btfss	status,0,c
  2872  000B74  EFBE  F005         	goto	u4121
  2873  000B78  EFC0  F005         	goto	u4120
  2874  000B7C                     u4121:
  2875  000B7C  EF89  F005         	goto	l3828
  2876  000B80                     u4120:
  2877  000B80                     l3834:
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2880  000B80  C04D  F007         	movff	efgtoa@c,tolower@c
  2881  000B84  6A08               	clrf	(tolower@c+1)^0,c
  2882  000B86  ECDD  F01E         	call	_tolower	;wreg free
  2883  000B8A  5007               	movf	?_tolower^0,w,c
  2884  000B8C  0100               	movlb	0	; () banked
  2885  000B8E  6F7B               	movwf	efgtoa@mode& (0+255),b
  2886  000B90                     
  2887                           ; BSR set to: 0
  2888                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2889  000B90  C07B  F07A         	movff	efgtoa@mode,efgtoa@nmode
  2890  000B94                     
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2893  000B94  0E67               	movlw	103
  2894  000B96  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2895  000B98  A4D8               	btfss	status,2,c
  2896  000B9A  EFD1  F005         	goto	u4131
  2897  000B9E  EFD3  F005         	goto	u4130
  2898  000BA2                     u4131:
  2899  000BA2  EFF9  F005         	goto	l3848
  2900  000BA6                     u4130:
  2901  000BA6                     
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2904  000BA6  51E9               	movf	_prec& (0+255),w,b
  2905  000BA8  11EA               	iorwf	(_prec+1)& (0+255),w,b
  2906  000BAA  A4D8               	btfss	status,2,c
  2907  000BAC  EFDA  F005         	goto	u4141
  2908  000BB0  EFDC  F005         	goto	u4140
  2909  000BB4                     u4141:
  2910  000BB4  EFE0  F005         	goto	l3844
  2911  000BB8                     u4140:
  2912  000BB8                     
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2915  000BB8  0E00               	movlw	0
  2916  000BBA  6FEA               	movwf	(_prec+1)& (0+255),b
  2917  000BBC  0E01               	movlw	1
  2918  000BBE  6FE9               	movwf	_prec& (0+255),b
  2919  000BC0                     l3844:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2923  000BC0  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  2924  000BC2  EFED  F005         	goto	u4150
  2925  000BC6  51EA               	movf	(_prec+1)& (0+255),w,b
  2926  000BC8  E106               	bnz	u4151
  2927  000BCA  05E9               	decf	_prec& (0+255),w,b
  2928  000BCC  B0D8               	btfsc	status,0,c
  2929  000BCE  EFEB  F005         	goto	u4151
  2930  000BD2  EFED  F005         	goto	u4150
  2931  000BD6                     u4151:
  2932  000BD6  EFF3  F005         	goto	l1010
  2933  000BDA                     u4150:
  2934  000BDA                     l3846:
  2935                           
  2936                           ; BSR set to: 0
  2937  000BDA  0E00               	movlw	0
  2938  000BDC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  2939  000BDE  0E06               	movlw	6
  2940  000BE0  6F76               	movwf	efgtoa@p& (0+255),b
  2941  000BE2  EF02  F006         	goto	l3854
  2942  000BE6                     l1010:
  2943                           
  2944                           ; BSR set to: 0
  2945  000BE6  C0E9  F076         	movff	_prec,efgtoa@p
  2946  000BEA  C0EA  F077         	movff	_prec+1,efgtoa@p+1
  2947  000BEE  EF02  F006         	goto	l3854
  2948  000BF2                     l3848:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2952  000BF2  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  2953  000BF4  EFFE  F005         	goto	u4161
  2954  000BF8  EF00  F006         	goto	u4160
  2955  000BFC                     u4161:
  2956  000BFC  EFED  F005         	goto	l3846
  2957  000C00                     u4160:
  2958  000C00  EFF3  F005         	goto	l1010
  2959  000C04                     l3854:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2963  000C04  0E67               	movlw	103
  2964  000C06  197B               	xorwf	efgtoa@mode& (0+255),w,b
  2965  000C08  A4D8               	btfss	status,2,c
  2966  000C0A  EF09  F006         	goto	u4171
  2967  000C0E  EF0B  F006         	goto	u4170
  2968  000C12                     u4171:
  2969  000C12  EF3A  F006         	goto	l3864
  2970  000C16                     u4170:
  2971  000C16                     
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2974  000C16  AF8B               	btfss	(efgtoa@e+1)& (0+255),7,b
  2975  000C18  EF19  F006         	goto	u4180
  2976  000C1C  0EFC               	movlw	252
  2977  000C1E  5D8A               	subwf	efgtoa@e& (0+255),w,b
  2978  000C20  0EFF               	movlw	255
  2979  000C22  598B               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2980  000C24  A0D8               	btfss	status,0,c
  2981  000C26  EF17  F006         	goto	u4181
  2982  000C2A  EF19  F006         	goto	u4180
  2983  000C2E                     u4181:
  2984  000C2E  EF38  F006         	goto	l3862
  2985  000C32                     u4180:
  2986  000C32                     
  2987                           ; BSR set to: 0
  2988  000C32  0EFF               	movlw	255
  2989  000C34  6E4E               	movwf	??_efgtoa^0,c
  2990  000C36  0EFF               	movlw	255
  2991  000C38  6E4F               	movwf	(??_efgtoa+1)^0,c
  2992  000C3A  C076  F050         	movff	efgtoa@p,??_efgtoa+2
  2993  000C3E  C077  F051         	movff	efgtoa@p+1,??_efgtoa+3
  2994  000C42  504E               	movf	??_efgtoa^0,w,c
  2995  000C44  2650               	addwf	(??_efgtoa+2)^0,f,c
  2996  000C46  504F               	movf	(??_efgtoa+1)^0,w,c
  2997  000C48  2251               	addwfc	(??_efgtoa+3)^0,f,c
  2998  000C4A  518A               	movf	efgtoa@e& (0+255),w,b
  2999  000C4C  5C50               	subwf	(??_efgtoa+2)^0,w,c
  3000  000C4E  5051               	movf	(??_efgtoa+3)^0,w,c
  3001  000C50  0A80               	xorlw	128
  3002  000C52  6E52               	movwf	(??_efgtoa+4)^0,c
  3003  000C54  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3004  000C56  0A80               	xorlw	128
  3005  000C58  5852               	subwfb	(??_efgtoa+4)^0,w,c
  3006  000C5A  A0D8               	btfss	status,0,c
  3007  000C5C  EF32  F006         	goto	u4191
  3008  000C60  EF34  F006         	goto	u4190
  3009  000C64                     u4191:
  3010  000C64  EF38  F006         	goto	l3862
  3011  000C68                     u4190:
  3012  000C68                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3015  000C68  0E66               	movlw	102
  3016  000C6A  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3019  000C6C  EF3A  F006         	goto	l3864
  3020  000C70                     l3862:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3024  000C70  0E65               	movlw	101
  3025  000C72  6F7A               	movwf	efgtoa@nmode& (0+255),b
  3026  000C74                     l3864:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3030  000C74  C076  F06C         	movff	efgtoa@p,efgtoa@m
  3031  000C78  C077  F06D         	movff	efgtoa@p+1,efgtoa@m+1
  3032  000C7C                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3035  000C7C  0E67               	movlw	103
  3036  000C7E  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3037  000C80  A4D8               	btfss	status,2,c
  3038  000C82  EF45  F006         	goto	u4201
  3039  000C86  EF47  F006         	goto	u4200
  3040  000C8A                     u4201:
  3041  000C8A  EF57  F006         	goto	l3872
  3042  000C8E                     u4200:
  3043  000C8E                     
  3044                           ; BSR set to: 0
  3045  000C8E  0E66               	movlw	102
  3046  000C90  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3047  000C92  A4D8               	btfss	status,2,c
  3048  000C94  EF4E  F006         	goto	u4211
  3049  000C98  EF50  F006         	goto	u4210
  3050  000C9C                     u4211:
  3051  000C9C  EF59  F006         	goto	l3874
  3052  000CA0                     u4210:
  3053  000CA0                     
  3054                           ; BSR set to: 0
  3055  000CA0  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3056  000CA2  EF57  F006         	goto	u4220
  3057  000CA6  EF55  F006         	goto	u4221
  3058  000CAA                     u4221:
  3059  000CAA  EF59  F006         	goto	l3874
  3060  000CAE                     u4220:
  3061  000CAE                     l3872:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3065  000CAE  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3066  000CB0  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3067  000CB2                     l3874:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3071  000CB2  0E66               	movlw	102
  3072  000CB4  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3073  000CB6  A4D8               	btfss	status,2,c
  3074  000CB8  EF60  F006         	goto	u4231
  3075  000CBC  EF62  F006         	goto	u4230
  3076  000CC0                     u4231:
  3077  000CC0  EF82  F006         	goto	l3884
  3078  000CC4                     u4230:
  3079  000CC4                     
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3082  000CC4  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3083  000CC6  EF69  F006         	goto	u4240
  3084  000CCA  EF67  F006         	goto	u4241
  3085  000CCE                     u4241:
  3086  000CCE  EF75  F006         	goto	l3880
  3087  000CD2                     u4240:
  3088  000CD2                     
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3091  000CD2  0E00               	movlw	0
  3092  000CD4  6F8E               	movwf	efgtoa@u& (0+255),b
  3093  000CD6  0E00               	movlw	0
  3094  000CD8  6F8F               	movwf	(efgtoa@u+1)& (0+255),b
  3095  000CDA  0E80               	movlw	128
  3096  000CDC  6F90               	movwf	(efgtoa@u+2)& (0+255),b
  3097  000CDE  0E3F               	movlw	63
  3098  000CE0  6F91               	movwf	(efgtoa@u+3)& (0+255),b
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3101  000CE2  0E00               	movlw	0
  3102  000CE4  6F8B               	movwf	(efgtoa@e+1)& (0+255),b
  3103  000CE6  0E00               	movlw	0
  3104  000CE8  6F8A               	movwf	efgtoa@e& (0+255),b
  3105  000CEA                     l3880:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3109  000CEA  0E67               	movlw	103
  3110  000CEC  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3111  000CEE  B4D8               	btfsc	status,2,c
  3112  000CF0  EF7C  F006         	goto	u4251
  3113  000CF4  EF7E  F006         	goto	u4250
  3114  000CF8                     u4251:
  3115  000CF8  EF82  F006         	goto	l3884
  3116  000CFC                     u4250:
  3117  000CFC                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3120  000CFC  518A               	movf	efgtoa@e& (0+255),w,b
  3121  000CFE  276C               	addwf	efgtoa@m& (0+255),f,b
  3122  000D00  518B               	movf	(efgtoa@e+1)& (0+255),w,b
  3123  000D02  236D               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3124  000D04                     l3884:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3128  000D04  0E00               	movlw	0
  3129  000D06  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3130  000D08  0E00               	movlw	0
  3131  000D0A  6F84               	movwf	efgtoa@i& (0+255),b
  3132  000D0C                     
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3135  000D0C  C086  F07C         	movff	efgtoa@g,efgtoa@h
  3136  000D10  C087  F07D         	movff	efgtoa@g+1,efgtoa@h+1
  3137  000D14  C088  F07E         	movff	efgtoa@g+2,efgtoa@h+2
  3138  000D18  C089  F07F         	movff	efgtoa@g+3,efgtoa@h+3
  3139  000D1C                     
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3142  000D1C  C08E  F06E         	movff	efgtoa@u,efgtoa@ou
  3143  000D20  C08F  F06F         	movff	efgtoa@u+1,efgtoa@ou+1
  3144  000D24  C090  F070         	movff	efgtoa@u+2,efgtoa@ou+2
  3145  000D28  C091  F071         	movff	efgtoa@u+3,efgtoa@ou+3
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3148  000D2C  EF13  F007         	goto	l3898
  3149  000D30                     l3890:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3153  000D30  C07C  F01A         	movff	efgtoa@h,___fldiv@b
  3154  000D34  C07D  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3155  000D38  C07E  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3156  000D3C  C07F  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3157  000D40  C08E  F01E         	movff	efgtoa@u,___fldiv@a
  3158  000D44  C08F  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3159  000D48  C090  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3160  000D4C  C091  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3161  000D50  ECAA  F010         	call	___fldiv	;wreg free
  3162  000D54  C01A  F033         	movff	?___fldiv,floorf@x
  3163  000D58  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  3164  000D5C  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  3165  000D60  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  3166  000D64  EC77  F012         	call	_floorf	;wreg free
  3167  000D68  C033  F080         	movff	?_floorf,efgtoa@l
  3168  000D6C  C034  F081         	movff	?_floorf+1,efgtoa@l+1
  3169  000D70  C035  F082         	movff	?_floorf+2,efgtoa@l+2
  3170  000D74  C036  F083         	movff	?_floorf+3,efgtoa@l+3
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3173  000D78  C080  F001         	movff	efgtoa@l,___fltol@f1
  3174  000D7C  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3175  000D80  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3176  000D84  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3177  000D88  EC80  F016         	call	___fltol	;wreg free
  3178  000D8C  C001  F072         	movff	?___fltol,efgtoa@d
  3179  000D90  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3180  000D94                     
  3181                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3182  000D94  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3183  000D98  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3184  000D9C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3185  000DA0  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3186  000DA4  C08E  F005         	movff	efgtoa@u,___flmul@a
  3187  000DA8  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3188  000DAC  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3189  000DB0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3190  000DB4  C080  F001         	movff	efgtoa@l,___flmul@b
  3191  000DB8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3192  000DBC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3193  000DC0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3194  000DC4  EC95  F00E         	call	___flmul	;wreg free
  3195  000DC8  C001  F01E         	movff	?___flmul,___flsub@a
  3196  000DCC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3197  000DD0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3198  000DD4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3199  000DD8  EC00  F01F         	call	___flsub	;wreg free
  3200  000DDC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3201  000DE0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3202  000DE4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3203  000DE8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3204  000DEC                     
  3205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3206  000DEC  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  3207  000DF0  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3208  000DF4  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3209  000DF8  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3210  000DFC  0E00               	movlw	0
  3211  000DFE  6E1E               	movwf	___fldiv@a^0,c
  3212  000E00  0E00               	movlw	0
  3213  000E02  6E1F               	movwf	(___fldiv@a+1)^0,c
  3214  000E04  0E20               	movlw	32
  3215  000E06  6E20               	movwf	(___fldiv@a+2)^0,c
  3216  000E08  0E41               	movlw	65
  3217  000E0A  6E21               	movwf	(___fldiv@a+3)^0,c
  3218  000E0C  ECAA  F010         	call	___fldiv	;wreg free
  3219  000E10  C01A  F08E         	movff	?___fldiv,efgtoa@u
  3220  000E14  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3221  000E18  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  3222  000E1C  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  3223  000E20                     
  3224                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3225  000E20  0100               	movlb	0	; () banked
  3226  000E22  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3227  000E24  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3228  000E26                     l3898:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3232  000E26  516C               	movf	efgtoa@m& (0+255),w,b
  3233  000E28  5D84               	subwf	efgtoa@i& (0+255),w,b
  3234  000E2A  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3235  000E2C  0A80               	xorlw	128
  3236  000E2E  6E4E               	movwf	??_efgtoa^0,c
  3237  000E30  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3238  000E32  0A80               	xorlw	128
  3239  000E34  584E               	subwfb	??_efgtoa^0,w,c
  3240  000E36  A0D8               	btfss	status,0,c
  3241  000E38  EF20  F007         	goto	u4261
  3242  000E3C  EF22  F007         	goto	u4260
  3243  000E40                     u4261:
  3244  000E40  EF98  F006         	goto	l3890
  3245  000E44                     u4260:
  3246  000E44                     
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3249  000E44  C08E  F001         	movff	efgtoa@u,___flmul@b
  3250  000E48  C08F  F002         	movff	efgtoa@u+1,___flmul@b+1
  3251  000E4C  C090  F003         	movff	efgtoa@u+2,___flmul@b+2
  3252  000E50  C091  F004         	movff	efgtoa@u+3,___flmul@b+3
  3253  000E54  0E00               	movlw	0
  3254  000E56  6E05               	movwf	___flmul@a^0,c
  3255  000E58  0E00               	movlw	0
  3256  000E5A  6E06               	movwf	(___flmul@a+1)^0,c
  3257  000E5C  0EA0               	movlw	160
  3258  000E5E  6E07               	movwf	(___flmul@a+2)^0,c
  3259  000E60  0E40               	movlw	64
  3260  000E62  6E08               	movwf	(___flmul@a+3)^0,c
  3261  000E64  EC95  F00E         	call	___flmul	;wreg free
  3262  000E68  C001  F080         	movff	?___flmul,efgtoa@l
  3263  000E6C  C002  F081         	movff	?___flmul+1,efgtoa@l+1
  3264  000E70  C003  F082         	movff	?___flmul+2,efgtoa@l+2
  3265  000E74  C004  F083         	movff	?___flmul+3,efgtoa@l+3
  3266  000E78                     
  3267                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3268  000E78  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3269  000E7C  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3270  000E80  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3271  000E84  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3272  000E88  C080  F01E         	movff	efgtoa@l,___flge@ff2
  3273  000E8C  C081  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3274  000E90  C082  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3275  000E94  C083  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3276  000E98  EC03  F017         	call	___flge	;wreg free
  3277  000E9C  B0D8               	btfsc	status,0,c
  3278  000E9E  EF53  F007         	goto	u4271
  3279  000EA2  EF55  F007         	goto	u4270
  3280  000EA6                     u4271:
  3281  000EA6  EF60  F007         	goto	l3906
  3282  000EAA                     u4270:
  3283  000EAA                     
  3284                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3285  000EAA  0E00               	movlw	0
  3286  000EAC  0100               	movlb	0	; () banked
  3287  000EAE  6F80               	movwf	efgtoa@l& (0+255),b
  3288  000EB0  0E00               	movlw	0
  3289  000EB2  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3290  000EB4  0E00               	movlw	0
  3291  000EB6  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3292  000EB8  0E00               	movlw	0
  3293  000EBA  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3296  000EBC  EF89  F007         	goto	l3912
  3297  000EC0                     l3906:
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3300  000EC0  C07C  F001         	movff	efgtoa@h,___fleq@ff1
  3301  000EC4  C07D  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3302  000EC8  C07E  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3303  000ECC  C07F  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3304  000ED0  C080  F005         	movff	efgtoa@l,___fleq@ff2
  3305  000ED4  C081  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3306  000ED8  C082  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3307  000EDC  C083  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3308  000EE0  ECBD  F01B         	call	___fleq	;wreg free
  3309  000EE4  A0D8               	btfss	status,0,c
  3310  000EE6  EF77  F007         	goto	u4281
  3311  000EEA  EF79  F007         	goto	u4280
  3312  000EEE                     u4281:
  3313  000EEE  EF89  F007         	goto	l3912
  3314  000EF2                     u4280:
  3315  000EF2  0100               	movlb	0	; () banked
  3316  000EF4  B172               	btfsc	efgtoa@d& (0+255),0,b
  3317  000EF6  EF7F  F007         	goto	u4291
  3318  000EFA  EF81  F007         	goto	u4290
  3319  000EFE                     u4291:
  3320  000EFE  EF89  F007         	goto	l3912
  3321  000F02                     u4290:
  3322  000F02                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3325  000F02  0E00               	movlw	0
  3326  000F04  6F80               	movwf	efgtoa@l& (0+255),b
  3327  000F06  0E00               	movlw	0
  3328  000F08  6F81               	movwf	(efgtoa@l+1)& (0+255),b
  3329  000F0A  0E00               	movlw	0
  3330  000F0C  6F82               	movwf	(efgtoa@l+2)& (0+255),b
  3331  000F0E  0E00               	movlw	0
  3332  000F10  6F83               	movwf	(efgtoa@l+3)& (0+255),b
  3333  000F12                     l3912:
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3336  000F12  C086  F001         	movff	efgtoa@g,___fladd@b
  3337  000F16  C087  F002         	movff	efgtoa@g+1,___fladd@b+1
  3338  000F1A  C088  F003         	movff	efgtoa@g+2,___fladd@b+2
  3339  000F1E  C089  F004         	movff	efgtoa@g+3,___fladd@b+3
  3340  000F22  C080  F005         	movff	efgtoa@l,___fladd@a
  3341  000F26  C081  F006         	movff	efgtoa@l+1,___fladd@a+1
  3342  000F2A  C082  F007         	movff	efgtoa@l+2,___fladd@a+2
  3343  000F2E  C083  F008         	movff	efgtoa@l+3,___fladd@a+3
  3344  000F32  EC1C  F00A         	call	___fladd	;wreg free
  3345  000F36  C001  F07C         	movff	?___fladd,efgtoa@h
  3346  000F3A  C002  F07D         	movff	?___fladd+1,efgtoa@h+1
  3347  000F3E  C003  F07E         	movff	?___fladd+2,efgtoa@h+2
  3348  000F42  C004  F07F         	movff	?___fladd+3,efgtoa@h+3
  3349  000F46                     
  3350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3351  000F46  C07C  F01A         	movff	efgtoa@h,___flge@ff1
  3352  000F4A  C07D  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3353  000F4E  C07E  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3354  000F52  C07F  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3355  000F56  0E00               	movlw	0
  3356  000F58  6E05               	movwf	___flmul@a^0,c
  3357  000F5A  0E00               	movlw	0
  3358  000F5C  6E06               	movwf	(___flmul@a+1)^0,c
  3359  000F5E  0E20               	movlw	32
  3360  000F60  6E07               	movwf	(___flmul@a+2)^0,c
  3361  000F62  0E41               	movlw	65
  3362  000F64  6E08               	movwf	(___flmul@a+3)^0,c
  3363  000F66  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3364  000F6A  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3365  000F6E  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3366  000F72  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3367  000F76  EC95  F00E         	call	___flmul	;wreg free
  3368  000F7A  C001  F01E         	movff	?___flmul,___flge@ff2
  3369  000F7E  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3370  000F82  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3371  000F86  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3372  000F8A  EC03  F017         	call	___flge	;wreg free
  3373  000F8E  A0D8               	btfss	status,0,c
  3374  000F90  EFCC  F007         	goto	u4301
  3375  000F94  EFCE  F007         	goto	u4300
  3376  000F98                     u4301:
  3377  000F98  EFF7  F007         	goto	l3924
  3378  000F9C                     u4300:
  3379  000F9C                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3381  000F9C  0100               	movlb	0	; () banked
  3382  000F9E  4B8A               	infsnz	efgtoa@e& (0+255),f,b
  3383  000FA0  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3384  000FA2                     
  3385                           ; BSR set to: 0
  3386                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3387  000FA2  C06E  F001         	movff	efgtoa@ou,___flmul@b
  3388  000FA6  C06F  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3389  000FAA  C070  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3390  000FAE  C071  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3391  000FB2  0E00               	movlw	0
  3392  000FB4  6E05               	movwf	___flmul@a^0,c
  3393  000FB6  0E00               	movlw	0
  3394  000FB8  6E06               	movwf	(___flmul@a+1)^0,c
  3395  000FBA  0E20               	movlw	32
  3396  000FBC  6E07               	movwf	(___flmul@a+2)^0,c
  3397  000FBE  0E41               	movlw	65
  3398  000FC0  6E08               	movwf	(___flmul@a+3)^0,c
  3399  000FC2  EC95  F00E         	call	___flmul	;wreg free
  3400  000FC6  C001  F06E         	movff	?___flmul,efgtoa@ou
  3401  000FCA  C002  F06F         	movff	?___flmul+1,efgtoa@ou+1
  3402  000FCE  C003  F070         	movff	?___flmul+2,efgtoa@ou+2
  3403  000FD2  C004  F071         	movff	?___flmul+3,efgtoa@ou+3
  3404  000FD6                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3406  000FD6  0E66               	movlw	102
  3407  000FD8  0100               	movlb	0	; () banked
  3408  000FDA  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3409  000FDC  A4D8               	btfss	status,2,c
  3410  000FDE  EFF3  F007         	goto	u4311
  3411  000FE2  EFF5  F007         	goto	u4310
  3412  000FE6                     u4311:
  3413  000FE6  EFF7  F007         	goto	l3924
  3414  000FEA                     u4310:
  3415  000FEA                     
  3416                           ; BSR set to: 0
  3417                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3418  000FEA  4B6C               	infsnz	efgtoa@m& (0+255),f,b
  3419  000FEC  2B6D               	incf	(efgtoa@m+1)& (0+255),f,b
  3420  000FEE                     l3924:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3423  000FEE  C06E  F08E         	movff	efgtoa@ou,efgtoa@u
  3424  000FF2  C06F  F08F         	movff	efgtoa@ou+1,efgtoa@u+1
  3425  000FF6  C070  F090         	movff	efgtoa@ou+2,efgtoa@u+2
  3426  000FFA  C071  F091         	movff	efgtoa@ou+3,efgtoa@u+3
  3427  000FFE                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3429  000FFE  0E65               	movlw	101
  3430  001000  0100               	movlb	0	; () banked
  3431  001002  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3432  001004  B4D8               	btfsc	status,2,c
  3433  001006  EF07  F008         	goto	u4321
  3434  00100A  EF09  F008         	goto	u4320
  3435  00100E                     u4321:
  3436  00100E  EF0F  F008         	goto	l3930
  3437  001012                     u4320:
  3438  001012                     
  3439                           ; BSR set to: 0
  3440  001012  C08A  F06A         	movff	efgtoa@e,efgtoa@ne
  3441  001016  C08B  F06B         	movff	efgtoa@e+1,efgtoa@ne+1
  3442  00101A  EF13  F008         	goto	l1038
  3443  00101E                     l3930:
  3444                           
  3445                           ; BSR set to: 0
  3446  00101E  0E00               	movlw	0
  3447  001020  6F6B               	movwf	(efgtoa@ne+1)& (0+255),b
  3448  001022  0E00               	movlw	0
  3449  001024  6F6A               	movwf	efgtoa@ne& (0+255),b
  3450  001026                     l1038:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3454  001026  0E00               	movlw	0
  3455  001028  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3456  00102A  0E00               	movlw	0
  3457  00102C  6F68               	movwf	efgtoa@pp& (0+255),b
  3458                           
  3459                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3460  00102E  0E00               	movlw	0
  3461  001030  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  3462  001032  0E00               	movlw	0
  3463  001034  6F66               	movwf	efgtoa@t& (0+255),b
  3464                           
  3465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3466  001036  0E00               	movlw	0
  3467  001038  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3468  00103A  0E00               	movlw	0
  3469  00103C  6F84               	movwf	efgtoa@i& (0+255),b
  3470                           
  3471                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3472  00103E  EF0E  F009         	goto	l3980
  3473  001042                     l3932:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3477  001042  C07C  F01A         	movff	efgtoa@h,___fldiv@b
  3478  001046  C07D  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3479  00104A  C07E  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3480  00104E  C07F  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3481  001052  C08E  F01E         	movff	efgtoa@u,___fldiv@a
  3482  001056  C08F  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3483  00105A  C090  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3484  00105E  C091  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3485  001062  ECAA  F010         	call	___fldiv	;wreg free
  3486  001066  C01A  F033         	movff	?___fldiv,floorf@x
  3487  00106A  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  3488  00106E  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  3489  001072  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  3490  001076  EC77  F012         	call	_floorf	;wreg free
  3491  00107A  C033  F080         	movff	?_floorf,efgtoa@l
  3492  00107E  C034  F081         	movff	?_floorf+1,efgtoa@l+1
  3493  001082  C035  F082         	movff	?_floorf+2,efgtoa@l+2
  3494  001086  C036  F083         	movff	?_floorf+3,efgtoa@l+3
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3497  00108A  C080  F001         	movff	efgtoa@l,___fltol@f1
  3498  00108E  C081  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3499  001092  C082  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3500  001096  C083  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3501  00109A  EC80  F016         	call	___fltol	;wreg free
  3502  00109E  C001  F072         	movff	?___fltol,efgtoa@d
  3503  0010A2  C002  F073         	movff	?___fltol+1,efgtoa@d+1
  3504  0010A6                     
  3505                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3506  0010A6  0100               	movlb	0	; () banked
  3507  0010A8  B9EB               	btfsc	_flags& (0+255),4,b
  3508  0010AA  EF59  F008         	goto	u4331
  3509  0010AE  EF5B  F008         	goto	u4330
  3510  0010B2                     u4331:
  3511  0010B2  EF78  F008         	goto	l3944
  3512  0010B6                     u4330:
  3513  0010B6                     
  3514                           ; BSR set to: 0
  3515  0010B6  5172               	movf	efgtoa@d& (0+255),w,b
  3516  0010B8  1173               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3517  0010BA  A4D8               	btfss	status,2,c
  3518  0010BC  EF62  F008         	goto	u4341
  3519  0010C0  EF64  F008         	goto	u4340
  3520  0010C4                     u4341:
  3521  0010C4  EF78  F008         	goto	l3944
  3522  0010C8                     u4340:
  3523  0010C8                     
  3524                           ; BSR set to: 0
  3525  0010C8  0E67               	movlw	103
  3526  0010CA  197B               	xorwf	efgtoa@mode& (0+255),w,b
  3527  0010CC  A4D8               	btfss	status,2,c
  3528  0010CE  EF6B  F008         	goto	u4351
  3529  0010D2  EF6D  F008         	goto	u4350
  3530  0010D6                     u4351:
  3531  0010D6  EF78  F008         	goto	l3944
  3532  0010DA                     u4350:
  3533  0010DA                     
  3534                           ; BSR set to: 0
  3535  0010DA  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3536  0010DC  EF74  F008         	goto	u4360
  3537  0010E0  EF72  F008         	goto	u4361
  3538  0010E4                     u4361:
  3539  0010E4  EF78  F008         	goto	l3944
  3540  0010E8                     u4360:
  3541  0010E8                     
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3544  0010E8  4B66               	infsnz	efgtoa@t& (0+255),f,b
  3545  0010EA  2B67               	incf	(efgtoa@t+1)& (0+255),f,b
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3548  0010EC  EFC2  F008         	goto	l3972
  3549  0010F0                     l3944:
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3553  0010F0  5168               	movf	efgtoa@pp& (0+255),w,b
  3554  0010F2  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3555  0010F4  A4D8               	btfss	status,2,c
  3556  0010F6  EF7F  F008         	goto	u4371
  3557  0010FA  EF81  F008         	goto	u4370
  3558  0010FE                     u4371:
  3559  0010FE  EFAB  F008         	goto	l3964
  3560  001102                     u4370:
  3561  001102                     
  3562                           ; BSR set to: 0
  3563  001102  BF6B               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3564  001104  EF88  F008         	goto	u4380
  3565  001108  EF86  F008         	goto	u4381
  3566  00110C                     u4381:
  3567  00110C  EFAB  F008         	goto	l3964
  3568  001110                     u4380:
  3569  001110                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3572  001110  0E00               	movlw	low _dbuf
  3573  001112  258C               	addwf	efgtoa@n& (0+255),w,b
  3574  001114  6ED9               	movwf	fsr2l,c
  3575  001116  0E01               	movlw	high _dbuf
  3576  001118  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3577  00111A  6EDA               	movwf	fsr2h,c
  3578  00111C  0E2E               	movlw	46
  3579  00111E  6EDF               	movwf	indf2,c
  3580  001120                     
  3581                           ; BSR set to: 0
  3582  001120  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3583  001122  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3584  001124                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3587  001124  0778               	decf	efgtoa@w& (0+255),f,b
  3588  001126  A0D8               	btfss	status,0,c
  3589  001128  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3590  00112A                     
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3593  00112A  0E00               	movlw	0
  3594  00112C  6F69               	movwf	(efgtoa@pp+1)& (0+255),b
  3595  00112E  0E01               	movlw	1
  3596  001130  6F68               	movwf	efgtoa@pp& (0+255),b
  3597  001132  EFAB  F008         	goto	l3964
  3598  001136                     l3956:
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3602  001136  0E00               	movlw	low _dbuf
  3603  001138  258C               	addwf	efgtoa@n& (0+255),w,b
  3604  00113A  6ED9               	movwf	fsr2l,c
  3605  00113C  0E01               	movlw	high _dbuf
  3606  00113E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3607  001140  6EDA               	movwf	fsr2h,c
  3608  001142  0E30               	movlw	48
  3609  001144  6EDF               	movwf	indf2,c
  3610  001146                     
  3611                           ; BSR set to: 0
  3612  001146  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3613  001148  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3614  00114A                     
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3617  00114A  0778               	decf	efgtoa@w& (0+255),f,b
  3618  00114C  A0D8               	btfss	status,0,c
  3619  00114E  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3620  001150                     
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3623  001150  0766               	decf	efgtoa@t& (0+255),f,b
  3624  001152  A0D8               	btfss	status,0,c
  3625  001154  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  3626  001156                     l3964:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3630  001156  5166               	movf	efgtoa@t& (0+255),w,b
  3631  001158  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3632  00115A  A4D8               	btfss	status,2,c
  3633  00115C  EFB2  F008         	goto	u4391
  3634  001160  EFB4  F008         	goto	u4390
  3635  001164                     u4391:
  3636  001164  EF9B  F008         	goto	l3956
  3637  001168                     u4390:
  3638  001168                     
  3639                           ; BSR set to: 0
  3640                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3641  001168  0E00               	movlw	low _dbuf
  3642  00116A  258C               	addwf	efgtoa@n& (0+255),w,b
  3643  00116C  6ED9               	movwf	fsr2l,c
  3644  00116E  0E01               	movlw	high _dbuf
  3645  001170  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3646  001172  6EDA               	movwf	fsr2h,c
  3647  001174  5172               	movf	efgtoa@d& (0+255),w,b
  3648  001176  0F30               	addlw	48
  3649  001178  6EDF               	movwf	indf2,c
  3650  00117A                     
  3651                           ; BSR set to: 0
  3652  00117A  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3653  00117C  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3654  00117E                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3657  00117E  0778               	decf	efgtoa@w& (0+255),f,b
  3658  001180  A0D8               	btfss	status,0,c
  3659  001182  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3660  001184                     l3972:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3664  001184  C07C  F01A         	movff	efgtoa@h,___flsub@b
  3665  001188  C07D  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3666  00118C  C07E  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3667  001190  C07F  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3668  001194  C08E  F005         	movff	efgtoa@u,___flmul@a
  3669  001198  C08F  F006         	movff	efgtoa@u+1,___flmul@a+1
  3670  00119C  C090  F007         	movff	efgtoa@u+2,___flmul@a+2
  3671  0011A0  C091  F008         	movff	efgtoa@u+3,___flmul@a+3
  3672  0011A4  C080  F001         	movff	efgtoa@l,___flmul@b
  3673  0011A8  C081  F002         	movff	efgtoa@l+1,___flmul@b+1
  3674  0011AC  C082  F003         	movff	efgtoa@l+2,___flmul@b+2
  3675  0011B0  C083  F004         	movff	efgtoa@l+3,___flmul@b+3
  3676  0011B4  EC95  F00E         	call	___flmul	;wreg free
  3677  0011B8  C001  F01E         	movff	?___flmul,___flsub@a
  3678  0011BC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3679  0011C0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3680  0011C4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3681  0011C8  EC00  F01F         	call	___flsub	;wreg free
  3682  0011CC  C01A  F07C         	movff	?___flsub,efgtoa@h
  3683  0011D0  C01B  F07D         	movff	?___flsub+1,efgtoa@h+1
  3684  0011D4  C01C  F07E         	movff	?___flsub+2,efgtoa@h+2
  3685  0011D8  C01D  F07F         	movff	?___flsub+3,efgtoa@h+3
  3686  0011DC                     
  3687                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3688  0011DC  C08E  F01A         	movff	efgtoa@u,___fldiv@b
  3689  0011E0  C08F  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3690  0011E4  C090  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3691  0011E8  C091  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3692  0011EC  0E00               	movlw	0
  3693  0011EE  6E1E               	movwf	___fldiv@a^0,c
  3694  0011F0  0E00               	movlw	0
  3695  0011F2  6E1F               	movwf	(___fldiv@a+1)^0,c
  3696  0011F4  0E20               	movlw	32
  3697  0011F6  6E20               	movwf	(___fldiv@a+2)^0,c
  3698  0011F8  0E41               	movlw	65
  3699  0011FA  6E21               	movwf	(___fldiv@a+3)^0,c
  3700  0011FC  ECAA  F010         	call	___fldiv	;wreg free
  3701  001200  C01A  F08E         	movff	?___fldiv,efgtoa@u
  3702  001204  C01B  F08F         	movff	?___fldiv+1,efgtoa@u+1
  3703  001208  C01C  F090         	movff	?___fldiv+2,efgtoa@u+2
  3704  00120C  C01D  F091         	movff	?___fldiv+3,efgtoa@u+3
  3705  001210                     
  3706                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3707  001210  0100               	movlb	0	; () banked
  3708  001212  076A               	decf	efgtoa@ne& (0+255),f,b
  3709  001214  A0D8               	btfss	status,0,c
  3710  001216  076B               	decf	(efgtoa@ne+1)& (0+255),f,b
  3711  001218                     
  3712                           ; BSR set to: 0
  3713                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3714  001218  4B84               	infsnz	efgtoa@i& (0+255),f,b
  3715  00121A  2B85               	incf	(efgtoa@i+1)& (0+255),f,b
  3716  00121C                     l3980:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3720  00121C  516C               	movf	efgtoa@m& (0+255),w,b
  3721  00121E  5D84               	subwf	efgtoa@i& (0+255),w,b
  3722  001220  5185               	movf	(efgtoa@i+1)& (0+255),w,b
  3723  001222  0A80               	xorlw	128
  3724  001224  6E4E               	movwf	??_efgtoa^0,c
  3725  001226  516D               	movf	(efgtoa@m+1)& (0+255),w,b
  3726  001228  0A80               	xorlw	128
  3727  00122A  584E               	subwfb	??_efgtoa^0,w,c
  3728  00122C  B0D8               	btfsc	status,0,c
  3729  00122E  EF1B  F009         	goto	u4401
  3730  001232  EF1D  F009         	goto	u4400
  3731  001236                     u4401:
  3732  001236  EF2B  F009         	goto	l3984
  3733  00123A                     u4400:
  3734  00123A                     
  3735                           ; BSR set to: 0
  3736  00123A  BF8D               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3737  00123C  EF29  F009         	goto	u4411
  3738  001240  518D               	movf	(efgtoa@n+1)& (0+255),w,b
  3739  001242  E109               	bnz	u4410
  3740  001244  0E4B               	movlw	75
  3741  001246  5D8C               	subwf	efgtoa@n& (0+255),w,b
  3742  001248  A0D8               	btfss	status,0,c
  3743  00124A  EF29  F009         	goto	u4411
  3744  00124E  EF2B  F009         	goto	u4410
  3745  001252                     u4411:
  3746  001252  EF21  F008         	goto	l3932
  3747  001256                     u4410:
  3748  001256                     l3984:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3752  001256  5168               	movf	efgtoa@pp& (0+255),w,b
  3753  001258  1169               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3754  00125A  A4D8               	btfss	status,2,c
  3755  00125C  EF32  F009         	goto	u4421
  3756  001260  EF34  F009         	goto	u4420
  3757  001264                     u4421:
  3758  001264  EF45  F009         	goto	l3992
  3759  001268                     u4420:
  3760  001268                     
  3761                           ; BSR set to: 0
  3762  001268  A9EB               	btfss	_flags& (0+255),4,b
  3763  00126A  EF39  F009         	goto	u4431
  3764  00126E  EF3B  F009         	goto	u4430
  3765  001272                     u4431:
  3766  001272  EF45  F009         	goto	l3992
  3767  001276                     u4430:
  3768  001276                     
  3769                           ; BSR set to: 0
  3770                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3771  001276  0E00               	movlw	low _dbuf
  3772  001278  258C               	addwf	efgtoa@n& (0+255),w,b
  3773  00127A  6ED9               	movwf	fsr2l,c
  3774  00127C  0E01               	movlw	high _dbuf
  3775  00127E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3776  001280  6EDA               	movwf	fsr2h,c
  3777  001282  0E2E               	movlw	46
  3778  001284  6EDF               	movwf	indf2,c
  3779  001286                     
  3780                           ; BSR set to: 0
  3781  001286  4B8C               	infsnz	efgtoa@n& (0+255),f,b
  3782  001288  2B8D               	incf	(efgtoa@n+1)& (0+255),f,b
  3783  00128A                     l3992:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3787  00128A  0E00               	movlw	low _dbuf
  3788  00128C  258C               	addwf	efgtoa@n& (0+255),w,b
  3789  00128E  6ED9               	movwf	fsr2l,c
  3790  001290  0E01               	movlw	high _dbuf
  3791  001292  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3792  001294  6EDA               	movwf	fsr2h,c
  3793  001296  0E00               	movlw	0
  3794  001298  6EDF               	movwf	indf2,c
  3795  00129A                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3798  00129A  0E65               	movlw	101
  3799  00129C  197A               	xorwf	efgtoa@nmode& (0+255),w,b
  3800  00129E  A4D8               	btfss	status,2,c
  3801  0012A0  EF54  F009         	goto	u4441
  3802  0012A4  EF56  F009         	goto	u4440
  3803  0012A8                     u4441:
  3804  0012A8  EFBC  F004         	goto	l3794
  3805  0012AC                     u4440:
  3806  0012AC                     
  3807                           ; BSR set to: 0
  3808                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3809  0012AC  0E00               	movlw	0
  3810  0012AE  6F85               	movwf	(efgtoa@i+1)& (0+255),b
  3811  0012B0  0E4F               	movlw	79
  3812  0012B2  6F84               	movwf	efgtoa@i& (0+255),b
  3813  0012B4                     
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3816  0012B4  0E00               	movlw	low _dbuf
  3817  0012B6  2584               	addwf	efgtoa@i& (0+255),w,b
  3818  0012B8  6ED9               	movwf	fsr2l,c
  3819  0012BA  0E01               	movlw	high _dbuf
  3820  0012BC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3821  0012BE  6EDA               	movwf	fsr2h,c
  3822  0012C0  0E00               	movlw	0
  3823  0012C2  6EDF               	movwf	indf2,c
  3824  0012C4                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3827  0012C4  0E00               	movlw	0
  3828  0012C6  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3829  0012C8  0E00               	movlw	0
  3830  0012CA  6F74               	movwf	efgtoa@sign& (0+255),b
  3831  0012CC                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3834  0012CC  BF8B               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3835  0012CE  EF6D  F009         	goto	u4450
  3836  0012D2  EF6B  F009         	goto	u4451
  3837  0012D6                     u4451:
  3838  0012D6  EF75  F009         	goto	l4008
  3839  0012DA                     u4450:
  3840  0012DA                     
  3841                           ; BSR set to: 0
  3842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3843  0012DA  0E00               	movlw	0
  3844  0012DC  6F75               	movwf	(efgtoa@sign+1)& (0+255),b
  3845  0012DE  0E01               	movlw	1
  3846  0012E0  6F74               	movwf	efgtoa@sign& (0+255),b
  3847  0012E2                     
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3850  0012E2  6D8A               	negf	efgtoa@e& (0+255),b
  3851  0012E4  1F8B               	comf	(efgtoa@e+1)& (0+255),f,b
  3852  0012E6  B0D8               	btfsc	status,0,c
  3853  0012E8  2B8B               	incf	(efgtoa@e+1)& (0+255),f,b
  3854  0012EA                     l4008:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3858  0012EA  0E00               	movlw	0
  3859  0012EC  6F77               	movwf	(efgtoa@p+1)& (0+255),b
  3860  0012EE  0E02               	movlw	2
  3861  0012F0  6F76               	movwf	efgtoa@p& (0+255),b
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3864  0012F2  EFA6  F009         	goto	l4020
  3865  0012F6                     l4010:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3869  0012F6  0784               	decf	efgtoa@i& (0+255),f,b
  3870  0012F8  A0D8               	btfss	status,0,c
  3871  0012FA  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3872  0012FC                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3875  0012FC  0E00               	movlw	low _dbuf
  3876  0012FE  2584               	addwf	efgtoa@i& (0+255),w,b
  3877  001300  6ED9               	movwf	fsr2l,c
  3878  001302  0E01               	movlw	high _dbuf
  3879  001304  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3880  001306  6EDA               	movwf	fsr2h,c
  3881  001308  C08A  F001         	movff	efgtoa@e,___awmod@dividend
  3882  00130C  C08B  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3883  001310  0E00               	movlw	0
  3884  001312  6E04               	movwf	(___awmod@divisor+1)^0,c
  3885  001314  0E0A               	movlw	10
  3886  001316  6E03               	movwf	___awmod@divisor^0,c
  3887  001318  EC0E  F01B         	call	___awmod	;wreg free
  3888  00131C  5001               	movf	?___awmod^0,w,c
  3889  00131E  0F30               	addlw	48
  3890  001320  6EDF               	movwf	indf2,c
  3891  001322                     
  3892                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3893  001322  C08A  F001         	movff	efgtoa@e,___awdiv@dividend
  3894  001326  C08B  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3895  00132A  0E00               	movlw	0
  3896  00132C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3897  00132E  0E0A               	movlw	10
  3898  001330  6E03               	movwf	___awdiv@divisor^0,c
  3899  001332  ECA1  F019         	call	___awdiv	;wreg free
  3900  001336  C001  F08A         	movff	?___awdiv,efgtoa@e
  3901  00133A  C002  F08B         	movff	?___awdiv+1,efgtoa@e+1
  3902  00133E                     
  3903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3904  00133E  0100               	movlb	0	; () banked
  3905  001340  0776               	decf	efgtoa@p& (0+255),f,b
  3906  001342  A0D8               	btfss	status,0,c
  3907  001344  0777               	decf	(efgtoa@p+1)& (0+255),f,b
  3908  001346                     
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3911  001346  0778               	decf	efgtoa@w& (0+255),f,b
  3912  001348  A0D8               	btfss	status,0,c
  3913  00134A  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3914  00134C                     l4020:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3918  00134C  518A               	movf	efgtoa@e& (0+255),w,b
  3919  00134E  118B               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3920  001350  A4D8               	btfss	status,2,c
  3921  001352  EFAD  F009         	goto	u4461
  3922  001356  EFAF  F009         	goto	u4460
  3923  00135A                     u4461:
  3924  00135A  EF7B  F009         	goto	l4010
  3925  00135E                     u4460:
  3926  00135E                     
  3927                           ; BSR set to: 0
  3928  00135E  BF77               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3929  001360  EFBC  F009         	goto	u4470
  3930  001364  5177               	movf	(efgtoa@p+1)& (0+255),w,b
  3931  001366  E106               	bnz	u4471
  3932  001368  0576               	decf	efgtoa@p& (0+255),w,b
  3933  00136A  B0D8               	btfsc	status,0,c
  3934  00136C  EFBA  F009         	goto	u4471
  3935  001370  EFBC  F009         	goto	u4470
  3936  001374                     u4471:
  3937  001374  EF7B  F009         	goto	l4010
  3938  001378                     u4470:
  3939  001378                     
  3940                           ; BSR set to: 0
  3941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3942  001378  0784               	decf	efgtoa@i& (0+255),f,b
  3943  00137A  A0D8               	btfss	status,0,c
  3944  00137C  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3945  00137E                     
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3948  00137E  5174               	movf	efgtoa@sign& (0+255),w,b
  3949  001380  1175               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3950  001382  A4D8               	btfss	status,2,c
  3951  001384  EFC6  F009         	goto	u4481
  3952  001388  EFC8  F009         	goto	u4480
  3953  00138C                     u4481:
  3954  00138C  EFCE  F009         	goto	l4030
  3955  001390                     u4480:
  3956  001390                     
  3957                           ; BSR set to: 0
  3958  001390  0E00               	movlw	0
  3959  001392  6F63               	movwf	(_efgtoa$1494+1)& (0+255),b
  3960  001394  0E2B               	movlw	43
  3961  001396  6F62               	movwf	_efgtoa$1494& (0+255),b
  3962  001398  EFD2  F009         	goto	l4032
  3963  00139C                     l4030:
  3964                           
  3965                           ; BSR set to: 0
  3966  00139C  0E00               	movlw	0
  3967  00139E  6F63               	movwf	(_efgtoa$1494+1)& (0+255),b
  3968  0013A0  0E2D               	movlw	45
  3969  0013A2  6F62               	movwf	_efgtoa$1494& (0+255),b
  3970  0013A4                     l4032:
  3971                           
  3972                           ; BSR set to: 0
  3973  0013A4  0E00               	movlw	low _dbuf
  3974  0013A6  2584               	addwf	efgtoa@i& (0+255),w,b
  3975  0013A8  6ED9               	movwf	fsr2l,c
  3976  0013AA  0E01               	movlw	high _dbuf
  3977  0013AC  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3978  0013AE  6EDA               	movwf	fsr2h,c
  3979  0013B0  C062  FFDF         	movff	_efgtoa$1494,indf2
  3980  0013B4                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  3983  0013B4  0778               	decf	efgtoa@w& (0+255),f,b
  3984  0013B6  A0D8               	btfss	status,0,c
  3985  0013B8  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  3986  0013BA                     
  3987                           ; BSR set to: 0
  3988                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  3989  0013BA  0784               	decf	efgtoa@i& (0+255),f,b
  3990  0013BC  A0D8               	btfss	status,0,c
  3991  0013BE  0785               	decf	(efgtoa@i+1)& (0+255),f,b
  3992  0013C0                     
  3993                           ; BSR set to: 0
  3994  0013C0  0EBF               	movlw	191
  3995  0013C2  6E4E               	movwf	??_efgtoa^0,c
  3996  0013C4  0EFF               	movlw	255
  3997  0013C6  6E4F               	movwf	(??_efgtoa+1)^0,c
  3998  0013C8  504D               	movf	efgtoa@c^0,w,c
  3999  0013CA  6E50               	movwf	(??_efgtoa+2)^0,c
  4000  0013CC  6A51               	clrf	(??_efgtoa+3)^0,c
  4001  0013CE  504E               	movf	??_efgtoa^0,w,c
  4002  0013D0  2650               	addwf	(??_efgtoa+2)^0,f,c
  4003  0013D2  504F               	movf	(??_efgtoa+1)^0,w,c
  4004  0013D4  2251               	addwfc	(??_efgtoa+3)^0,f,c
  4005  0013D6  5051               	movf	(??_efgtoa+3)^0,w,c
  4006  0013D8  E109               	bnz	u4490
  4007  0013DA  0E1A               	movlw	26
  4008  0013DC  5C50               	subwf	(??_efgtoa+2)^0,w,c
  4009  0013DE  A0D8               	btfss	status,0,c
  4010  0013E0  EFF4  F009         	goto	u4491
  4011  0013E4  EFF6  F009         	goto	u4490
  4012  0013E8                     u4491:
  4013  0013E8  EFFC  F009         	goto	l4044
  4014  0013EC                     u4490:
  4015  0013EC                     
  4016                           ; BSR set to: 0
  4017  0013EC  0E00               	movlw	0
  4018  0013EE  6F65               	movwf	(_efgtoa$1495+1)& (0+255),b
  4019  0013F0  0E65               	movlw	101
  4020  0013F2  6F64               	movwf	_efgtoa$1495& (0+255),b
  4021  0013F4  EF00  F00A         	goto	l4046
  4022  0013F8                     l4044:
  4023                           
  4024                           ; BSR set to: 0
  4025  0013F8  0E00               	movlw	0
  4026  0013FA  6F65               	movwf	(_efgtoa$1495+1)& (0+255),b
  4027  0013FC  0E45               	movlw	69
  4028  0013FE  6F64               	movwf	_efgtoa$1495& (0+255),b
  4029  001400                     l4046:
  4030                           
  4031                           ; BSR set to: 0
  4032  001400  0E00               	movlw	low _dbuf
  4033  001402  2584               	addwf	efgtoa@i& (0+255),w,b
  4034  001404  6ED9               	movwf	fsr2l,c
  4035  001406  0E01               	movlw	high _dbuf
  4036  001408  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4037  00140A  6EDA               	movwf	fsr2h,c
  4038  00140C  C064  FFDF         	movff	_efgtoa$1495,indf2
  4039  001410                     
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4042  001410  0778               	decf	efgtoa@w& (0+255),f,b
  4043  001412  A0D8               	btfss	status,0,c
  4044  001414  0779               	decf	(efgtoa@w+1)& (0+255),f,b
  4045  001416                     
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4048  001416  0E00               	movlw	low _dbuf
  4049  001418  258C               	addwf	efgtoa@n& (0+255),w,b
  4050  00141A  6E01               	movwf	strcpy@dest^0,c
  4051  00141C  0E01               	movlw	high _dbuf
  4052  00141E  218D               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4053  001420  6E02               	movwf	(strcpy@dest+1)^0,c
  4054  001422  0E00               	movlw	low _dbuf
  4055  001424  2584               	addwf	efgtoa@i& (0+255),w,b
  4056  001426  6E03               	movwf	strcpy@src^0,c
  4057  001428  0E01               	movlw	high _dbuf
  4058  00142A  2185               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4059  00142C  6E04               	movwf	(strcpy@src+1)^0,c
  4060  00142E  EC12  F01E         	call	_strcpy	;wreg free
  4061  001432  EFBC  F004         	goto	l3794
  4062  001436                     l994:
  4063  001436  0012               	return		;funcret
  4064  001438                     __end_of_efgtoa:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _tolower *****************
  4068 ;; Defined at:
  4069 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  c               2    6[COMRAM] int 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2    6[COMRAM] int 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4083 ;;      Params:         2       0       0       0       0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4085 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4086 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4087 ;;Total ram usage:        6 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 1
  4090 ;; This function calls:
  4091 ;;		_isupper
  4092 ;; This function is called by:
  4093 ;;		_efgtoa
  4094 ;;		_vfpfcnvrt
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text7
  4099  003DBA                     __ptext7:
  4100                           	callstack 0
  4101  003DBA                     _tolower:
  4102                           	callstack 25
  4103  003DBA  0EBF               	movlw	191
  4104  003DBC  6E09               	movwf	??_tolower^0,c
  4105  003DBE  0EFF               	movlw	255
  4106  003DC0  6E0A               	movwf	(??_tolower+1)^0,c
  4107  003DC2  C007  F00B         	movff	tolower@c,??_tolower+2
  4108  003DC6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4109  003DCA  5009               	movf	??_tolower^0,w,c
  4110  003DCC  260B               	addwf	(??_tolower+2)^0,f,c
  4111  003DCE  500A               	movf	(??_tolower+1)^0,w,c
  4112  003DD0  220C               	addwfc	(??_tolower+3)^0,f,c
  4113  003DD2  500C               	movf	(??_tolower+3)^0,w,c
  4114  003DD4  E107               	bnz	u3861
  4115  003DD6  0E1A               	movlw	26
  4116  003DD8  5C0B               	subwf	(??_tolower+2)^0,w,c
  4117  003DDA  B0D8               	btfsc	status,0,c
  4118  003DDC  EFF2  F01E         	goto	u3861
  4119  003DE0  EFF4  F01E         	goto	u3860
  4120  003DE4                     u3861:
  4121  003DE4  EFFB  F01E         	goto	l1210
  4122  003DE8                     u3860:
  4123  003DE8  0E20               	movlw	32
  4124  003DEA  1007               	iorwf	tolower@c^0,w,c
  4125  003DEC  6E07               	movwf	?_tolower^0,c
  4126  003DEE  5008               	movf	(tolower@c+1)^0,w,c
  4127  003DF0  6E08               	movwf	(?_tolower+1)^0,c
  4128  003DF2  EFFF  F01E         	goto	l1213
  4129  003DF6                     l1210:
  4130  003DF6  C007  F007         	movff	tolower@c,?_tolower
  4131  003DFA  C008  F008         	movff	tolower@c+1,?_tolower+1
  4132  003DFE                     l1213:
  4133  003DFE  0012               	return		;funcret
  4134  003E00                     __end_of_tolower:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function _isupper *****************
  4138 ;; Defined at:
  4139 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  c               2    0[COMRAM] int 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;		None
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2    0[COMRAM] int 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4153 ;;      Params:         2       0       0       0       0       0       0       0       0
  4154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4155 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4156 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4157 ;;Total ram usage:        6 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_efgtoa
  4163 ;;		_vfpfcnvrt
  4164 ;;		_tolower
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text8
  4169  003E8A                     __ptext8:
  4170                           	callstack 0
  4171  003E8A                     _isupper:
  4172                           	callstack 25
  4173  003E8A  0EBF               	movlw	191
  4174  003E8C  6E03               	movwf	??_isupper^0,c
  4175  003E8E  0EFF               	movlw	255
  4176  003E90  6E04               	movwf	(??_isupper+1)^0,c
  4177  003E92  C001  F005         	movff	isupper@c,??_isupper+2
  4178  003E96  C002  F006         	movff	isupper@c+1,??_isupper+3
  4179  003E9A  5003               	movf	??_isupper^0,w,c
  4180  003E9C  2605               	addwf	(??_isupper+2)^0,f,c
  4181  003E9E  5004               	movf	(??_isupper+1)^0,w,c
  4182  003EA0  2206               	addwfc	(??_isupper+3)^0,f,c
  4183  003EA2  5006               	movf	(??_isupper+3)^0,w,c
  4184  003EA4  E10A               	bnz	u3010
  4185  003EA6  0E1A               	movlw	26
  4186  003EA8  5C05               	subwf	(??_isupper+2)^0,w,c
  4187  003EAA  A0D8               	btfss	status,0,c
  4188  003EAC  EF5A  F01F         	goto	u3011
  4189  003EB0  EF5D  F01F         	goto	u3010
  4190  003EB4                     u3011:
  4191  003EB4  0E01               	movlw	1
  4192  003EB6  EF5E  F01F         	goto	u3020
  4193  003EBA                     u3010:
  4194  003EBA  0E00               	movlw	0
  4195  003EBC                     u3020:
  4196  003EBC  6E01               	movwf	?_isupper^0,c
  4197  003EBE  6A02               	clrf	(?_isupper+1)^0,c
  4198  003EC0  0012               	return		;funcret
  4199  003EC2                     __end_of_isupper:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _strcpy *****************
  4203 ;; Defined at:
  4204 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4207 ;;		 -> dbuf(80), 
  4208 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4209 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4210 ;;		 -> dbuf(80), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  d               2    8[COMRAM] PTR unsigned char 
  4213 ;;		 -> dbuf(80), 
  4214 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4215 ;;		 -> STR_9(4), STR_8(4), STR_5(4), STR_4(4), 
  4216 ;;		 -> dbuf(80), 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  2    0[COMRAM] PTR unsigned char 
  4219 ;; Registers used:
  4220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4226 ;;      Params:         4       0       0       0       0       0       0       0       0
  4227 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4228 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4229 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4230 ;;Total ram usage:       10 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_efgtoa
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text9
  4240  003C24                     __ptext9:
  4241                           	callstack 0
  4242  003C24                     _strcpy:
  4243                           	callstack 25
  4244  003C24  C003  F007         	movff	strcpy@src,strcpy@s
  4245  003C28  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4246  003C2C  C001  F009         	movff	strcpy@dest,strcpy@d
  4247  003C30  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4248  003C34                     l3678:
  4249  003C34  5007               	movf	strcpy@s^0,w,c
  4250  003C36  6E05               	movwf	??_strcpy^0,c
  4251  003C38  5008               	movf	(strcpy@s+1)^0,w,c
  4252  003C3A  6E06               	movwf	(??_strcpy+1)^0,c
  4253  003C3C  4A07               	infsnz	strcpy@s^0,f,c
  4254  003C3E  2A08               	incf	(strcpy@s+1)^0,f,c
  4255  003C40  C005  FFF6         	movff	??_strcpy,tblptrl
  4256  003C44  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4257  003C48  6AF8               	clrf	tblptru,c
  4258  003C4A  C009  FFD9         	movff	strcpy@d,fsr2l
  4259  003C4E  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4260  003C52  4A09               	infsnz	strcpy@d^0,f,c
  4261  003C54  2A0A               	incf	(strcpy@d+1)^0,f,c
  4262  003C56  0E07               	movlw	(high __ramtop+-1)
  4263  003C58  64F7               	cpfsgt	tblptrh,c
  4264  003C5A  D003               	bra	u3847
  4265  003C5C  0008               	tblrd		*
  4266  003C5E  50F5               	movf	tablat,w,c
  4267  003C60  D005               	bra	u3840
  4268  003C62                     u3847:
  4269  003C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  4270  003C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  4271  003C6A  50E7               	movf	indf1,w,c
  4272  003C6C                     u3840:
  4273  003C6C  6EDF               	movwf	indf2,c
  4274  003C6E  50DF               	movf	indf2,w,c
  4275  003C70  A4D8               	btfss	status,2,c
  4276  003C72  EF3D  F01E         	goto	u3851
  4277  003C76  EF3F  F01E         	goto	u3850
  4278  003C7A                     u3851:
  4279  003C7A  EF1A  F01E         	goto	l3678
  4280  003C7E                     u3850:
  4281  003C7E  0012               	return		;funcret
  4282  003C80                     __end_of_strcpy:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _pad *****************
  4286 ;; Defined at:
  4287 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4290 ;;		 -> sprintf@f(11), 
  4291 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4292 ;;		 -> dbuf(80), 
  4293 ;;  p               2   20[COMRAM] int 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  w               2   25[COMRAM] int 
  4296 ;;  i               2   23[COMRAM] int 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  2   16[COMRAM] int 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4306 ;;      Params:         6       0       0       0       0       0       0       0       0
  4307 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4308 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4309 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4310 ;;Total ram usage:       11 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 3
  4313 ;; This function calls:
  4314 ;;		_fputc
  4315 ;;		_fputs
  4316 ;;		_strlen
  4317 ;; This function is called by:
  4318 ;;		_efgtoa
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text10
  4323  00327C                     __ptext10:
  4324                           	callstack 0
  4325  00327C                     _pad:
  4326                           	callstack 22
  4327  00327C                     
  4328                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4329  00327C  0100               	movlb	0	; () banked
  4330  00327E  A1EB               	btfss	_flags& (0+255),0,b
  4331  003280  EF44  F019         	goto	u3731
  4332  003284  EF46  F019         	goto	u3730
  4333  003288                     u3731:
  4334  003288  EF50  F019         	goto	l3636
  4335  00328C                     u3730:
  4336  00328C                     
  4337                           ; BSR set to: 0
  4338                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4339  00328C  C013  F00A         	movff	pad@buf,fputs@s
  4340  003290  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4341  003294  C011  F00C         	movff	pad@fp,fputs@fp
  4342  003298  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4343  00329C  EC23  F01F         	call	_fputs	;wreg free
  4344  0032A0                     l3636:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4347  0032A0  BE16               	btfsc	(pad@p+1)^0,7,c
  4348  0032A2  EF55  F019         	goto	u3741
  4349  0032A6  EF57  F019         	goto	u3740
  4350  0032AA                     u3741:
  4351  0032AA  EF5D  F019         	goto	l3640
  4352  0032AE                     u3740:
  4353  0032AE  C015  F01A         	movff	pad@p,pad@w
  4354  0032B2  C016  F01B         	movff	pad@p+1,pad@w+1
  4355  0032B6  EF61  F019         	goto	l973
  4356  0032BA                     l3640:
  4357  0032BA  0E00               	movlw	0
  4358  0032BC  6E1B               	movwf	(pad@w+1)^0,c
  4359  0032BE  0E00               	movlw	0
  4360  0032C0  6E1A               	movwf	pad@w^0,c
  4361  0032C2                     l973:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4364  0032C2  0E00               	movlw	0
  4365  0032C4  6E19               	movwf	(pad@i+1)^0,c
  4366  0032C6  0E00               	movlw	0
  4367  0032C8  6E18               	movwf	pad@i^0,c
  4368                           
  4369                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4370  0032CA  EF73  F019         	goto	l3646
  4371  0032CE                     l3642:
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4374  0032CE  0E00               	movlw	0
  4375  0032D0  6E02               	movwf	(fputc@c+1)^0,c
  4376  0032D2  0E20               	movlw	32
  4377  0032D4  6E01               	movwf	fputc@c^0,c
  4378  0032D6  C011  F003         	movff	pad@fp,fputc@fp
  4379  0032DA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4380  0032DE  ECD9  F018         	call	_fputc	;wreg free
  4381  0032E2                     
  4382                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4383  0032E2  4A18               	infsnz	pad@i^0,f,c
  4384  0032E4  2A19               	incf	(pad@i+1)^0,f,c
  4385  0032E6                     l3646:
  4386                           
  4387                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4388  0032E6  501A               	movf	pad@w^0,w,c
  4389  0032E8  5C18               	subwf	pad@i^0,w,c
  4390  0032EA  5019               	movf	(pad@i+1)^0,w,c
  4391  0032EC  0A80               	xorlw	128
  4392  0032EE  6E17               	movwf	??_pad^0,c
  4393  0032F0  501B               	movf	(pad@w+1)^0,w,c
  4394  0032F2  0A80               	xorlw	128
  4395  0032F4  5817               	subwfb	??_pad^0,w,c
  4396  0032F6  A0D8               	btfss	status,0,c
  4397  0032F8  EF80  F019         	goto	u3751
  4398  0032FC  EF82  F019         	goto	u3750
  4399  003300                     u3751:
  4400  003300  EF67  F019         	goto	l3642
  4401  003304                     u3750:
  4402  003304                     
  4403                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4404  003304  0100               	movlb	0	; () banked
  4405  003306  B1EB               	btfsc	_flags& (0+255),0,b
  4406  003308  EF88  F019         	goto	u3761
  4407  00330C  EF8A  F019         	goto	u3760
  4408  003310                     u3761:
  4409  003310  EF94  F019         	goto	l3650
  4410  003314                     u3760:
  4411  003314                     
  4412                           ; BSR set to: 0
  4413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4414  003314  C013  F00A         	movff	pad@buf,fputs@s
  4415  003318  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4416  00331C  C011  F00C         	movff	pad@fp,fputs@fp
  4417  003320  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4418  003324  EC23  F01F         	call	_fputs	;wreg free
  4419  003328                     l3650:
  4420                           
  4421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4422  003328  C013  F001         	movff	pad@buf,strlen@s
  4423  00332C  C014  F002         	movff	pad@buf+1,strlen@s+1
  4424  003330  EC99  F01F         	call	_strlen	;wreg free
  4425  003334  501A               	movf	pad@w^0,w,c
  4426  003336  2401               	addwf	?_strlen^0,w,c
  4427  003338  6E11               	movwf	?_pad^0,c
  4428  00333A  501B               	movf	(pad@w+1)^0,w,c
  4429  00333C  2002               	addwfc	(?_strlen+1)^0,w,c
  4430  00333E  6E12               	movwf	(?_pad+1)^0,c
  4431  003340  0012               	return		;funcret
  4432  003342                     __end_of_pad:
  4433                           	callstack 0
  4434                           
  4435 ;; *************** function _strlen *****************
  4436 ;; Defined at:
  4437 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4440 ;;		 -> dbuf(80), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4443 ;;		 -> dbuf(80), 
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  2    0[COMRAM] unsigned int 
  4446 ;; Registers used:
  4447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4453 ;;      Params:         2       0       0       0       0       0       0       0       0
  4454 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4456 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4457 ;;Total ram usage:        4 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; This function calls:
  4460 ;;		Nothing
  4461 ;; This function is called by:
  4462 ;;		_pad
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text11
  4467  003F32                     __ptext11:
  4468                           	callstack 0
  4469  003F32                     _strlen:
  4470                           	callstack 24
  4471  003F32  C001  F003         	movff	strlen@s,strlen@a
  4472  003F36  C002  F004         	movff	strlen@s+1,strlen@a+1
  4473  003F3A  EFA1  F01F         	goto	l3172
  4474  003F3E                     l3170:
  4475  003F3E  4A01               	infsnz	strlen@s^0,f,c
  4476  003F40  2A02               	incf	(strlen@s+1)^0,f,c
  4477  003F42                     l3172:
  4478  003F42  C001  FFD9         	movff	strlen@s,fsr2l
  4479  003F46  C002  FFDA         	movff	strlen@s+1,fsr2h
  4480  003F4A  50DF               	movf	indf2,w,c
  4481  003F4C  A4D8               	btfss	status,2,c
  4482  003F4E  EFAB  F01F         	goto	u3001
  4483  003F52  EFAD  F01F         	goto	u3000
  4484  003F56                     u3001:
  4485  003F56  EF9F  F01F         	goto	l3170
  4486  003F5A                     u3000:
  4487  003F5A  5003               	movf	strlen@a^0,w,c
  4488  003F5C  5C01               	subwf	strlen@s^0,w,c
  4489  003F5E  6E01               	movwf	?_strlen^0,c
  4490  003F60  5004               	movf	(strlen@a+1)^0,w,c
  4491  003F62  5802               	subwfb	(strlen@s+1)^0,w,c
  4492  003F64  6E02               	movwf	(?_strlen+1)^0,c
  4493  003F66  0012               	return		;funcret
  4494  003F68                     __end_of_strlen:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function _fputs *****************
  4498 ;; Defined at:
  4499 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4502 ;;		 -> dbuf(80), 
  4503 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4504 ;;		 -> sprintf@f(11), 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  i               2   14[COMRAM] int 
  4507 ;;  c               1   13[COMRAM] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2    9[COMRAM] int 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4517 ;;      Params:         4       0       0       0       0       0       0       0       0
  4518 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4520 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4521 ;;Total ram usage:        7 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 2
  4524 ;; This function calls:
  4525 ;;		_fputc
  4526 ;; This function is called by:
  4527 ;;		_pad
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text12
  4532  003E46                     __ptext12:
  4533                           	callstack 0
  4534  003E46                     _fputs:
  4535                           	callstack 22
  4536  003E46  0E00               	movlw	0
  4537  003E48  6E10               	movwf	(fputs@i+1)^0,c
  4538  003E4A  0E00               	movlw	0
  4539  003E4C  6E0F               	movwf	fputs@i^0,c
  4540  003E4E  EF34  F01F         	goto	l3166
  4541  003E52                     l3162:
  4542  003E52  C00E  F001         	movff	fputs@c,fputc@c
  4543  003E56  6A02               	clrf	(fputc@c+1)^0,c
  4544  003E58  C00C  F003         	movff	fputs@fp,fputc@fp
  4545  003E5C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4546  003E60  ECD9  F018         	call	_fputc	;wreg free
  4547  003E64  4A0F               	infsnz	fputs@i^0,f,c
  4548  003E66  2A10               	incf	(fputs@i+1)^0,f,c
  4549  003E68                     l3166:
  4550  003E68  500F               	movf	fputs@i^0,w,c
  4551  003E6A  240A               	addwf	fputs@s^0,w,c
  4552  003E6C  6ED9               	movwf	fsr2l,c
  4553  003E6E  5010               	movf	(fputs@i+1)^0,w,c
  4554  003E70  200B               	addwfc	(fputs@s+1)^0,w,c
  4555  003E72  6EDA               	movwf	fsr2h,c
  4556  003E74  50DF               	movf	indf2,w,c
  4557  003E76  6E0E               	movwf	fputs@c^0,c
  4558  003E78  500E               	movf	fputs@c^0,w,c
  4559  003E7A  A4D8               	btfss	status,2,c
  4560  003E7C  EF42  F01F         	goto	u2991
  4561  003E80  EF44  F01F         	goto	u2990
  4562  003E84                     u2991:
  4563  003E84  EF29  F01F         	goto	l3162
  4564  003E88                     u2990:
  4565  003E88  0012               	return		;funcret
  4566  003E8A                     __end_of_fputs:
  4567                           	callstack 0
  4568                           
  4569 ;; *************** function _fputc *****************
  4570 ;; Defined at:
  4571 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  c               2    0[COMRAM] int 
  4574 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4575 ;;		 -> sprintf@f(11), 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  2    0[COMRAM] int 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4587 ;;      Params:         4       0       0       0       0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4589 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4590 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4591 ;;Total ram usage:        9 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; Hardware stack levels required when called: 1
  4594 ;; This function calls:
  4595 ;;		_putch
  4596 ;; This function is called by:
  4597 ;;		_pad
  4598 ;;		_vfpfcnvrt
  4599 ;;		_fputs
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text13
  4604  0031B2                     __ptext13:
  4605                           	callstack 0
  4606  0031B2                     _fputc:
  4607                           	callstack 25
  4608  0031B2  5003               	movf	fputc@fp^0,w,c
  4609  0031B4  1004               	iorwf	(fputc@fp+1)^0,w,c
  4610  0031B6  B4D8               	btfsc	status,2,c
  4611  0031B8  EFE0  F018         	goto	u2561
  4612  0031BC  EFE2  F018         	goto	u2560
  4613  0031C0                     u2561:
  4614  0031C0  EFEB  F018         	goto	l2948
  4615  0031C4                     u2560:
  4616  0031C4  5003               	movf	fputc@fp^0,w,c
  4617  0031C6  1004               	iorwf	(fputc@fp+1)^0,w,c
  4618  0031C8  A4D8               	btfss	status,2,c
  4619  0031CA  EFE9  F018         	goto	u2571
  4620  0031CE  EFEB  F018         	goto	u2570
  4621  0031D2                     u2571:
  4622  0031D2  EFF0  F018         	goto	l2950
  4623  0031D6                     u2570:
  4624  0031D6                     l2948:
  4625  0031D6  5001               	movf	fputc@c^0,w,c
  4626  0031D8  EC52  F020         	call	_putch
  4627  0031DC  EF3D  F019         	goto	l1173
  4628  0031E0                     l2950:
  4629  0031E0  EE20 F009          	lfsr	2,9
  4630  0031E4  5003               	movf	fputc@fp^0,w,c
  4631  0031E6  26D9               	addwf	fsr2l,f,c
  4632  0031E8  5004               	movf	(fputc@fp+1)^0,w,c
  4633  0031EA  22DA               	addwfc	fsr2h,f,c
  4634  0031EC  50DE               	movf	postinc2,w,c
  4635  0031EE  10DE               	iorwf	postinc2,w,c
  4636  0031F0  B4D8               	btfsc	status,2,c
  4637  0031F2  EFFD  F018         	goto	u2581
  4638  0031F6  EFFF  F018         	goto	u2580
  4639  0031FA                     u2581:
  4640  0031FA  EF1A  F019         	goto	l2954
  4641  0031FE                     u2580:
  4642  0031FE  EE20 F009          	lfsr	2,9
  4643  003202  5003               	movf	fputc@fp^0,w,c
  4644  003204  26D9               	addwf	fsr2l,f,c
  4645  003206  5004               	movf	(fputc@fp+1)^0,w,c
  4646  003208  22DA               	addwfc	fsr2h,f,c
  4647  00320A  EE10 F003          	lfsr	1,3
  4648  00320E  5003               	movf	fputc@fp^0,w,c
  4649  003210  26E1               	addwf	fsr1l,f,c
  4650  003212  5004               	movf	(fputc@fp+1)^0,w,c
  4651  003214  22E2               	addwfc	fsr1h,f,c
  4652  003216  50DE               	movf	postinc2,w,c
  4653  003218  5CE6               	subwf	postinc1,w,c
  4654  00321A  50E6               	movf	postinc1,w,c
  4655  00321C  0A80               	xorlw	128
  4656  00321E  6E09               	movwf	(??_fputc+4)^0,c
  4657  003220  50DE               	movf	postinc2,w,c
  4658  003222  0A80               	xorlw	128
  4659  003224  5809               	subwfb	(??_fputc+4)^0,w,c
  4660  003226  B0D8               	btfsc	status,0,c
  4661  003228  EF18  F019         	goto	u2591
  4662  00322C  EF1A  F019         	goto	u2590
  4663  003230                     u2591:
  4664  003230  EF3D  F019         	goto	l1173
  4665  003234                     u2590:
  4666  003234                     l2954:
  4667  003234  EE20 F003          	lfsr	2,3
  4668  003238  5003               	movf	fputc@fp^0,w,c
  4669  00323A  26D9               	addwf	fsr2l,f,c
  4670  00323C  5004               	movf	(fputc@fp+1)^0,w,c
  4671  00323E  22DA               	addwfc	fsr2h,f,c
  4672  003240  CFDE F005          	movff	postinc2,??_fputc
  4673  003244  CFDD F006          	movff	postdec2,??_fputc+1
  4674  003248  C003  FFD9         	movff	fputc@fp,fsr2l
  4675  00324C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4676  003250  CFDE F007          	movff	postinc2,??_fputc+2
  4677  003254  CFDD F008          	movff	postdec2,??_fputc+3
  4678  003258  5005               	movf	??_fputc^0,w,c
  4679  00325A  2407               	addwf	(??_fputc+2)^0,w,c
  4680  00325C  6ED9               	movwf	fsr2l,c
  4681  00325E  5006               	movf	(??_fputc+1)^0,w,c
  4682  003260  2008               	addwfc	(??_fputc+3)^0,w,c
  4683  003262  6EDA               	movwf	fsr2h,c
  4684  003264  C001  FFDF         	movff	fputc@c,indf2
  4685  003268  EE20 F003          	lfsr	2,3
  4686  00326C  5003               	movf	fputc@fp^0,w,c
  4687  00326E  26D9               	addwf	fsr2l,f,c
  4688  003270  5004               	movf	(fputc@fp+1)^0,w,c
  4689  003272  22DA               	addwfc	fsr2h,f,c
  4690  003274  2ADE               	incf	postinc2,f,c
  4691  003276  0E00               	movlw	0
  4692  003278  22DD               	addwfc	postdec2,f,c
  4693  00327A                     l1173:
  4694  00327A  0012               	return		;funcret
  4695  00327C                     __end_of_fputc:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function _putch *****************
  4699 ;; Defined at:
  4700 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  c               1    wreg     unsigned char 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;  c               1    0[COMRAM] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_fputc
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text14
  4728  0040A4                     __ptext14:
  4729                           	callstack 0
  4730  0040A4                     _putch:
  4731                           	callstack 25
  4732  0040A4  0012               	return		;funcret
  4733  0040A6                     __end_of_putch:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _floorf *****************
  4737 ;; Defined at:
  4738 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  x               4   50[COMRAM] float 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  u               4   66[COMRAM] struct .
  4743 ;;  m               4   60[COMRAM] unsigned long 
  4744 ;;  e               2   64[COMRAM] int 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  4   50[COMRAM] float 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4754 ;;      Params:         4       0       0       0       0       0       0       0       0
  4755 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4756 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4757 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4758 ;;Total ram usage:       20 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_efgtoa
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text15
  4768  0024EE                     __ptext15:
  4769                           	callstack 0
  4770  0024EE                     _floorf:
  4771                           	callstack 25
  4772  0024EE  C0DD  F043         	movff	floorf@F526,floorf@u
  4773  0024F2  C0DE  F044         	movff	floorf@F526+1,floorf@u+1
  4774  0024F6  C0DF  F045         	movff	floorf@F526+2,floorf@u+2
  4775  0024FA  C0E0  F046         	movff	floorf@F526+3,floorf@u+3
  4776  0024FE  C033  F043         	movff	floorf@x,floorf@u
  4777  002502  C034  F044         	movff	floorf@x+1,floorf@u+1
  4778  002506  C035  F045         	movff	floorf@x+2,floorf@u+2
  4779  00250A  C036  F046         	movff	floorf@x+3,floorf@u+3
  4780  00250E  0E81               	movlw	129
  4781  002510  6E37               	movwf	??_floorf^0,c
  4782  002512  0EFF               	movlw	255
  4783  002514  6E38               	movwf	(??_floorf+1)^0,c
  4784  002516  C043  F039         	movff	floorf@u,??_floorf+2
  4785  00251A  C044  F03A         	movff	floorf@u+1,??_floorf+3
  4786  00251E  C045  F03B         	movff	floorf@u+2,??_floorf+4
  4787  002522  C046  F03C         	movff	floorf@u+3,??_floorf+5
  4788  002526  0E18               	movlw	24
  4789  002528  EF9B  F012         	goto	u3870
  4790  00252C                     u3875:
  4791  00252C  90D8               	bcf	status,0,c
  4792  00252E  323C               	rrcf	(??_floorf+5)^0,f,c
  4793  002530  323B               	rrcf	(??_floorf+4)^0,f,c
  4794  002532  323A               	rrcf	(??_floorf+3)^0,f,c
  4795  002534  3239               	rrcf	(??_floorf+2)^0,f,c
  4796  002536                     u3870:
  4797  002536  2EE8               	decfsz	wreg,f,c
  4798  002538  EF96  F012         	goto	u3875
  4799  00253C  5039               	movf	(??_floorf+2)^0,w,c
  4800  00253E  2437               	addwf	??_floorf^0,w,c
  4801  002540  6E41               	movwf	floorf@e^0,c
  4802  002542  0E00               	movlw	0
  4803  002544  2038               	addwfc	(??_floorf+1)^0,w,c
  4804  002546  6E42               	movwf	(floorf@e+1)^0,c
  4805  002548  BE42               	btfsc	(floorf@e+1)^0,7,c
  4806  00254A  EFB0  F012         	goto	u3881
  4807  00254E  5042               	movf	(floorf@e+1)^0,w,c
  4808  002550  E109               	bnz	u3880
  4809  002552  0E17               	movlw	23
  4810  002554  5C41               	subwf	floorf@e^0,w,c
  4811  002556  A0D8               	btfss	status,0,c
  4812  002558  EFB0  F012         	goto	u3881
  4813  00255C  EFB2  F012         	goto	u3880
  4814  002560                     u3881:
  4815  002560  EFBC  F012         	goto	l3696
  4816  002564                     u3880:
  4817  002564                     l3694:
  4818  002564  C033  F033         	movff	floorf@x,?_floorf
  4819  002568  C034  F034         	movff	floorf@x+1,?_floorf+1
  4820  00256C  C035  F035         	movff	floorf@x+2,?_floorf+2
  4821  002570  C036  F036         	movff	floorf@x+3,?_floorf+3
  4822  002574  EF7F  F013         	goto	l1134
  4823  002578                     l3696:
  4824  002578  BE42               	btfsc	(floorf@e+1)^0,7,c
  4825  00257A  EFC1  F012         	goto	u3891
  4826  00257E  EFC3  F012         	goto	u3890
  4827  002582                     u3891:
  4828  002582  EF33  F013         	goto	l3706
  4829  002586                     u3890:
  4830  002586  C041  F037         	movff	floorf@e,??_floorf
  4831  00258A  0EFF               	movlw	255
  4832  00258C  6E38               	movwf	(??_floorf+1)^0,c
  4833  00258E  0EFF               	movlw	255
  4834  002590  6E39               	movwf	(??_floorf+2)^0,c
  4835  002592  0E7F               	movlw	127
  4836  002594  6E3A               	movwf	(??_floorf+3)^0,c
  4837  002596  0E00               	movlw	0
  4838  002598  6E3B               	movwf	(??_floorf+4)^0,c
  4839  00259A                     u3905:
  4840  00259A  6637               	tstfsz	??_floorf^0,c
  4841  00259C  EFD2  F012         	goto	u3906
  4842  0025A0  EFDA  F012         	goto	u3907
  4843  0025A4                     u3906:
  4844  0025A4  343B               	rlcf	(??_floorf+4)^0,w,c
  4845  0025A6  323B               	rrcf	(??_floorf+4)^0,f,c
  4846  0025A8  323A               	rrcf	(??_floorf+3)^0,f,c
  4847  0025AA  3239               	rrcf	(??_floorf+2)^0,f,c
  4848  0025AC  3238               	rrcf	(??_floorf+1)^0,f,c
  4849  0025AE  2E37               	decfsz	??_floorf^0,f,c
  4850  0025B0  EFCD  F012         	goto	u3905
  4851  0025B4                     u3907:
  4852  0025B4  C038  F03D         	movff	??_floorf+1,floorf@m
  4853  0025B8  C039  F03E         	movff	??_floorf+2,floorf@m+1
  4854  0025BC  C03A  F03F         	movff	??_floorf+3,floorf@m+2
  4855  0025C0  C03B  F040         	movff	??_floorf+4,floorf@m+3
  4856  0025C4  503D               	movf	floorf@m^0,w,c
  4857  0025C6  1443               	andwf	floorf@u^0,w,c
  4858  0025C8  6E37               	movwf	??_floorf^0,c
  4859  0025CA  503E               	movf	(floorf@m+1)^0,w,c
  4860  0025CC  1444               	andwf	(floorf@u+1)^0,w,c
  4861  0025CE  6E38               	movwf	(??_floorf+1)^0,c
  4862  0025D0  503F               	movf	(floorf@m+2)^0,w,c
  4863  0025D2  1445               	andwf	(floorf@u+2)^0,w,c
  4864  0025D4  6E39               	movwf	(??_floorf+2)^0,c
  4865  0025D6  5040               	movf	(floorf@m+3)^0,w,c
  4866  0025D8  1446               	andwf	(floorf@u+3)^0,w,c
  4867  0025DA  6E3A               	movwf	(??_floorf+3)^0,c
  4868  0025DC  5037               	movf	??_floorf^0,w,c
  4869  0025DE  1038               	iorwf	(??_floorf+1)^0,w,c
  4870  0025E0  1039               	iorwf	(??_floorf+2)^0,w,c
  4871  0025E2  103A               	iorwf	(??_floorf+3)^0,w,c
  4872  0025E4  A4D8               	btfss	status,2,c
  4873  0025E6  EFF7  F012         	goto	u3911
  4874  0025EA  EFF9  F012         	goto	u3910
  4875  0025EE                     u3911:
  4876  0025EE  EFFB  F012         	goto	l3702
  4877  0025F2                     u3910:
  4878  0025F2  EFB2  F012         	goto	l3694
  4879  0025F6                     l3702:
  4880  0025F6  C043  F037         	movff	floorf@u,??_floorf
  4881  0025FA  C044  F038         	movff	floorf@u+1,??_floorf+1
  4882  0025FE  C045  F039         	movff	floorf@u+2,??_floorf+2
  4883  002602  C046  F03A         	movff	floorf@u+3,??_floorf+3
  4884  002606  0E20               	movlw	32
  4885  002608  EF0B  F013         	goto	u3920
  4886  00260C                     u3925:
  4887  00260C  90D8               	bcf	status,0,c
  4888  00260E  323A               	rrcf	(??_floorf+3)^0,f,c
  4889  002610  3239               	rrcf	(??_floorf+2)^0,f,c
  4890  002612  3238               	rrcf	(??_floorf+1)^0,f,c
  4891  002614  3237               	rrcf	??_floorf^0,f,c
  4892  002616                     u3920:
  4893  002616  2EE8               	decfsz	wreg,f,c
  4894  002618  EF06  F013         	goto	u3925
  4895  00261C  5037               	movf	??_floorf^0,w,c
  4896  00261E  1038               	iorwf	(??_floorf+1)^0,w,c
  4897  002620  1039               	iorwf	(??_floorf+2)^0,w,c
  4898  002622  103A               	iorwf	(??_floorf+3)^0,w,c
  4899  002624  B4D8               	btfsc	status,2,c
  4900  002626  EF17  F013         	goto	u3931
  4901  00262A  EF19  F013         	goto	u3930
  4902  00262E                     u3931:
  4903  00262E  EF21  F013         	goto	l1137
  4904  002632                     u3930:
  4905  002632  503D               	movf	floorf@m^0,w,c
  4906  002634  2643               	addwf	floorf@u^0,f,c
  4907  002636  503E               	movf	(floorf@m+1)^0,w,c
  4908  002638  2244               	addwfc	(floorf@u+1)^0,f,c
  4909  00263A  503F               	movf	(floorf@m+2)^0,w,c
  4910  00263C  2245               	addwfc	(floorf@u+2)^0,f,c
  4911  00263E  5040               	movf	(floorf@m+3)^0,w,c
  4912  002640  2246               	addwfc	(floorf@u+3)^0,f,c
  4913  002642                     l1137:
  4914  002642  1C3D               	comf	floorf@m^0,w,c
  4915  002644  6E37               	movwf	??_floorf^0,c
  4916  002646  1C3E               	comf	(floorf@m+1)^0,w,c
  4917  002648  6E38               	movwf	(??_floorf+1)^0,c
  4918  00264A  1C3F               	comf	(floorf@m+2)^0,w,c
  4919  00264C  6E39               	movwf	(??_floorf+2)^0,c
  4920  00264E  1C40               	comf	(floorf@m+3)^0,w,c
  4921  002650  6E3A               	movwf	(??_floorf+3)^0,c
  4922  002652  5037               	movf	??_floorf^0,w,c
  4923  002654  1643               	andwf	floorf@u^0,f,c
  4924  002656  5038               	movf	(??_floorf+1)^0,w,c
  4925  002658  1644               	andwf	(floorf@u+1)^0,f,c
  4926  00265A  5039               	movf	(??_floorf+2)^0,w,c
  4927  00265C  1645               	andwf	(floorf@u+2)^0,f,c
  4928  00265E  503A               	movf	(??_floorf+3)^0,w,c
  4929  002660  1646               	andwf	(floorf@u+3)^0,f,c
  4930  002662  EF77  F013         	goto	l3714
  4931  002666                     l3706:
  4932  002666  C043  F037         	movff	floorf@u,??_floorf
  4933  00266A  C044  F038         	movff	floorf@u+1,??_floorf+1
  4934  00266E  C045  F039         	movff	floorf@u+2,??_floorf+2
  4935  002672  C046  F03A         	movff	floorf@u+3,??_floorf+3
  4936  002676  0E20               	movlw	32
  4937  002678  EF43  F013         	goto	u3940
  4938  00267C                     u3945:
  4939  00267C  90D8               	bcf	status,0,c
  4940  00267E  323A               	rrcf	(??_floorf+3)^0,f,c
  4941  002680  3239               	rrcf	(??_floorf+2)^0,f,c
  4942  002682  3238               	rrcf	(??_floorf+1)^0,f,c
  4943  002684  3237               	rrcf	??_floorf^0,f,c
  4944  002686                     u3940:
  4945  002686  2EE8               	decfsz	wreg,f,c
  4946  002688  EF3E  F013         	goto	u3945
  4947  00268C  5037               	movf	??_floorf^0,w,c
  4948  00268E  1038               	iorwf	(??_floorf+1)^0,w,c
  4949  002690  1039               	iorwf	(??_floorf+2)^0,w,c
  4950  002692  103A               	iorwf	(??_floorf+3)^0,w,c
  4951  002694  A4D8               	btfss	status,2,c
  4952  002696  EF4F  F013         	goto	u3951
  4953  00269A  EF51  F013         	goto	u3950
  4954  00269E                     u3951:
  4955  00269E  EF5B  F013         	goto	l3710
  4956  0026A2                     u3950:
  4957  0026A2  0E00               	movlw	0
  4958  0026A4  6E43               	movwf	floorf@u^0,c
  4959  0026A6  0E00               	movlw	0
  4960  0026A8  6E44               	movwf	(floorf@u+1)^0,c
  4961  0026AA  0E00               	movlw	0
  4962  0026AC  6E45               	movwf	(floorf@u+2)^0,c
  4963  0026AE  0E00               	movlw	0
  4964  0026B0  6E46               	movwf	(floorf@u+3)^0,c
  4965  0026B2  EF77  F013         	goto	l3714
  4966  0026B6                     l3710:
  4967  0026B6  90D8               	bcf	status,0,c
  4968  0026B8  3443               	rlcf	floorf@u^0,w,c
  4969  0026BA  6E37               	movwf	??_floorf^0,c
  4970  0026BC  3444               	rlcf	(floorf@u+1)^0,w,c
  4971  0026BE  6E38               	movwf	(??_floorf+1)^0,c
  4972  0026C0  3445               	rlcf	(floorf@u+2)^0,w,c
  4973  0026C2  6E39               	movwf	(??_floorf+2)^0,c
  4974  0026C4  3446               	rlcf	(floorf@u+3)^0,w,c
  4975  0026C6  6E3A               	movwf	(??_floorf+3)^0,c
  4976  0026C8  5037               	movf	??_floorf^0,w,c
  4977  0026CA  1038               	iorwf	(??_floorf+1)^0,w,c
  4978  0026CC  1039               	iorwf	(??_floorf+2)^0,w,c
  4979  0026CE  103A               	iorwf	(??_floorf+3)^0,w,c
  4980  0026D0  B4D8               	btfsc	status,2,c
  4981  0026D2  EF6D  F013         	goto	u3961
  4982  0026D6  EF6F  F013         	goto	u3960
  4983  0026DA                     u3961:
  4984  0026DA  EF77  F013         	goto	l3714
  4985  0026DE                     u3960:
  4986  0026DE  0E00               	movlw	0
  4987  0026E0  6E43               	movwf	floorf@u^0,c
  4988  0026E2  0E00               	movlw	0
  4989  0026E4  6E44               	movwf	(floorf@u+1)^0,c
  4990  0026E6  0E80               	movlw	128
  4991  0026E8  6E45               	movwf	(floorf@u+2)^0,c
  4992  0026EA  0EBF               	movlw	191
  4993  0026EC  6E46               	movwf	(floorf@u+3)^0,c
  4994  0026EE                     l3714:
  4995  0026EE  C043  F033         	movff	floorf@u,?_floorf
  4996  0026F2  C044  F034         	movff	floorf@u+1,?_floorf+1
  4997  0026F6  C045  F035         	movff	floorf@u+2,?_floorf+2
  4998  0026FA  C046  F036         	movff	floorf@u+3,?_floorf+3
  4999  0026FE                     l1134:
  5000  0026FE  0012               	return		;funcret
  5001  002700                     __end_of_floorf:
  5002                           	callstack 0
  5003                           
  5004 ;; *************** function ___fpclassifyf *****************
  5005 ;; Defined at:
  5006 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  x               4    0[COMRAM] float 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  u               4   10[COMRAM] struct .
  5011 ;;  e               2    8[COMRAM] int 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  2    0[COMRAM] int 
  5014 ;; Registers used:
  5015 ;;		wreg, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5021 ;;      Params:         4       0       0       0       0       0       0       0       0
  5022 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5023 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5024 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5025 ;;Total ram usage:       14 bytes
  5026 ;; Hardware stack levels used: 1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_efgtoa
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text16
  5035  002F0A                     __ptext16:
  5036                           	callstack 0
  5037  002F0A                     ___fpclassifyf:
  5038                           	callstack 25
  5039  002F0A  C0E1  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5040  002F0E  C0E2  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5041  002F12  C0E3  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5042  002F16  C0E4  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5043  002F1A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5044  002F1E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5045  002F22  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5046  002F26  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5047  002F2A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5048  002F2E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5049  002F32  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5050  002F36  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5051  002F3A  0E18               	movlw	24
  5052  002F3C  EFA5  F017         	goto	u3770
  5053  002F40                     u3775:
  5054  002F40  90D8               	bcf	status,0,c
  5055  002F42  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5056  002F44  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5057  002F46  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5058  002F48  3205               	rrcf	??___fpclassifyf^0,f,c
  5059  002F4A                     u3770:
  5060  002F4A  2EE8               	decfsz	wreg,f,c
  5061  002F4C  EFA0  F017         	goto	u3775
  5062  002F50  5005               	movf	??___fpclassifyf^0,w,c
  5063  002F52  6E09               	movwf	___fpclassifyf@e^0,c
  5064  002F54  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5065  002F56  5009               	movf	___fpclassifyf@e^0,w,c
  5066  002F58  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5067  002F5A  A4D8               	btfss	status,2,c
  5068  002F5C  EFB2  F017         	goto	u3781
  5069  002F60  EFB4  F017         	goto	u3780
  5070  002F64                     u3781:
  5071  002F64  EFD4  F017         	goto	l3666
  5072  002F68                     u3780:
  5073  002F68  90D8               	bcf	status,0,c
  5074  002F6A  340B               	rlcf	___fpclassifyf@u^0,w,c
  5075  002F6C  6E05               	movwf	??___fpclassifyf^0,c
  5076  002F6E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5077  002F70  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5078  002F72  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5079  002F74  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5080  002F76  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5081  002F78  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5082  002F7A  5005               	movf	??___fpclassifyf^0,w,c
  5083  002F7C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5084  002F7E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5085  002F80  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5086  002F82  A4D8               	btfss	status,2,c
  5087  002F84  EFC6  F017         	goto	u3791
  5088  002F88  EFC8  F017         	goto	u3790
  5089  002F8C                     u3791:
  5090  002F8C  EFCE  F017         	goto	l3662
  5091  002F90                     u3790:
  5092  002F90  0E00               	movlw	0
  5093  002F92  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5094  002F94  0E02               	movlw	2
  5095  002F96  6E01               	movwf	?___fpclassifyf^0,c
  5096  002F98  EF03  F018         	goto	l1102
  5097  002F9C                     l3662:
  5098  002F9C  0E00               	movlw	0
  5099  002F9E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5100  002FA0  0E03               	movlw	3
  5101  002FA2  6E01               	movwf	?___fpclassifyf^0,c
  5102  002FA4  EF03  F018         	goto	l1102
  5103  002FA8                     l3666:
  5104  002FA8  2809               	incf	___fpclassifyf@e^0,w,c
  5105  002FAA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5106  002FAC  A4D8               	btfss	status,2,c
  5107  002FAE  EFDB  F017         	goto	u3801
  5108  002FB2  EFDD  F017         	goto	u3800
  5109  002FB6                     u3801:
  5110  002FB6  EFFF  F017         	goto	l3672
  5111  002FBA                     u3800:
  5112  002FBA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5113  002FBE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5114  002FC2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5115  002FC6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5116  002FCA  0E09               	movlw	9
  5117  002FCC                     u3815:
  5118  002FCC  90D8               	bcf	status,0,c
  5119  002FCE  3605               	rlcf	??___fpclassifyf^0,f,c
  5120  002FD0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5121  002FD2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5122  002FD4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5123  002FD6  2EE8               	decfsz	wreg,f,c
  5124  002FD8  EFE6  F017         	goto	u3815
  5125  002FDC  5005               	movf	??___fpclassifyf^0,w,c
  5126  002FDE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5127  002FE0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5128  002FE2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5129  002FE4  B4D8               	btfsc	status,2,c
  5130  002FE6  EFF7  F017         	goto	u3821
  5131  002FEA  EFFA  F017         	goto	u3820
  5132  002FEE                     u3821:
  5133  002FEE  0E01               	movlw	1
  5134  002FF0  EFFB  F017         	goto	u3830
  5135  002FF4                     u3820:
  5136  002FF4  0E00               	movlw	0
  5137  002FF6                     u3830:
  5138  002FF6  6E01               	movwf	?___fpclassifyf^0,c
  5139  002FF8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5140  002FFA  EF03  F018         	goto	l1102
  5141  002FFE                     l3672:
  5142  002FFE  0E00               	movlw	0
  5143  003000  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5144  003002  0E04               	movlw	4
  5145  003004  6E01               	movwf	?___fpclassifyf^0,c
  5146  003006                     l1102:
  5147  003006  0012               	return		;funcret
  5148  003008                     __end_of___fpclassifyf:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function ___fltol *****************
  5152 ;; Defined at:
  5153 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  f1              4    0[COMRAM] int 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  exp1            1    9[COMRAM] unsigned char 
  5158 ;;  sign1           1    8[COMRAM] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  4    0[COMRAM] long 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5168 ;;      Params:         4       0       0       0       0       0       0       0       0
  5169 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5170 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5171 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5172 ;;Total ram usage:       10 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_efgtoa
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           	psect	text17
  5182  002D00                     __ptext17:
  5183                           	callstack 0
  5184  002D00                     ___fltol:
  5185                           	callstack 25
  5186  002D00  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5187  002D02  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5188  002D04  6E0A               	movwf	___fltol@exp1^0,c
  5189  002D06  500A               	movf	___fltol@exp1^0,w,c
  5190  002D08  A4D8               	btfss	status,2,c
  5191  002D0A  EF89  F016         	goto	u3661
  5192  002D0E  EF8B  F016         	goto	u3660
  5193  002D12                     u3661:
  5194  002D12  EF95  F016         	goto	l3594
  5195  002D16                     u3660:
  5196  002D16                     l3590:
  5197  002D16  0E00               	movlw	0
  5198  002D18  6E01               	movwf	?___fltol^0,c
  5199  002D1A  0E00               	movlw	0
  5200  002D1C  6E02               	movwf	(?___fltol+1)^0,c
  5201  002D1E  0E00               	movlw	0
  5202  002D20  6E03               	movwf	(?___fltol+2)^0,c
  5203  002D22  0E00               	movlw	0
  5204  002D24  6E04               	movwf	(?___fltol+3)^0,c
  5205  002D26  EF02  F017         	goto	l551
  5206  002D2A                     l3594:
  5207  002D2A  C001  F005         	movff	___fltol@f1,??___fltol
  5208  002D2E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5209  002D32  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5210  002D36  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5211  002D3A  0E20               	movlw	32
  5212  002D3C  EFA5  F016         	goto	u3670
  5213  002D40                     u3675:
  5214  002D40  90D8               	bcf	status,0,c
  5215  002D42  3208               	rrcf	(??___fltol+3)^0,f,c
  5216  002D44  3207               	rrcf	(??___fltol+2)^0,f,c
  5217  002D46  3206               	rrcf	(??___fltol+1)^0,f,c
  5218  002D48  3205               	rrcf	??___fltol^0,f,c
  5219  002D4A                     u3670:
  5220  002D4A  2EE8               	decfsz	wreg,f,c
  5221  002D4C  EFA0  F016         	goto	u3675
  5222  002D50  5005               	movf	??___fltol^0,w,c
  5223  002D52  6E09               	movwf	___fltol@sign1^0,c
  5224  002D54  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5225  002D56  0EFF               	movlw	255
  5226  002D58  1601               	andwf	___fltol@f1^0,f,c
  5227  002D5A  0EFF               	movlw	255
  5228  002D5C  1602               	andwf	(___fltol@f1+1)^0,f,c
  5229  002D5E  0EFF               	movlw	255
  5230  002D60  1603               	andwf	(___fltol@f1+2)^0,f,c
  5231  002D62  0E00               	movlw	0
  5232  002D64  1604               	andwf	(___fltol@f1+3)^0,f,c
  5233  002D66  0E96               	movlw	150
  5234  002D68  5E0A               	subwf	___fltol@exp1^0,f,c
  5235  002D6A  BE0A               	btfsc	___fltol@exp1^0,7,c
  5236  002D6C  EFBC  F016         	goto	u3680
  5237  002D70  EFBA  F016         	goto	u3681
  5238  002D74                     u3681:
  5239  002D74  EFD2  F016         	goto	l3614
  5240  002D78                     u3680:
  5241  002D78  500A               	movf	___fltol@exp1^0,w,c
  5242  002D7A  0A80               	xorlw	128
  5243  002D7C  0F97               	addlw	151
  5244  002D7E  B0D8               	btfsc	status,0,c
  5245  002D80  EFC4  F016         	goto	u3691
  5246  002D84  EFC6  F016         	goto	u3690
  5247  002D88                     u3691:
  5248  002D88  EFC8  F016         	goto	l3610
  5249  002D8C                     u3690:
  5250  002D8C  EF8B  F016         	goto	l3590
  5251  002D90                     l3610:
  5252  002D90  90D8               	bcf	status,0,c
  5253  002D92  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5254  002D94  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5255  002D96  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5256  002D98  3201               	rrcf	___fltol@f1^0,f,c
  5257  002D9A  3E0A               	incfsz	___fltol@exp1^0,f,c
  5258  002D9C  EFC8  F016         	goto	l3610
  5259  002DA0  EFEA  F016         	goto	l3624
  5260  002DA4                     l3614:
  5261  002DA4  0E1F               	movlw	31
  5262  002DA6  640A               	cpfsgt	___fltol@exp1^0,c
  5263  002DA8  EFD8  F016         	goto	u3701
  5264  002DAC  EFDA  F016         	goto	u3700
  5265  002DB0                     u3701:
  5266  002DB0  EFE2  F016         	goto	l3622
  5267  002DB4                     u3700:
  5268  002DB4  EF8B  F016         	goto	l3590
  5269  002DB8                     l3620:
  5270  002DB8  90D8               	bcf	status,0,c
  5271  002DBA  3601               	rlcf	___fltol@f1^0,f,c
  5272  002DBC  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5273  002DBE  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5274  002DC0  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5275  002DC2  060A               	decf	___fltol@exp1^0,f,c
  5276  002DC4                     l3622:
  5277  002DC4  500A               	movf	___fltol@exp1^0,w,c
  5278  002DC6  A4D8               	btfss	status,2,c
  5279  002DC8  EFE8  F016         	goto	u3711
  5280  002DCC  EFEA  F016         	goto	u3710
  5281  002DD0                     u3711:
  5282  002DD0  EFDC  F016         	goto	l3620
  5283  002DD4                     u3710:
  5284  002DD4                     l3624:
  5285  002DD4  5009               	movf	___fltol@sign1^0,w,c
  5286  002DD6  B4D8               	btfsc	status,2,c
  5287  002DD8  EFF0  F016         	goto	u3721
  5288  002DDC  EFF2  F016         	goto	u3720
  5289  002DE0                     u3721:
  5290  002DE0  EFFA  F016         	goto	l3628
  5291  002DE4                     u3720:
  5292  002DE4  1E04               	comf	(___fltol@f1+3)^0,f,c
  5293  002DE6  1E03               	comf	(___fltol@f1+2)^0,f,c
  5294  002DE8  1E02               	comf	(___fltol@f1+1)^0,f,c
  5295  002DEA  6C01               	negf	___fltol@f1^0,c
  5296  002DEC  0E00               	movlw	0
  5297  002DEE  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5298  002DF0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5299  002DF2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5300  002DF4                     l3628:
  5301  002DF4  C001  F001         	movff	___fltol@f1,?___fltol
  5302  002DF8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5303  002DFC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5304  002E00  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5305  002E04                     l551:
  5306  002E04  0012               	return		;funcret
  5307  002E06                     __end_of___fltol:
  5308                           	callstack 0
  5309                           
  5310 ;; *************** function ___flsub *****************
  5311 ;; Defined at:
  5312 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;  b               4   25[COMRAM] long 
  5315 ;;  a               4   29[COMRAM] long 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  4   25[COMRAM] long 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5327 ;;      Params:         8       0       0       0       0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5330 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5331 ;;Total ram usage:        8 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; Hardware stack levels required when called: 1
  5334 ;; This function calls:
  5335 ;;		___fladd
  5336 ;; This function is called by:
  5337 ;;		_efgtoa
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text18
  5342  003E00                     __ptext18:
  5343                           	callstack 0
  5344  003E00                     ___flsub:
  5345                           	callstack 24
  5346  003E00  0E00               	movlw	0
  5347  003E02  1A1E               	xorwf	___flsub@a^0,f,c
  5348  003E04  0E00               	movlw	0
  5349  003E06  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5350  003E08  0E00               	movlw	0
  5351  003E0A  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5352  003E0C  0E80               	movlw	128
  5353  003E0E  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5354  003E10  C01A  F001         	movff	___flsub@b,___fladd@b
  5355  003E14  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5356  003E18  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5357  003E1C  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5358  003E20  C01E  F005         	movff	___flsub@a,___fladd@a
  5359  003E24  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5360  003E28  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5361  003E2C  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5362  003E30  EC1C  F00A         	call	___fladd	;wreg free
  5363  003E34  C001  F01A         	movff	?___fladd,?___flsub
  5364  003E38  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5365  003E3C  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5366  003E40  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5367  003E44  0012               	return		;funcret
  5368  003E46                     __end_of___flsub:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function ___fladd *****************
  5372 ;; Defined at:
  5373 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  b               4    0[COMRAM] long 
  5376 ;;  a               4    4[COMRAM] long 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  grs             1   15[COMRAM] unsigned char 
  5379 ;;  bexp            1   14[COMRAM] unsigned char 
  5380 ;;  aexp            1   13[COMRAM] unsigned char 
  5381 ;;  signs           1   12[COMRAM] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  4    0[COMRAM] unsigned char 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5391 ;;      Params:         8       0       0       0       0       0       0       0       0
  5392 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5393 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5394 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5395 ;;Total ram usage:       16 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		___flsub
  5401 ;;		_efgtoa
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text19
  5406  001438                     __ptext19:
  5407                           	callstack 0
  5408  001438                     ___fladd:
  5409                           	callstack 24
  5410  001438  5004               	movf	(___fladd@b+3)^0,w,c
  5411  00143A  0B80               	andlw	128
  5412  00143C  6E0D               	movwf	___fladd@signs^0,c
  5413  00143E  5004               	movf	(___fladd@b+3)^0,w,c
  5414  001440  2404               	addwf	(___fladd@b+3)^0,w,c
  5415  001442  6E0F               	movwf	___fladd@bexp^0,c
  5416  001444  AE03               	btfss	(___fladd@b+2)^0,7,c
  5417  001446  EF27  F00A         	goto	u2601
  5418  00144A  EF29  F00A         	goto	u2600
  5419  00144E                     u2601:
  5420  00144E  EF2A  F00A         	goto	l2964
  5421  001452                     u2600:
  5422  001452  800F               	bsf	___fladd@bexp^0,0,c
  5423  001454                     l2964:
  5424  001454  500F               	movf	___fladd@bexp^0,w,c
  5425  001456  B4D8               	btfsc	status,2,c
  5426  001458  EF30  F00A         	goto	u2611
  5427  00145C  EF32  F00A         	goto	u2610
  5428  001460                     u2611:
  5429  001460  EF47  F00A         	goto	l2974
  5430  001464                     u2610:
  5431  001464  280F               	incf	___fladd@bexp^0,w,c
  5432  001466  A4D8               	btfss	status,2,c
  5433  001468  EF38  F00A         	goto	u2621
  5434  00146C  EF3A  F00A         	goto	u2620
  5435  001470                     u2621:
  5436  001470  EF42  F00A         	goto	l2970
  5437  001474                     u2620:
  5438  001474  0E00               	movlw	0
  5439  001476  6E01               	movwf	___fladd@b^0,c
  5440  001478  0E00               	movlw	0
  5441  00147A  6E02               	movwf	(___fladd@b+1)^0,c
  5442  00147C  0E00               	movlw	0
  5443  00147E  6E03               	movwf	(___fladd@b+2)^0,c
  5444  001480  0E00               	movlw	0
  5445  001482  6E04               	movwf	(___fladd@b+3)^0,c
  5446  001484                     l2970:
  5447  001484  8E03               	bsf	(___fladd@b+2)^0,7,c
  5448  001486  0E00               	movlw	0
  5449  001488  6E04               	movwf	(___fladd@b+3)^0,c
  5450  00148A  EF4F  F00A         	goto	l2976
  5451  00148E                     l2974:
  5452  00148E  0E00               	movlw	0
  5453  001490  6E01               	movwf	___fladd@b^0,c
  5454  001492  0E00               	movlw	0
  5455  001494  6E02               	movwf	(___fladd@b+1)^0,c
  5456  001496  0E00               	movlw	0
  5457  001498  6E03               	movwf	(___fladd@b+2)^0,c
  5458  00149A  0E00               	movlw	0
  5459  00149C  6E04               	movwf	(___fladd@b+3)^0,c
  5460  00149E                     l2976:
  5461  00149E  5008               	movf	(___fladd@a+3)^0,w,c
  5462  0014A0  0B80               	andlw	128
  5463  0014A2  6E0E               	movwf	___fladd@aexp^0,c
  5464  0014A4  500D               	movf	___fladd@signs^0,w,c
  5465  0014A6  180E               	xorwf	___fladd@aexp^0,w,c
  5466  0014A8  B4D8               	btfsc	status,2,c
  5467  0014AA  EF59  F00A         	goto	u2631
  5468  0014AE  EF5B  F00A         	goto	u2630
  5469  0014B2                     u2631:
  5470  0014B2  EF5C  F00A         	goto	l2982
  5471  0014B6                     u2630:
  5472  0014B6  8C0D               	bsf	___fladd@signs^0,6,c
  5473  0014B8                     l2982:
  5474  0014B8  5008               	movf	(___fladd@a+3)^0,w,c
  5475  0014BA  2408               	addwf	(___fladd@a+3)^0,w,c
  5476  0014BC  6E0E               	movwf	___fladd@aexp^0,c
  5477  0014BE  AE07               	btfss	(___fladd@a+2)^0,7,c
  5478  0014C0  EF64  F00A         	goto	u2641
  5479  0014C4  EF66  F00A         	goto	u2640
  5480  0014C8                     u2641:
  5481  0014C8  EF67  F00A         	goto	l2988
  5482  0014CC                     u2640:
  5483  0014CC  800E               	bsf	___fladd@aexp^0,0,c
  5484  0014CE                     l2988:
  5485  0014CE  500E               	movf	___fladd@aexp^0,w,c
  5486  0014D0  B4D8               	btfsc	status,2,c
  5487  0014D2  EF6D  F00A         	goto	u2651
  5488  0014D6  EF6F  F00A         	goto	u2650
  5489  0014DA                     u2651:
  5490  0014DA  EF84  F00A         	goto	l2998
  5491  0014DE                     u2650:
  5492  0014DE  280E               	incf	___fladd@aexp^0,w,c
  5493  0014E0  A4D8               	btfss	status,2,c
  5494  0014E2  EF75  F00A         	goto	u2661
  5495  0014E6  EF77  F00A         	goto	u2660
  5496  0014EA                     u2661:
  5497  0014EA  EF7F  F00A         	goto	l2994
  5498  0014EE                     u2660:
  5499  0014EE  0E00               	movlw	0
  5500  0014F0  6E05               	movwf	___fladd@a^0,c
  5501  0014F2  0E00               	movlw	0
  5502  0014F4  6E06               	movwf	(___fladd@a+1)^0,c
  5503  0014F6  0E00               	movlw	0
  5504  0014F8  6E07               	movwf	(___fladd@a+2)^0,c
  5505  0014FA  0E00               	movlw	0
  5506  0014FC  6E08               	movwf	(___fladd@a+3)^0,c
  5507  0014FE                     l2994:
  5508  0014FE  8E07               	bsf	(___fladd@a+2)^0,7,c
  5509  001500  0E00               	movlw	0
  5510  001502  6E08               	movwf	(___fladd@a+3)^0,c
  5511  001504  EF8C  F00A         	goto	l3000
  5512  001508                     l2998:
  5513  001508  0E00               	movlw	0
  5514  00150A  6E05               	movwf	___fladd@a^0,c
  5515  00150C  0E00               	movlw	0
  5516  00150E  6E06               	movwf	(___fladd@a+1)^0,c
  5517  001510  0E00               	movlw	0
  5518  001512  6E07               	movwf	(___fladd@a+2)^0,c
  5519  001514  0E00               	movlw	0
  5520  001516  6E08               	movwf	(___fladd@a+3)^0,c
  5521  001518                     l3000:
  5522  001518  500F               	movf	___fladd@bexp^0,w,c
  5523  00151A  5C0E               	subwf	___fladd@aexp^0,w,c
  5524  00151C  B0D8               	btfsc	status,0,c
  5525  00151E  EF93  F00A         	goto	u2671
  5526  001522  EF95  F00A         	goto	u2670
  5527  001526                     u2671:
  5528  001526  EFBC  F00A         	goto	l3036
  5529  00152A                     u2670:
  5530  00152A  AC0D               	btfss	___fladd@signs^0,6,c
  5531  00152C  EF9A  F00A         	goto	u2681
  5532  001530  EF9C  F00A         	goto	u2680
  5533  001534                     u2681:
  5534  001534  EF9E  F00A         	goto	l3006
  5535  001538                     u2680:
  5536  001538  0E80               	movlw	128
  5537  00153A  1A0D               	xorwf	___fladd@signs^0,f,c
  5538  00153C                     l3006:
  5539  00153C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5540  001540  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5541  001544  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5542  001548  C001  F010         	movff	___fladd@b,___fladd@grs
  5543  00154C  C005  F001         	movff	___fladd@a,___fladd@b
  5544  001550  C010  F005         	movff	___fladd@grs,___fladd@a
  5545  001554  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5546  001558  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5547  00155C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5548  001560  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5549  001564  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5550  001568  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5551  00156C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5552  001570  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5553  001574  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5554  001578                     l3036:
  5555  001578  0E00               	movlw	0
  5556  00157A  6E10               	movwf	___fladd@grs^0,c
  5557  00157C  500F               	movf	___fladd@bexp^0,w,c
  5558  00157E  C00E  F009         	movff	___fladd@aexp,??___fladd
  5559  001582  6A0A               	clrf	(??___fladd+1)^0,c
  5560  001584  5E09               	subwf	??___fladd^0,f,c
  5561  001586  0E00               	movlw	0
  5562  001588  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5563  00158A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5564  00158C  EFD1  F00A         	goto	u2691
  5565  001590  500A               	movf	(??___fladd+1)^0,w,c
  5566  001592  E109               	bnz	u2690
  5567  001594  0E1A               	movlw	26
  5568  001596  5C09               	subwf	??___fladd^0,w,c
  5569  001598  A0D8               	btfss	status,0,c
  5570  00159A  EFD1  F00A         	goto	u2691
  5571  00159E  EFD3  F00A         	goto	u2690
  5572  0015A2                     u2691:
  5573  0015A2  EF0A  F00B         	goto	l783
  5574  0015A6                     u2690:
  5575  0015A6  5001               	movf	___fladd@b^0,w,c
  5576  0015A8  1002               	iorwf	(___fladd@b+1)^0,w,c
  5577  0015AA  1003               	iorwf	(___fladd@b+2)^0,w,c
  5578  0015AC  1004               	iorwf	(___fladd@b+3)^0,w,c
  5579  0015AE  A4D8               	btfss	status,2,c
  5580  0015B0  EFDC  F00A         	goto	u2701
  5581  0015B4  EFDF  F00A         	goto	u2700
  5582  0015B8                     u2701:
  5583  0015B8  0E01               	movlw	1
  5584  0015BA  EFE0  F00A         	goto	u2710
  5585  0015BE                     u2700:
  5586  0015BE  0E00               	movlw	0
  5587  0015C0                     u2710:
  5588  0015C0  6E10               	movwf	___fladd@grs^0,c
  5589  0015C2  0E00               	movlw	0
  5590  0015C4  6E01               	movwf	___fladd@b^0,c
  5591  0015C6  0E00               	movlw	0
  5592  0015C8  6E02               	movwf	(___fladd@b+1)^0,c
  5593  0015CA  0E00               	movlw	0
  5594  0015CC  6E03               	movwf	(___fladd@b+2)^0,c
  5595  0015CE  0E00               	movlw	0
  5596  0015D0  6E04               	movwf	(___fladd@b+3)^0,c
  5597  0015D2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5598  0015D6  EF13  F00B         	goto	l782
  5599  0015DA                     l784:
  5600  0015DA  A010               	btfss	___fladd@grs^0,0,c
  5601  0015DC  EFF2  F00A         	goto	u2721
  5602  0015E0  EFF4  F00A         	goto	u2720
  5603  0015E4                     u2721:
  5604  0015E4  EFFA  F00A         	goto	l3048
  5605  0015E8                     u2720:
  5606  0015E8  90D8               	bcf	status,0,c
  5607  0015EA  3010               	rrcf	___fladd@grs^0,w,c
  5608  0015EC  0901               	iorlw	1
  5609  0015EE  6E10               	movwf	___fladd@grs^0,c
  5610  0015F0  EFFC  F00A         	goto	l3050
  5611  0015F4                     l3048:
  5612  0015F4  90D8               	bcf	status,0,c
  5613  0015F6  3210               	rrcf	___fladd@grs^0,f,c
  5614  0015F8                     l3050:
  5615  0015F8  A001               	btfss	___fladd@b^0,0,c
  5616  0015FA  EF01  F00B         	goto	u2731
  5617  0015FE  EF03  F00B         	goto	u2730
  5618  001602                     u2731:
  5619  001602  EF04  F00B         	goto	l3054
  5620  001606                     u2730:
  5621  001606  8E10               	bsf	___fladd@grs^0,7,c
  5622  001608                     l3054:
  5623  001608  3404               	rlcf	(___fladd@b+3)^0,w,c
  5624  00160A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5625  00160C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5626  00160E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5627  001610  3201               	rrcf	___fladd@b^0,f,c
  5628  001612  2A0F               	incf	___fladd@bexp^0,f,c
  5629  001614                     l783:
  5630  001614  500E               	movf	___fladd@aexp^0,w,c
  5631  001616  5C0F               	subwf	___fladd@bexp^0,w,c
  5632  001618  A0D8               	btfss	status,0,c
  5633  00161A  EF11  F00B         	goto	u2741
  5634  00161E  EF13  F00B         	goto	u2740
  5635  001622                     u2741:
  5636  001622  EFED  F00A         	goto	l784
  5637  001626                     u2740:
  5638  001626                     l782:
  5639  001626  BC0D               	btfsc	___fladd@signs^0,6,c
  5640  001628  EF18  F00B         	goto	u2751
  5641  00162C  EF1A  F00B         	goto	u2750
  5642  001630                     u2751:
  5643  001630  EF5A  F00B         	goto	l3082
  5644  001634                     u2750:
  5645  001634  500F               	movf	___fladd@bexp^0,w,c
  5646  001636  A4D8               	btfss	status,2,c
  5647  001638  EF20  F00B         	goto	u2761
  5648  00163C  EF22  F00B         	goto	u2760
  5649  001640                     u2761:
  5650  001640  EF2C  F00B         	goto	l3064
  5651  001644                     u2760:
  5652  001644  0E00               	movlw	0
  5653  001646  6E01               	movwf	?___fladd^0,c
  5654  001648  0E00               	movlw	0
  5655  00164A  6E02               	movwf	(?___fladd+1)^0,c
  5656  00164C  0E00               	movlw	0
  5657  00164E  6E03               	movwf	(?___fladd+2)^0,c
  5658  001650  0E00               	movlw	0
  5659  001652  6E04               	movwf	(?___fladd+3)^0,c
  5660  001654  EF7B  F00C         	goto	l791
  5661  001658                     l3064:
  5662  001658  5005               	movf	___fladd@a^0,w,c
  5663  00165A  2601               	addwf	___fladd@b^0,f,c
  5664  00165C  5006               	movf	(___fladd@a+1)^0,w,c
  5665  00165E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5666  001660  5007               	movf	(___fladd@a+2)^0,w,c
  5667  001662  2203               	addwfc	(___fladd@b+2)^0,f,c
  5668  001664  5008               	movf	(___fladd@a+3)^0,w,c
  5669  001666  2204               	addwfc	(___fladd@b+3)^0,f,c
  5670  001668  A004               	btfss	(___fladd@b+3)^0,0,c
  5671  00166A  EF39  F00B         	goto	u2771
  5672  00166E  EF3B  F00B         	goto	u2770
  5673  001672                     u2771:
  5674  001672  EFE7  F00B         	goto	l3118
  5675  001676                     u2770:
  5676  001676  A010               	btfss	___fladd@grs^0,0,c
  5677  001678  EF40  F00B         	goto	u2781
  5678  00167C  EF42  F00B         	goto	u2780
  5679  001680                     u2781:
  5680  001680  EF48  F00B         	goto	l3072
  5681  001684                     u2780:
  5682  001684  90D8               	bcf	status,0,c
  5683  001686  3010               	rrcf	___fladd@grs^0,w,c
  5684  001688  0901               	iorlw	1
  5685  00168A  6E10               	movwf	___fladd@grs^0,c
  5686  00168C  EF4A  F00B         	goto	l3074
  5687  001690                     l3072:
  5688  001690  90D8               	bcf	status,0,c
  5689  001692  3210               	rrcf	___fladd@grs^0,f,c
  5690  001694                     l3074:
  5691  001694  A001               	btfss	___fladd@b^0,0,c
  5692  001696  EF4F  F00B         	goto	u2791
  5693  00169A  EF51  F00B         	goto	u2790
  5694  00169E                     u2791:
  5695  00169E  EF52  F00B         	goto	l3078
  5696  0016A2                     u2790:
  5697  0016A2  8E10               	bsf	___fladd@grs^0,7,c
  5698  0016A4                     l3078:
  5699  0016A4  3404               	rlcf	(___fladd@b+3)^0,w,c
  5700  0016A6  3204               	rrcf	(___fladd@b+3)^0,f,c
  5701  0016A8  3203               	rrcf	(___fladd@b+2)^0,f,c
  5702  0016AA  3202               	rrcf	(___fladd@b+1)^0,f,c
  5703  0016AC  3201               	rrcf	___fladd@b^0,f,c
  5704  0016AE  2A0F               	incf	___fladd@bexp^0,f,c
  5705  0016B0  EFE7  F00B         	goto	l3118
  5706  0016B4                     l3082:
  5707  0016B4  5005               	movf	___fladd@a^0,w,c
  5708  0016B6  5C01               	subwf	___fladd@b^0,w,c
  5709  0016B8  5006               	movf	(___fladd@a+1)^0,w,c
  5710  0016BA  5802               	subwfb	(___fladd@b+1)^0,w,c
  5711  0016BC  5007               	movf	(___fladd@a+2)^0,w,c
  5712  0016BE  5803               	subwfb	(___fladd@b+2)^0,w,c
  5713  0016C0  5004               	movf	(___fladd@b+3)^0,w,c
  5714  0016C2  0A80               	xorlw	128
  5715  0016C4  6E09               	movwf	??___fladd^0,c
  5716  0016C6  5008               	movf	(___fladd@a+3)^0,w,c
  5717  0016C8  0A80               	xorlw	128
  5718  0016CA  5809               	subwfb	??___fladd^0,w,c
  5719  0016CC  B0D8               	btfsc	status,0,c
  5720  0016CE  EF6B  F00B         	goto	u2801
  5721  0016D2  EF6D  F00B         	goto	u2800
  5722  0016D6                     u2801:
  5723  0016D6  EF98  F00B         	goto	l3092
  5724  0016DA                     u2800:
  5725  0016DA  5001               	movf	___fladd@b^0,w,c
  5726  0016DC  5C05               	subwf	___fladd@a^0,w,c
  5727  0016DE  6E09               	movwf	??___fladd^0,c
  5728  0016E0  5002               	movf	(___fladd@b+1)^0,w,c
  5729  0016E2  5806               	subwfb	(___fladd@a+1)^0,w,c
  5730  0016E4  6E0A               	movwf	(??___fladd+1)^0,c
  5731  0016E6  5003               	movf	(___fladd@b+2)^0,w,c
  5732  0016E8  5807               	subwfb	(___fladd@a+2)^0,w,c
  5733  0016EA  6E0B               	movwf	(??___fladd+2)^0,c
  5734  0016EC  5004               	movf	(___fladd@b+3)^0,w,c
  5735  0016EE  5808               	subwfb	(___fladd@a+3)^0,w,c
  5736  0016F0  6E0C               	movwf	(??___fladd+3)^0,c
  5737  0016F2  0EFF               	movlw	255
  5738  0016F4  2409               	addwf	??___fladd^0,w,c
  5739  0016F6  6E01               	movwf	___fladd@b^0,c
  5740  0016F8  0EFF               	movlw	255
  5741  0016FA  200A               	addwfc	(??___fladd+1)^0,w,c
  5742  0016FC  6E02               	movwf	(___fladd@b+1)^0,c
  5743  0016FE  0EFF               	movlw	255
  5744  001700  200B               	addwfc	(??___fladd+2)^0,w,c
  5745  001702  6E03               	movwf	(___fladd@b+2)^0,c
  5746  001704  0EFF               	movlw	255
  5747  001706  200C               	addwfc	(??___fladd+3)^0,w,c
  5748  001708  6E04               	movwf	(___fladd@b+3)^0,c
  5749  00170A  0E80               	movlw	128
  5750  00170C  1A0D               	xorwf	___fladd@signs^0,f,c
  5751  00170E  6C10               	negf	___fladd@grs^0,c
  5752  001710  5010               	movf	___fladd@grs^0,w,c
  5753  001712  A4D8               	btfss	status,2,c
  5754  001714  EF8E  F00B         	goto	u2811
  5755  001718  EF90  F00B         	goto	u2810
  5756  00171C                     u2811:
  5757  00171C  EFA0  F00B         	goto	l799
  5758  001720                     u2810:
  5759  001720  0E01               	movlw	1
  5760  001722  2601               	addwf	___fladd@b^0,f,c
  5761  001724  0E00               	movlw	0
  5762  001726  2202               	addwfc	(___fladd@b+1)^0,f,c
  5763  001728  2203               	addwfc	(___fladd@b+2)^0,f,c
  5764  00172A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5765  00172C  EFA0  F00B         	goto	l799
  5766  001730                     l3092:
  5767  001730  5005               	movf	___fladd@a^0,w,c
  5768  001732  5E01               	subwf	___fladd@b^0,f,c
  5769  001734  5006               	movf	(___fladd@a+1)^0,w,c
  5770  001736  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5771  001738  5007               	movf	(___fladd@a+2)^0,w,c
  5772  00173A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5773  00173C  5008               	movf	(___fladd@a+3)^0,w,c
  5774  00173E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5775  001740                     l799:
  5776  001740  5001               	movf	___fladd@b^0,w,c
  5777  001742  1002               	iorwf	(___fladd@b+1)^0,w,c
  5778  001744  1003               	iorwf	(___fladd@b+2)^0,w,c
  5779  001746  1004               	iorwf	(___fladd@b+3)^0,w,c
  5780  001748  A4D8               	btfss	status,2,c
  5781  00174A  EFA9  F00B         	goto	u2821
  5782  00174E  EFAB  F00B         	goto	u2820
  5783  001752                     u2821:
  5784  001752  EFE0  F00B         	goto	l3116
  5785  001756                     u2820:
  5786  001756  5010               	movf	___fladd@grs^0,w,c
  5787  001758  A4D8               	btfss	status,2,c
  5788  00175A  EFB1  F00B         	goto	u2831
  5789  00175E  EFB3  F00B         	goto	u2830
  5790  001762                     u2831:
  5791  001762  EFE0  F00B         	goto	l3116
  5792  001766                     u2830:
  5793  001766  0E00               	movlw	0
  5794  001768  6E01               	movwf	?___fladd^0,c
  5795  00176A  0E00               	movlw	0
  5796  00176C  6E02               	movwf	(?___fladd+1)^0,c
  5797  00176E  0E00               	movlw	0
  5798  001770  6E03               	movwf	(?___fladd+2)^0,c
  5799  001772  0E00               	movlw	0
  5800  001774  6E04               	movwf	(?___fladd+3)^0,c
  5801  001776  EF7B  F00C         	goto	l791
  5802  00177A                     l3100:
  5803  00177A  90D8               	bcf	status,0,c
  5804  00177C  3601               	rlcf	___fladd@b^0,f,c
  5805  00177E  3602               	rlcf	(___fladd@b+1)^0,f,c
  5806  001780  3603               	rlcf	(___fladd@b+2)^0,f,c
  5807  001782  3604               	rlcf	(___fladd@b+3)^0,f,c
  5808  001784  AE10               	btfss	___fladd@grs^0,7,c
  5809  001786  EFC7  F00B         	goto	u2841
  5810  00178A  EFC9  F00B         	goto	u2840
  5811  00178E                     u2841:
  5812  00178E  EFCA  F00B         	goto	l3106
  5813  001792                     u2840:
  5814  001792  8001               	bsf	___fladd@b^0,0,c
  5815  001794                     l3106:
  5816  001794  A010               	btfss	___fladd@grs^0,0,c
  5817  001796  EFCF  F00B         	goto	u2851
  5818  00179A  EFD1  F00B         	goto	u2850
  5819  00179E                     u2851:
  5820  00179E  EFD5  F00B         	goto	l3110
  5821  0017A2                     u2850:
  5822  0017A2  80D8               	bsf	status,0,c
  5823  0017A4  3610               	rlcf	___fladd@grs^0,f,c
  5824  0017A6  EFD7  F00B         	goto	l3112
  5825  0017AA                     l3110:
  5826  0017AA  90D8               	bcf	status,0,c
  5827  0017AC  3610               	rlcf	___fladd@grs^0,f,c
  5828  0017AE                     l3112:
  5829  0017AE  500F               	movf	___fladd@bexp^0,w,c
  5830  0017B0  B4D8               	btfsc	status,2,c
  5831  0017B2  EFDD  F00B         	goto	u2861
  5832  0017B6  EFDF  F00B         	goto	u2860
  5833  0017BA                     u2861:
  5834  0017BA  EFE0  F00B         	goto	l3116
  5835  0017BE                     u2860:
  5836  0017BE  060F               	decf	___fladd@bexp^0,f,c
  5837  0017C0                     l3116:
  5838  0017C0  AE03               	btfss	(___fladd@b+2)^0,7,c
  5839  0017C2  EFE5  F00B         	goto	u2871
  5840  0017C6  EFE7  F00B         	goto	u2870
  5841  0017CA                     u2871:
  5842  0017CA  EFBD  F00B         	goto	l3100
  5843  0017CE                     u2870:
  5844  0017CE                     l3118:
  5845  0017CE  0E00               	movlw	0
  5846  0017D0  6E0E               	movwf	___fladd@aexp^0,c
  5847  0017D2  AE10               	btfss	___fladd@grs^0,7,c
  5848  0017D4  EFEE  F00B         	goto	u2881
  5849  0017D8  EFF0  F00B         	goto	u2880
  5850  0017DC                     u2881:
  5851  0017DC  EF08  F00C         	goto	l808
  5852  0017E0                     u2880:
  5853  0017E0  C010  F009         	movff	___fladd@grs,??___fladd
  5854  0017E4  0E7F               	movlw	127
  5855  0017E6  1609               	andwf	??___fladd^0,f,c
  5856  0017E8  B4D8               	btfsc	status,2,c
  5857  0017EA  EFF9  F00B         	goto	u2891
  5858  0017EE  EFFB  F00B         	goto	u2890
  5859  0017F2                     u2891:
  5860  0017F2  EFFF  F00B         	goto	l809
  5861  0017F6                     u2890:
  5862  0017F6                     l3124:
  5863  0017F6  0E01               	movlw	1
  5864  0017F8  6E0E               	movwf	___fladd@aexp^0,c
  5865  0017FA  EF08  F00C         	goto	l808
  5866  0017FE                     l809:
  5867  0017FE  A001               	btfss	___fladd@b^0,0,c
  5868  001800  EF04  F00C         	goto	u2901
  5869  001804  EF06  F00C         	goto	u2900
  5870  001808                     u2901:
  5871  001808  EF08  F00C         	goto	l808
  5872  00180C                     u2900:
  5873  00180C  EFFB  F00B         	goto	l3124
  5874  001810                     l808:
  5875  001810  500E               	movf	___fladd@aexp^0,w,c
  5876  001812  B4D8               	btfsc	status,2,c
  5877  001814  EF0E  F00C         	goto	u2911
  5878  001818  EF10  F00C         	goto	u2910
  5879  00181C                     u2911:
  5880  00181C  EF3B  F00C         	goto	l3136
  5881  001820                     u2910:
  5882  001820  0E01               	movlw	1
  5883  001822  2601               	addwf	___fladd@b^0,f,c
  5884  001824  0E00               	movlw	0
  5885  001826  2202               	addwfc	(___fladd@b+1)^0,f,c
  5886  001828  2203               	addwfc	(___fladd@b+2)^0,f,c
  5887  00182A  2204               	addwfc	(___fladd@b+3)^0,f,c
  5888  00182C  A004               	btfss	(___fladd@b+3)^0,0,c
  5889  00182E  EF1B  F00C         	goto	u2921
  5890  001832  EF1D  F00C         	goto	u2920
  5891  001836                     u2921:
  5892  001836  EF3B  F00C         	goto	l3136
  5893  00183A                     u2920:
  5894  00183A  C001  F009         	movff	___fladd@b,??___fladd
  5895  00183E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5896  001842  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5897  001846  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5898  00184A  340C               	rlcf	(??___fladd+3)^0,w,c
  5899  00184C  320C               	rrcf	(??___fladd+3)^0,f,c
  5900  00184E  320B               	rrcf	(??___fladd+2)^0,f,c
  5901  001850  320A               	rrcf	(??___fladd+1)^0,f,c
  5902  001852  3209               	rrcf	??___fladd^0,f,c
  5903  001854  C009  F001         	movff	??___fladd,___fladd@b
  5904  001858  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5905  00185C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5906  001860  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5907  001864  280F               	incf	___fladd@bexp^0,w,c
  5908  001866  B4D8               	btfsc	status,2,c
  5909  001868  EF38  F00C         	goto	u2931
  5910  00186C  EF3A  F00C         	goto	u2930
  5911  001870                     u2931:
  5912  001870  EF3B  F00C         	goto	l3136
  5913  001874                     u2930:
  5914  001874  2A0F               	incf	___fladd@bexp^0,f,c
  5915  001876                     l3136:
  5916  001876  280F               	incf	___fladd@bexp^0,w,c
  5917  001878  B4D8               	btfsc	status,2,c
  5918  00187A  EF41  F00C         	goto	u2941
  5919  00187E  EF43  F00C         	goto	u2940
  5920  001882                     u2941:
  5921  001882  EF4B  F00C         	goto	l3140
  5922  001886                     u2940:
  5923  001886  500F               	movf	___fladd@bexp^0,w,c
  5924  001888  A4D8               	btfss	status,2,c
  5925  00188A  EF49  F00C         	goto	u2951
  5926  00188E  EF4B  F00C         	goto	u2950
  5927  001892                     u2951:
  5928  001892  EF5D  F00C         	goto	l3144
  5929  001896                     u2950:
  5930  001896                     l3140:
  5931  001896  0E00               	movlw	0
  5932  001898  6E01               	movwf	___fladd@b^0,c
  5933  00189A  0E00               	movlw	0
  5934  00189C  6E02               	movwf	(___fladd@b+1)^0,c
  5935  00189E  0E00               	movlw	0
  5936  0018A0  6E03               	movwf	(___fladd@b+2)^0,c
  5937  0018A2  0E00               	movlw	0
  5938  0018A4  6E04               	movwf	(___fladd@b+3)^0,c
  5939  0018A6  500F               	movf	___fladd@bexp^0,w,c
  5940  0018A8  A4D8               	btfss	status,2,c
  5941  0018AA  EF59  F00C         	goto	u2961
  5942  0018AE  EF5B  F00C         	goto	u2960
  5943  0018B2                     u2961:
  5944  0018B2  EF5D  F00C         	goto	l3144
  5945  0018B6                     u2960:
  5946  0018B6  0E00               	movlw	0
  5947  0018B8  6E0D               	movwf	___fladd@signs^0,c
  5948  0018BA                     l3144:
  5949  0018BA  A00F               	btfss	___fladd@bexp^0,0,c
  5950  0018BC  EF62  F00C         	goto	u2971
  5951  0018C0  EF64  F00C         	goto	u2970
  5952  0018C4                     u2971:
  5953  0018C4  EF67  F00C         	goto	l3148
  5954  0018C8                     u2970:
  5955  0018C8  8E03               	bsf	(___fladd@b+2)^0,7,c
  5956  0018CA  EF68  F00C         	goto	l3150
  5957  0018CE                     l3148:
  5958  0018CE  9E03               	bcf	(___fladd@b+2)^0,7,c
  5959  0018D0                     l3150:
  5960  0018D0  90D8               	bcf	status,0,c
  5961  0018D2  300F               	rrcf	___fladd@bexp^0,w,c
  5962  0018D4  6E04               	movwf	(___fladd@b+3)^0,c
  5963  0018D6  AE0D               	btfss	___fladd@signs^0,7,c
  5964  0018D8  EF70  F00C         	goto	u2981
  5965  0018DC  EF72  F00C         	goto	u2980
  5966  0018E0                     u2981:
  5967  0018E0  EF73  F00C         	goto	l3156
  5968  0018E4                     u2980:
  5969  0018E4  8E04               	bsf	(___fladd@b+3)^0,7,c
  5970  0018E6                     l3156:
  5971  0018E6  C001  F001         	movff	___fladd@b,?___fladd
  5972  0018EA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5973  0018EE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5974  0018F2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5975  0018F6                     l791:
  5976  0018F6  0012               	return		;funcret
  5977  0018F8                     __end_of___fladd:
  5978                           	callstack 0
  5979                           
  5980 ;; *************** function ___flneg *****************
  5981 ;; Defined at:
  5982 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;  f1              4    0[COMRAM] unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  4    0[COMRAM] unsigned char 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5996 ;;      Params:         4       0       0       0       0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5999 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6000 ;;Total ram usage:        4 bytes
  6001 ;; Hardware stack levels used: 1
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_efgtoa
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text20
  6010  003EC2                     __ptext20:
  6011                           	callstack 0
  6012  003EC2                     ___flneg:
  6013                           	callstack 25
  6014  003EC2  5001               	movf	___flneg@f1^0,w,c
  6015  003EC4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6016  003EC6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6017  003EC8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6018  003ECA  B4D8               	btfsc	status,2,c
  6019  003ECC  EF6A  F01F         	goto	u3651
  6020  003ED0  EF6C  F01F         	goto	u3650
  6021  003ED4                     u3651:
  6022  003ED4  EF74  F01F         	goto	l3584
  6023  003ED8                     u3650:
  6024  003ED8  0E00               	movlw	0
  6025  003EDA  1A01               	xorwf	___flneg@f1^0,f,c
  6026  003EDC  0E00               	movlw	0
  6027  003EDE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6028  003EE0  0E00               	movlw	0
  6029  003EE2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6030  003EE4  0E80               	movlw	128
  6031  003EE6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6032  003EE8                     l3584:
  6033  003EE8  C001  F001         	movff	___flneg@f1,?___flneg
  6034  003EEC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6035  003EF0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6036  003EF4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6037  003EF8  0012               	return		;funcret
  6038  003EFA                     __end_of___flneg:
  6039                           	callstack 0
  6040                           
  6041 ;; *************** function ___fleq *****************
  6042 ;; Defined at:
  6043 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6044 ;; Parameters:    Size  Location     Type
  6045 ;;  ff1             4    0[COMRAM] unsigned char 
  6046 ;;  ff2             4    4[COMRAM] unsigned char 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;		None               void
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6058 ;;      Params:         8       0       0       0       0       0       0       0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6060 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6061 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6062 ;;Total ram usage:       12 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_efgtoa
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           	psect	text21
  6072  00377A                     __ptext21:
  6073                           	callstack 0
  6074  00377A                     ___fleq:
  6075                           	callstack 25
  6076  00377A  0E00               	movlw	0
  6077  00377C  1401               	andwf	___fleq@ff1^0,w,c
  6078  00377E  6E09               	movwf	??___fleq^0,c
  6079  003780  0E00               	movlw	0
  6080  003782  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6081  003784  6E0A               	movwf	(??___fleq+1)^0,c
  6082  003786  0E80               	movlw	128
  6083  003788  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6084  00378A  6E0B               	movwf	(??___fleq+2)^0,c
  6085  00378C  0E7F               	movlw	127
  6086  00378E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6087  003790  6E0C               	movwf	(??___fleq+3)^0,c
  6088  003792  5009               	movf	??___fleq^0,w,c
  6089  003794  100A               	iorwf	(??___fleq+1)^0,w,c
  6090  003796  100B               	iorwf	(??___fleq+2)^0,w,c
  6091  003798  100C               	iorwf	(??___fleq+3)^0,w,c
  6092  00379A  A4D8               	btfss	status,2,c
  6093  00379C  EFD2  F01B         	goto	u3571
  6094  0037A0  EFD4  F01B         	goto	u3570
  6095  0037A4                     u3571:
  6096  0037A4  EFDC  F01B         	goto	l3546
  6097  0037A8                     u3570:
  6098  0037A8  0E00               	movlw	0
  6099  0037AA  6E01               	movwf	___fleq@ff1^0,c
  6100  0037AC  0E00               	movlw	0
  6101  0037AE  6E02               	movwf	(___fleq@ff1+1)^0,c
  6102  0037B0  0E00               	movlw	0
  6103  0037B2  6E03               	movwf	(___fleq@ff1+2)^0,c
  6104  0037B4  0E00               	movlw	0
  6105  0037B6  6E04               	movwf	(___fleq@ff1+3)^0,c
  6106  0037B8                     l3546:
  6107  0037B8  0E00               	movlw	0
  6108  0037BA  1405               	andwf	___fleq@ff2^0,w,c
  6109  0037BC  6E09               	movwf	??___fleq^0,c
  6110  0037BE  0E00               	movlw	0
  6111  0037C0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6112  0037C2  6E0A               	movwf	(??___fleq+1)^0,c
  6113  0037C4  0E80               	movlw	128
  6114  0037C6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6115  0037C8  6E0B               	movwf	(??___fleq+2)^0,c
  6116  0037CA  0E7F               	movlw	127
  6117  0037CC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6118  0037CE  6E0C               	movwf	(??___fleq+3)^0,c
  6119  0037D0  5009               	movf	??___fleq^0,w,c
  6120  0037D2  100A               	iorwf	(??___fleq+1)^0,w,c
  6121  0037D4  100B               	iorwf	(??___fleq+2)^0,w,c
  6122  0037D6  100C               	iorwf	(??___fleq+3)^0,w,c
  6123  0037D8  A4D8               	btfss	status,2,c
  6124  0037DA  EFF1  F01B         	goto	u3581
  6125  0037DE  EFF3  F01B         	goto	u3580
  6126  0037E2                     u3581:
  6127  0037E2  EFFB  F01B         	goto	l3550
  6128  0037E6                     u3580:
  6129  0037E6  0E00               	movlw	0
  6130  0037E8  6E05               	movwf	___fleq@ff2^0,c
  6131  0037EA  0E00               	movlw	0
  6132  0037EC  6E06               	movwf	(___fleq@ff2+1)^0,c
  6133  0037EE  0E00               	movlw	0
  6134  0037F0  6E07               	movwf	(___fleq@ff2+2)^0,c
  6135  0037F2  0E00               	movlw	0
  6136  0037F4  6E08               	movwf	(___fleq@ff2+3)^0,c
  6137  0037F6                     l3550:
  6138  0037F6  5005               	movf	___fleq@ff2^0,w,c
  6139  0037F8  1801               	xorwf	___fleq@ff1^0,w,c
  6140  0037FA  E10F               	bnz	u3590
  6141  0037FC  5006               	movf	(___fleq@ff2+1)^0,w,c
  6142  0037FE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6143  003800  E10C               	bnz	u3590
  6144  003802  5007               	movf	(___fleq@ff2+2)^0,w,c
  6145  003804  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6146  003806  E109               	bnz	u3590
  6147  003808  5008               	movf	(___fleq@ff2+3)^0,w,c
  6148  00380A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6149  00380C  B4D8               	btfsc	status,2,c
  6150  00380E  EF0B  F01C         	goto	u3591
  6151  003812  EF0D  F01C         	goto	u3590
  6152  003816                     u3591:
  6153  003816  EF10  F01C         	goto	l3554
  6154  00381A                     u3590:
  6155  00381A  90D8               	bcf	status,0,c
  6156  00381C  EF11  F01C         	goto	l513
  6157  003820                     l3554:
  6158  003820  80D8               	bsf	status,0,c
  6159  003822                     l513:
  6160  003822  0012               	return		;funcret
  6161  003824                     __end_of___fleq:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _atoi *****************
  6165 ;; Defined at:
  6166 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6169 ;;		 -> STR_2(5), 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  n               2   15[COMRAM] int 
  6172 ;;  neg             2   13[COMRAM] int 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  2    7[COMRAM] int 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6182 ;;      Params:         2       0       0       0       0       0       0       0       0
  6183 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6184 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6185 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6186 ;;Total ram usage:       10 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 1
  6189 ;; This function calls:
  6190 ;;		___wmul
  6191 ;;		_isdigit
  6192 ;;		_isspace
  6193 ;; This function is called by:
  6194 ;;		_vfpfcnvrt
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text22
  6199  002A88                     __ptext22:
  6200                           	callstack 0
  6201  002A88                     _atoi:
  6202                           	callstack 25
  6203  002A88  0E00               	movlw	0
  6204  002A8A  6E11               	movwf	(atoi@n+1)^0,c
  6205  002A8C  0E00               	movlw	0
  6206  002A8E  6E10               	movwf	atoi@n^0,c
  6207  002A90  0E00               	movlw	0
  6208  002A92  6E0F               	movwf	(atoi@neg+1)^0,c
  6209  002A94  0E00               	movlw	0
  6210  002A96  6E0E               	movwf	atoi@neg^0,c
  6211  002A98  EF50  F015         	goto	l4062
  6212  002A9C                     l4058:
  6213  002A9C  4A08               	infsnz	atoi@s^0,f,c
  6214  002A9E  2A09               	incf	(atoi@s+1)^0,f,c
  6215  002AA0                     l4062:
  6216  002AA0  C008  FFF6         	movff	atoi@s,tblptrl
  6217  002AA4  C009  FFF7         	movff	atoi@s+1,tblptrh
  6218  002AA8                     	if	0	;tblptru may be non-zero
  6219  002AA8                     	endif
  6220  002AA8                     	if	0	;tblptru may be non-zero
  6221  002AA8                     	endif
  6222  002AA8  0008               	tblrd		*
  6223  002AAA  50F5               	movf	tablat,w,c
  6224  002AAC  0A20               	xorlw	32
  6225  002AAE  B4D8               	btfsc	status,2,c
  6226  002AB0  EF5C  F015         	goto	u4501
  6227  002AB4  EF5E  F015         	goto	u4500
  6228  002AB8                     u4501:
  6229  002AB8  EF4E  F015         	goto	l4058
  6230  002ABC                     u4500:
  6231  002ABC  0EF7               	movlw	247
  6232  002ABE  6E0A               	movwf	??_atoi^0,c
  6233  002AC0  0EFF               	movlw	255
  6234  002AC2  6E0B               	movwf	(??_atoi+1)^0,c
  6235  002AC4  C008  FFF6         	movff	atoi@s,tblptrl
  6236  002AC8  C009  FFF7         	movff	atoi@s+1,tblptrh
  6237  002ACC                     	if	0	;tblptru may be non-zero
  6238  002ACC                     	endif
  6239  002ACC                     	if	0	;tblptru may be non-zero
  6240  002ACC                     	endif
  6241  002ACC  0008               	tblrd		*
  6242  002ACE  50F5               	movf	tablat,w,c
  6243  002AD0  6E0C               	movwf	(??_atoi+2)^0,c
  6244  002AD2  6A0D               	clrf	(??_atoi+3)^0,c
  6245  002AD4  500A               	movf	??_atoi^0,w,c
  6246  002AD6  260C               	addwf	(??_atoi+2)^0,f,c
  6247  002AD8  500B               	movf	(??_atoi+1)^0,w,c
  6248  002ADA  220D               	addwfc	(??_atoi+3)^0,f,c
  6249  002ADC  500D               	movf	(??_atoi+3)^0,w,c
  6250  002ADE  E109               	bnz	u4510
  6251  002AE0  0E05               	movlw	5
  6252  002AE2  5C0C               	subwf	(??_atoi+2)^0,w,c
  6253  002AE4  A0D8               	btfss	status,0,c
  6254  002AE6  EF77  F015         	goto	u4511
  6255  002AEA  EF79  F015         	goto	u4510
  6256  002AEE                     u4511:
  6257  002AEE  EF4E  F015         	goto	l4058
  6258  002AF2                     u4510:
  6259  002AF2  EF83  F015         	goto	l4070
  6260  002AF6                     l4066:
  6261  002AF6  0E00               	movlw	0
  6262  002AF8  6E0F               	movwf	(atoi@neg+1)^0,c
  6263  002AFA  0E01               	movlw	1
  6264  002AFC  6E0E               	movwf	atoi@neg^0,c
  6265  002AFE                     l4068:
  6266  002AFE  4A08               	infsnz	atoi@s^0,f,c
  6267  002B00  2A09               	incf	(atoi@s+1)^0,f,c
  6268  002B02  EFB8  F015         	goto	l4078
  6269  002B06                     l4070:
  6270  002B06  C008  FFF6         	movff	atoi@s,tblptrl
  6271  002B0A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6272  002B0E                     	if	0	;tblptru may be non-zero
  6273  002B0E                     	endif
  6274  002B0E                     	if	0	;tblptru may be non-zero
  6275  002B0E                     	endif
  6276  002B0E  0008               	tblrd		*
  6277  002B10  50F5               	movf	tablat,w,c
  6278  002B12  6E0A               	movwf	??_atoi^0,c
  6279  002B14  6A0B               	clrf	(??_atoi+1)^0,c
  6280                           
  6281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6282                           ; Switch size 1, requested type "simple"
  6283                           ; Number of cases is 1, Range of values is 0 to 0
  6284                           ; switch strategies available:
  6285                           ; Name         Instructions Cycles
  6286                           ; simple_byte            4     3 (average)
  6287                           ;	Chosen strategy is simple_byte
  6288  002B16  500B               	movf	(??_atoi+1)^0,w,c
  6289  002B18  0A00               	xorlw	0	; case 0
  6290  002B1A  B4D8               	btfsc	status,2,c
  6291  002B1C  EF92  F015         	goto	l4670
  6292  002B20  EFB8  F015         	goto	l4078
  6293  002B24                     l4670:
  6294                           
  6295                           ; Switch size 1, requested type "simple"
  6296                           ; Number of cases is 2, Range of values is 43 to 45
  6297                           ; switch strategies available:
  6298                           ; Name         Instructions Cycles
  6299                           ; simple_byte            7     4 (average)
  6300                           ;	Chosen strategy is simple_byte
  6301  002B24  500A               	movf	??_atoi^0,w,c
  6302  002B26  0A2B               	xorlw	43	; case 43
  6303  002B28  B4D8               	btfsc	status,2,c
  6304  002B2A  EF7F  F015         	goto	l4068
  6305  002B2E  0A06               	xorlw	6	; case 45
  6306  002B30  B4D8               	btfsc	status,2,c
  6307  002B32  EF7B  F015         	goto	l4066
  6308  002B36  EFB8  F015         	goto	l4078
  6309  002B3A                     l4072:
  6310  002B3A  C010  F001         	movff	atoi@n,___wmul@multiplier
  6311  002B3E  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6312  002B42  0E00               	movlw	0
  6313  002B44  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6314  002B46  0E0A               	movlw	10
  6315  002B48  6E03               	movwf	___wmul@multiplicand^0,c
  6316  002B4A  ECCE  F01F         	call	___wmul	;wreg free
  6317  002B4E  C008  FFF6         	movff	atoi@s,tblptrl
  6318  002B52  C009  FFF7         	movff	atoi@s+1,tblptrh
  6319  002B56                     	if	0	;tblptru may be non-zero
  6320  002B56                     	endif
  6321  002B56                     	if	0	;tblptru may be non-zero
  6322  002B56                     	endif
  6323  002B56  0008               	tblrd		*
  6324  002B58  50F5               	movf	tablat,w,c
  6325  002B5A  5E01               	subwf	?___wmul^0,f,c
  6326  002B5C  0E00               	movlw	0
  6327  002B5E  5A02               	subwfb	(?___wmul+1)^0,f,c
  6328  002B60  0E30               	movlw	48
  6329  002B62  2401               	addwf	?___wmul^0,w,c
  6330  002B64  6E10               	movwf	atoi@n^0,c
  6331  002B66  0E00               	movlw	0
  6332  002B68  2002               	addwfc	(?___wmul+1)^0,w,c
  6333  002B6A  6E11               	movwf	(atoi@n+1)^0,c
  6334  002B6C  EF7F  F015         	goto	l4068
  6335  002B70                     l4078:
  6336  002B70  0ED0               	movlw	208
  6337  002B72  6E0A               	movwf	??_atoi^0,c
  6338  002B74  0EFF               	movlw	255
  6339  002B76  6E0B               	movwf	(??_atoi+1)^0,c
  6340  002B78  C008  FFF6         	movff	atoi@s,tblptrl
  6341  002B7C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6342  002B80                     	if	0	;tblptru may be non-zero
  6343  002B80                     	endif
  6344  002B80                     	if	0	;tblptru may be non-zero
  6345  002B80                     	endif
  6346  002B80  0008               	tblrd		*
  6347  002B82  50F5               	movf	tablat,w,c
  6348  002B84  6E0C               	movwf	(??_atoi+2)^0,c
  6349  002B86  6A0D               	clrf	(??_atoi+3)^0,c
  6350  002B88  500A               	movf	??_atoi^0,w,c
  6351  002B8A  260C               	addwf	(??_atoi+2)^0,f,c
  6352  002B8C  500B               	movf	(??_atoi+1)^0,w,c
  6353  002B8E  220D               	addwfc	(??_atoi+3)^0,f,c
  6354  002B90  500D               	movf	(??_atoi+3)^0,w,c
  6355  002B92  E109               	bnz	u4520
  6356  002B94  0E0A               	movlw	10
  6357  002B96  5C0C               	subwf	(??_atoi+2)^0,w,c
  6358  002B98  A0D8               	btfss	status,0,c
  6359  002B9A  EFD1  F015         	goto	u4521
  6360  002B9E  EFD3  F015         	goto	u4520
  6361  002BA2                     u4521:
  6362  002BA2  EF9D  F015         	goto	l4072
  6363  002BA6                     u4520:
  6364  002BA6  500E               	movf	atoi@neg^0,w,c
  6365  002BA8  100F               	iorwf	(atoi@neg+1)^0,w,c
  6366  002BAA  A4D8               	btfss	status,2,c
  6367  002BAC  EFDA  F015         	goto	u4531
  6368  002BB0  EFDC  F015         	goto	u4530
  6369  002BB4                     u4531:
  6370  002BB4  EFEA  F015         	goto	l1125
  6371  002BB8                     u4530:
  6372  002BB8  C010  F00A         	movff	atoi@n,??_atoi
  6373  002BBC  C011  F00B         	movff	atoi@n+1,??_atoi+1
  6374  002BC0  1E0A               	comf	??_atoi^0,f,c
  6375  002BC2  1E0B               	comf	(??_atoi+1)^0,f,c
  6376  002BC4  4A0A               	infsnz	??_atoi^0,f,c
  6377  002BC6  2A0B               	incf	(??_atoi+1)^0,f,c
  6378  002BC8  C00A  F008         	movff	??_atoi,?_atoi
  6379  002BCC  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6380  002BD0  EFEE  F015         	goto	l1128
  6381  002BD4                     l1125:
  6382  002BD4  C010  F008         	movff	atoi@n,?_atoi
  6383  002BD8  C011  F009         	movff	atoi@n+1,?_atoi+1
  6384  002BDC                     l1128:
  6385  002BDC  0012               	return		;funcret
  6386  002BDE                     __end_of_atoi:
  6387                           	callstack 0
  6388                           
  6389 ;; *************** function _isspace *****************
  6390 ;; Defined at:
  6391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  c               2    0[COMRAM] int 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  2    0[COMRAM] int 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6405 ;;      Params:         2       0       0       0       0       0       0       0       0
  6406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6407 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6408 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6409 ;;Total ram usage:        7 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_atoi
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text23
  6419  003CD2                     __ptext23:
  6420                           	callstack 0
  6421  003CD2                     _isspace:
  6422                           	callstack 25
  6423  003CD2  0E01               	movlw	1
  6424  003CD4  6E07               	movwf	_isspace$1573^0,c
  6425  003CD6  0E20               	movlw	32
  6426  003CD8  1801               	xorwf	isspace@c^0,w,c
  6427  003CDA  1002               	iorwf	(isspace@c+1)^0,w,c
  6428  003CDC  B4D8               	btfsc	status,2,c
  6429  003CDE  EF73  F01E         	goto	u3991
  6430  003CE2  EF75  F01E         	goto	u3990
  6431  003CE6                     u3991:
  6432  003CE6  EF8E  F01E         	goto	l3730
  6433  003CEA                     u3990:
  6434  003CEA  0EF7               	movlw	247
  6435  003CEC  6E03               	movwf	??_isspace^0,c
  6436  003CEE  0EFF               	movlw	255
  6437  003CF0  6E04               	movwf	(??_isspace+1)^0,c
  6438  003CF2  C001  F005         	movff	isspace@c,??_isspace+2
  6439  003CF6  C002  F006         	movff	isspace@c+1,??_isspace+3
  6440  003CFA  5003               	movf	??_isspace^0,w,c
  6441  003CFC  2605               	addwf	(??_isspace+2)^0,f,c
  6442  003CFE  5004               	movf	(??_isspace+1)^0,w,c
  6443  003D00  2206               	addwfc	(??_isspace+3)^0,f,c
  6444  003D02  5006               	movf	(??_isspace+3)^0,w,c
  6445  003D04  E109               	bnz	u4000
  6446  003D06  0E05               	movlw	5
  6447  003D08  5C05               	subwf	(??_isspace+2)^0,w,c
  6448  003D0A  A0D8               	btfss	status,0,c
  6449  003D0C  EF8A  F01E         	goto	u4001
  6450  003D10  EF8C  F01E         	goto	u4000
  6451  003D14                     u4001:
  6452  003D14  EF8E  F01E         	goto	l3730
  6453  003D18                     u4000:
  6454  003D18  0E00               	movlw	0
  6455  003D1A  6E07               	movwf	_isspace$1573^0,c
  6456  003D1C                     l3730:
  6457  003D1C  C007  F001         	movff	_isspace$1573,?_isspace
  6458  003D20  6A02               	clrf	(?_isspace+1)^0,c
  6459  003D22  0012               	return		;funcret
  6460  003D24                     __end_of_isspace:
  6461                           	callstack 0
  6462                           
  6463 ;; *************** function _isdigit *****************
  6464 ;; Defined at:
  6465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  c               2    0[COMRAM] int 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  2    0[COMRAM] int 
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, status,0
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/0
  6476 ;;		On exit  : 0/0
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6479 ;;      Params:         2       0       0       0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6481 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6482 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6483 ;;Total ram usage:        6 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_vfpfcnvrt
  6489 ;;		_atoi
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text24
  6494  003EFA                     __ptext24:
  6495                           	callstack 0
  6496  003EFA                     _isdigit:
  6497                           	callstack 26
  6498  003EFA  0ED0               	movlw	208
  6499  003EFC  6E03               	movwf	??_isdigit^0,c
  6500  003EFE  0EFF               	movlw	255
  6501  003F00  6E04               	movwf	(??_isdigit+1)^0,c
  6502  003F02  C001  F005         	movff	isdigit@c,??_isdigit+2
  6503  003F06  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6504  003F0A  5003               	movf	??_isdigit^0,w,c
  6505  003F0C  2605               	addwf	(??_isdigit+2)^0,f,c
  6506  003F0E  5004               	movf	(??_isdigit+1)^0,w,c
  6507  003F10  2206               	addwfc	(??_isdigit+3)^0,f,c
  6508  003F12  5006               	movf	(??_isdigit+3)^0,w,c
  6509  003F14  E10A               	bnz	u3970
  6510  003F16  0E0A               	movlw	10
  6511  003F18  5C05               	subwf	(??_isdigit+2)^0,w,c
  6512  003F1A  A0D8               	btfss	status,0,c
  6513  003F1C  EF92  F01F         	goto	u3971
  6514  003F20  EF95  F01F         	goto	u3970
  6515  003F24                     u3971:
  6516  003F24  0E01               	movlw	1
  6517  003F26  EF96  F01F         	goto	u3980
  6518  003F2A                     u3970:
  6519  003F2A  0E00               	movlw	0
  6520  003F2C                     u3980:
  6521  003F2C  6E01               	movwf	?_isdigit^0,c
  6522  003F2E  6A02               	clrf	(?_isdigit+1)^0,c
  6523  003F30  0012               	return		;funcret
  6524  003F32                     __end_of_isdigit:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function ___wmul *****************
  6528 ;; Defined at:
  6529 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  multiplier      2    0[COMRAM] unsigned int 
  6532 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;  product         2    4[COMRAM] unsigned int 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  2    0[COMRAM] unsigned int 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0, prodl, prodh
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6544 ;;      Params:         4       0       0       0       0       0       0       0       0
  6545 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6547 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6548 ;;Total ram usage:        6 bytes
  6549 ;; Hardware stack levels used: 1
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_atoi
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text25
  6558  003F9C                     __ptext25:
  6559                           	callstack 0
  6560  003F9C                     ___wmul:
  6561                           	callstack 25
  6562  003F9C  5001               	movf	___wmul@multiplier^0,w,c
  6563  003F9E  0203               	mulwf	___wmul@multiplicand^0,c
  6564  003FA0  CFF3 F005          	movff	prodl,___wmul@product
  6565  003FA4  CFF4 F006          	movff	prodh,___wmul@product+1
  6566  003FA8  5001               	movf	___wmul@multiplier^0,w,c
  6567  003FAA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6568  003FAC  50F3               	movf	243,w,c
  6569  003FAE  2606               	addwf	(___wmul@product+1)^0,f,c
  6570  003FB0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6571  003FB2  0203               	mulwf	___wmul@multiplicand^0,c
  6572  003FB4  50F3               	movf	243,w,c
  6573  003FB6  2606               	addwf	(___wmul@product+1)^0,f,c
  6574  003FB8  C005  F001         	movff	___wmul@product,?___wmul
  6575  003FBC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6576  003FC0  0012               	return		;funcret
  6577  003FC2                     __end_of___wmul:
  6578                           	callstack 0
  6579                           
  6580 ;; *************** function _LCD_Clear *****************
  6581 ;; Defined at:
  6582 ;;		line 148 in file "./LCD_librery.h"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;		None
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  1    wreg      void 
  6589 ;; Registers used:
  6590 ;;		wreg, status,2, status,0, cstack
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6596 ;;      Params:         0       0       0       0       0       0       0       0       0
  6597 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6599 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6600 ;;Total ram usage:        0 bytes
  6601 ;; Hardware stack levels used: 1
  6602 ;; Hardware stack levels required when called: 2
  6603 ;; This function calls:
  6604 ;;		_LCD_Cmd
  6605 ;; This function is called by:
  6606 ;;		_main
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text26
  6611  00409C                     __ptext26:
  6612                           	callstack 0
  6613  00409C                     _LCD_Clear:
  6614                           	callstack 28
  6615  00409C                     
  6616                           ;./LCD_librery.h: 150:      LCD_Cmd(0x01);
  6617  00409C  0E01               	movlw	1
  6618  00409E  ECB9  F01E         	call	_LCD_Cmd
  6619  0040A2  0012               	return		;funcret
  6620  0040A4                     __end_of_LCD_Clear:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _LCD_Begin *****************
  6624 ;; Defined at:
  6625 ;;		line 110 in file "./LCD_librery.h"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6641 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6642 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6643 ;;Total ram usage:        1 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 2
  6646 ;; This function calls:
  6647 ;;		_LCD_Cmd
  6648 ;; This function is called by:
  6649 ;;		_main
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text27
  6654  0030DE                     __ptext27:
  6655                           	callstack 0
  6656  0030DE                     _LCD_Begin:
  6657                           	callstack 28
  6658  0030DE                     
  6659                           ;./LCD_librery.h: 112:   RS = 0;
  6660  0030DE  0100               	movlb	0	; () banked
  6661  0030E0  91F8               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  6662                           
  6663                           ;./LCD_librery.h: 114:   LATCbits.LC0 = 0;
  6664  0030E2  908B               	bcf	139,0,c	;volatile
  6665                           
  6666                           ;./LCD_librery.h: 115:   LATCbits.LC1 = 0;
  6667  0030E4  928B               	bcf	139,1,c	;volatile
  6668                           
  6669                           ;./LCD_librery.h: 116:   LATDbits.LD4 = 0;
  6670  0030E6  988C               	bcf	140,4,c	;volatile
  6671                           
  6672                           ;./LCD_librery.h: 117:   LATDbits.LD5 = 0;
  6673  0030E8  9A8C               	bcf	140,5,c	;volatile
  6674                           
  6675                           ;./LCD_librery.h: 118:   LATDbits.LD6 = 0;
  6676  0030EA  9C8C               	bcf	140,6,c	;volatile
  6677                           
  6678                           ;./LCD_librery.h: 119:   LATDbits.LD7 = 0;
  6679  0030EC  9E8C               	bcf	140,7,c	;volatile
  6680                           
  6681                           ;./LCD_librery.h: 120:   TRISCbits.RC0 = 0;
  6682  0030EE  9094               	bcf	148,0,c	;volatile
  6683                           
  6684                           ;./LCD_librery.h: 121:   TRISCbits.RC1 = 0;
  6685  0030F0  9294               	bcf	148,1,c	;volatile
  6686                           
  6687                           ;./LCD_librery.h: 122:   TRISDbits.RD4 = 0;
  6688  0030F2  9895               	bcf	149,4,c	;volatile
  6689                           
  6690                           ;./LCD_librery.h: 123:   TRISDbits.RD5 = 0;
  6691  0030F4  9A95               	bcf	149,5,c	;volatile
  6692                           
  6693                           ;./LCD_librery.h: 124:   TRISDbits.RD6 = 0;
  6694  0030F6  9C95               	bcf	149,6,c	;volatile
  6695                           
  6696                           ;./LCD_librery.h: 125:   TRISDbits.RD7 = 0;
  6697  0030F8  9E95               	bcf	149,7,c	;volatile
  6698  0030FA                     
  6699                           ; BSR set to: 0
  6700                           ;./LCD_librery.h: 127:   _delay((unsigned long)((40)*(8000000/4000.0)));
  6701  0030FA  0E68               	movlw	104
  6702  0030FC  6E05               	movwf	??_LCD_Begin^0,c
  6703  0030FE  0EE4               	movlw	228
  6704  003100                     u5147:
  6705  003100  2EE8               	decfsz	wreg,f,c
  6706  003102  D7FE               	bra	u5147
  6707  003104  2E05               	decfsz	??_LCD_Begin^0,f,c
  6708  003106  D7FC               	bra	u5147
  6709  003108  D000               	nop2	
  6710  00310A                     
  6711                           ;./LCD_librery.h: 128:   LCD_Cmd(3);
  6712  00310A  0E03               	movlw	3
  6713  00310C  ECB9  F01E         	call	_LCD_Cmd
  6714  003110                     
  6715                           ;./LCD_librery.h: 129:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6716  003110  0E0D               	movlw	13
  6717  003112  6E05               	movwf	??_LCD_Begin^0,c
  6718  003114  0EFC               	movlw	252
  6719  003116                     u5157:
  6720  003116  2EE8               	decfsz	wreg,f,c
  6721  003118  D7FE               	bra	u5157
  6722  00311A  2E05               	decfsz	??_LCD_Begin^0,f,c
  6723  00311C  D7FC               	bra	u5157
  6724                           
  6725                           ;./LCD_librery.h: 130:   LCD_Cmd(3);
  6726  00311E  0E03               	movlw	3
  6727  003120  ECB9  F01E         	call	_LCD_Cmd
  6728  003124                     
  6729                           ;./LCD_librery.h: 131:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6730  003124  0E0D               	movlw	13
  6731  003126  6E05               	movwf	??_LCD_Begin^0,c
  6732  003128  0EFC               	movlw	252
  6733  00312A                     u5167:
  6734  00312A  2EE8               	decfsz	wreg,f,c
  6735  00312C  D7FE               	bra	u5167
  6736  00312E  2E05               	decfsz	??_LCD_Begin^0,f,c
  6737  003130  D7FC               	bra	u5167
  6738  003132                     
  6739                           ;./LCD_librery.h: 132:   LCD_Cmd(3);
  6740  003132  0E03               	movlw	3
  6741  003134  ECB9  F01E         	call	_LCD_Cmd
  6742                           
  6743                           ;./LCD_librery.h: 133:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6744  003138  0E0D               	movlw	13
  6745  00313A  6E05               	movwf	??_LCD_Begin^0,c
  6746  00313C  0EFC               	movlw	252
  6747  00313E                     u5177:
  6748  00313E  2EE8               	decfsz	wreg,f,c
  6749  003140  D7FE               	bra	u5177
  6750  003142  2E05               	decfsz	??_LCD_Begin^0,f,c
  6751  003144  D7FC               	bra	u5177
  6752  003146                     
  6753                           ;./LCD_librery.h: 134:   LCD_Cmd(0x02);
  6754  003146  0E02               	movlw	2
  6755  003148  ECB9  F01E         	call	_LCD_Cmd
  6756  00314C                     
  6757                           ;./LCD_librery.h: 135:   _delay((unsigned long)((5)*(8000000/4000.0)));
  6758  00314C  0E0D               	movlw	13
  6759  00314E  6E05               	movwf	??_LCD_Begin^0,c
  6760  003150  0EFC               	movlw	252
  6761  003152                     u5187:
  6762  003152  2EE8               	decfsz	wreg,f,c
  6763  003154  D7FE               	bra	u5187
  6764  003156  2E05               	decfsz	??_LCD_Begin^0,f,c
  6765  003158  D7FC               	bra	u5187
  6766                           
  6767                           ;./LCD_librery.h: 136:   LCD_Cmd(0x20 | (2 << 2));
  6768  00315A  0E28               	movlw	40
  6769  00315C  ECB9  F01E         	call	_LCD_Cmd
  6770  003160                     
  6771                           ;./LCD_librery.h: 137:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6772  003160  0E82               	movlw	130
  6773  003162  6E05               	movwf	??_LCD_Begin^0,c
  6774  003164  0EDE               	movlw	222
  6775  003166                     u5197:
  6776  003166  2EE8               	decfsz	wreg,f,c
  6777  003168  D7FE               	bra	u5197
  6778  00316A  2E05               	decfsz	??_LCD_Begin^0,f,c
  6779  00316C  D7FC               	bra	u5197
  6780  00316E                     
  6781                           ;./LCD_librery.h: 138:   LCD_Cmd(0x0C);
  6782  00316E  0E0C               	movlw	12
  6783  003170  ECB9  F01E         	call	_LCD_Cmd
  6784                           
  6785                           ;./LCD_librery.h: 139:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6786  003174  0E82               	movlw	130
  6787  003176  6E05               	movwf	??_LCD_Begin^0,c
  6788  003178  0EDE               	movlw	222
  6789  00317A                     u5207:
  6790  00317A  2EE8               	decfsz	wreg,f,c
  6791  00317C  D7FE               	bra	u5207
  6792  00317E  2E05               	decfsz	??_LCD_Begin^0,f,c
  6793  003180  D7FC               	bra	u5207
  6794  003182                     
  6795                           ;./LCD_librery.h: 140:   LCD_Cmd(0x01);
  6796  003182  0E01               	movlw	1
  6797  003184  ECB9  F01E         	call	_LCD_Cmd
  6798  003188                     
  6799                           ;./LCD_librery.h: 141:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6800  003188  0E82               	movlw	130
  6801  00318A  6E05               	movwf	??_LCD_Begin^0,c
  6802  00318C  0EDE               	movlw	222
  6803  00318E                     u5217:
  6804  00318E  2EE8               	decfsz	wreg,f,c
  6805  003190  D7FE               	bra	u5217
  6806  003192  2E05               	decfsz	??_LCD_Begin^0,f,c
  6807  003194  D7FC               	bra	u5217
  6808                           
  6809                           ;./LCD_librery.h: 142:   LCD_Cmd(0x04 | 0x02);
  6810  003196  0E06               	movlw	6
  6811  003198  ECB9  F01E         	call	_LCD_Cmd
  6812  00319C                     
  6813                           ;./LCD_librery.h: 143:   _delay((unsigned long)((50)*(8000000/4000.0)));
  6814  00319C  0E82               	movlw	130
  6815  00319E  6E05               	movwf	??_LCD_Begin^0,c
  6816  0031A0  0EDE               	movlw	222
  6817  0031A2                     u5227:
  6818  0031A2  2EE8               	decfsz	wreg,f,c
  6819  0031A4  D7FE               	bra	u5227
  6820  0031A6  2E05               	decfsz	??_LCD_Begin^0,f,c
  6821  0031A8  D7FC               	bra	u5227
  6822  0031AA                     
  6823                           ;./LCD_librery.h: 145:   LCD_Cmd(0x01);
  6824  0031AA  0E01               	movlw	1
  6825  0031AC  ECB9  F01E         	call	_LCD_Cmd
  6826  0031B0  0012               	return		;funcret
  6827  0031B2                     __end_of_LCD_Begin:
  6828                           	callstack 0
  6829                           
  6830 ;; *************** function _Imprimir_Cadena *****************
  6831 ;; Defined at:
  6832 ;;		line 212 in file "Main.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  a               2    0[COMRAM] int 
  6835 ;;  b               2    2[COMRAM] int 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  i               2    5[COMRAM] int 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6847 ;;      Params:         4       0       0       0       0       0       0       0       0
  6848 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6849 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6850 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6851 ;;Total ram usage:        7 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; This function calls:
  6854 ;;		Nothing
  6855 ;; This function is called by:
  6856 ;;		_main
  6857 ;; This function uses a non-reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text28
  6861  003D24                     __ptext28:
  6862                           	callstack 0
  6863  003D24                     _Imprimir_Cadena:
  6864                           	callstack 30
  6865  003D24                     
  6866                           ;Main.c: 212: void Imprimir_Cadena(int a, int b);Main.c: 213: {;Main.c: 214:     for (in
      +                          t i = a; i < b; i++)
  6867  003D24  C001  F006         	movff	Imprimir_Cadena@a,Imprimir_Cadena@i
  6868  003D28  C002  F007         	movff	Imprimir_Cadena@a+1,Imprimir_Cadena@i+1
  6869  003D2C  EFA9  F01E         	goto	l4558
  6870  003D30                     l226:
  6871                           
  6872                           ;Main.c: 217:         while (!TXSTAbits.TRMT) {
  6873  003D30  A2AC               	btfss	172,1,c	;volatile
  6874  003D32  EF9D  F01E         	goto	u5071
  6875  003D36  EF9F  F01E         	goto	u5070
  6876  003D3A                     u5071:
  6877  003D3A  EF98  F01E         	goto	l226
  6878  003D3E                     u5070:
  6879  003D3E                     
  6880                           ;Main.c: 220:             TXREG = buffer_TX[i];
  6881  003D3E  0E50               	movlw	low _buffer_TX
  6882  003D40  2406               	addwf	Imprimir_Cadena@i^0,w,c
  6883  003D42  6ED9               	movwf	fsr2l,c
  6884  003D44  0E01               	movlw	high _buffer_TX
  6885  003D46  2007               	addwfc	(Imprimir_Cadena@i+1)^0,w,c
  6886  003D48  6EDA               	movwf	fsr2h,c
  6887  003D4A  50DF               	movf	indf2,w,c
  6888  003D4C  6EAD               	movwf	173,c	;volatile
  6889  003D4E                     
  6890                           ;Main.c: 221:     }
  6891  003D4E  4A06               	infsnz	Imprimir_Cadena@i^0,f,c
  6892  003D50  2A07               	incf	(Imprimir_Cadena@i+1)^0,f,c
  6893  003D52                     l4558:
  6894  003D52  5003               	movf	Imprimir_Cadena@b^0,w,c
  6895  003D54  5C06               	subwf	Imprimir_Cadena@i^0,w,c
  6896  003D56  5007               	movf	(Imprimir_Cadena@i+1)^0,w,c
  6897  003D58  0A80               	xorlw	128
  6898  003D5A  6E05               	movwf	??_Imprimir_Cadena^0,c
  6899  003D5C  5004               	movf	(Imprimir_Cadena@b+1)^0,w,c
  6900  003D5E  0A80               	xorlw	128
  6901  003D60  5805               	subwfb	??_Imprimir_Cadena^0,w,c
  6902  003D62  A0D8               	btfss	status,0,c
  6903  003D64  EFB6  F01E         	goto	u5081
  6904  003D68  EFB8  F01E         	goto	u5080
  6905  003D6C                     u5081:
  6906  003D6C  EF98  F01E         	goto	l226
  6907  003D70                     u5080:
  6908  003D70  0012               	return		;funcret
  6909  003D72                     __end_of_Imprimir_Cadena:
  6910                           	callstack 0
  6911                           
  6912 ;; *************** function _I2C_Init *****************
  6913 ;; Defined at:
  6914 ;;		line 6 in file "I2C_librery.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  frecuencia      4   13[COMRAM] unsigned long 
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2, status,0, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6928 ;;      Params:         4       0       0       0       0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6930 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6931 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6932 ;;Total ram usage:        8 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 1
  6935 ;; This function calls:
  6936 ;;		___lldiv
  6937 ;; This function is called by:
  6938 ;;		_main
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text29
  6943  003BC2                     __ptext29:
  6944                           	callstack 0
  6945  003BC2                     _I2C_Init:
  6946                           	callstack 29
  6947  003BC2                     
  6948                           ;I2C_librery.c: 6: void I2C_Init (uint32_t frecuencia);I2C_librery.c: 7: {;I2C_librery.c
      +                          : 8:     TRISB|=(1<<0);
  6949  003BC2  8093               	bsf	147,0,c	;volatile
  6950                           
  6951                           ;I2C_librery.c: 9:     TRISB|=(1<<1);
  6952  003BC4  8293               	bsf	147,1,c	;volatile
  6953  003BC6                     
  6954                           ;I2C_librery.c: 11:     SSPSTATbits.CKE=0;
  6955  003BC6  9CC7               	bcf	199,6,c	;volatile
  6956  003BC8                     
  6957                           ;I2C_librery.c: 16:     SSPSTATbits.SMP=1;
  6958  003BC8  8EC7               	bsf	199,7,c	;volatile
  6959  003BCA                     
  6960                           ;I2C_librery.c: 21:     SSPCON1bits.SSPEN=1;
  6961  003BCA  8AC6               	bsf	198,5,c	;volatile
  6962  003BCC                     
  6963                           ;I2C_librery.c: 26:     SSPCON1bits.SSPM=0b1000;
  6964  003BCC  50C6               	movf	198,w,c	;volatile
  6965  003BCE  0BF0               	andlw	-16
  6966  003BD0  0908               	iorlw	8
  6967  003BD2  6EC6               	movwf	198,c	;volatile
  6968  003BD4                     
  6969                           ;I2C_librery.c: 35:     SSPCON2=0x00;
  6970  003BD4  0E00               	movlw	0
  6971  003BD6  6EC5               	movwf	197,c	;volatile
  6972  003BD8                     
  6973                           ;I2C_librery.c: 37:     SSPADD = ((8000000/(4*frecuencia))-1);
  6974  003BD8  0E00               	movlw	0
  6975  003BDA  6E01               	movwf	___lldiv@dividend^0,c
  6976  003BDC  0E12               	movlw	18
  6977  003BDE  6E02               	movwf	(___lldiv@dividend+1)^0,c
  6978  003BE0  0E7A               	movlw	122
  6979  003BE2  6E03               	movwf	(___lldiv@dividend+2)^0,c
  6980  003BE4  0E00               	movlw	0
  6981  003BE6  6E04               	movwf	(___lldiv@dividend+3)^0,c
  6982  003BE8  C00E  F012         	movff	I2C_Init@frecuencia,??_I2C_Init
  6983  003BEC  C00F  F013         	movff	I2C_Init@frecuencia+1,??_I2C_Init+1
  6984  003BF0  C010  F014         	movff	I2C_Init@frecuencia+2,??_I2C_Init+2
  6985  003BF4  C011  F015         	movff	I2C_Init@frecuencia+3,??_I2C_Init+3
  6986  003BF8  0E02               	movlw	2
  6987  003BFA                     u5065:
  6988  003BFA  90D8               	bcf	status,0,c
  6989  003BFC  3612               	rlcf	??_I2C_Init^0,f,c
  6990  003BFE  3613               	rlcf	(??_I2C_Init+1)^0,f,c
  6991  003C00  3614               	rlcf	(??_I2C_Init+2)^0,f,c
  6992  003C02  3615               	rlcf	(??_I2C_Init+3)^0,f,c
  6993  003C04  2EE8               	decfsz	wreg,f,c
  6994  003C06  EFFD  F01D         	goto	u5065
  6995  003C0A  C012  F005         	movff	??_I2C_Init,___lldiv@divisor
  6996  003C0E  C013  F006         	movff	??_I2C_Init+1,___lldiv@divisor+1
  6997  003C12  C014  F007         	movff	??_I2C_Init+2,___lldiv@divisor+2
  6998  003C16  C015  F008         	movff	??_I2C_Init+3,___lldiv@divisor+3
  6999  003C1A  EC12  F01C         	call	___lldiv	;wreg free
  7000  003C1E  0401               	decf	?___lldiv^0,w,c
  7001  003C20  6EC8               	movwf	200,c	;volatile
  7002  003C22  0012               	return		;funcret
  7003  003C24                     __end_of_I2C_Init:
  7004                           	callstack 0
  7005                           
  7006 ;; *************** function ___lldiv *****************
  7007 ;; Defined at:
  7008 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  dividend        4    0[COMRAM] unsigned long 
  7011 ;;  divisor         4    4[COMRAM] unsigned long 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  quotient        4    8[COMRAM] unsigned long 
  7014 ;;  counter         1   12[COMRAM] unsigned char 
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  4    0[COMRAM] unsigned long 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2, status,0
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7024 ;;      Params:         8       0       0       0       0       0       0       0       0
  7025 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7027 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7028 ;;Total ram usage:       13 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_I2C_Init
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text30
  7038  003824                     __ptext30:
  7039                           	callstack 0
  7040  003824                     ___lldiv:
  7041                           	callstack 29
  7042  003824  0E00               	movlw	0
  7043  003826  6E09               	movwf	___lldiv@quotient^0,c
  7044  003828  0E00               	movlw	0
  7045  00382A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7046  00382C  0E00               	movlw	0
  7047  00382E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7048  003830  0E00               	movlw	0
  7049  003832  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7050  003834  5005               	movf	___lldiv@divisor^0,w,c
  7051  003836  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7052  003838  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7053  00383A  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7054  00383C  B4D8               	btfsc	status,2,c
  7055  00383E  EF23  F01C         	goto	u5031
  7056  003842  EF25  F01C         	goto	u5030
  7057  003846                     u5031:
  7058  003846  EF5B  F01C         	goto	l281
  7059  00384A                     u5030:
  7060  00384A  0E01               	movlw	1
  7061  00384C  6E0D               	movwf	___lldiv@counter^0,c
  7062  00384E  EF2F  F01C         	goto	l4418
  7063  003852                     l4416:
  7064  003852  90D8               	bcf	status,0,c
  7065  003854  3605               	rlcf	___lldiv@divisor^0,f,c
  7066  003856  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7067  003858  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7068  00385A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7069  00385C  2A0D               	incf	___lldiv@counter^0,f,c
  7070  00385E                     l4418:
  7071  00385E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7072  003860  EF34  F01C         	goto	u5041
  7073  003864  EF36  F01C         	goto	u5040
  7074  003868                     u5041:
  7075  003868  EF29  F01C         	goto	l4416
  7076  00386C                     u5040:
  7077  00386C                     l4420:
  7078  00386C  90D8               	bcf	status,0,c
  7079  00386E  3609               	rlcf	___lldiv@quotient^0,f,c
  7080  003870  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7081  003872  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7082  003874  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7083  003876  5005               	movf	___lldiv@divisor^0,w,c
  7084  003878  5C01               	subwf	___lldiv@dividend^0,w,c
  7085  00387A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7086  00387C  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7087  00387E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7088  003880  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7089  003882  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7090  003884  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7091  003886  A0D8               	btfss	status,0,c
  7092  003888  EF48  F01C         	goto	u5051
  7093  00388C  EF4A  F01C         	goto	u5050
  7094  003890                     u5051:
  7095  003890  EF53  F01C         	goto	l4428
  7096  003894                     u5050:
  7097  003894  5005               	movf	___lldiv@divisor^0,w,c
  7098  003896  5E01               	subwf	___lldiv@dividend^0,f,c
  7099  003898  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7100  00389A  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7101  00389C  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7102  00389E  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7103  0038A0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7104  0038A2  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7105  0038A4  8009               	bsf	___lldiv@quotient^0,0,c
  7106  0038A6                     l4428:
  7107  0038A6  90D8               	bcf	status,0,c
  7108  0038A8  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7109  0038AA  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7110  0038AC  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7111  0038AE  3205               	rrcf	___lldiv@divisor^0,f,c
  7112  0038B0  2E0D               	decfsz	___lldiv@counter^0,f,c
  7113  0038B2  EF36  F01C         	goto	l4420
  7114  0038B6                     l281:
  7115  0038B6  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7116  0038BA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7117  0038BE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7118  0038C2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7119  0038C6  0012               	return		;funcret
  7120  0038C8                     __end_of___lldiv:
  7121                           	callstack 0
  7122                           
  7123 ;; *************** function _Establecer_Hora *****************
  7124 ;; Defined at:
  7125 ;;		line 132 in file "Main.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;		None
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      void 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7139 ;;      Params:         0       0       0       0       0       0       0       0       0
  7140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7141 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7142 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7143 ;;Total ram usage:        1 bytes
  7144 ;; Hardware stack levels used: 1
  7145 ;; Hardware stack levels required when called: 4
  7146 ;; This function calls:
  7147 ;;		_Encender_Act
  7148 ;;		_I2C_Ack
  7149 ;;		_I2C_NO_Ack
  7150 ;;		_I2C_ReStart
  7151 ;;		_I2C_Read
  7152 ;;		_I2C_Start
  7153 ;;		_I2C_Stop
  7154 ;;		_I2C_Write
  7155 ;;		_Obtener_Temperatura
  7156 ;;		_Reloj_Calendario
  7157 ;; This function is called by:
  7158 ;;		_main
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text31
  7163  003964                     __ptext31:
  7164                           	callstack 0
  7165  003964                     _Establecer_Hora:
  7166                           	callstack 26
  7167  003964                     
  7168                           ;Main.c: 134:     I2C_Start();
  7169  003964  EC3C  F020         	call	_I2C_Start	;wreg free
  7170  003968                     
  7171                           ;Main.c: 135:     I2C_Write(0xD0);
  7172  003968  0ED0               	movlw	208
  7173  00396A  ECF1  F01F         	call	_I2C_Write
  7174  00396E                     
  7175                           ;Main.c: 136:     I2C_Write(0);
  7176  00396E  0E00               	movlw	0
  7177  003970  ECF1  F01F         	call	_I2C_Write
  7178                           
  7179                           ;Main.c: 137:     I2C_ReStart();
  7180  003974  EC45  F020         	call	_I2C_ReStart	;wreg free
  7181  003978                     
  7182                           ;Main.c: 138:     I2C_Write(0xD1);
  7183  003978  0ED1               	movlw	209
  7184  00397A  ECF1  F01F         	call	_I2C_Write
  7185  00397E                     
  7186                           ;Main.c: 139:     seconds=I2C_Read();
  7187  00397E  EC08  F020         	call	_I2C_Read	;wreg free
  7188  003982  0100               	movlb	0	; () banked
  7189  003984  6FF1               	movwf	_seconds& (0+255),b
  7190  003986                     
  7191                           ; BSR set to: 0
  7192                           ;Main.c: 140:     I2C_Ack();
  7193  003986  EC1E  F020         	call	_I2C_Ack	;wreg free
  7194  00398A                     
  7195                           ;Main.c: 141:     minutes=I2C_Read();
  7196  00398A  EC08  F020         	call	_I2C_Read	;wreg free
  7197  00398E  0100               	movlb	0	; () banked
  7198  003990  6FF2               	movwf	_minutes& (0+255),b
  7199  003992                     
  7200                           ; BSR set to: 0
  7201                           ;Main.c: 142:     I2C_Ack();
  7202  003992  EC1E  F020         	call	_I2C_Ack	;wreg free
  7203  003996                     
  7204                           ;Main.c: 143:     hours=I2C_Read();
  7205  003996  EC08  F020         	call	_I2C_Read	;wreg free
  7206  00399A  0100               	movlb	0	; () banked
  7207  00399C  6FF3               	movwf	_hours& (0+255),b
  7208  00399E                     
  7209                           ; BSR set to: 0
  7210                           ;Main.c: 144:     I2C_Ack();
  7211  00399E  EC1E  F020         	call	_I2C_Ack	;wreg free
  7212  0039A2                     
  7213                           ;Main.c: 145:     I2C_Read();
  7214  0039A2  EC08  F020         	call	_I2C_Read	;wreg free
  7215  0039A6                     
  7216                           ;Main.c: 146:     I2C_Ack();
  7217  0039A6  EC1E  F020         	call	_I2C_Ack	;wreg free
  7218  0039AA                     
  7219                           ;Main.c: 147:     day=I2C_Read();
  7220  0039AA  EC08  F020         	call	_I2C_Read	;wreg free
  7221  0039AE  0100               	movlb	0	; () banked
  7222  0039B0  6FEE               	movwf	_day& (0+255),b
  7223  0039B2                     
  7224                           ; BSR set to: 0
  7225                           ;Main.c: 148:     I2C_Ack();
  7226  0039B2  EC1E  F020         	call	_I2C_Ack	;wreg free
  7227  0039B6                     
  7228                           ;Main.c: 149:     month=I2C_Read();
  7229  0039B6  EC08  F020         	call	_I2C_Read	;wreg free
  7230  0039BA  0100               	movlb	0	; () banked
  7231  0039BC  6FEF               	movwf	_month& (0+255),b
  7232  0039BE                     
  7233                           ; BSR set to: 0
  7234                           ;Main.c: 150:     I2C_Ack();
  7235  0039BE  EC1E  F020         	call	_I2C_Ack	;wreg free
  7236  0039C2                     
  7237                           ;Main.c: 151:     year=I2C_Read();
  7238  0039C2  EC08  F020         	call	_I2C_Read	;wreg free
  7239  0039C6  0100               	movlb	0	; () banked
  7240  0039C8  6FF0               	movwf	_year& (0+255),b
  7241  0039CA                     
  7242                           ; BSR set to: 0
  7243                           ;Main.c: 152:     I2C_NO_Ack();
  7244  0039CA  EC13  F020         	call	_I2C_NO_Ack	;wreg free
  7245  0039CE                     
  7246                           ;Main.c: 153:     I2C_Stop();
  7247  0039CE  EC33  F020         	call	_I2C_Stop	;wreg free
  7248  0039D2                     
  7249                           ;Main.c: 155:     Reloj_Calendario();
  7250  0039D2  EC80  F013         	call	_Reloj_Calendario	;wreg free
  7251  0039D6                     
  7252                           ;Main.c: 157:     Encender_Act(Obtener_Temperatura());
  7253  0039D6  EC66  F01B         	call	_Obtener_Temperatura	;wreg free
  7254  0039DA  C033  F03D         	movff	?_Obtener_Temperatura,Encender_Act@temp
  7255  0039DE  C034  F03E         	movff	?_Obtener_Temperatura+1,Encender_Act@temp+1
  7256  0039E2  C035  F03F         	movff	?_Obtener_Temperatura+2,Encender_Act@temp+2
  7257  0039E6  C036  F040         	movff	?_Obtener_Temperatura+3,Encender_Act@temp+3
  7258  0039EA  EC03  F01A         	call	_Encender_Act	;wreg free
  7259  0039EE                     
  7260                           ;Main.c: 158:     _delay((unsigned long)((50)*(8000000/4000.0)));
  7261  0039EE  0E82               	movlw	130
  7262  0039F0  6E41               	movwf	??_Establecer_Hora^0,c
  7263  0039F2  0EDE               	movlw	222
  7264  0039F4                     u5237:
  7265  0039F4  2EE8               	decfsz	wreg,f,c
  7266  0039F6  D7FE               	bra	u5237
  7267  0039F8  2E41               	decfsz	??_Establecer_Hora^0,f,c
  7268  0039FA  D7FC               	bra	u5237
  7269  0039FC  0012               	return		;funcret
  7270  0039FE                     __end_of_Establecer_Hora:
  7271                           	callstack 0
  7272                           
  7273 ;; *************** function _Reloj_Calendario *****************
  7274 ;; Defined at:
  7275 ;;		line 81 in file "Main.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7292 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7293 ;;Total ram usage:        0 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 3
  7296 ;; This function calls:
  7297 ;;		_BCD_a_Decimal
  7298 ;;		_LCD_Goto
  7299 ;;		_LCD_Print
  7300 ;;		___awdiv
  7301 ;;		___awmod
  7302 ;; This function is called by:
  7303 ;;		_Establecer_Hora
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text32
  7308  002700                     __ptext32:
  7309                           	callstack 0
  7310  002700                     _Reloj_Calendario:
  7311                           	callstack 26
  7312  002700                     
  7313                           ;Main.c: 83:     static char Time[] = "TIME: 00:00:00";;Main.c: 84:     static char Date
      +                          [] = "DATE: 00/00/2000";;Main.c: 86:     seconds = BCD_a_Decimal(seconds);
  7314  002700  0100               	movlb	0	; () banked
  7315  002702  51F1               	movf	_seconds& (0+255),w,b
  7316  002704  ECFD  F01F         	call	_BCD_a_Decimal
  7317  002708  0100               	movlb	0	; () banked
  7318  00270A  6FF1               	movwf	_seconds& (0+255),b
  7319                           
  7320                           ;Main.c: 87:     minutes = BCD_a_Decimal(minutes);
  7321  00270C  51F2               	movf	_minutes& (0+255),w,b
  7322  00270E  ECFD  F01F         	call	_BCD_a_Decimal
  7323  002712  0100               	movlb	0	; () banked
  7324  002714  6FF2               	movwf	_minutes& (0+255),b
  7325                           
  7326                           ;Main.c: 88:     hours = BCD_a_Decimal(hours);
  7327  002716  51F3               	movf	_hours& (0+255),w,b
  7328  002718  ECFD  F01F         	call	_BCD_a_Decimal
  7329  00271C  0100               	movlb	0	; () banked
  7330  00271E  6FF3               	movwf	_hours& (0+255),b
  7331                           
  7332                           ;Main.c: 89:     day = BCD_a_Decimal(day);
  7333  002720  51EE               	movf	_day& (0+255),w,b
  7334  002722  ECFD  F01F         	call	_BCD_a_Decimal
  7335  002726  0100               	movlb	0	; () banked
  7336  002728  6FEE               	movwf	_day& (0+255),b
  7337                           
  7338                           ;Main.c: 90:     month = BCD_a_Decimal(month);
  7339  00272A  51EF               	movf	_month& (0+255),w,b
  7340  00272C  ECFD  F01F         	call	_BCD_a_Decimal
  7341  002730  0100               	movlb	0	; () banked
  7342  002732  6FEF               	movwf	_month& (0+255),b
  7343                           
  7344                           ;Main.c: 91:     year = BCD_a_Decimal(year);
  7345  002734  51F0               	movf	_year& (0+255),w,b
  7346  002736  ECFD  F01F         	call	_BCD_a_Decimal
  7347  00273A  0100               	movlb	0	; () banked
  7348  00273C  6FF0               	movwf	_year& (0+255),b
  7349  00273E                     
  7350                           ; BSR set to: 0
  7351                           ;Main.c: 93:     Time[6] = hours / 10 + '0';
  7352  00273E  C0F3  F001         	movff	_hours,___awdiv@dividend
  7353  002742  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7354  002744  0E00               	movlw	0
  7355  002746  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7356  002748  0E0A               	movlw	10
  7357  00274A  6E03               	movwf	___awdiv@divisor^0,c
  7358  00274C  ECA1  F019         	call	___awdiv	;wreg free
  7359  002750  5001               	movf	?___awdiv^0,w,c
  7360  002752  0F30               	addlw	48
  7361  002754  0100               	movlb	0	; () banked
  7362  002756  6FD4               	movwf	(Reloj_Calendario@Time+6)& (0+255),b
  7363  002758                     
  7364                           ; BSR set to: 0
  7365                           ;Main.c: 94:     Time[7] = hours % 10 + '0';
  7366  002758  C0F3  F001         	movff	_hours,___awmod@dividend
  7367  00275C  6A02               	clrf	(___awmod@dividend+1)^0,c
  7368  00275E  0E00               	movlw	0
  7369  002760  6E04               	movwf	(___awmod@divisor+1)^0,c
  7370  002762  0E0A               	movlw	10
  7371  002764  6E03               	movwf	___awmod@divisor^0,c
  7372  002766  EC0E  F01B         	call	___awmod	;wreg free
  7373  00276A  5001               	movf	?___awmod^0,w,c
  7374  00276C  0F30               	addlw	48
  7375  00276E  0100               	movlb	0	; () banked
  7376  002770  6FD5               	movwf	(Reloj_Calendario@Time+7)& (0+255),b
  7377  002772                     
  7378                           ; BSR set to: 0
  7379                           ;Main.c: 95:     Time[9] = minutes / 10 + '0';
  7380  002772  C0F2  F001         	movff	_minutes,___awdiv@dividend
  7381  002776  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7382  002778  0E00               	movlw	0
  7383  00277A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7384  00277C  0E0A               	movlw	10
  7385  00277E  6E03               	movwf	___awdiv@divisor^0,c
  7386  002780  ECA1  F019         	call	___awdiv	;wreg free
  7387  002784  5001               	movf	?___awdiv^0,w,c
  7388  002786  0F30               	addlw	48
  7389  002788  0100               	movlb	0	; () banked
  7390  00278A  6FD7               	movwf	(Reloj_Calendario@Time+9)& (0+255),b
  7391  00278C                     
  7392                           ; BSR set to: 0
  7393                           ;Main.c: 96:     Time[10]= minutes % 10 + '0';
  7394  00278C  C0F2  F001         	movff	_minutes,___awmod@dividend
  7395  002790  6A02               	clrf	(___awmod@dividend+1)^0,c
  7396  002792  0E00               	movlw	0
  7397  002794  6E04               	movwf	(___awmod@divisor+1)^0,c
  7398  002796  0E0A               	movlw	10
  7399  002798  6E03               	movwf	___awmod@divisor^0,c
  7400  00279A  EC0E  F01B         	call	___awmod	;wreg free
  7401  00279E  5001               	movf	?___awmod^0,w,c
  7402  0027A0  0F30               	addlw	48
  7403  0027A2  0100               	movlb	0	; () banked
  7404  0027A4  6FD8               	movwf	(Reloj_Calendario@Time+10)& (0+255),b
  7405  0027A6                     
  7406                           ; BSR set to: 0
  7407                           ;Main.c: 97:     Time[12]= seconds / 10 + '0';
  7408  0027A6  C0F1  F001         	movff	_seconds,___awdiv@dividend
  7409  0027AA  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7410  0027AC  0E00               	movlw	0
  7411  0027AE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7412  0027B0  0E0A               	movlw	10
  7413  0027B2  6E03               	movwf	___awdiv@divisor^0,c
  7414  0027B4  ECA1  F019         	call	___awdiv	;wreg free
  7415  0027B8  5001               	movf	?___awdiv^0,w,c
  7416  0027BA  0F30               	addlw	48
  7417  0027BC  0100               	movlb	0	; () banked
  7418  0027BE  6FDA               	movwf	(Reloj_Calendario@Time+12)& (0+255),b
  7419  0027C0                     
  7420                           ; BSR set to: 0
  7421                           ;Main.c: 98:     Time[13]= seconds % 10 + '0';
  7422  0027C0  C0F1  F001         	movff	_seconds,___awmod@dividend
  7423  0027C4  6A02               	clrf	(___awmod@dividend+1)^0,c
  7424  0027C6  0E00               	movlw	0
  7425  0027C8  6E04               	movwf	(___awmod@divisor+1)^0,c
  7426  0027CA  0E0A               	movlw	10
  7427  0027CC  6E03               	movwf	___awmod@divisor^0,c
  7428  0027CE  EC0E  F01B         	call	___awmod	;wreg free
  7429  0027D2  5001               	movf	?___awmod^0,w,c
  7430  0027D4  0F30               	addlw	48
  7431  0027D6  0100               	movlb	0	; () banked
  7432  0027D8  6FDB               	movwf	(Reloj_Calendario@Time+13)& (0+255),b
  7433  0027DA                     
  7434                           ; BSR set to: 0
  7435                           ;Main.c: 100:     Date[6] = day / 10 + '0';
  7436  0027DA  C0EE  F001         	movff	_day,___awdiv@dividend
  7437  0027DE  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7438  0027E0  0E00               	movlw	0
  7439  0027E2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7440  0027E4  0E0A               	movlw	10
  7441  0027E6  6E03               	movwf	___awdiv@divisor^0,c
  7442  0027E8  ECA1  F019         	call	___awdiv	;wreg free
  7443  0027EC  5001               	movf	?___awdiv^0,w,c
  7444  0027EE  0F30               	addlw	48
  7445  0027F0  0100               	movlb	0	; () banked
  7446  0027F2  6FC3               	movwf	(Reloj_Calendario@Date+6)& (0+255),b
  7447  0027F4                     
  7448                           ; BSR set to: 0
  7449                           ;Main.c: 101:     Date[7] = day % 10 + '0';
  7450  0027F4  C0EE  F001         	movff	_day,___awmod@dividend
  7451  0027F8  6A02               	clrf	(___awmod@dividend+1)^0,c
  7452  0027FA  0E00               	movlw	0
  7453  0027FC  6E04               	movwf	(___awmod@divisor+1)^0,c
  7454  0027FE  0E0A               	movlw	10
  7455  002800  6E03               	movwf	___awmod@divisor^0,c
  7456  002802  EC0E  F01B         	call	___awmod	;wreg free
  7457  002806  5001               	movf	?___awmod^0,w,c
  7458  002808  0F30               	addlw	48
  7459  00280A  0100               	movlb	0	; () banked
  7460  00280C  6FC4               	movwf	(Reloj_Calendario@Date+7)& (0+255),b
  7461  00280E                     
  7462                           ; BSR set to: 0
  7463                           ;Main.c: 102:     Date[9] = month / 10 + '0';
  7464  00280E  C0EF  F001         	movff	_month,___awdiv@dividend
  7465  002812  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7466  002814  0E00               	movlw	0
  7467  002816  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7468  002818  0E0A               	movlw	10
  7469  00281A  6E03               	movwf	___awdiv@divisor^0,c
  7470  00281C  ECA1  F019         	call	___awdiv	;wreg free
  7471  002820  5001               	movf	?___awdiv^0,w,c
  7472  002822  0F30               	addlw	48
  7473  002824  0100               	movlb	0	; () banked
  7474  002826  6FC6               	movwf	(Reloj_Calendario@Date+9)& (0+255),b
  7475  002828                     
  7476                           ; BSR set to: 0
  7477                           ;Main.c: 103:     Date[10]= month % 10 + '0';
  7478  002828  C0EF  F001         	movff	_month,___awmod@dividend
  7479  00282C  6A02               	clrf	(___awmod@dividend+1)^0,c
  7480  00282E  0E00               	movlw	0
  7481  002830  6E04               	movwf	(___awmod@divisor+1)^0,c
  7482  002832  0E0A               	movlw	10
  7483  002834  6E03               	movwf	___awmod@divisor^0,c
  7484  002836  EC0E  F01B         	call	___awmod	;wreg free
  7485  00283A  5001               	movf	?___awmod^0,w,c
  7486  00283C  0F30               	addlw	48
  7487  00283E  0100               	movlb	0	; () banked
  7488  002840  6FC7               	movwf	(Reloj_Calendario@Date+10)& (0+255),b
  7489  002842                     
  7490                           ; BSR set to: 0
  7491                           ;Main.c: 104:     Date[14]= year / 10 + '0';
  7492  002842  C0F0  F001         	movff	_year,___awdiv@dividend
  7493  002846  6A02               	clrf	(___awdiv@dividend+1)^0,c
  7494  002848  0E00               	movlw	0
  7495  00284A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7496  00284C  0E0A               	movlw	10
  7497  00284E  6E03               	movwf	___awdiv@divisor^0,c
  7498  002850  ECA1  F019         	call	___awdiv	;wreg free
  7499  002854  5001               	movf	?___awdiv^0,w,c
  7500  002856  0F30               	addlw	48
  7501  002858  0100               	movlb	0	; () banked
  7502  00285A  6FCB               	movwf	(Reloj_Calendario@Date+14)& (0+255),b
  7503  00285C                     
  7504                           ; BSR set to: 0
  7505                           ;Main.c: 105:     Date[15]= year % 10 + '0';
  7506  00285C  C0F0  F001         	movff	_year,___awmod@dividend
  7507  002860  6A02               	clrf	(___awmod@dividend+1)^0,c
  7508  002862  0E00               	movlw	0
  7509  002864  6E04               	movwf	(___awmod@divisor+1)^0,c
  7510  002866  0E0A               	movlw	10
  7511  002868  6E03               	movwf	___awmod@divisor^0,c
  7512  00286A  EC0E  F01B         	call	___awmod	;wreg free
  7513  00286E  5001               	movf	?___awmod^0,w,c
  7514  002870  0F30               	addlw	48
  7515  002872  0100               	movlb	0	; () banked
  7516  002874  6FCC               	movwf	(Reloj_Calendario@Date+15)& (0+255),b
  7517  002876                     
  7518                           ; BSR set to: 0
  7519                           ;Main.c: 107:     LCD_Goto(1, 1);
  7520  002876  0E01               	movlw	1
  7521  002878  6E05               	movwf	LCD_Goto@row^0,c
  7522  00287A  0E01               	movlw	1
  7523  00287C  EC48  F01D         	call	_LCD_Goto
  7524  002880                     
  7525                           ;Main.c: 108:     LCD_Print(Time);
  7526  002880  0ECE               	movlw	low Reloj_Calendario@Time
  7527  002882  6E03               	movwf	LCD_Print@LCD_Str^0,c
  7528  002884  0E00               	movlw	high Reloj_Calendario@Time
  7529  002886  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  7530  002888  EC5D  F01A         	call	_LCD_Print	;wreg free
  7531  00288C                     
  7532                           ;Main.c: 109:     LCD_Goto(1, 2);
  7533  00288C  0E02               	movlw	2
  7534  00288E  6E05               	movwf	LCD_Goto@row^0,c
  7535  002890  0E01               	movlw	1
  7536  002892  EC48  F01D         	call	_LCD_Goto
  7537  002896                     
  7538                           ;Main.c: 110:     LCD_Print(Date);
  7539  002896  0EBD               	movlw	low Reloj_Calendario@Date
  7540  002898  6E03               	movwf	LCD_Print@LCD_Str^0,c
  7541  00289A  0E00               	movlw	high Reloj_Calendario@Date
  7542  00289C  6E04               	movwf	(LCD_Print@LCD_Str+1)^0,c
  7543  00289E  EC5D  F01A         	call	_LCD_Print	;wreg free
  7544  0028A2                     
  7545                           ;Main.c: 112:     buffer_TX[25] = Time[6];
  7546  0028A2  C0D4  F169         	movff	Reloj_Calendario@Time+6,_buffer_TX+25
  7547  0028A6                     
  7548                           ;Main.c: 113:     buffer_TX[26] = Time[7];
  7549  0028A6  C0D5  F16A         	movff	Reloj_Calendario@Time+7,_buffer_TX+26
  7550  0028AA                     
  7551                           ;Main.c: 114:     buffer_TX[28] = Time[9];
  7552  0028AA  C0D7  F16C         	movff	Reloj_Calendario@Time+9,_buffer_TX+28
  7553  0028AE                     
  7554                           ;Main.c: 115:     buffer_TX[29] = Time[10];
  7555  0028AE  C0D8  F16D         	movff	Reloj_Calendario@Time+10,_buffer_TX+29
  7556  0028B2                     
  7557                           ;Main.c: 116:     buffer_TX[31] = Time[12];
  7558  0028B2  C0DA  F16F         	movff	Reloj_Calendario@Time+12,_buffer_TX+31
  7559  0028B6                     
  7560                           ;Main.c: 117:     buffer_TX[32] = Time[13];
  7561  0028B6  C0DB  F170         	movff	Reloj_Calendario@Time+13,_buffer_TX+32
  7562  0028BA                     
  7563                           ;Main.c: 119:     buffer_TX[40] = Date[6];
  7564  0028BA  C0C3  F178         	movff	Reloj_Calendario@Date+6,_buffer_TX+40
  7565  0028BE                     
  7566                           ;Main.c: 120:     buffer_TX[41] = Date[7];
  7567  0028BE  C0C4  F179         	movff	Reloj_Calendario@Date+7,_buffer_TX+41
  7568  0028C2                     
  7569                           ;Main.c: 121:     buffer_TX[43] = Date[9];
  7570  0028C2  C0C6  F17B         	movff	Reloj_Calendario@Date+9,_buffer_TX+43
  7571  0028C6                     
  7572                           ;Main.c: 122:     buffer_TX[44] = Date[10];
  7573  0028C6  C0C7  F17C         	movff	Reloj_Calendario@Date+10,_buffer_TX+44
  7574  0028CA                     
  7575                           ;Main.c: 123:     buffer_TX[46] = Date[14];
  7576  0028CA  C0CB  F17E         	movff	Reloj_Calendario@Date+14,_buffer_TX+46
  7577  0028CE                     
  7578                           ;Main.c: 124:     buffer_TX[47] = Date[15];
  7579  0028CE  C0CC  F17F         	movff	Reloj_Calendario@Date+15,_buffer_TX+47
  7580  0028D2  0012               	return		;funcret
  7581  0028D4                     __end_of_Reloj_Calendario:
  7582                           	callstack 0
  7583                           
  7584 ;; *************** function ___awmod *****************
  7585 ;; Defined at:
  7586 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  dividend        2    0[COMRAM] int 
  7589 ;;  divisor         2    2[COMRAM] int 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  sign            1    5[COMRAM] unsigned char 
  7592 ;;  counter         1    4[COMRAM] unsigned char 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  2    0[COMRAM] int 
  7595 ;; Registers used:
  7596 ;;		wreg, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7602 ;;      Params:         4       0       0       0       0       0       0       0       0
  7603 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7605 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7606 ;;Total ram usage:        6 bytes
  7607 ;; Hardware stack levels used: 1
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_Reloj_Calendario
  7612 ;;		_efgtoa
  7613 ;;		_Decimal_a_BCD
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text33
  7618  00361C                     __ptext33:
  7619                           	callstack 0
  7620  00361C                     ___awmod:
  7621                           	callstack 25
  7622  00361C  0E00               	movlw	0
  7623  00361E  6E06               	movwf	___awmod@sign^0,c
  7624  003620  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7625  003622  EF17  F01B         	goto	u3510
  7626  003626  EF15  F01B         	goto	u3511
  7627  00362A                     u3511:
  7628  00362A  EF1D  F01B         	goto	l3514
  7629  00362E                     u3510:
  7630  00362E  6C01               	negf	___awmod@dividend^0,c
  7631  003630  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7632  003632  B0D8               	btfsc	status,0,c
  7633  003634  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7634  003636  0E01               	movlw	1
  7635  003638  6E06               	movwf	___awmod@sign^0,c
  7636  00363A                     l3514:
  7637  00363A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7638  00363C  EF24  F01B         	goto	u3520
  7639  003640  EF22  F01B         	goto	u3521
  7640  003644                     u3521:
  7641  003644  EF28  F01B         	goto	l3518
  7642  003648                     u3520:
  7643  003648  6C03               	negf	___awmod@divisor^0,c
  7644  00364A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7645  00364C  B0D8               	btfsc	status,0,c
  7646  00364E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7647  003650                     l3518:
  7648  003650  5003               	movf	___awmod@divisor^0,w,c
  7649  003652  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7650  003654  B4D8               	btfsc	status,2,c
  7651  003656  EF2F  F01B         	goto	u3531
  7652  00365A  EF31  F01B         	goto	u3530
  7653  00365E                     u3531:
  7654  00365E  EF55  F01B         	goto	l3534
  7655  003662                     u3530:
  7656  003662  0E01               	movlw	1
  7657  003664  6E05               	movwf	___awmod@counter^0,c
  7658  003666  EF39  F01B         	goto	l3524
  7659  00366A                     l3522:
  7660  00366A  90D8               	bcf	status,0,c
  7661  00366C  3603               	rlcf	___awmod@divisor^0,f,c
  7662  00366E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7663  003670  2A05               	incf	___awmod@counter^0,f,c
  7664  003672                     l3524:
  7665  003672  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7666  003674  EF3E  F01B         	goto	u3541
  7667  003678  EF40  F01B         	goto	u3540
  7668  00367C                     u3541:
  7669  00367C  EF35  F01B         	goto	l3522
  7670  003680                     u3540:
  7671  003680                     l3526:
  7672  003680  5003               	movf	___awmod@divisor^0,w,c
  7673  003682  5C01               	subwf	___awmod@dividend^0,w,c
  7674  003684  5004               	movf	(___awmod@divisor+1)^0,w,c
  7675  003686  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7676  003688  A0D8               	btfss	status,0,c
  7677  00368A  EF49  F01B         	goto	u3551
  7678  00368E  EF4B  F01B         	goto	u3550
  7679  003692                     u3551:
  7680  003692  EF4F  F01B         	goto	l3530
  7681  003696                     u3550:
  7682  003696  5003               	movf	___awmod@divisor^0,w,c
  7683  003698  5E01               	subwf	___awmod@dividend^0,f,c
  7684  00369A  5004               	movf	(___awmod@divisor+1)^0,w,c
  7685  00369C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7686  00369E                     l3530:
  7687  00369E  90D8               	bcf	status,0,c
  7688  0036A0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7689  0036A2  3203               	rrcf	___awmod@divisor^0,f,c
  7690  0036A4  2E05               	decfsz	___awmod@counter^0,f,c
  7691  0036A6  EF40  F01B         	goto	l3526
  7692  0036AA                     l3534:
  7693  0036AA  5006               	movf	___awmod@sign^0,w,c
  7694  0036AC  B4D8               	btfsc	status,2,c
  7695  0036AE  EF5B  F01B         	goto	u3561
  7696  0036B2  EF5D  F01B         	goto	u3560
  7697  0036B6                     u3561:
  7698  0036B6  EF61  F01B         	goto	l3538
  7699  0036BA                     u3560:
  7700  0036BA  6C01               	negf	___awmod@dividend^0,c
  7701  0036BC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7702  0036BE  B0D8               	btfsc	status,0,c
  7703  0036C0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7704  0036C2                     l3538:
  7705  0036C2  C001  F001         	movff	___awmod@dividend,?___awmod
  7706  0036C6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7707  0036CA  0012               	return		;funcret
  7708  0036CC                     __end_of___awmod:
  7709                           	callstack 0
  7710                           
  7711 ;; *************** function ___awdiv *****************
  7712 ;; Defined at:
  7713 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  dividend        2    0[COMRAM] int 
  7716 ;;  divisor         2    2[COMRAM] int 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  quotient        2    6[COMRAM] int 
  7719 ;;  sign            1    5[COMRAM] unsigned char 
  7720 ;;  counter         1    4[COMRAM] unsigned char 
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  2    0[COMRAM] int 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7730 ;;      Params:         4       0       0       0       0       0       0       0       0
  7731 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7733 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7734 ;;Total ram usage:        8 bytes
  7735 ;; Hardware stack levels used: 1
  7736 ;; This function calls:
  7737 ;;		Nothing
  7738 ;; This function is called by:
  7739 ;;		_Reloj_Calendario
  7740 ;;		_efgtoa
  7741 ;;		_Decimal_a_BCD
  7742 ;; This function uses a non-reentrant model
  7743 ;;
  7744                           
  7745                           	psect	text34
  7746  003342                     __ptext34:
  7747                           	callstack 0
  7748  003342                     ___awdiv:
  7749                           	callstack 25
  7750  003342  0E00               	movlw	0
  7751  003344  6E06               	movwf	___awdiv@sign^0,c
  7752  003346  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7753  003348  EFAA  F019         	goto	u3450
  7754  00334C  EFA8  F019         	goto	u3451
  7755  003350                     u3451:
  7756  003350  EFB0  F019         	goto	l3470
  7757  003354                     u3450:
  7758  003354  6C03               	negf	___awdiv@divisor^0,c
  7759  003356  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7760  003358  B0D8               	btfsc	status,0,c
  7761  00335A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7762  00335C  0E01               	movlw	1
  7763  00335E  6E06               	movwf	___awdiv@sign^0,c
  7764  003360                     l3470:
  7765  003360  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7766  003362  EFB7  F019         	goto	u3460
  7767  003366  EFB5  F019         	goto	u3461
  7768  00336A                     u3461:
  7769  00336A  EFBD  F019         	goto	l3476
  7770  00336E                     u3460:
  7771  00336E  6C01               	negf	___awdiv@dividend^0,c
  7772  003370  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7773  003372  B0D8               	btfsc	status,0,c
  7774  003374  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7775  003376  0E01               	movlw	1
  7776  003378  1A06               	xorwf	___awdiv@sign^0,f,c
  7777  00337A                     l3476:
  7778  00337A  0E00               	movlw	0
  7779  00337C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7780  00337E  0E00               	movlw	0
  7781  003380  6E07               	movwf	___awdiv@quotient^0,c
  7782  003382  5003               	movf	___awdiv@divisor^0,w,c
  7783  003384  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7784  003386  B4D8               	btfsc	status,2,c
  7785  003388  EFC8  F019         	goto	u3471
  7786  00338C  EFCA  F019         	goto	u3470
  7787  003390                     u3471:
  7788  003390  EFF2  F019         	goto	l3498
  7789  003394                     u3470:
  7790  003394  0E01               	movlw	1
  7791  003396  6E05               	movwf	___awdiv@counter^0,c
  7792  003398  EFD2  F019         	goto	l3484
  7793  00339C                     l3482:
  7794  00339C  90D8               	bcf	status,0,c
  7795  00339E  3603               	rlcf	___awdiv@divisor^0,f,c
  7796  0033A0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7797  0033A2  2A05               	incf	___awdiv@counter^0,f,c
  7798  0033A4                     l3484:
  7799  0033A4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7800  0033A6  EFD7  F019         	goto	u3481
  7801  0033AA  EFD9  F019         	goto	u3480
  7802  0033AE                     u3481:
  7803  0033AE  EFCE  F019         	goto	l3482
  7804  0033B2                     u3480:
  7805  0033B2                     l3486:
  7806  0033B2  90D8               	bcf	status,0,c
  7807  0033B4  3607               	rlcf	___awdiv@quotient^0,f,c
  7808  0033B6  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7809  0033B8  5003               	movf	___awdiv@divisor^0,w,c
  7810  0033BA  5C01               	subwf	___awdiv@dividend^0,w,c
  7811  0033BC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7812  0033BE  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7813  0033C0  A0D8               	btfss	status,0,c
  7814  0033C2  EFE5  F019         	goto	u3491
  7815  0033C6  EFE7  F019         	goto	u3490
  7816  0033CA                     u3491:
  7817  0033CA  EFEC  F019         	goto	l3494
  7818  0033CE                     u3490:
  7819  0033CE  5003               	movf	___awdiv@divisor^0,w,c
  7820  0033D0  5E01               	subwf	___awdiv@dividend^0,f,c
  7821  0033D2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7822  0033D4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7823  0033D6  8007               	bsf	___awdiv@quotient^0,0,c
  7824  0033D8                     l3494:
  7825  0033D8  90D8               	bcf	status,0,c
  7826  0033DA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7827  0033DC  3203               	rrcf	___awdiv@divisor^0,f,c
  7828  0033DE  2E05               	decfsz	___awdiv@counter^0,f,c
  7829  0033E0  EFD9  F019         	goto	l3486
  7830  0033E4                     l3498:
  7831  0033E4  5006               	movf	___awdiv@sign^0,w,c
  7832  0033E6  B4D8               	btfsc	status,2,c
  7833  0033E8  EFF8  F019         	goto	u3501
  7834  0033EC  EFFA  F019         	goto	u3500
  7835  0033F0                     u3501:
  7836  0033F0  EFFE  F019         	goto	l3502
  7837  0033F4                     u3500:
  7838  0033F4  6C07               	negf	___awdiv@quotient^0,c
  7839  0033F6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7840  0033F8  B0D8               	btfsc	status,0,c
  7841  0033FA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7842  0033FC                     l3502:
  7843  0033FC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7844  003400  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7845  003404  0012               	return		;funcret
  7846  003406                     __end_of___awdiv:
  7847                           	callstack 0
  7848                           
  7849 ;; *************** function _LCD_Print *****************
  7850 ;; Defined at:
  7851 ;;		line 99 in file "./LCD_librery.h"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;  LCD_Str         2    2[COMRAM] PTR unsigned char 
  7854 ;;		 -> STR_3(2), Mostrar_Temperatura@temperatura(4), STR_1(13), Reloj_Calendario@Date(17), 
  7855 ;;		 -> Reloj_Calendario@Time(15), 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  i               1    7[COMRAM] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  1    wreg      void 
  7860 ;; Registers used:
  7861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7867 ;;      Params:         2       0       0       0       0       0       0       0       0
  7868 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7869 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7870 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7871 ;;Total ram usage:        6 bytes
  7872 ;; Hardware stack levels used: 1
  7873 ;; Hardware stack levels required when called: 1
  7874 ;; This function calls:
  7875 ;;		_LCD_Write_Nibble
  7876 ;; This function is called by:
  7877 ;;		_Reloj_Calendario
  7878 ;;		_Mostrar_Temperatura
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text35
  7883  0034BA                     __ptext35:
  7884                           	callstack 0
  7885  0034BA                     _LCD_Print:
  7886                           	callstack 28
  7887  0034BA                     
  7888                           ;./LCD_librery.h: 99: void LCD_Print(char* LCD_Str);./LCD_librery.h: 100: {;./LCD_librer
      +                          y.h: 101:   uint8_t i = 0;
  7889  0034BA  0E00               	movlw	0
  7890  0034BC  6E08               	movwf	LCD_Print@i^0,c
  7891  0034BE                     
  7892                           ;./LCD_librery.h: 102:   RS = 1;
  7893  0034BE  0100               	movlb	0	; () banked
  7894  0034C0  81F8               	bsf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  7895                           
  7896                           ;./LCD_librery.h: 103:   while(LCD_Str[i] != '\0')
  7897  0034C2  EF97  F01A         	goto	l4238
  7898  0034C6                     l4234:
  7899                           
  7900                           ;./LCD_librery.h: 104:   {;./LCD_librery.h: 105:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  7901  0034C6  5008               	movf	LCD_Print@i^0,w,c
  7902  0034C8  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  7903  0034CA  6E05               	movwf	??_LCD_Print^0,c
  7904  0034CC  0E00               	movlw	0
  7905  0034CE  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  7906  0034D0  6E06               	movwf	(??_LCD_Print+1)^0,c
  7907  0034D2  C005  FFF6         	movff	??_LCD_Print,tblptrl
  7908  0034D6  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  7909  0034DA  6AF8               	clrf	tblptru,c
  7910  0034DC  0E07               	movlw	(high __ramtop+-1)
  7911  0034DE  64F7               	cpfsgt	tblptrh,c
  7912  0034E0  D003               	bra	u4787
  7913  0034E2  0008               	tblrd		*
  7914  0034E4  50F5               	movf	tablat,w,c
  7915  0034E6  D005               	bra	u4780
  7916  0034E8                     u4787:
  7917  0034E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7918  0034EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7919  0034F0  50E7               	movf	indf1,w,c
  7920  0034F2                     u4780:
  7921  0034F2  6E07               	movwf	(??_LCD_Print+2)^0,c
  7922  0034F4  3807               	swapf	(??_LCD_Print+2)^0,w,c
  7923  0034F6  0B0F               	andlw	15
  7924  0034F8  ECFF  F01C         	call	_LCD_Write_Nibble
  7925                           
  7926                           ;./LCD_librery.h: 106:     LCD_Write_Nibble(LCD_Str[i++] );
  7927  0034FC  5008               	movf	LCD_Print@i^0,w,c
  7928  0034FE  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  7929  003500  6E05               	movwf	??_LCD_Print^0,c
  7930  003502  0E00               	movlw	0
  7931  003504  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  7932  003506  6E06               	movwf	(??_LCD_Print+1)^0,c
  7933  003508  C005  FFF6         	movff	??_LCD_Print,tblptrl
  7934  00350C  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  7935  003510  6AF8               	clrf	tblptru,c
  7936  003512  0E07               	movlw	(high __ramtop+-1)
  7937  003514  64F7               	cpfsgt	tblptrh,c
  7938  003516  D003               	bra	u4797
  7939  003518  0008               	tblrd		*
  7940  00351A  50F5               	movf	tablat,w,c
  7941  00351C  D005               	bra	u4790
  7942  00351E                     u4797:
  7943  00351E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7944  003522  CFF7 FFE2          	movff	tblptrh,fsr1h
  7945  003526  50E7               	movf	indf1,w,c
  7946  003528                     u4790:
  7947  003528  ECFF  F01C         	call	_LCD_Write_Nibble
  7948  00352C  2A08               	incf	LCD_Print@i^0,f,c
  7949  00352E                     l4238:
  7950                           
  7951                           ;./LCD_librery.h: 103:   while(LCD_Str[i] != '\0')
  7952  00352E  5008               	movf	LCD_Print@i^0,w,c
  7953  003530  2403               	addwf	LCD_Print@LCD_Str^0,w,c
  7954  003532  6E05               	movwf	??_LCD_Print^0,c
  7955  003534  0E00               	movlw	0
  7956  003536  2004               	addwfc	(LCD_Print@LCD_Str+1)^0,w,c
  7957  003538  6E06               	movwf	(??_LCD_Print+1)^0,c
  7958  00353A  C005  FFF6         	movff	??_LCD_Print,tblptrl
  7959  00353E  C006  FFF7         	movff	??_LCD_Print+1,tblptrh
  7960  003542  6AF8               	clrf	tblptru,c
  7961  003544  0E07               	movlw	(high __ramtop+-1)
  7962  003546  64F7               	cpfsgt	tblptrh,c
  7963  003548  D003               	bra	u4807
  7964  00354A  0008               	tblrd		*
  7965  00354C  50F5               	movf	tablat,w,c
  7966  00354E  D005               	bra	u4800
  7967  003550                     u4807:
  7968  003550  CFF6 FFE1          	movff	tblptrl,fsr1l
  7969  003554  CFF7 FFE2          	movff	tblptrh,fsr1h
  7970  003558  50E7               	movf	indf1,w,c
  7971  00355A                     u4800:
  7972  00355A  0900               	iorlw	0
  7973  00355C  A4D8               	btfss	status,2,c
  7974  00355E  EFB3  F01A         	goto	u4811
  7975  003562  EFB5  F01A         	goto	u4810
  7976  003566                     u4811:
  7977  003566  EF63  F01A         	goto	l4234
  7978  00356A                     u4810:
  7979  00356A  0012               	return		;funcret
  7980  00356C                     __end_of_LCD_Print:
  7981                           	callstack 0
  7982                           
  7983 ;; *************** function _LCD_Goto *****************
  7984 ;; Defined at:
  7985 ;;		line 73 in file "./LCD_librery.h"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  col             1    wreg     unsigned char 
  7988 ;;  row             1    4[COMRAM] unsigned char 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;  col             1    7[COMRAM] unsigned char 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  1    wreg      void 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0, cstack
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8000 ;;      Params:         1       0       0       0       0       0       0       0       0
  8001 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8002 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8003 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8004 ;;Total ram usage:        4 bytes
  8005 ;; Hardware stack levels used: 1
  8006 ;; Hardware stack levels required when called: 2
  8007 ;; This function calls:
  8008 ;;		_LCD_Cmd
  8009 ;; This function is called by:
  8010 ;;		_Reloj_Calendario
  8011 ;;		_Mostrar_Temperatura
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text36
  8016  003A90                     __ptext36:
  8017                           	callstack 0
  8018  003A90                     _LCD_Goto:
  8019                           	callstack 27
  8020                           
  8021                           ;incstack = 0
  8022                           ;LCD_Goto@col stored from wreg
  8023  003A90  6E08               	movwf	LCD_Goto@col^0,c
  8024  003A92                     
  8025                           ;./LCD_librery.h: 73: void LCD_Goto(uint8_t col, uint8_t row);./LCD_librery.h: 74: {;./L
      +                          CD_librery.h: 75:   switch(row)
  8026  003A92  EF63  F01D         	goto	l4224
  8027  003A96                     l4216:
  8028                           
  8029                           ;./LCD_librery.h: 78:       LCD_Cmd(0xC0 + col - 1);
  8030  003A96  5008               	movf	LCD_Goto@col^0,w,c
  8031  003A98  0FBF               	addlw	191
  8032  003A9A  ECB9  F01E         	call	_LCD_Cmd
  8033                           
  8034                           ;./LCD_librery.h: 79:       break;
  8035  003A9E  EF7C  F01D         	goto	l166
  8036  003AA2                     l4218:
  8037                           
  8038                           ;./LCD_librery.h: 81:       LCD_Cmd(0x94 + col - 1);
  8039  003AA2  5008               	movf	LCD_Goto@col^0,w,c
  8040  003AA4  0F93               	addlw	147
  8041  003AA6  ECB9  F01E         	call	_LCD_Cmd
  8042                           
  8043                           ;./LCD_librery.h: 82:       break;
  8044  003AAA  EF7C  F01D         	goto	l166
  8045  003AAE                     l4220:
  8046                           
  8047                           ;./LCD_librery.h: 84:       LCD_Cmd(0xD4 + col - 1);
  8048  003AAE  5008               	movf	LCD_Goto@col^0,w,c
  8049  003AB0  0FD3               	addlw	211
  8050  003AB2  ECB9  F01E         	call	_LCD_Cmd
  8051                           
  8052                           ;./LCD_librery.h: 85:     break;
  8053  003AB6  EF7C  F01D         	goto	l166
  8054  003ABA                     l4222:
  8055                           
  8056                           ;./LCD_librery.h: 87:       LCD_Cmd(0x80 + col - 1);
  8057  003ABA  5008               	movf	LCD_Goto@col^0,w,c
  8058  003ABC  0F7F               	addlw	127
  8059  003ABE  ECB9  F01E         	call	_LCD_Cmd
  8060                           
  8061                           ;./LCD_librery.h: 88:   }
  8062  003AC2  EF7C  F01D         	goto	l166
  8063  003AC6                     l4224:
  8064  003AC6  5005               	movf	LCD_Goto@row^0,w,c
  8065  003AC8  6E06               	movwf	??_LCD_Goto^0,c
  8066  003ACA  6A07               	clrf	(??_LCD_Goto+1)^0,c
  8067                           
  8068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8069                           ; Switch size 1, requested type "simple"
  8070                           ; Number of cases is 1, Range of values is 0 to 0
  8071                           ; switch strategies available:
  8072                           ; Name         Instructions Cycles
  8073                           ; simple_byte            4     3 (average)
  8074                           ;	Chosen strategy is simple_byte
  8075  003ACC  5007               	movf	(??_LCD_Goto+1)^0,w,c
  8076  003ACE  0A00               	xorlw	0	; case 0
  8077  003AD0  B4D8               	btfsc	status,2,c
  8078  003AD2  EF6D  F01D         	goto	l4672
  8079  003AD6  EF5D  F01D         	goto	l4222
  8080  003ADA                     l4672:
  8081                           
  8082                           ; Switch size 1, requested type "simple"
  8083                           ; Number of cases is 3, Range of values is 2 to 4
  8084                           ; switch strategies available:
  8085                           ; Name         Instructions Cycles
  8086                           ; simple_byte           10     6 (average)
  8087                           ;	Chosen strategy is simple_byte
  8088  003ADA  5006               	movf	??_LCD_Goto^0,w,c
  8089  003ADC  0A02               	xorlw	2	; case 2
  8090  003ADE  B4D8               	btfsc	status,2,c
  8091  003AE0  EF4B  F01D         	goto	l4216
  8092  003AE4  0A01               	xorlw	1	; case 3
  8093  003AE6  B4D8               	btfsc	status,2,c
  8094  003AE8  EF51  F01D         	goto	l4218
  8095  003AEC  0A07               	xorlw	7	; case 4
  8096  003AEE  B4D8               	btfsc	status,2,c
  8097  003AF0  EF57  F01D         	goto	l4220
  8098  003AF4  EF5D  F01D         	goto	l4222
  8099  003AF8                     l166:
  8100  003AF8  0012               	return		;funcret
  8101  003AFA                     __end_of_LCD_Goto:
  8102                           	callstack 0
  8103                           
  8104 ;; *************** function _LCD_Cmd *****************
  8105 ;; Defined at:
  8106 ;;		line 64 in file "./LCD_librery.h"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  Command         1    wreg     unsigned char 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  Command         1    3[COMRAM] unsigned char 
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		wreg, status,2, status,0, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0
  8121 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8122 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8123 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8124 ;;Total ram usage:        2 bytes
  8125 ;; Hardware stack levels used: 1
  8126 ;; Hardware stack levels required when called: 1
  8127 ;; This function calls:
  8128 ;;		_LCD_Write_Nibble
  8129 ;; This function is called by:
  8130 ;;		_LCD_Goto
  8131 ;;		_LCD_Begin
  8132 ;;		_LCD_Clear
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text37
  8137  003D72                     __ptext37:
  8138                           	callstack 0
  8139  003D72                     _LCD_Cmd:
  8140                           	callstack 27
  8141                           
  8142                           ;incstack = 0
  8143                           ;LCD_Cmd@Command stored from wreg
  8144  003D72  6E04               	movwf	LCD_Cmd@Command^0,c
  8145  003D74                     
  8146                           ;./LCD_librery.h: 64: void LCD_Cmd(uint8_t Command);./LCD_librery.h: 65: {;./LCD_librery
      +                          .h: 66:   RS = 0;
  8147  003D74  0100               	movlb	0	; () banked
  8148  003D76  91F8               	bcf	(_RS/(0+8))& (0+255),_RS& (0+7),b
  8149  003D78                     
  8150                           ; BSR set to: 0
  8151                           ;./LCD_librery.h: 67:   LCD_Write_Nibble(Command >> 4);
  8152  003D78  3804               	swapf	LCD_Cmd@Command^0,w,c
  8153  003D7A  0B0F               	andlw	15
  8154  003D7C  ECFF  F01C         	call	_LCD_Write_Nibble
  8155                           
  8156                           ;./LCD_librery.h: 68:   LCD_Write_Nibble(Command);
  8157  003D80  5004               	movf	LCD_Cmd@Command^0,w,c
  8158  003D82  ECFF  F01C         	call	_LCD_Write_Nibble
  8159  003D86                     
  8160                           ;./LCD_librery.h: 69:   if((Command == 0x01) || (Command == 0x02))
  8161  003D86  0404               	decf	LCD_Cmd@Command^0,w,c
  8162  003D88  B4D8               	btfsc	status,2,c
  8163  003D8A  EFC9  F01E         	goto	u4591
  8164  003D8E  EFCB  F01E         	goto	u4590
  8165  003D92                     u4591:
  8166  003D92  EFD4  F01E         	goto	l4116
  8167  003D96                     u4590:
  8168  003D96  0E02               	movlw	2
  8169  003D98  1804               	xorwf	LCD_Cmd@Command^0,w,c
  8170  003D9A  A4D8               	btfss	status,2,c
  8171  003D9C  EFD2  F01E         	goto	u4601
  8172  003DA0  EFD4  F01E         	goto	u4600
  8173  003DA4                     u4601:
  8174  003DA4  EFDC  F01E         	goto	l157
  8175  003DA8                     u4600:
  8176  003DA8                     l4116:
  8177                           
  8178                           ;./LCD_librery.h: 70:     _delay((unsigned long)((2)*(8000000/4000.0)));
  8179  003DA8  0E06               	movlw	6
  8180  003DAA  6E03               	movwf	??_LCD_Cmd^0,c
  8181  003DAC  0E30               	movlw	48
  8182  003DAE                     u5247:
  8183  003DAE  2EE8               	decfsz	wreg,f,c
  8184  003DB0  D7FE               	bra	u5247
  8185  003DB2  2E03               	decfsz	??_LCD_Cmd^0,f,c
  8186  003DB4  D7FC               	bra	u5247
  8187  003DB6  D000               	nop2	
  8188  003DB8                     l157:
  8189  003DB8  0012               	return		;funcret
  8190  003DBA                     __end_of_LCD_Cmd:
  8191                           	callstack 0
  8192                           
  8193 ;; *************** function _LCD_Write_Nibble *****************
  8194 ;; Defined at:
  8195 ;;		line 47 in file "./LCD_librery.h"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;  n               1    wreg     unsigned char 
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  n               1    1[COMRAM] unsigned char 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		wreg, status,2, status,0
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8209 ;;      Params:         0       0       0       0       0       0       0       0       0
  8210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8211 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8212 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8213 ;;Total ram usage:        2 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_LCD_Cmd
  8219 ;;		_LCD_Print
  8220 ;;		_LCD_PutC
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text38
  8225  0039FE                     __ptext38:
  8226                           	callstack 0
  8227  0039FE                     _LCD_Write_Nibble:
  8228                           	callstack 28
  8229                           
  8230                           ;incstack = 0
  8231                           ;LCD_Write_Nibble@n stored from wreg
  8232  0039FE  6E02               	movwf	LCD_Write_Nibble@n^0,c
  8233  003A00                     
  8234                           ;./LCD_librery.h: 47: void LCD_Write_Nibble(uint8_t n);./LCD_librery.h: 48: {;./LCD_libr
      +                          ery.h: 49:   LATCbits.LC0 = RS;
  8235  003A00  0100               	movlb	0	; () banked
  8236  003A02  A1F8               	btfss	(_RS/(0+8))& (0+255),_RS& (0+7),b
  8237  003A04  D002               	bra	u4015
  8238  003A06  808B               	bsf	139,0,c	;volatile
  8239  003A08  D001               	bra	u4017
  8240  003A0A                     u4015:
  8241  003A0A  908B               	bcf	139,0,c	;volatile
  8242  003A0C                     u4017:
  8243  003A0C                     
  8244                           ;./LCD_librery.h: 50:   LATDbits.LD4 = n & 0x01;
  8245  003A0C  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  8246  003A10  0E01               	movlw	1
  8247  003A12  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  8248  003A14  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  8249  003A16  508C               	movf	140,w,c	;volatile
  8250  003A18  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8251  003A1A  0BEF               	andlw	-17
  8252  003A1C  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8253  003A1E  6E8C               	movwf	140,c	;volatile
  8254                           
  8255                           ;./LCD_librery.h: 51:   LATDbits.LD5 = (n >> 1) & 0x01;
  8256  003A20  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  8257  003A24  90D8               	bcf	status,0,c
  8258  003A26  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8259  003A28  0E01               	movlw	1
  8260  003A2A  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  8261  003A2C  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  8262  003A2E  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  8263  003A30  508C               	movf	140,w,c	;volatile
  8264  003A32  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8265  003A34  0BDF               	andlw	-33
  8266  003A36  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8267  003A38  6E8C               	movwf	140,c	;volatile
  8268                           
  8269                           ;./LCD_librery.h: 52:   LATDbits.LD6 = (n >> 2) & 0x01;
  8270  003A3A  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  8271  003A3E  90D8               	bcf	status,0,c
  8272  003A40  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8273  003A42  90D8               	bcf	status,0,c
  8274  003A44  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8275  003A46  0E01               	movlw	1
  8276  003A48  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  8277  003A4A  3A01               	swapf	??_LCD_Write_Nibble^0,f,c
  8278  003A4C  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  8279  003A4E  4601               	rlncf	??_LCD_Write_Nibble^0,f,c
  8280  003A50  508C               	movf	140,w,c	;volatile
  8281  003A52  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8282  003A54  0BBF               	andlw	-65
  8283  003A56  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8284  003A58  6E8C               	movwf	140,c	;volatile
  8285                           
  8286                           ;./LCD_librery.h: 53:   LATDbits.LD7 = (n >> 3) & 0x01;
  8287  003A5A  C002  F001         	movff	LCD_Write_Nibble@n,??_LCD_Write_Nibble
  8288  003A5E  90D8               	bcf	status,0,c
  8289  003A60  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8290  003A62  90D8               	bcf	status,0,c
  8291  003A64  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8292  003A66  90D8               	bcf	status,0,c
  8293  003A68  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8294  003A6A  0E01               	movlw	1
  8295  003A6C  1601               	andwf	??_LCD_Write_Nibble^0,f,c
  8296  003A6E  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8297  003A70  3201               	rrcf	??_LCD_Write_Nibble^0,f,c
  8298  003A72  508C               	movf	140,w,c	;volatile
  8299  003A74  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8300  003A76  0B7F               	andlw	-129
  8301  003A78  1801               	xorwf	??_LCD_Write_Nibble^0,w,c
  8302  003A7A  6E8C               	movwf	140,c	;volatile
  8303  003A7C                     
  8304                           ;./LCD_librery.h: 56:   LATCbits.LC1 = 0;
  8305  003A7C  928B               	bcf	139,1,c	;volatile
  8306  003A7E                     
  8307                           ;./LCD_librery.h: 57:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  8308  003A7E  D000               	nop2		;2 cycle nop
  8309  003A80                     
  8310                           ;./LCD_librery.h: 58:   LATCbits.LC1 = 1;
  8311  003A80  828B               	bsf	139,1,c	;volatile
  8312  003A82                     
  8313                           ;./LCD_librery.h: 59:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  8314  003A82  D000               	nop2		;2 cycle nop
  8315  003A84                     
  8316                           ;./LCD_librery.h: 60:   LATCbits.LC1 = 0;
  8317  003A84  928B               	bcf	139,1,c	;volatile
  8318  003A86                     
  8319                           ;./LCD_librery.h: 61:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  8320  003A86  0E42               	movlw	66
  8321  003A88                     u5257:
  8322  003A88  2EE8               	decfsz	wreg,f,c
  8323  003A8A  D7FE               	bra	u5257
  8324  003A8C  D000               	nop2	
  8325  003A8E  0012               	return		;funcret
  8326  003A90                     __end_of_LCD_Write_Nibble:
  8327                           	callstack 0
  8328                           
  8329 ;; *************** function _BCD_a_Decimal *****************
  8330 ;; Defined at:
  8331 ;;		line 60 in file "Main.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  numero          1    wreg     unsigned char 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  numero          1    1[COMRAM] unsigned char 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      unsigned char 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, prodl, prodh
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8345 ;;      Params:         0       0       0       0       0       0       0       0       0
  8346 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8347 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8348 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8349 ;;Total ram usage:        2 bytes
  8350 ;; Hardware stack levels used: 1
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_Reloj_Calendario
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text39
  8359  003FFA                     __ptext39:
  8360                           	callstack 0
  8361  003FFA                     _BCD_a_Decimal:
  8362                           	callstack 28
  8363                           
  8364                           ;incstack = 0
  8365                           ;BCD_a_Decimal@numero stored from wreg
  8366  003FFA  6E02               	movwf	BCD_a_Decimal@numero^0,c
  8367  003FFC                     
  8368                           ;Main.c: 60: uint8_t BCD_a_Decimal (uint8_t numero);Main.c: 61: {;Main.c: 62:   return (
      +                          (numero >> 4) * 10 + (numero & 0x0F));
  8369  003FFC  C002  F001         	movff	BCD_a_Decimal@numero,??_BCD_a_Decimal
  8370  004000  0E0F               	movlw	15
  8371  004002  1601               	andwf	??_BCD_a_Decimal^0,f,c
  8372  004004  3802               	swapf	BCD_a_Decimal@numero^0,w,c
  8373  004006  0B0F               	andlw	15
  8374  004008  0D0A               	mullw	10
  8375  00400A  50F3               	movf	243,w,c
  8376  00400C  2401               	addwf	??_BCD_a_Decimal^0,w,c
  8377  00400E  0012               	return		;funcret
  8378  004010                     __end_of_BCD_a_Decimal:
  8379                           	callstack 0
  8380                           
  8381 ;; *************** function _Obtener_Temperatura *****************
  8382 ;; Defined at:
  8383 ;;		line 195 in file "Main.c"
  8384 ;; Parameters:    Size  Location     Type
  8385 ;;		None
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  temp            4   56[COMRAM] float 
  8388 ;;  value_adc       2   54[COMRAM] int 
  8389 ;; Return value:  Size  Location     Type
  8390 ;;                  4   50[COMRAM] float 
  8391 ;; Registers used:
  8392 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8393 ;; Tracked objects:
  8394 ;;		On entry : 0/0
  8395 ;;		On exit  : 0/0
  8396 ;;		Unchanged: 0/0
  8397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8398 ;;      Params:         4       0       0       0       0       0       0       0       0
  8399 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8401 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8402 ;;Total ram usage:       10 bytes
  8403 ;; Hardware stack levels used: 1
  8404 ;; Hardware stack levels required when called: 1
  8405 ;; This function calls:
  8406 ;;		_ADC_Read
  8407 ;;		___fldiv
  8408 ;;		___flmul
  8409 ;;		___xxtofl
  8410 ;; This function is called by:
  8411 ;;		_Establecer_Hora
  8412 ;;		_Mostrar_Temperatura
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           	psect	text40
  8417  0036CC                     __ptext40:
  8418                           	callstack 0
  8419  0036CC                     _Obtener_Temperatura:
  8420                           	callstack 28
  8421  0036CC                     
  8422                           ;Main.c: 198:     int value_adc = 0;
  8423  0036CC  0E00               	movlw	0
  8424  0036CE  6E38               	movwf	(Obtener_Temperatura@value_adc+1)^0,c
  8425  0036D0  0E00               	movlw	0
  8426  0036D2  6E37               	movwf	Obtener_Temperatura@value_adc^0,c
  8427  0036D4                     
  8428                           ;Main.c: 200:     value_adc = ADC_Read(0);
  8429  0036D4  0E00               	movlw	0
  8430  0036D6  6E02               	movwf	(ADC_Read@channel+1)^0,c
  8431  0036D8  0E00               	movlw	0
  8432  0036DA  6E01               	movwf	ADC_Read@channel^0,c
  8433  0036DC  EC64  F01C         	call	_ADC_Read	;wreg free
  8434  0036E0  C001  F037         	movff	?_ADC_Read,Obtener_Temperatura@value_adc
  8435  0036E4  C002  F038         	movff	?_ADC_Read+1,Obtener_Temperatura@value_adc+1
  8436  0036E8                     
  8437                           ;Main.c: 201:     temp = value_adc;
  8438  0036E8  C037  F001         	movff	Obtener_Temperatura@value_adc,___xxtofl@val
  8439  0036EC  C038  F002         	movff	Obtener_Temperatura@value_adc+1,___xxtofl@val+1
  8440  0036F0  0E00               	movlw	0
  8441  0036F2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8442  0036F4  0EFF               	movlw	-1
  8443  0036F6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8444  0036F8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8445  0036FA  0E01               	movlw	1
  8446  0036FC  EC6A  F014         	call	___xxtofl
  8447  003700  C001  F039         	movff	?___xxtofl,Obtener_Temperatura@temp
  8448  003704  C002  F03A         	movff	?___xxtofl+1,Obtener_Temperatura@temp+1
  8449  003708  C003  F03B         	movff	?___xxtofl+2,Obtener_Temperatura@temp+2
  8450  00370C  C004  F03C         	movff	?___xxtofl+3,Obtener_Temperatura@temp+3
  8451  003710                     
  8452                           ;Main.c: 202:     temp = (temp * 500.0) / 1023.0;
  8453  003710  0E00               	movlw	0
  8454  003712  6E05               	movwf	___flmul@a^0,c
  8455  003714  0E00               	movlw	0
  8456  003716  6E06               	movwf	(___flmul@a+1)^0,c
  8457  003718  0EFA               	movlw	250
  8458  00371A  6E07               	movwf	(___flmul@a+2)^0,c
  8459  00371C  0E43               	movlw	67
  8460  00371E  6E08               	movwf	(___flmul@a+3)^0,c
  8461  003720  C039  F001         	movff	Obtener_Temperatura@temp,___flmul@b
  8462  003724  C03A  F002         	movff	Obtener_Temperatura@temp+1,___flmul@b+1
  8463  003728  C03B  F003         	movff	Obtener_Temperatura@temp+2,___flmul@b+2
  8464  00372C  C03C  F004         	movff	Obtener_Temperatura@temp+3,___flmul@b+3
  8465  003730  EC95  F00E         	call	___flmul	;wreg free
  8466  003734  C001  F01A         	movff	?___flmul,___fldiv@b
  8467  003738  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
  8468  00373C  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
  8469  003740  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
  8470  003744  0E00               	movlw	0
  8471  003746  6E1E               	movwf	___fldiv@a^0,c
  8472  003748  0EC0               	movlw	192
  8473  00374A  6E1F               	movwf	(___fldiv@a+1)^0,c
  8474  00374C  0E7F               	movlw	127
  8475  00374E  6E20               	movwf	(___fldiv@a+2)^0,c
  8476  003750  0E44               	movlw	68
  8477  003752  6E21               	movwf	(___fldiv@a+3)^0,c
  8478  003754  ECAA  F010         	call	___fldiv	;wreg free
  8479  003758  C01A  F039         	movff	?___fldiv,Obtener_Temperatura@temp
  8480  00375C  C01B  F03A         	movff	?___fldiv+1,Obtener_Temperatura@temp+1
  8481  003760  C01C  F03B         	movff	?___fldiv+2,Obtener_Temperatura@temp+2
  8482  003764  C01D  F03C         	movff	?___fldiv+3,Obtener_Temperatura@temp+3
  8483  003768                     
  8484                           ;Main.c: 204:     return temp;
  8485  003768  C039  F033         	movff	Obtener_Temperatura@temp,?_Obtener_Temperatura
  8486  00376C  C03A  F034         	movff	Obtener_Temperatura@temp+1,?_Obtener_Temperatura+1
  8487  003770  C03B  F035         	movff	Obtener_Temperatura@temp+2,?_Obtener_Temperatura+2
  8488  003774  C03C  F036         	movff	Obtener_Temperatura@temp+3,?_Obtener_Temperatura+3
  8489  003778  0012               	return		;funcret
  8490  00377A                     __end_of_Obtener_Temperatura:
  8491                           	callstack 0
  8492                           
  8493 ;; *************** function ___xxtofl *****************
  8494 ;; Defined at:
  8495 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  sign            1    wreg     unsigned char 
  8498 ;;  val             4    0[COMRAM] long 
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;  sign            1    8[COMRAM] unsigned char 
  8501 ;;  arg             4   10[COMRAM] unsigned long 
  8502 ;;  exp             1    9[COMRAM] unsigned char 
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  4    0[COMRAM] unsigned char 
  8505 ;; Registers used:
  8506 ;;		wreg, status,2, status,0
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8512 ;;      Params:         4       0       0       0       0       0       0       0       0
  8513 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8514 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8515 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8516 ;;Total ram usage:       14 bytes
  8517 ;; Hardware stack levels used: 1
  8518 ;; This function calls:
  8519 ;;		Nothing
  8520 ;; This function is called by:
  8521 ;;		_Obtener_Temperatura
  8522 ;; This function uses a non-reentrant model
  8523 ;;
  8524                           
  8525                           	psect	text41
  8526  0028D4                     __ptext41:
  8527                           	callstack 0
  8528  0028D4                     ___xxtofl:
  8529                           	callstack 28
  8530                           
  8531                           ;incstack = 0
  8532                           ;___xxtofl@sign stored from wreg
  8533  0028D4  6E09               	movwf	___xxtofl@sign^0,c
  8534  0028D6  5009               	movf	___xxtofl@sign^0,w,c
  8535  0028D8  B4D8               	btfsc	status,2,c
  8536  0028DA  EF71  F014         	goto	u4821
  8537  0028DE  EF73  F014         	goto	u4820
  8538  0028E2                     u4821:
  8539  0028E2  EF95  F014         	goto	l909
  8540  0028E6                     u4820:
  8541  0028E6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8542  0028E8  EF7A  F014         	goto	u4830
  8543  0028EC  EF78  F014         	goto	u4831
  8544  0028F0                     u4831:
  8545  0028F0  EF95  F014         	goto	l909
  8546  0028F4                     u4830:
  8547  0028F4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8548  0028F8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8549  0028FC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8550  002900  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8551  002904  1E05               	comf	??___xxtofl^0,f,c
  8552  002906  1E06               	comf	(??___xxtofl+1)^0,f,c
  8553  002908  1E07               	comf	(??___xxtofl+2)^0,f,c
  8554  00290A  1E08               	comf	(??___xxtofl+3)^0,f,c
  8555  00290C  2A05               	incf	??___xxtofl^0,f,c
  8556  00290E  0E00               	movlw	0
  8557  002910  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8558  002912  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8559  002914  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8560  002916  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8561  00291A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8562  00291E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8563  002922  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8564  002926  EF9D  F014         	goto	l4250
  8565  00292A                     l909:
  8566  00292A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8567  00292E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8568  002932  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8569  002936  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8570  00293A                     l4250:
  8571  00293A  5001               	movf	___xxtofl@val^0,w,c
  8572  00293C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8573  00293E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8574  002940  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8575  002942  A4D8               	btfss	status,2,c
  8576  002944  EFA6  F014         	goto	u4841
  8577  002948  EFA8  F014         	goto	u4840
  8578  00294C                     u4841:
  8579  00294C  EFB2  F014         	goto	l4256
  8580  002950                     u4840:
  8581  002950  0E00               	movlw	0
  8582  002952  6E01               	movwf	?___xxtofl^0,c
  8583  002954  0E00               	movlw	0
  8584  002956  6E02               	movwf	(?___xxtofl+1)^0,c
  8585  002958  0E00               	movlw	0
  8586  00295A  6E03               	movwf	(?___xxtofl+2)^0,c
  8587  00295C  0E00               	movlw	0
  8588  00295E  6E04               	movwf	(?___xxtofl+3)^0,c
  8589  002960  EF43  F015         	goto	l912
  8590  002964                     l4256:
  8591  002964  0E96               	movlw	150
  8592  002966  6E0A               	movwf	___xxtofl@exp^0,c
  8593  002968  EFBC  F014         	goto	l4260
  8594  00296C                     l4258:
  8595  00296C  2A0A               	incf	___xxtofl@exp^0,f,c
  8596  00296E  90D8               	bcf	status,0,c
  8597  002970  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8598  002972  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8599  002974  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8600  002976  320B               	rrcf	___xxtofl@arg^0,f,c
  8601  002978                     l4260:
  8602  002978  0E00               	movlw	0
  8603  00297A  140B               	andwf	___xxtofl@arg^0,w,c
  8604  00297C  6E05               	movwf	??___xxtofl^0,c
  8605  00297E  0E00               	movlw	0
  8606  002980  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8607  002982  6E06               	movwf	(??___xxtofl+1)^0,c
  8608  002984  0E00               	movlw	0
  8609  002986  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8610  002988  6E07               	movwf	(??___xxtofl+2)^0,c
  8611  00298A  0EFE               	movlw	254
  8612  00298C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8613  00298E  6E08               	movwf	(??___xxtofl+3)^0,c
  8614  002990  5005               	movf	??___xxtofl^0,w,c
  8615  002992  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8616  002994  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8617  002996  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8618  002998  A4D8               	btfss	status,2,c
  8619  00299A  EFD1  F014         	goto	u4851
  8620  00299E  EFD3  F014         	goto	u4850
  8621  0029A2                     u4851:
  8622  0029A2  EFB6  F014         	goto	l4258
  8623  0029A6                     u4850:
  8624  0029A6  EFE1  F014         	goto	l916
  8625  0029AA                     l4262:
  8626  0029AA  2A0A               	incf	___xxtofl@exp^0,f,c
  8627  0029AC  0E01               	movlw	1
  8628  0029AE  260B               	addwf	___xxtofl@arg^0,f,c
  8629  0029B0  0E00               	movlw	0
  8630  0029B2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8631  0029B4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8632  0029B6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8633  0029B8  90D8               	bcf	status,0,c
  8634  0029BA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8635  0029BC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8636  0029BE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8637  0029C0  320B               	rrcf	___xxtofl@arg^0,f,c
  8638  0029C2                     l916:
  8639  0029C2  0E00               	movlw	0
  8640  0029C4  140B               	andwf	___xxtofl@arg^0,w,c
  8641  0029C6  6E05               	movwf	??___xxtofl^0,c
  8642  0029C8  0E00               	movlw	0
  8643  0029CA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8644  0029CC  6E06               	movwf	(??___xxtofl+1)^0,c
  8645  0029CE  0E00               	movlw	0
  8646  0029D0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8647  0029D2  6E07               	movwf	(??___xxtofl+2)^0,c
  8648  0029D4  0EFF               	movlw	255
  8649  0029D6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8650  0029D8  6E08               	movwf	(??___xxtofl+3)^0,c
  8651  0029DA  5005               	movf	??___xxtofl^0,w,c
  8652  0029DC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8653  0029DE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8654  0029E0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8655  0029E2  A4D8               	btfss	status,2,c
  8656  0029E4  EFF6  F014         	goto	u4861
  8657  0029E8  EFF8  F014         	goto	u4860
  8658  0029EC                     u4861:
  8659  0029EC  EFD5  F014         	goto	l4262
  8660  0029F0                     u4860:
  8661  0029F0  EF00  F015         	goto	l4270
  8662  0029F4                     l4268:
  8663  0029F4  060A               	decf	___xxtofl@exp^0,f,c
  8664  0029F6  90D8               	bcf	status,0,c
  8665  0029F8  360B               	rlcf	___xxtofl@arg^0,f,c
  8666  0029FA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8667  0029FC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8668  0029FE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8669  002A00                     l4270:
  8670  002A00  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8671  002A02  EF05  F015         	goto	u4871
  8672  002A06  EF07  F015         	goto	u4870
  8673  002A0A                     u4871:
  8674  002A0A  EF0F  F015         	goto	l923
  8675  002A0E                     u4870:
  8676  002A0E  0E02               	movlw	2
  8677  002A10  600A               	cpfslt	___xxtofl@exp^0,c
  8678  002A12  EF0D  F015         	goto	u4881
  8679  002A16  EF0F  F015         	goto	u4880
  8680  002A1A                     u4881:
  8681  002A1A  EFFA  F014         	goto	l4268
  8682  002A1E                     u4880:
  8683  002A1E                     l923:
  8684  002A1E  B00A               	btfsc	___xxtofl@exp^0,0,c
  8685  002A20  EF14  F015         	goto	u4891
  8686  002A24  EF16  F015         	goto	u4890
  8687  002A28                     u4891:
  8688  002A28  EF17  F015         	goto	l4276
  8689  002A2C                     u4890:
  8690  002A2C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8691  002A2E                     l4276:
  8692  002A2E  90D8               	bcf	status,0,c
  8693  002A30  320A               	rrcf	___xxtofl@exp^0,f,c
  8694  002A32  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8695  002A36  6A06               	clrf	(??___xxtofl+1)^0,c
  8696  002A38  6A07               	clrf	(??___xxtofl+2)^0,c
  8697  002A3A  6A08               	clrf	(??___xxtofl+3)^0,c
  8698  002A3C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8699  002A40  6A07               	clrf	(??___xxtofl+2)^0,c
  8700  002A42  6A06               	clrf	(??___xxtofl+1)^0,c
  8701  002A44  6A05               	clrf	??___xxtofl^0,c
  8702  002A46  5005               	movf	??___xxtofl^0,w,c
  8703  002A48  120B               	iorwf	___xxtofl@arg^0,f,c
  8704  002A4A  5006               	movf	(??___xxtofl+1)^0,w,c
  8705  002A4C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8706  002A4E  5007               	movf	(??___xxtofl+2)^0,w,c
  8707  002A50  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8708  002A52  5008               	movf	(??___xxtofl+3)^0,w,c
  8709  002A54  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8710  002A56  5009               	movf	___xxtofl@sign^0,w,c
  8711  002A58  B4D8               	btfsc	status,2,c
  8712  002A5A  EF31  F015         	goto	u4901
  8713  002A5E  EF33  F015         	goto	u4900
  8714  002A62                     u4901:
  8715  002A62  EF3B  F015         	goto	l4286
  8716  002A66                     u4900:
  8717  002A66  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8718  002A68  EF3A  F015         	goto	u4910
  8719  002A6C  EF38  F015         	goto	u4911
  8720  002A70                     u4911:
  8721  002A70  EF3B  F015         	goto	l4286
  8722  002A74                     u4910:
  8723  002A74  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8724  002A76                     l4286:
  8725  002A76  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8726  002A7A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8727  002A7E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8728  002A82  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8729  002A86                     l912:
  8730  002A86  0012               	return		;funcret
  8731  002A88                     __end_of___xxtofl:
  8732                           	callstack 0
  8733                           
  8734 ;; *************** function ___flmul *****************
  8735 ;; Defined at:
  8736 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  b               4    0[COMRAM] unsigned char 
  8739 ;;  a               4    4[COMRAM] unsigned char 
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;  prod            4   19[COMRAM] struct .
  8742 ;;  grs             4   13[COMRAM] unsigned long 
  8743 ;;  temp            2   23[COMRAM] struct .
  8744 ;;  bexp            1   18[COMRAM] unsigned char 
  8745 ;;  aexp            1   17[COMRAM] unsigned char 
  8746 ;;  sign            1   12[COMRAM] unsigned char 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  4    0[COMRAM] unsigned char 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0, prodl, prodh
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8756 ;;      Params:         8       0       0       0       0       0       0       0       0
  8757 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8758 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8759 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8760 ;;Total ram usage:       25 bytes
  8761 ;; Hardware stack levels used: 1
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_Obtener_Temperatura
  8766 ;;		_efgtoa
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text42
  8771  001D2A                     __ptext42:
  8772                           	callstack 0
  8773  001D2A                     ___flmul:
  8774                           	callstack 25
  8775  001D2A  5004               	movf	(___flmul@b+3)^0,w,c
  8776  001D2C  0B80               	andlw	128
  8777  001D2E  6E0D               	movwf	___flmul@sign^0,c
  8778  001D30  5004               	movf	(___flmul@b+3)^0,w,c
  8779  001D32  2404               	addwf	(___flmul@b+3)^0,w,c
  8780  001D34  6E13               	movwf	___flmul@bexp^0,c
  8781  001D36  AE03               	btfss	(___flmul@b+2)^0,7,c
  8782  001D38  EFA0  F00E         	goto	u3261
  8783  001D3C  EFA2  F00E         	goto	u3260
  8784  001D40                     u3261:
  8785  001D40  EFA3  F00E         	goto	l3332
  8786  001D44                     u3260:
  8787  001D44  8013               	bsf	___flmul@bexp^0,0,c
  8788  001D46                     l3332:
  8789  001D46  5013               	movf	___flmul@bexp^0,w,c
  8790  001D48  B4D8               	btfsc	status,2,c
  8791  001D4A  EFA9  F00E         	goto	u3271
  8792  001D4E  EFAB  F00E         	goto	u3270
  8793  001D52                     u3271:
  8794  001D52  EFBE  F00E         	goto	l3340
  8795  001D56                     u3270:
  8796  001D56  2813               	incf	___flmul@bexp^0,w,c
  8797  001D58  A4D8               	btfss	status,2,c
  8798  001D5A  EFB1  F00E         	goto	u3281
  8799  001D5E  EFB3  F00E         	goto	u3280
  8800  001D62                     u3281:
  8801  001D62  EFBB  F00E         	goto	l3338
  8802  001D66                     u3280:
  8803  001D66  0E00               	movlw	0
  8804  001D68  6E01               	movwf	___flmul@b^0,c
  8805  001D6A  0E00               	movlw	0
  8806  001D6C  6E02               	movwf	(___flmul@b+1)^0,c
  8807  001D6E  0E00               	movlw	0
  8808  001D70  6E03               	movwf	(___flmul@b+2)^0,c
  8809  001D72  0E00               	movlw	0
  8810  001D74  6E04               	movwf	(___flmul@b+3)^0,c
  8811  001D76                     l3338:
  8812  001D76  8E03               	bsf	(___flmul@b+2)^0,7,c
  8813  001D78  EFC6  F00E         	goto	l3342
  8814  001D7C                     l3340:
  8815  001D7C  0E00               	movlw	0
  8816  001D7E  6E01               	movwf	___flmul@b^0,c
  8817  001D80  0E00               	movlw	0
  8818  001D82  6E02               	movwf	(___flmul@b+1)^0,c
  8819  001D84  0E00               	movlw	0
  8820  001D86  6E03               	movwf	(___flmul@b+2)^0,c
  8821  001D88  0E00               	movlw	0
  8822  001D8A  6E04               	movwf	(___flmul@b+3)^0,c
  8823  001D8C                     l3342:
  8824  001D8C  5008               	movf	(___flmul@a+3)^0,w,c
  8825  001D8E  0B80               	andlw	128
  8826  001D90  1A0D               	xorwf	___flmul@sign^0,f,c
  8827  001D92  5008               	movf	(___flmul@a+3)^0,w,c
  8828  001D94  2408               	addwf	(___flmul@a+3)^0,w,c
  8829  001D96  6E12               	movwf	___flmul@aexp^0,c
  8830  001D98  AE07               	btfss	(___flmul@a+2)^0,7,c
  8831  001D9A  EFD1  F00E         	goto	u3291
  8832  001D9E  EFD3  F00E         	goto	u3290
  8833  001DA2                     u3291:
  8834  001DA2  EFD4  F00E         	goto	l3350
  8835  001DA6                     u3290:
  8836  001DA6  8012               	bsf	___flmul@aexp^0,0,c
  8837  001DA8                     l3350:
  8838  001DA8  5012               	movf	___flmul@aexp^0,w,c
  8839  001DAA  B4D8               	btfsc	status,2,c
  8840  001DAC  EFDA  F00E         	goto	u3301
  8841  001DB0  EFDC  F00E         	goto	u3300
  8842  001DB4                     u3301:
  8843  001DB4  EFEF  F00E         	goto	l3358
  8844  001DB8                     u3300:
  8845  001DB8  2812               	incf	___flmul@aexp^0,w,c
  8846  001DBA  A4D8               	btfss	status,2,c
  8847  001DBC  EFE2  F00E         	goto	u3311
  8848  001DC0  EFE4  F00E         	goto	u3310
  8849  001DC4                     u3311:
  8850  001DC4  EFEC  F00E         	goto	l3356
  8851  001DC8                     u3310:
  8852  001DC8  0E00               	movlw	0
  8853  001DCA  6E05               	movwf	___flmul@a^0,c
  8854  001DCC  0E00               	movlw	0
  8855  001DCE  6E06               	movwf	(___flmul@a+1)^0,c
  8856  001DD0  0E00               	movlw	0
  8857  001DD2  6E07               	movwf	(___flmul@a+2)^0,c
  8858  001DD4  0E00               	movlw	0
  8859  001DD6  6E08               	movwf	(___flmul@a+3)^0,c
  8860  001DD8                     l3356:
  8861  001DD8  8E07               	bsf	(___flmul@a+2)^0,7,c
  8862  001DDA  EFF7  F00E         	goto	l868
  8863  001DDE                     l3358:
  8864  001DDE  0E00               	movlw	0
  8865  001DE0  6E05               	movwf	___flmul@a^0,c
  8866  001DE2  0E00               	movlw	0
  8867  001DE4  6E06               	movwf	(___flmul@a+1)^0,c
  8868  001DE6  0E00               	movlw	0
  8869  001DE8  6E07               	movwf	(___flmul@a+2)^0,c
  8870  001DEA  0E00               	movlw	0
  8871  001DEC  6E08               	movwf	(___flmul@a+3)^0,c
  8872  001DEE                     l868:
  8873  001DEE  5012               	movf	___flmul@aexp^0,w,c
  8874  001DF0  B4D8               	btfsc	status,2,c
  8875  001DF2  EFFD  F00E         	goto	u3321
  8876  001DF6  EFFF  F00E         	goto	u3320
  8877  001DFA                     u3321:
  8878  001DFA  EF07  F00F         	goto	l3362
  8879  001DFE                     u3320:
  8880  001DFE  5013               	movf	___flmul@bexp^0,w,c
  8881  001E00  A4D8               	btfss	status,2,c
  8882  001E02  EF05  F00F         	goto	u3331
  8883  001E06  EF07  F00F         	goto	u3330
  8884  001E0A                     u3331:
  8885  001E0A  EF11  F00F         	goto	l3366
  8886  001E0E                     u3330:
  8887  001E0E                     l3362:
  8888  001E0E  0E00               	movlw	0
  8889  001E10  6E01               	movwf	?___flmul^0,c
  8890  001E12  0E00               	movlw	0
  8891  001E14  6E02               	movwf	(?___flmul+1)^0,c
  8892  001E16  0E00               	movlw	0
  8893  001E18  6E03               	movwf	(?___flmul+2)^0,c
  8894  001E1A  0E00               	movlw	0
  8895  001E1C  6E04               	movwf	(?___flmul+3)^0,c
  8896  001E1E  EFA9  F010         	goto	l872
  8897  001E22                     l3366:
  8898  001E22  5007               	movf	(___flmul@a+2)^0,w,c
  8899  001E24  0201               	mulwf	___flmul@b^0,c
  8900  001E26  CFF3 F018          	movff	prodl,___flmul@temp
  8901  001E2A  CFF4 F019          	movff	prodh,___flmul@temp+1
  8902  001E2E  5018               	movf	___flmul@temp^0,w,c
  8903  001E30  6E0E               	movwf	___flmul@grs^0,c
  8904  001E32  6A0F               	clrf	(___flmul@grs+1)^0,c
  8905  001E34  6A10               	clrf	(___flmul@grs+2)^0,c
  8906  001E36  6A11               	clrf	(___flmul@grs+3)^0,c
  8907  001E38  5019               	movf	(___flmul@temp+1)^0,w,c
  8908  001E3A  6E14               	movwf	___flmul@prod^0,c
  8909  001E3C  6A15               	clrf	(___flmul@prod+1)^0,c
  8910  001E3E  6A16               	clrf	(___flmul@prod+2)^0,c
  8911  001E40  6A17               	clrf	(___flmul@prod+3)^0,c
  8912  001E42  5006               	movf	(___flmul@a+1)^0,w,c
  8913  001E44  0202               	mulwf	(___flmul@b+1)^0,c
  8914  001E46  CFF3 F018          	movff	prodl,___flmul@temp
  8915  001E4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  8916  001E4E  5018               	movf	___flmul@temp^0,w,c
  8917  001E50  260E               	addwf	___flmul@grs^0,f,c
  8918  001E52  0E00               	movlw	0
  8919  001E54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8920  001E56  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8921  001E58  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8922  001E5A  5019               	movf	(___flmul@temp+1)^0,w,c
  8923  001E5C  2614               	addwf	___flmul@prod^0,f,c
  8924  001E5E  0E00               	movlw	0
  8925  001E60  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8926  001E62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8927  001E64  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8928  001E66  5005               	movf	___flmul@a^0,w,c
  8929  001E68  0203               	mulwf	(___flmul@b+2)^0,c
  8930  001E6A  CFF3 F018          	movff	prodl,___flmul@temp
  8931  001E6E  CFF4 F019          	movff	prodh,___flmul@temp+1
  8932  001E72  5018               	movf	___flmul@temp^0,w,c
  8933  001E74  260E               	addwf	___flmul@grs^0,f,c
  8934  001E76  0E00               	movlw	0
  8935  001E78  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8936  001E7A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8937  001E7C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8938  001E7E  5019               	movf	(___flmul@temp+1)^0,w,c
  8939  001E80  2614               	addwf	___flmul@prod^0,f,c
  8940  001E82  0E00               	movlw	0
  8941  001E84  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8942  001E86  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8943  001E88  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8944  001E8A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8945  001E8E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8946  001E92  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8947  001E96  6A0E               	clrf	___flmul@grs^0,c
  8948  001E98  5005               	movf	___flmul@a^0,w,c
  8949  001E9A  0202               	mulwf	(___flmul@b+1)^0,c
  8950  001E9C  CFF3 F018          	movff	prodl,___flmul@temp
  8951  001EA0  CFF4 F019          	movff	prodh,___flmul@temp+1
  8952  001EA4  5018               	movf	___flmul@temp^0,w,c
  8953  001EA6  260E               	addwf	___flmul@grs^0,f,c
  8954  001EA8  5019               	movf	(___flmul@temp+1)^0,w,c
  8955  001EAA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8956  001EAC  0E00               	movlw	0
  8957  001EAE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8958  001EB0  0E00               	movlw	0
  8959  001EB2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8960  001EB4  5006               	movf	(___flmul@a+1)^0,w,c
  8961  001EB6  0201               	mulwf	___flmul@b^0,c
  8962  001EB8  CFF3 F018          	movff	prodl,___flmul@temp
  8963  001EBC  CFF4 F019          	movff	prodh,___flmul@temp+1
  8964  001EC0  5018               	movf	___flmul@temp^0,w,c
  8965  001EC2  260E               	addwf	___flmul@grs^0,f,c
  8966  001EC4  5019               	movf	(___flmul@temp+1)^0,w,c
  8967  001EC6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8968  001EC8  0E00               	movlw	0
  8969  001ECA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8970  001ECC  0E00               	movlw	0
  8971  001ECE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8972  001ED0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8973  001ED4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8974  001ED8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8975  001EDC  6A0E               	clrf	___flmul@grs^0,c
  8976  001EDE  5005               	movf	___flmul@a^0,w,c
  8977  001EE0  0201               	mulwf	___flmul@b^0,c
  8978  001EE2  CFF3 F018          	movff	prodl,___flmul@temp
  8979  001EE6  CFF4 F019          	movff	prodh,___flmul@temp+1
  8980  001EEA  5018               	movf	___flmul@temp^0,w,c
  8981  001EEC  260E               	addwf	___flmul@grs^0,f,c
  8982  001EEE  5019               	movf	(___flmul@temp+1)^0,w,c
  8983  001EF0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8984  001EF2  0E00               	movlw	0
  8985  001EF4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8986  001EF6  0E00               	movlw	0
  8987  001EF8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8988  001EFA  5007               	movf	(___flmul@a+2)^0,w,c
  8989  001EFC  0202               	mulwf	(___flmul@b+1)^0,c
  8990  001EFE  CFF3 F018          	movff	prodl,___flmul@temp
  8991  001F02  CFF4 F019          	movff	prodh,___flmul@temp+1
  8992  001F06  5018               	movf	___flmul@temp^0,w,c
  8993  001F08  2614               	addwf	___flmul@prod^0,f,c
  8994  001F0A  5019               	movf	(___flmul@temp+1)^0,w,c
  8995  001F0C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8996  001F0E  0E00               	movlw	0
  8997  001F10  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8998  001F12  0E00               	movlw	0
  8999  001F14  2217               	addwfc	(___flmul@prod+3)^0,f,c
  9000  001F16  5006               	movf	(___flmul@a+1)^0,w,c
  9001  001F18  0203               	mulwf	(___flmul@b+2)^0,c
  9002  001F1A  CFF3 F018          	movff	prodl,___flmul@temp
  9003  001F1E  CFF4 F019          	movff	prodh,___flmul@temp+1
  9004  001F22  5018               	movf	___flmul@temp^0,w,c
  9005  001F24  2614               	addwf	___flmul@prod^0,f,c
  9006  001F26  5019               	movf	(___flmul@temp+1)^0,w,c
  9007  001F28  2215               	addwfc	(___flmul@prod+1)^0,f,c
  9008  001F2A  0E00               	movlw	0
  9009  001F2C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  9010  001F2E  0E00               	movlw	0
  9011  001F30  2217               	addwfc	(___flmul@prod+3)^0,f,c
  9012  001F32  5007               	movf	(___flmul@a+2)^0,w,c
  9013  001F34  0203               	mulwf	(___flmul@b+2)^0,c
  9014  001F36  CFF3 F018          	movff	prodl,___flmul@temp
  9015  001F3A  CFF4 F019          	movff	prodh,___flmul@temp+1
  9016  001F3E  5018               	movf	___flmul@temp^0,w,c
  9017  001F40  6E09               	movwf	??___flmul^0,c
  9018  001F42  5019               	movf	(___flmul@temp+1)^0,w,c
  9019  001F44  6E0A               	movwf	(??___flmul+1)^0,c
  9020  001F46  6A0B               	clrf	(??___flmul+2)^0,c
  9021  001F48  6A0C               	clrf	(??___flmul+3)^0,c
  9022  001F4A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  9023  001F4E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  9024  001F52  C009  F00A         	movff	??___flmul,??___flmul+1
  9025  001F56  6A09               	clrf	??___flmul^0,c
  9026  001F58  5009               	movf	??___flmul^0,w,c
  9027  001F5A  2614               	addwf	___flmul@prod^0,f,c
  9028  001F5C  500A               	movf	(??___flmul+1)^0,w,c
  9029  001F5E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  9030  001F60  500B               	movf	(??___flmul+2)^0,w,c
  9031  001F62  2216               	addwfc	(___flmul@prod+2)^0,f,c
  9032  001F64  500C               	movf	(??___flmul+3)^0,w,c
  9033  001F66  2217               	addwfc	(___flmul@prod+3)^0,f,c
  9034  001F68  C00E  F009         	movff	___flmul@grs,??___flmul
  9035  001F6C  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  9036  001F70  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  9037  001F74  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  9038  001F78  0E19               	movlw	25
  9039  001F7A  EFC4  F00F         	goto	u3340
  9040  001F7E                     u3345:
  9041  001F7E  90D8               	bcf	status,0,c
  9042  001F80  320C               	rrcf	(??___flmul+3)^0,f,c
  9043  001F82  320B               	rrcf	(??___flmul+2)^0,f,c
  9044  001F84  320A               	rrcf	(??___flmul+1)^0,f,c
  9045  001F86  3209               	rrcf	??___flmul^0,f,c
  9046  001F88                     u3340:
  9047  001F88  2EE8               	decfsz	wreg,f,c
  9048  001F8A  EFBF  F00F         	goto	u3345
  9049  001F8E  5009               	movf	??___flmul^0,w,c
  9050  001F90  2614               	addwf	___flmul@prod^0,f,c
  9051  001F92  500A               	movf	(??___flmul+1)^0,w,c
  9052  001F94  2215               	addwfc	(___flmul@prod+1)^0,f,c
  9053  001F96  500B               	movf	(??___flmul+2)^0,w,c
  9054  001F98  2216               	addwfc	(___flmul@prod+2)^0,f,c
  9055  001F9A  500C               	movf	(??___flmul+3)^0,w,c
  9056  001F9C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  9057  001F9E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  9058  001FA2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  9059  001FA6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  9060  001FAA  6A0E               	clrf	___flmul@grs^0,c
  9061  001FAC  5012               	movf	___flmul@aexp^0,w,c
  9062  001FAE  C013  F009         	movff	___flmul@bexp,??___flmul
  9063  001FB2  6A0A               	clrf	(??___flmul+1)^0,c
  9064  001FB4  2609               	addwf	??___flmul^0,f,c
  9065  001FB6  0E00               	movlw	0
  9066  001FB8  220A               	addwfc	(??___flmul+1)^0,f,c
  9067  001FBA  0E82               	movlw	130
  9068  001FBC  2409               	addwf	??___flmul^0,w,c
  9069  001FBE  6E18               	movwf	___flmul@temp^0,c
  9070  001FC0  0EFF               	movlw	255
  9071  001FC2  200A               	addwfc	(??___flmul+1)^0,w,c
  9072  001FC4  6E19               	movwf	(___flmul@temp+1)^0,c
  9073  001FC6  EFFA  F00F         	goto	l3414
  9074  001FCA                     l3408:
  9075  001FCA  90D8               	bcf	status,0,c
  9076  001FCC  3614               	rlcf	___flmul@prod^0,f,c
  9077  001FCE  3615               	rlcf	(___flmul@prod+1)^0,f,c
  9078  001FD0  3616               	rlcf	(___flmul@prod+2)^0,f,c
  9079  001FD2  3617               	rlcf	(___flmul@prod+3)^0,f,c
  9080  001FD4  AE11               	btfss	(___flmul@grs+3)^0,7,c
  9081  001FD6  EFEF  F00F         	goto	u3351
  9082  001FDA  EFF1  F00F         	goto	u3350
  9083  001FDE                     u3351:
  9084  001FDE  EFF2  F00F         	goto	l875
  9085  001FE2                     u3350:
  9086  001FE2  8014               	bsf	___flmul@prod^0,0,c
  9087  001FE4                     l875:
  9088  001FE4  90D8               	bcf	status,0,c
  9089  001FE6  360E               	rlcf	___flmul@grs^0,f,c
  9090  001FE8  360F               	rlcf	(___flmul@grs+1)^0,f,c
  9091  001FEA  3610               	rlcf	(___flmul@grs+2)^0,f,c
  9092  001FEC  3611               	rlcf	(___flmul@grs+3)^0,f,c
  9093  001FEE  0618               	decf	___flmul@temp^0,f,c
  9094  001FF0  A0D8               	btfss	status,0,c
  9095  001FF2  0619               	decf	(___flmul@temp+1)^0,f,c
  9096  001FF4                     l3414:
  9097  001FF4  AE16               	btfss	(___flmul@prod+2)^0,7,c
  9098  001FF6  EFFF  F00F         	goto	u3361
  9099  001FFA  EF01  F010         	goto	u3360
  9100  001FFE                     u3361:
  9101  001FFE  EFE5  F00F         	goto	l3408
  9102  002002                     u3360:
  9103  002002  0E00               	movlw	0
  9104  002004  6E12               	movwf	___flmul@aexp^0,c
  9105  002006  AE11               	btfss	(___flmul@grs+3)^0,7,c
  9106  002008  EF08  F010         	goto	u3371
  9107  00200C  EF0A  F010         	goto	u3370
  9108  002010                     u3371:
  9109  002010  EF2E  F010         	goto	l877
  9110  002014                     u3370:
  9111  002014  0EFF               	movlw	255
  9112  002016  140E               	andwf	___flmul@grs^0,w,c
  9113  002018  6E09               	movwf	??___flmul^0,c
  9114  00201A  0EFF               	movlw	255
  9115  00201C  140F               	andwf	(___flmul@grs+1)^0,w,c
  9116  00201E  6E0A               	movwf	(??___flmul+1)^0,c
  9117  002020  0EFF               	movlw	255
  9118  002022  1410               	andwf	(___flmul@grs+2)^0,w,c
  9119  002024  6E0B               	movwf	(??___flmul+2)^0,c
  9120  002026  0E7F               	movlw	127
  9121  002028  1411               	andwf	(___flmul@grs+3)^0,w,c
  9122  00202A  6E0C               	movwf	(??___flmul+3)^0,c
  9123  00202C  5009               	movf	??___flmul^0,w,c
  9124  00202E  100A               	iorwf	(??___flmul+1)^0,w,c
  9125  002030  100B               	iorwf	(??___flmul+2)^0,w,c
  9126  002032  100C               	iorwf	(??___flmul+3)^0,w,c
  9127  002034  B4D8               	btfsc	status,2,c
  9128  002036  EF1F  F010         	goto	u3381
  9129  00203A  EF21  F010         	goto	u3380
  9130  00203E                     u3381:
  9131  00203E  EF25  F010         	goto	l878
  9132  002042                     u3380:
  9133  002042                     l3422:
  9134  002042  0E01               	movlw	1
  9135  002044  6E12               	movwf	___flmul@aexp^0,c
  9136  002046  EF2E  F010         	goto	l877
  9137  00204A                     l878:
  9138  00204A  A014               	btfss	___flmul@prod^0,0,c
  9139  00204C  EF2A  F010         	goto	u3391
  9140  002050  EF2C  F010         	goto	u3390
  9141  002054                     u3391:
  9142  002054  EF2E  F010         	goto	l877
  9143  002058                     u3390:
  9144  002058  EF21  F010         	goto	l3422
  9145  00205C                     l877:
  9146  00205C  5012               	movf	___flmul@aexp^0,w,c
  9147  00205E  B4D8               	btfsc	status,2,c
  9148  002060  EF34  F010         	goto	u3401
  9149  002064  EF36  F010         	goto	u3400
  9150  002068                     u3401:
  9151  002068  EF5A  F010         	goto	l3434
  9152  00206C                     u3400:
  9153  00206C  0E01               	movlw	1
  9154  00206E  2614               	addwf	___flmul@prod^0,f,c
  9155  002070  0E00               	movlw	0
  9156  002072  2215               	addwfc	(___flmul@prod+1)^0,f,c
  9157  002074  2216               	addwfc	(___flmul@prod+2)^0,f,c
  9158  002076  2217               	addwfc	(___flmul@prod+3)^0,f,c
  9159  002078  A017               	btfss	(___flmul@prod+3)^0,0,c
  9160  00207A  EF41  F010         	goto	u3411
  9161  00207E  EF43  F010         	goto	u3410
  9162  002082                     u3411:
  9163  002082  EF5A  F010         	goto	l3434
  9164  002086                     u3410:
  9165  002086  C014  F009         	movff	___flmul@prod,??___flmul
  9166  00208A  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  9167  00208E  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  9168  002092  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  9169  002096  340C               	rlcf	(??___flmul+3)^0,w,c
  9170  002098  320C               	rrcf	(??___flmul+3)^0,f,c
  9171  00209A  320B               	rrcf	(??___flmul+2)^0,f,c
  9172  00209C  320A               	rrcf	(??___flmul+1)^0,f,c
  9173  00209E  3209               	rrcf	??___flmul^0,f,c
  9174  0020A0  C009  F014         	movff	??___flmul,___flmul@prod
  9175  0020A4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  9176  0020A8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  9177  0020AC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  9178  0020B0  4A18               	infsnz	___flmul@temp^0,f,c
  9179  0020B2  2A19               	incf	(___flmul@temp+1)^0,f,c
  9180  0020B4                     l3434:
  9181  0020B4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  9182  0020B6  EF65  F010         	goto	u3421
  9183  0020BA  5019               	movf	(___flmul@temp+1)^0,w,c
  9184  0020BC  E108               	bnz	u3420
  9185  0020BE  2818               	incf	___flmul@temp^0,w,c
  9186  0020C0  A0D8               	btfss	status,0,c
  9187  0020C2  EF65  F010         	goto	u3421
  9188  0020C6  EF67  F010         	goto	u3420
  9189  0020CA                     u3421:
  9190  0020CA  EF71  F010         	goto	l3438
  9191  0020CE                     u3420:
  9192  0020CE  0E00               	movlw	0
  9193  0020D0  6E14               	movwf	___flmul@prod^0,c
  9194  0020D2  0E00               	movlw	0
  9195  0020D4  6E15               	movwf	(___flmul@prod+1)^0,c
  9196  0020D6  0E80               	movlw	128
  9197  0020D8  6E16               	movwf	(___flmul@prod+2)^0,c
  9198  0020DA  0E7F               	movlw	127
  9199  0020DC  6E17               	movwf	(___flmul@prod+3)^0,c
  9200  0020DE  EF9F  F010         	goto	l3450
  9201  0020E2                     l3438:
  9202  0020E2  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  9203  0020E4  EF7E  F010         	goto	u3430
  9204  0020E8  5019               	movf	(___flmul@temp+1)^0,w,c
  9205  0020EA  E106               	bnz	u3431
  9206  0020EC  0418               	decf	___flmul@temp^0,w,c
  9207  0020EE  B0D8               	btfsc	status,0,c
  9208  0020F0  EF7C  F010         	goto	u3431
  9209  0020F4  EF7E  F010         	goto	u3430
  9210  0020F8                     u3431:
  9211  0020F8  EF8A  F010         	goto	l885
  9212  0020FC                     u3430:
  9213  0020FC  0E00               	movlw	0
  9214  0020FE  6E14               	movwf	___flmul@prod^0,c
  9215  002100  0E00               	movlw	0
  9216  002102  6E15               	movwf	(___flmul@prod+1)^0,c
  9217  002104  0E00               	movlw	0
  9218  002106  6E16               	movwf	(___flmul@prod+2)^0,c
  9219  002108  0E00               	movlw	0
  9220  00210A  6E17               	movwf	(___flmul@prod+3)^0,c
  9221  00210C  0E00               	movlw	0
  9222  00210E  6E0D               	movwf	___flmul@sign^0,c
  9223  002110  EF9F  F010         	goto	l3450
  9224  002114                     l885:
  9225  002114  C018  F013         	movff	___flmul@temp,___flmul@bexp
  9226  002118  0EFF               	movlw	255
  9227  00211A  1614               	andwf	___flmul@prod^0,f,c
  9228  00211C  0EFF               	movlw	255
  9229  00211E  1615               	andwf	(___flmul@prod+1)^0,f,c
  9230  002120  0E7F               	movlw	127
  9231  002122  1616               	andwf	(___flmul@prod+2)^0,f,c
  9232  002124  0E00               	movlw	0
  9233  002126  1617               	andwf	(___flmul@prod+3)^0,f,c
  9234  002128  A013               	btfss	___flmul@bexp^0,0,c
  9235  00212A  EF99  F010         	goto	u3441
  9236  00212E  EF9B  F010         	goto	u3440
  9237  002132                     u3441:
  9238  002132  EF9C  F010         	goto	l3448
  9239  002136                     u3440:
  9240  002136  8E16               	bsf	(___flmul@prod+2)^0,7,c
  9241  002138                     l3448:
  9242  002138  90D8               	bcf	status,0,c
  9243  00213A  3013               	rrcf	___flmul@bexp^0,w,c
  9244  00213C  6E17               	movwf	(___flmul@prod+3)^0,c
  9245  00213E                     l3450:
  9246  00213E  500D               	movf	___flmul@sign^0,w,c
  9247  002140  1217               	iorwf	(___flmul@prod+3)^0,f,c
  9248  002142  C014  F001         	movff	___flmul@prod,?___flmul
  9249  002146  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  9250  00214A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  9251  00214E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  9252  002152                     l872:
  9253  002152  0012               	return		;funcret
  9254  002154                     __end_of___flmul:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function ___fldiv *****************
  9258 ;; Defined at:
  9259 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  b               4   25[COMRAM] unsigned char 
  9262 ;;  a               4   29[COMRAM] unsigned char 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  grs             4   44[COMRAM] unsigned long 
  9265 ;;  rem             4   37[COMRAM] unsigned long 
  9266 ;;  new_exp         2   42[COMRAM] short 
  9267 ;;  aexp            1   49[COMRAM] unsigned char 
  9268 ;;  bexp            1   48[COMRAM] unsigned char 
  9269 ;;  sign            1   41[COMRAM] unsigned char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  4   25[COMRAM] unsigned char 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9279 ;;      Params:         8       0       0       0       0       0       0       0       0
  9280 ;;      Locals:        13       0       0       0       0       0       0       0       0
  9281 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9282 ;;      Totals:        25       0       0       0       0       0       0       0       0
  9283 ;;Total ram usage:       25 bytes
  9284 ;; Hardware stack levels used: 1
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_Obtener_Temperatura
  9289 ;;		_efgtoa
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text43
  9294  002154                     __ptext43:
  9295                           	callstack 0
  9296  002154                     ___fldiv:
  9297                           	callstack 25
  9298  002154  501D               	movf	(___fldiv@b+3)^0,w,c
  9299  002156  0B80               	andlw	128
  9300  002158  6E2A               	movwf	___fldiv@sign^0,c
  9301  00215A  501D               	movf	(___fldiv@b+3)^0,w,c
  9302  00215C  241D               	addwf	(___fldiv@b+3)^0,w,c
  9303  00215E  6E31               	movwf	___fldiv@bexp^0,c
  9304  002160  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  9305  002162  EFB5  F010         	goto	u3031
  9306  002166  EFB7  F010         	goto	u3030
  9307  00216A                     u3031:
  9308  00216A  EFB8  F010         	goto	l3194
  9309  00216E                     u3030:
  9310  00216E  8031               	bsf	___fldiv@bexp^0,0,c
  9311  002170                     l3194:
  9312  002170  5031               	movf	___fldiv@bexp^0,w,c
  9313  002172  B4D8               	btfsc	status,2,c
  9314  002174  EFBE  F010         	goto	u3041
  9315  002178  EFC0  F010         	goto	u3040
  9316  00217C                     u3041:
  9317  00217C  EFD5  F010         	goto	l3204
  9318  002180                     u3040:
  9319  002180  2831               	incf	___fldiv@bexp^0,w,c
  9320  002182  A4D8               	btfss	status,2,c
  9321  002184  EFC6  F010         	goto	u3051
  9322  002188  EFC8  F010         	goto	u3050
  9323  00218C                     u3051:
  9324  00218C  EFD0  F010         	goto	l3200
  9325  002190                     u3050:
  9326  002190  0E00               	movlw	0
  9327  002192  6E1A               	movwf	___fldiv@b^0,c
  9328  002194  0E00               	movlw	0
  9329  002196  6E1B               	movwf	(___fldiv@b+1)^0,c
  9330  002198  0E00               	movlw	0
  9331  00219A  6E1C               	movwf	(___fldiv@b+2)^0,c
  9332  00219C  0E00               	movlw	0
  9333  00219E  6E1D               	movwf	(___fldiv@b+3)^0,c
  9334  0021A0                     l3200:
  9335  0021A0  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  9336  0021A2  0E00               	movlw	0
  9337  0021A4  6E1D               	movwf	(___fldiv@b+3)^0,c
  9338  0021A6  EFDD  F010         	goto	l3206
  9339  0021AA                     l3204:
  9340  0021AA  0E00               	movlw	0
  9341  0021AC  6E1A               	movwf	___fldiv@b^0,c
  9342  0021AE  0E00               	movlw	0
  9343  0021B0  6E1B               	movwf	(___fldiv@b+1)^0,c
  9344  0021B2  0E00               	movlw	0
  9345  0021B4  6E1C               	movwf	(___fldiv@b+2)^0,c
  9346  0021B6  0E00               	movlw	0
  9347  0021B8  6E1D               	movwf	(___fldiv@b+3)^0,c
  9348  0021BA                     l3206:
  9349  0021BA  5021               	movf	(___fldiv@a+3)^0,w,c
  9350  0021BC  0B80               	andlw	128
  9351  0021BE  1A2A               	xorwf	___fldiv@sign^0,f,c
  9352  0021C0  5021               	movf	(___fldiv@a+3)^0,w,c
  9353  0021C2  2421               	addwf	(___fldiv@a+3)^0,w,c
  9354  0021C4  6E32               	movwf	___fldiv@aexp^0,c
  9355  0021C6  AE20               	btfss	(___fldiv@a+2)^0,7,c
  9356  0021C8  EFE8  F010         	goto	u3061
  9357  0021CC  EFEA  F010         	goto	u3060
  9358  0021D0                     u3061:
  9359  0021D0  EFEB  F010         	goto	l3214
  9360  0021D4                     u3060:
  9361  0021D4  8032               	bsf	___fldiv@aexp^0,0,c
  9362  0021D6                     l3214:
  9363  0021D6  5032               	movf	___fldiv@aexp^0,w,c
  9364  0021D8  B4D8               	btfsc	status,2,c
  9365  0021DA  EFF1  F010         	goto	u3071
  9366  0021DE  EFF3  F010         	goto	u3070
  9367  0021E2                     u3071:
  9368  0021E2  EF08  F011         	goto	l3224
  9369  0021E6                     u3070:
  9370  0021E6  2832               	incf	___fldiv@aexp^0,w,c
  9371  0021E8  A4D8               	btfss	status,2,c
  9372  0021EA  EFF9  F010         	goto	u3081
  9373  0021EE  EFFB  F010         	goto	u3080
  9374  0021F2                     u3081:
  9375  0021F2  EF03  F011         	goto	l3220
  9376  0021F6                     u3080:
  9377  0021F6  0E00               	movlw	0
  9378  0021F8  6E1E               	movwf	___fldiv@a^0,c
  9379  0021FA  0E00               	movlw	0
  9380  0021FC  6E1F               	movwf	(___fldiv@a+1)^0,c
  9381  0021FE  0E00               	movlw	0
  9382  002200  6E20               	movwf	(___fldiv@a+2)^0,c
  9383  002202  0E00               	movlw	0
  9384  002204  6E21               	movwf	(___fldiv@a+3)^0,c
  9385  002206                     l3220:
  9386  002206  8E20               	bsf	(___fldiv@a+2)^0,7,c
  9387  002208  0E00               	movlw	0
  9388  00220A  6E21               	movwf	(___fldiv@a+3)^0,c
  9389  00220C  EF10  F011         	goto	l3226
  9390  002210                     l3224:
  9391  002210  0E00               	movlw	0
  9392  002212  6E1E               	movwf	___fldiv@a^0,c
  9393  002214  0E00               	movlw	0
  9394  002216  6E1F               	movwf	(___fldiv@a+1)^0,c
  9395  002218  0E00               	movlw	0
  9396  00221A  6E20               	movwf	(___fldiv@a+2)^0,c
  9397  00221C  0E00               	movlw	0
  9398  00221E  6E21               	movwf	(___fldiv@a+3)^0,c
  9399  002220                     l3226:
  9400  002220  501E               	movf	___fldiv@a^0,w,c
  9401  002222  101F               	iorwf	(___fldiv@a+1)^0,w,c
  9402  002224  1020               	iorwf	(___fldiv@a+2)^0,w,c
  9403  002226  1021               	iorwf	(___fldiv@a+3)^0,w,c
  9404  002228  A4D8               	btfss	status,2,c
  9405  00222A  EF19  F011         	goto	u3091
  9406  00222E  EF1B  F011         	goto	u3090
  9407  002232                     u3091:
  9408  002232  EF33  F011         	goto	l3238
  9409  002236                     u3090:
  9410  002236  0E00               	movlw	0
  9411  002238  6E1A               	movwf	___fldiv@b^0,c
  9412  00223A  0E00               	movlw	0
  9413  00223C  6E1B               	movwf	(___fldiv@b+1)^0,c
  9414  00223E  0E00               	movlw	0
  9415  002240  6E1C               	movwf	(___fldiv@b+2)^0,c
  9416  002242  0E00               	movlw	0
  9417  002244  6E1D               	movwf	(___fldiv@b+3)^0,c
  9418  002246  0E80               	movlw	128
  9419  002248  121C               	iorwf	(___fldiv@b+2)^0,f,c
  9420  00224A  0E7F               	movlw	127
  9421  00224C  121D               	iorwf	(___fldiv@b+3)^0,f,c
  9422  00224E                     l3232:
  9423  00224E  502A               	movf	___fldiv@sign^0,w,c
  9424  002250  121D               	iorwf	(___fldiv@b+3)^0,f,c
  9425  002252  C01A  F01A         	movff	___fldiv@b,?___fldiv
  9426  002256  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  9427  00225A  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  9428  00225E  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  9429  002262  EF76  F012         	goto	l836
  9430  002266                     l3238:
  9431  002266  5031               	movf	___fldiv@bexp^0,w,c
  9432  002268  A4D8               	btfss	status,2,c
  9433  00226A  EF39  F011         	goto	u3101
  9434  00226E  EF3B  F011         	goto	u3100
  9435  002272                     u3101:
  9436  002272  EF45  F011         	goto	l3246
  9437  002276                     u3100:
  9438  002276  0E00               	movlw	0
  9439  002278  6E1A               	movwf	?___fldiv^0,c
  9440  00227A  0E00               	movlw	0
  9441  00227C  6E1B               	movwf	(?___fldiv+1)^0,c
  9442  00227E  0E00               	movlw	0
  9443  002280  6E1C               	movwf	(?___fldiv+2)^0,c
  9444  002282  0E00               	movlw	0
  9445  002284  6E1D               	movwf	(?___fldiv+3)^0,c
  9446  002286  EF76  F012         	goto	l836
  9447  00228A                     l3246:
  9448  00228A  5032               	movf	___fldiv@aexp^0,w,c
  9449  00228C  C031  F022         	movff	___fldiv@bexp,??___fldiv
  9450  002290  6A23               	clrf	(??___fldiv+1)^0,c
  9451  002292  5E22               	subwf	??___fldiv^0,f,c
  9452  002294  0E00               	movlw	0
  9453  002296  5A23               	subwfb	(??___fldiv+1)^0,f,c
  9454  002298  0E7F               	movlw	127
  9455  00229A  2422               	addwf	??___fldiv^0,w,c
  9456  00229C  6E2B               	movwf	___fldiv@new_exp^0,c
  9457  00229E  0E00               	movlw	0
  9458  0022A0  2023               	addwfc	(??___fldiv+1)^0,w,c
  9459  0022A2  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  9460  0022A4  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  9461  0022A8  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  9462  0022AC  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  9463  0022B0  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  9464  0022B4  0E00               	movlw	0
  9465  0022B6  6E1A               	movwf	___fldiv@b^0,c
  9466  0022B8  0E00               	movlw	0
  9467  0022BA  6E1B               	movwf	(___fldiv@b+1)^0,c
  9468  0022BC  0E00               	movlw	0
  9469  0022BE  6E1C               	movwf	(___fldiv@b+2)^0,c
  9470  0022C0  0E00               	movlw	0
  9471  0022C2  6E1D               	movwf	(___fldiv@b+3)^0,c
  9472  0022C4  0E00               	movlw	0
  9473  0022C6  6E2D               	movwf	___fldiv@grs^0,c
  9474  0022C8  0E00               	movlw	0
  9475  0022CA  6E2E               	movwf	(___fldiv@grs+1)^0,c
  9476  0022CC  0E00               	movlw	0
  9477  0022CE  6E2F               	movwf	(___fldiv@grs+2)^0,c
  9478  0022D0  0E00               	movlw	0
  9479  0022D2  6E30               	movwf	(___fldiv@grs+3)^0,c
  9480  0022D4  0E00               	movlw	0
  9481  0022D6  6E32               	movwf	___fldiv@aexp^0,c
  9482  0022D8  EFA6  F011         	goto	l838
  9483  0022DC                     l3256:
  9484  0022DC  5032               	movf	___fldiv@aexp^0,w,c
  9485  0022DE  B4D8               	btfsc	status,2,c
  9486  0022E0  EF74  F011         	goto	u3111
  9487  0022E4  EF76  F011         	goto	u3110
  9488  0022E8                     u3111:
  9489  0022E8  EF8D  F011         	goto	l3264
  9490  0022EC                     u3110:
  9491  0022EC  90D8               	bcf	status,0,c
  9492  0022EE  3626               	rlcf	___fldiv@rem^0,f,c
  9493  0022F0  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  9494  0022F2  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  9495  0022F4  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  9496  0022F6  90D8               	bcf	status,0,c
  9497  0022F8  361A               	rlcf	___fldiv@b^0,f,c
  9498  0022FA  361B               	rlcf	(___fldiv@b+1)^0,f,c
  9499  0022FC  361C               	rlcf	(___fldiv@b+2)^0,f,c
  9500  0022FE  361D               	rlcf	(___fldiv@b+3)^0,f,c
  9501  002300  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  9502  002302  EF85  F011         	goto	u3121
  9503  002306  EF87  F011         	goto	u3120
  9504  00230A                     u3121:
  9505  00230A  EF88  F011         	goto	l841
  9506  00230E                     u3120:
  9507  00230E  801A               	bsf	___fldiv@b^0,0,c
  9508  002310                     l841:
  9509  002310  90D8               	bcf	status,0,c
  9510  002312  362D               	rlcf	___fldiv@grs^0,f,c
  9511  002314  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  9512  002316  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  9513  002318  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  9514  00231A                     l3264:
  9515  00231A  501E               	movf	___fldiv@a^0,w,c
  9516  00231C  5C26               	subwf	___fldiv@rem^0,w,c
  9517  00231E  501F               	movf	(___fldiv@a+1)^0,w,c
  9518  002320  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  9519  002322  5020               	movf	(___fldiv@a+2)^0,w,c
  9520  002324  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  9521  002326  5021               	movf	(___fldiv@a+3)^0,w,c
  9522  002328  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  9523  00232A  A0D8               	btfss	status,0,c
  9524  00232C  EF9A  F011         	goto	u3131
  9525  002330  EF9C  F011         	goto	u3130
  9526  002334                     u3131:
  9527  002334  EFA5  F011         	goto	l3270
  9528  002338                     u3130:
  9529  002338  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  9530  00233A  501E               	movf	___fldiv@a^0,w,c
  9531  00233C  5E26               	subwf	___fldiv@rem^0,f,c
  9532  00233E  501F               	movf	(___fldiv@a+1)^0,w,c
  9533  002340  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  9534  002342  5020               	movf	(___fldiv@a+2)^0,w,c
  9535  002344  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  9536  002346  5021               	movf	(___fldiv@a+3)^0,w,c
  9537  002348  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  9538  00234A                     l3270:
  9539  00234A  2A32               	incf	___fldiv@aexp^0,f,c
  9540  00234C                     l838:
  9541  00234C  0E19               	movlw	25
  9542  00234E  6432               	cpfsgt	___fldiv@aexp^0,c
  9543  002350  EFAC  F011         	goto	u3141
  9544  002354  EFAE  F011         	goto	u3140
  9545  002358                     u3141:
  9546  002358  EF6E  F011         	goto	l3256
  9547  00235C                     u3140:
  9548  00235C  5026               	movf	___fldiv@rem^0,w,c
  9549  00235E  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  9550  002360  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  9551  002362  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  9552  002364  B4D8               	btfsc	status,2,c
  9553  002366  EFB7  F011         	goto	u3151
  9554  00236A  EFB9  F011         	goto	u3150
  9555  00236E                     u3151:
  9556  00236E  EFD1  F011         	goto	l3282
  9557  002372                     u3150:
  9558  002372  802D               	bsf	___fldiv@grs^0,0,c
  9559  002374  EFD1  F011         	goto	l3282
  9560  002378                     l3276:
  9561  002378  90D8               	bcf	status,0,c
  9562  00237A  361A               	rlcf	___fldiv@b^0,f,c
  9563  00237C  361B               	rlcf	(___fldiv@b+1)^0,f,c
  9564  00237E  361C               	rlcf	(___fldiv@b+2)^0,f,c
  9565  002380  361D               	rlcf	(___fldiv@b+3)^0,f,c
  9566  002382  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  9567  002384  EFC6  F011         	goto	u3161
  9568  002388  EFC8  F011         	goto	u3160
  9569  00238C                     u3161:
  9570  00238C  EFC9  F011         	goto	l847
  9571  002390                     u3160:
  9572  002390  801A               	bsf	___fldiv@b^0,0,c
  9573  002392                     l847:
  9574  002392  90D8               	bcf	status,0,c
  9575  002394  362D               	rlcf	___fldiv@grs^0,f,c
  9576  002396  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  9577  002398  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  9578  00239A  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  9579  00239C  062B               	decf	___fldiv@new_exp^0,f,c
  9580  00239E  A0D8               	btfss	status,0,c
  9581  0023A0  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  9582  0023A2                     l3282:
  9583  0023A2  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  9584  0023A4  EFD6  F011         	goto	u3171
  9585  0023A8  EFD8  F011         	goto	u3170
  9586  0023AC                     u3171:
  9587  0023AC  EFBC  F011         	goto	l3276
  9588  0023B0                     u3170:
  9589  0023B0  0E00               	movlw	0
  9590  0023B2  6E32               	movwf	___fldiv@aexp^0,c
  9591  0023B4  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  9592  0023B6  EFDF  F011         	goto	u3181
  9593  0023BA  EFE1  F011         	goto	u3180
  9594  0023BE                     u3181:
  9595  0023BE  EF05  F012         	goto	l849
  9596  0023C2                     u3180:
  9597  0023C2  0EFF               	movlw	255
  9598  0023C4  142D               	andwf	___fldiv@grs^0,w,c
  9599  0023C6  6E22               	movwf	??___fldiv^0,c
  9600  0023C8  0EFF               	movlw	255
  9601  0023CA  142E               	andwf	(___fldiv@grs+1)^0,w,c
  9602  0023CC  6E23               	movwf	(??___fldiv+1)^0,c
  9603  0023CE  0EFF               	movlw	255
  9604  0023D0  142F               	andwf	(___fldiv@grs+2)^0,w,c
  9605  0023D2  6E24               	movwf	(??___fldiv+2)^0,c
  9606  0023D4  0E7F               	movlw	127
  9607  0023D6  1430               	andwf	(___fldiv@grs+3)^0,w,c
  9608  0023D8  6E25               	movwf	(??___fldiv+3)^0,c
  9609  0023DA  5022               	movf	??___fldiv^0,w,c
  9610  0023DC  1023               	iorwf	(??___fldiv+1)^0,w,c
  9611  0023DE  1024               	iorwf	(??___fldiv+2)^0,w,c
  9612  0023E0  1025               	iorwf	(??___fldiv+3)^0,w,c
  9613  0023E2  B4D8               	btfsc	status,2,c
  9614  0023E4  EFF6  F011         	goto	u3191
  9615  0023E8  EFF8  F011         	goto	u3190
  9616  0023EC                     u3191:
  9617  0023EC  EFFC  F011         	goto	l850
  9618  0023F0                     u3190:
  9619  0023F0                     l3290:
  9620  0023F0  0E01               	movlw	1
  9621  0023F2  6E32               	movwf	___fldiv@aexp^0,c
  9622  0023F4  EF05  F012         	goto	l849
  9623  0023F8                     l850:
  9624  0023F8  A01A               	btfss	___fldiv@b^0,0,c
  9625  0023FA  EF01  F012         	goto	u3201
  9626  0023FE  EF03  F012         	goto	u3200
  9627  002402                     u3201:
  9628  002402  EF05  F012         	goto	l849
  9629  002406                     u3200:
  9630  002406  EFF8  F011         	goto	l3290
  9631  00240A                     l849:
  9632  00240A  5032               	movf	___fldiv@aexp^0,w,c
  9633  00240C  B4D8               	btfsc	status,2,c
  9634  00240E  EF0B  F012         	goto	u3211
  9635  002412  EF0D  F012         	goto	u3210
  9636  002416                     u3211:
  9637  002416  EF31  F012         	goto	l3302
  9638  00241A                     u3210:
  9639  00241A  0E01               	movlw	1
  9640  00241C  261A               	addwf	___fldiv@b^0,f,c
  9641  00241E  0E00               	movlw	0
  9642  002420  221B               	addwfc	(___fldiv@b+1)^0,f,c
  9643  002422  221C               	addwfc	(___fldiv@b+2)^0,f,c
  9644  002424  221D               	addwfc	(___fldiv@b+3)^0,f,c
  9645  002426  A01D               	btfss	(___fldiv@b+3)^0,0,c
  9646  002428  EF18  F012         	goto	u3221
  9647  00242C  EF1A  F012         	goto	u3220
  9648  002430                     u3221:
  9649  002430  EF31  F012         	goto	l3302
  9650  002434                     u3220:
  9651  002434  C01A  F022         	movff	___fldiv@b,??___fldiv
  9652  002438  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  9653  00243C  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  9654  002440  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  9655  002444  3425               	rlcf	(??___fldiv+3)^0,w,c
  9656  002446  3225               	rrcf	(??___fldiv+3)^0,f,c
  9657  002448  3224               	rrcf	(??___fldiv+2)^0,f,c
  9658  00244A  3223               	rrcf	(??___fldiv+1)^0,f,c
  9659  00244C  3222               	rrcf	??___fldiv^0,f,c
  9660  00244E  C022  F01A         	movff	??___fldiv,___fldiv@b
  9661  002452  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  9662  002456  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  9663  00245A  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  9664  00245E  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  9665  002460  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  9666  002462                     l3302:
  9667  002462  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9668  002464  EF3C  F012         	goto	u3231
  9669  002468  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  9670  00246A  E108               	bnz	u3230
  9671  00246C  282B               	incf	___fldiv@new_exp^0,w,c
  9672  00246E  A0D8               	btfss	status,0,c
  9673  002470  EF3C  F012         	goto	u3231
  9674  002474  EF3E  F012         	goto	u3230
  9675  002478                     u3231:
  9676  002478  EF49  F012         	goto	l3306
  9677  00247C                     u3230:
  9678  00247C  0E00               	movlw	0
  9679  00247E  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  9680  002480  682B               	setf	___fldiv@new_exp^0,c
  9681  002482  0E00               	movlw	0
  9682  002484  6E1A               	movwf	___fldiv@b^0,c
  9683  002486  0E00               	movlw	0
  9684  002488  6E1B               	movwf	(___fldiv@b+1)^0,c
  9685  00248A  0E00               	movlw	0
  9686  00248C  6E1C               	movwf	(___fldiv@b+2)^0,c
  9687  00248E  0E00               	movlw	0
  9688  002490  6E1D               	movwf	(___fldiv@b+3)^0,c
  9689  002492                     l3306:
  9690  002492  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9691  002494  EF56  F012         	goto	u3240
  9692  002498  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  9693  00249A  E106               	bnz	u3241
  9694  00249C  042B               	decf	___fldiv@new_exp^0,w,c
  9695  00249E  B0D8               	btfsc	status,0,c
  9696  0024A0  EF54  F012         	goto	u3241
  9697  0024A4  EF56  F012         	goto	u3240
  9698  0024A8                     u3241:
  9699  0024A8  EF64  F012         	goto	l3310
  9700  0024AC                     u3240:
  9701  0024AC  0E00               	movlw	0
  9702  0024AE  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  9703  0024B0  0E00               	movlw	0
  9704  0024B2  6E2B               	movwf	___fldiv@new_exp^0,c
  9705  0024B4  0E00               	movlw	0
  9706  0024B6  6E1A               	movwf	___fldiv@b^0,c
  9707  0024B8  0E00               	movlw	0
  9708  0024BA  6E1B               	movwf	(___fldiv@b+1)^0,c
  9709  0024BC  0E00               	movlw	0
  9710  0024BE  6E1C               	movwf	(___fldiv@b+2)^0,c
  9711  0024C0  0E00               	movlw	0
  9712  0024C2  6E1D               	movwf	(___fldiv@b+3)^0,c
  9713  0024C4  0E00               	movlw	0
  9714  0024C6  6E2A               	movwf	___fldiv@sign^0,c
  9715  0024C8                     l3310:
  9716  0024C8  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  9717  0024CC  A031               	btfss	___fldiv@bexp^0,0,c
  9718  0024CE  EF6B  F012         	goto	u3251
  9719  0024D2  EF6D  F012         	goto	u3250
  9720  0024D6                     u3251:
  9721  0024D6  EF70  F012         	goto	l3316
  9722  0024DA                     u3250:
  9723  0024DA  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  9724  0024DC  EF71  F012         	goto	l3318
  9725  0024E0                     l3316:
  9726  0024E0  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  9727  0024E2                     l3318:
  9728  0024E2  90D8               	bcf	status,0,c
  9729  0024E4  3031               	rrcf	___fldiv@bexp^0,w,c
  9730  0024E6  6E1D               	movwf	(___fldiv@b+3)^0,c
  9731  0024E8  EF27  F011         	goto	l3232
  9732  0024EC                     l836:
  9733  0024EC  0012               	return		;funcret
  9734  0024EE                     __end_of___fldiv:
  9735                           	callstack 0
  9736                           
  9737 ;; *************** function _ADC_Read *****************
  9738 ;; Defined at:
  9739 ;;		line 13 in file "adc_header.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  channel         2    0[COMRAM] int 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  digital         2    6[COMRAM] int 
  9744 ;; Return value:  Size  Location     Type
  9745 ;;                  2    0[COMRAM] int 
  9746 ;; Registers used:
  9747 ;;		wreg, status,2, status,0
  9748 ;; Tracked objects:
  9749 ;;		On entry : 0/0
  9750 ;;		On exit  : 0/0
  9751 ;;		Unchanged: 0/0
  9752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9753 ;;      Params:         2       0       0       0       0       0       0       0       0
  9754 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9755 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9756 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9757 ;;Total ram usage:        8 bytes
  9758 ;; Hardware stack levels used: 1
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_Obtener_Temperatura
  9763 ;; This function uses a non-reentrant model
  9764 ;;
  9765                           
  9766                           	psect	text44
  9767  0038C8                     __ptext44:
  9768                           	callstack 0
  9769  0038C8                     _ADC_Read:
  9770                           	callstack 28
  9771  0038C8                     
  9772                           ;adc_header.c: 13: int ADC_Read(int channel);adc_header.c: 14: {;adc_header.c: 15:     i
      +                          nt digital;;adc_header.c: 18:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b001111
      +                          00);
  9773  0038C8  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  9774  0038CC  90D8               	bcf	status,0,c
  9775  0038CE  3603               	rlcf	??_ADC_Read^0,f,c
  9776  0038D0  90D8               	bcf	status,0,c
  9777  0038D2  3603               	rlcf	??_ADC_Read^0,f,c
  9778  0038D4  0E3C               	movlw	60
  9779  0038D6  1603               	andwf	??_ADC_Read^0,f,c
  9780  0038D8  50C2               	movf	194,w,c	;volatile
  9781  0038DA  0BC3               	andlw	195
  9782  0038DC  1003               	iorwf	??_ADC_Read^0,w,c
  9783  0038DE  6EC2               	movwf	194,c	;volatile
  9784                           
  9785                           ;adc_header.c: 20:     ADCON0 |= ((1<<ADON)|(1<<GO));
  9786  0038E0  B2C2               	btfsc	4034,1,c	;volatile
  9787  0038E2  EF75  F01C         	goto	u4711
  9788  0038E6  EF79  F01C         	goto	u4710
  9789  0038EA                     u4711:
  9790  0038EA  6A03               	clrf	??_ADC_Read^0,c
  9791  0038EC  2A03               	incf	??_ADC_Read^0,f,c
  9792  0038EE  EF7A  F01C         	goto	u4728
  9793  0038F2                     u4710:
  9794  0038F2  6A03               	clrf	??_ADC_Read^0,c
  9795  0038F4                     u4728:
  9796  0038F4  0E01               	movlw	1
  9797  0038F6  6E04               	movwf	(??_ADC_Read+1)^0,c
  9798  0038F8  2A03               	incf	??_ADC_Read^0,f,c
  9799  0038FA  EF81  F01C         	goto	u4734
  9800  0038FE                     u4735:
  9801  0038FE  90D8               	bcf	status,0,c
  9802  003900  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  9803  003902                     u4734:
  9804  003902  2E03               	decfsz	??_ADC_Read^0,f,c
  9805  003904  EF7F  F01C         	goto	u4735
  9806  003908  B0C2               	btfsc	4034,0,c	;volatile
  9807  00390A  EF89  F01C         	goto	u4741
  9808  00390E  EF8D  F01C         	goto	u4740
  9809  003912                     u4741:
  9810  003912  6A05               	clrf	(??_ADC_Read+2)^0,c
  9811  003914  2A05               	incf	(??_ADC_Read+2)^0,f,c
  9812  003916  EF8E  F01C         	goto	u4758
  9813  00391A                     u4740:
  9814  00391A  6A05               	clrf	(??_ADC_Read+2)^0,c
  9815  00391C                     u4758:
  9816  00391C  0E01               	movlw	1
  9817  00391E  6E06               	movwf	(??_ADC_Read+3)^0,c
  9818  003920  2A05               	incf	(??_ADC_Read+2)^0,f,c
  9819  003922  EF95  F01C         	goto	u4764
  9820  003926                     u4765:
  9821  003926  90D8               	bcf	status,0,c
  9822  003928  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  9823  00392A                     u4764:
  9824  00392A  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  9825  00392C  EF93  F01C         	goto	u4765
  9826  003930  5006               	movf	(??_ADC_Read+3)^0,w,c
  9827  003932  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  9828  003934  12C2               	iorwf	194,f,c	;volatile
  9829  003936                     l85:
  9830  003936  B2C2               	btfsc	194,1,c	;volatile
  9831  003938  EFA0  F01C         	goto	u4771
  9832  00393C  EFA2  F01C         	goto	u4770
  9833  003940                     u4771:
  9834  003940  EF9B  F01C         	goto	l85
  9835  003944                     u4770:
  9836  003944                     
  9837                           ;adc_header.c: 25:     digital = (ADRESH*256) | (ADRESL);
  9838  003944  50C3               	movf	195,w,c	;volatile
  9839  003946  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  9840  00394A  6A04               	clrf	(??_ADC_Read+1)^0,c
  9841  00394C  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  9842  003950  6A03               	clrf	??_ADC_Read^0,c
  9843  003952  1003               	iorwf	??_ADC_Read^0,w,c
  9844  003954  6E07               	movwf	ADC_Read@digital^0,c
  9845  003956  5004               	movf	(??_ADC_Read+1)^0,w,c
  9846  003958  6E08               	movwf	(ADC_Read@digital+1)^0,c
  9847  00395A                     
  9848                           ;adc_header.c: 26:     return(digital);
  9849  00395A  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  9850  00395E  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  9851  003962  0012               	return		;funcret
  9852  003964                     __end_of_ADC_Read:
  9853                           	callstack 0
  9854                           
  9855 ;; *************** function _I2C_Write *****************
  9856 ;; Defined at:
  9857 ;;		line 117 in file "I2C_librery.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;  data            1    wreg     unsigned char 
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;  data            1    0[COMRAM] unsigned char 
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      void 
  9864 ;; Registers used:
  9865 ;;		wreg
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0
  9872 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9874 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9875 ;;Total ram usage:        1 bytes
  9876 ;; Hardware stack levels used: 1
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_Establecer_Hora
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text45
  9885  003FE2                     __ptext45:
  9886                           	callstack 0
  9887  003FE2                     _I2C_Write:
  9888                           	callstack 29
  9889                           
  9890                           ;incstack = 0
  9891                           ;I2C_Write@data stored from wreg
  9892  003FE2  6E01               	movwf	I2C_Write@data^0,c
  9893  003FE4                     
  9894                           ;I2C_librery.c: 117: void I2C_Write (uint8_t data);I2C_librery.c: 118: {;I2C_librery.c: 
      +                          119:     PIR1bits.SSPIF=0;
  9895  003FE4  969E               	bcf	158,3,c	;volatile
  9896  003FE6                     
  9897                           ;I2C_librery.c: 123:     SSPBUF=data;
  9898  003FE6  C001  FFC9         	movff	I2C_Write@data,4041	;volatile
  9899  003FEA                     l52:
  9900  003FEA  A69E               	btfss	158,3,c	;volatile
  9901  003FEC  EFFA  F01F         	goto	u4981
  9902  003FF0  EFFC  F01F         	goto	u4980
  9903  003FF4                     u4981:
  9904  003FF4  EFF5  F01F         	goto	l52
  9905  003FF8                     u4980:
  9906  003FF8  0012               	return		;funcret
  9907  003FFA                     __end_of_I2C_Write:
  9908                           	callstack 0
  9909                           
  9910 ;; *************** function _I2C_Stop *****************
  9911 ;; Defined at:
  9912 ;;		line 64 in file "I2C_librery.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;		None
  9915 ;; Auto vars:     Size  Location     Type
  9916 ;;		None
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  1    wreg      void 
  9919 ;; Registers used:
  9920 ;;		None
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9926 ;;      Params:         0       0       0       0       0       0       0       0       0
  9927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9930 ;;Total ram usage:        0 bytes
  9931 ;; Hardware stack levels used: 1
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_Establecer_Hora
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           	psect	text46
  9940  004066                     __ptext46:
  9941                           	callstack 0
  9942  004066                     _I2C_Stop:
  9943                           	callstack 29
  9944  004066                     
  9945                           ;I2C_librery.c: 66:     SSPCON2bits.PEN=1;
  9946  004066  84C5               	bsf	197,2,c	;volatile
  9947  004068                     l34:
  9948  004068  B4C5               	btfsc	197,2,c	;volatile
  9949  00406A  EF39  F020         	goto	u4951
  9950  00406E  EF3B  F020         	goto	u4950
  9951  004072                     u4951:
  9952  004072  EF34  F020         	goto	l34
  9953  004076                     u4950:
  9954  004076  0012               	return		;funcret
  9955  004078                     __end_of_I2C_Stop:
  9956                           	callstack 0
  9957                           
  9958 ;; *************** function _I2C_Start *****************
  9959 ;; Defined at:
  9960 ;;		line 42 in file "I2C_librery.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      void 
  9967 ;; Registers used:
  9968 ;;		None
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0
  9975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9978 ;;Total ram usage:        0 bytes
  9979 ;; Hardware stack levels used: 1
  9980 ;; This function calls:
  9981 ;;		Nothing
  9982 ;; This function is called by:
  9983 ;;		_Establecer_Hora
  9984 ;; This function uses a non-reentrant model
  9985 ;;
  9986                           
  9987                           	psect	text47
  9988  004078                     __ptext47:
  9989                           	callstack 0
  9990  004078                     _I2C_Start:
  9991                           	callstack 29
  9992  004078                     
  9993                           ;I2C_librery.c: 44:     SSPCON2bits.SEN=1;
  9994  004078  80C5               	bsf	197,0,c	;volatile
  9995  00407A                     l22:
  9996  00407A  B0C5               	btfsc	197,0,c	;volatile
  9997  00407C  EF42  F020         	goto	u4931
  9998  004080  EF44  F020         	goto	u4930
  9999  004084                     u4931:
 10000  004084  EF3D  F020         	goto	l22
 10001  004088                     u4930:
 10002  004088  0012               	return		;funcret
 10003  00408A                     __end_of_I2C_Start:
 10004                           	callstack 0
 10005                           
 10006 ;; *************** function _I2C_Read *****************
 10007 ;; Defined at:
 10008 ;;		line 130 in file "I2C_librery.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;		None
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;		None
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  1    wreg      unsigned char 
 10015 ;; Registers used:
 10016 ;;		wreg, status,2
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10022 ;;      Params:         0       0       0       0       0       0       0       0       0
 10023 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10024 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10025 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10026 ;;Total ram usage:        0 bytes
 10027 ;; Hardware stack levels used: 1
 10028 ;; This function calls:
 10029 ;;		Nothing
 10030 ;; This function is called by:
 10031 ;;		_Establecer_Hora
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035                           	psect	text48
 10036  004010                     __ptext48:
 10037                           	callstack 0
 10038  004010                     _I2C_Read:
 10039                           	callstack 29
 10040  004010                     
 10041                           ;I2C_librery.c: 132:     PIR1bits.SSPIF=0;
 10042  004010  969E               	bcf	158,3,c	;volatile
 10043                           
 10044                           ;I2C_librery.c: 136:     SSPCON2bits.RCEN=1;
 10045  004012  86C5               	bsf	197,3,c	;volatile
 10046  004014                     l58:
 10047  004014  A69E               	btfss	158,3,c	;volatile
 10048  004016  EF0F  F020         	goto	u4991
 10049  00401A  EF11  F020         	goto	u4990
 10050  00401E                     u4991:
 10051  00401E  EF0A  F020         	goto	l58
 10052  004022                     u4990:
 10053  004022                     
 10054                           ;I2C_librery.c: 143:     return SSPBUF;
 10055  004022  50C9               	movf	201,w,c	;volatile
 10056  004024  0012               	return		;funcret
 10057  004026                     __end_of_I2C_Read:
 10058                           	callstack 0
 10059                           
 10060 ;; *************** function _I2C_ReStart *****************
 10061 ;; Defined at:
 10062 ;;		line 53 in file "I2C_librery.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;		None
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;		None
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  1    wreg      void 
 10069 ;; Registers used:
 10070 ;;		None
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/0
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10076 ;;      Params:         0       0       0       0       0       0       0       0       0
 10077 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10078 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10079 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10080 ;;Total ram usage:        0 bytes
 10081 ;; Hardware stack levels used: 1
 10082 ;; This function calls:
 10083 ;;		Nothing
 10084 ;; This function is called by:
 10085 ;;		_Establecer_Hora
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text49
 10090  00408A                     __ptext49:
 10091                           	callstack 0
 10092  00408A                     _I2C_ReStart:
 10093                           	callstack 29
 10094  00408A                     
 10095                           ;I2C_librery.c: 55:     SSPCON2bits.RSEN=1;
 10096  00408A  82C5               	bsf	197,1,c	;volatile
 10097  00408C                     l28:
 10098  00408C  B2C5               	btfsc	197,1,c	;volatile
 10099  00408E  EF4B  F020         	goto	u4941
 10100  004092  EF4D  F020         	goto	u4940
 10101  004096                     u4941:
 10102  004096  EF46  F020         	goto	l28
 10103  00409A                     u4940:
 10104  00409A  0012               	return		;funcret
 10105  00409C                     __end_of_I2C_ReStart:
 10106                           	callstack 0
 10107                           
 10108 ;; *************** function _I2C_NO_Ack *****************
 10109 ;; Defined at:
 10110 ;;		line 96 in file "I2C_librery.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;		None
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      void 
 10117 ;; Registers used:
 10118 ;;		None
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10124 ;;      Params:         0       0       0       0       0       0       0       0       0
 10125 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10126 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10127 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10128 ;;Total ram usage:        0 bytes
 10129 ;; Hardware stack levels used: 1
 10130 ;; This function calls:
 10131 ;;		Nothing
 10132 ;; This function is called by:
 10133 ;;		_Establecer_Hora
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text50
 10138  004026                     __ptext50:
 10139                           	callstack 0
 10140  004026                     _I2C_NO_Ack:
 10141                           	callstack 29
 10142  004026                     
 10143                           ;I2C_librery.c: 98:     PIR1bits.SSPIF=0;
 10144  004026  969E               	bcf	158,3,c	;volatile
 10145                           
 10146                           ;I2C_librery.c: 102:     SSPCON2bits.ACKDT=1;
 10147  004028  8AC5               	bsf	197,5,c	;volatile
 10148                           
 10149                           ;I2C_librery.c: 107:     SSPCON2bits.ACKEN=1;
 10150  00402A  88C5               	bsf	197,4,c	;volatile
 10151  00402C                     l46:
 10152  00402C  A69E               	btfss	158,3,c	;volatile
 10153  00402E  EF1B  F020         	goto	u4971
 10154  004032  EF1D  F020         	goto	u4970
 10155  004036                     u4971:
 10156  004036  EF16  F020         	goto	l46
 10157  00403A                     u4970:
 10158  00403A  0012               	return		;funcret
 10159  00403C                     __end_of_I2C_NO_Ack:
 10160                           	callstack 0
 10161                           
 10162 ;; *************** function _I2C_Ack *****************
 10163 ;; Defined at:
 10164 ;;		line 75 in file "I2C_librery.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;		None
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      void 
 10171 ;; Registers used:
 10172 ;;		None
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10178 ;;      Params:         0       0       0       0       0       0       0       0       0
 10179 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10181 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10182 ;;Total ram usage:        0 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_Establecer_Hora
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text51
 10192  00403C                     __ptext51:
 10193                           	callstack 0
 10194  00403C                     _I2C_Ack:
 10195                           	callstack 29
 10196  00403C                     
 10197                           ;I2C_librery.c: 77:     PIR1bits.SSPIF=0;
 10198  00403C  969E               	bcf	158,3,c	;volatile
 10199                           
 10200                           ;I2C_librery.c: 81:     SSPCON2bits.ACKDT=0;
 10201  00403E  9AC5               	bcf	197,5,c	;volatile
 10202                           
 10203                           ;I2C_librery.c: 86:     SSPCON2bits.ACKEN=1;
 10204  004040  88C5               	bsf	197,4,c	;volatile
 10205  004042                     l40:
 10206  004042  A69E               	btfss	158,3,c	;volatile
 10207  004044  EF26  F020         	goto	u4961
 10208  004048  EF28  F020         	goto	u4960
 10209  00404C                     u4961:
 10210  00404C  EF21  F020         	goto	l40
 10211  004050                     u4960:
 10212  004050  0012               	return		;funcret
 10213  004052                     __end_of_I2C_Ack:
 10214                           	callstack 0
 10215                           
 10216 ;; *************** function _Encender_Act *****************
 10217 ;; Defined at:
 10218 ;;		line 230 in file "Main.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;  temp            4   60[COMRAM] float 
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;		None
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  1    wreg      void 
 10225 ;; Registers used:
 10226 ;;		wreg, status,2, status,0, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10232 ;;      Params:         4       0       0       0       0       0       0       0       0
 10233 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10234 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10235 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10236 ;;Total ram usage:        4 bytes
 10237 ;; Hardware stack levels used: 1
 10238 ;; Hardware stack levels required when called: 1
 10239 ;; This function calls:
 10240 ;;		___flge
 10241 ;; This function is called by:
 10242 ;;		_Establecer_Hora
 10243 ;;		_Mostrar_Temperatura
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text52
 10248  003406                     __ptext52:
 10249                           	callstack 0
 10250  003406                     _Encender_Act:
 10251                           	callstack 28
 10252  003406                     
 10253                           ;Main.c: 230: void Encender_Act(float temp);Main.c: 231: {;Main.c: 232:     if(temp>=32 
      +                          && temp<=34.9)
 10254  003406  C03D  F01A         	movff	Encender_Act@temp,___flge@ff1
 10255  00340A  C03E  F01B         	movff	Encender_Act@temp+1,___flge@ff1+1
 10256  00340E  C03F  F01C         	movff	Encender_Act@temp+2,___flge@ff1+2
 10257  003412  C040  F01D         	movff	Encender_Act@temp+3,___flge@ff1+3
 10258  003416  0E00               	movlw	0
 10259  003418  6E1E               	movwf	___flge@ff2^0,c
 10260  00341A  0E00               	movlw	0
 10261  00341C  6E1F               	movwf	(___flge@ff2+1)^0,c
 10262  00341E  0E00               	movlw	0
 10263  003420  6E20               	movwf	(___flge@ff2+2)^0,c
 10264  003422  0E42               	movlw	66
 10265  003424  6E21               	movwf	(___flge@ff2+3)^0,c
 10266  003426  EC03  F017         	call	___flge	;wreg free
 10267  00342A  A0D8               	btfss	status,0,c
 10268  00342C  EF1A  F01A         	goto	u5001
 10269  003430  EF1C  F01A         	goto	u5000
 10270  003434                     u5001:
 10271  003434  EF3B  F01A         	goto	l4394
 10272  003438                     u5000:
 10273  003438  0E9A               	movlw	154
 10274  00343A  6E1A               	movwf	___flge@ff1^0,c
 10275  00343C  0E99               	movlw	153
 10276  00343E  6E1B               	movwf	(___flge@ff1+1)^0,c
 10277  003440  0E0B               	movlw	11
 10278  003442  6E1C               	movwf	(___flge@ff1+2)^0,c
 10279  003444  0E42               	movlw	66
 10280  003446  6E1D               	movwf	(___flge@ff1+3)^0,c
 10281  003448  C03D  F01E         	movff	Encender_Act@temp,___flge@ff2
 10282  00344C  C03E  F01F         	movff	Encender_Act@temp+1,___flge@ff2+1
 10283  003450  C03F  F020         	movff	Encender_Act@temp+2,___flge@ff2+2
 10284  003454  C040  F021         	movff	Encender_Act@temp+3,___flge@ff2+3
 10285  003458  EC03  F017         	call	___flge	;wreg free
 10286  00345C  A0D8               	btfss	status,0,c
 10287  00345E  EF33  F01A         	goto	u5011
 10288  003462  EF35  F01A         	goto	u5010
 10289  003466                     u5011:
 10290  003466  EF3B  F01A         	goto	l4394
 10291  00346A                     u5010:
 10292  00346A                     
 10293                           ;Main.c: 233:     {;Main.c: 234:         RB2 = 0;
 10294  00346A  9481               	bcf	3969,2,c	;volatile
 10295                           
 10296                           ;Main.c: 235:         RB3 = 1;
 10297  00346C  8681               	bsf	3969,3,c	;volatile
 10298                           
 10299                           ;Main.c: 236:         RB4 = 0;
 10300  00346E  9881               	bcf	3969,4,c	;volatile
 10301                           
 10302                           ;Main.c: 237:         RB5 = 0;
 10303  003470  9A81               	bcf	3969,5,c	;volatile
 10304                           
 10305                           ;Main.c: 238:     }
 10306  003472  EF5C  F01A         	goto	l237
 10307  003476                     l4394:
 10308                           
 10309                           ;Main.c: 240:     {;Main.c: 241:         if(temp > 34.9)
 10310  003476  0E9A               	movlw	154
 10311  003478  6E1A               	movwf	___flge@ff1^0,c
 10312  00347A  0E99               	movlw	153
 10313  00347C  6E1B               	movwf	(___flge@ff1+1)^0,c
 10314  00347E  0E0B               	movlw	11
 10315  003480  6E1C               	movwf	(___flge@ff1+2)^0,c
 10316  003482  0E42               	movlw	66
 10317  003484  6E1D               	movwf	(___flge@ff1+3)^0,c
 10318  003486  C03D  F01E         	movff	Encender_Act@temp,___flge@ff2
 10319  00348A  C03E  F01F         	movff	Encender_Act@temp+1,___flge@ff2+1
 10320  00348E  C03F  F020         	movff	Encender_Act@temp+2,___flge@ff2+2
 10321  003492  C040  F021         	movff	Encender_Act@temp+3,___flge@ff2+3
 10322  003496  EC03  F017         	call	___flge	;wreg free
 10323  00349A  B0D8               	btfsc	status,0,c
 10324  00349C  EF52  F01A         	goto	u5021
 10325  0034A0  EF54  F01A         	goto	u5020
 10326  0034A4                     u5021:
 10327  0034A4  EF58  F01A         	goto	l235
 10328  0034A8                     u5020:
 10329  0034A8                     
 10330                           ;Main.c: 242:         {;Main.c: 243:             RB2 = 1;
 10331  0034A8  8481               	bsf	3969,2,c	;volatile
 10332                           
 10333                           ;Main.c: 244:             RB5 = 0;
 10334  0034AA  9A81               	bcf	3969,5,c	;volatile
 10335                           
 10336                           ;Main.c: 245:         }
 10337  0034AC  EF5A  F01A         	goto	l236
 10338  0034B0                     l235:
 10339                           
 10340                           ;Main.c: 247:         {;Main.c: 248:             RB2 = 0;
 10341  0034B0  9481               	bcf	3969,2,c	;volatile
 10342                           
 10343                           ;Main.c: 249:             RB5 = 1;
 10344  0034B2  8A81               	bsf	3969,5,c	;volatile
 10345  0034B4                     l236:
 10346                           
 10347                           ;Main.c: 251:         RB3 = 0;
 10348  0034B4  9681               	bcf	3969,3,c	;volatile
 10349                           
 10350                           ;Main.c: 252:         RB4 = 1;
 10351  0034B6  8881               	bsf	3969,4,c	;volatile
 10352  0034B8                     l237:
 10353  0034B8  0012               	return		;funcret
 10354  0034BA                     __end_of_Encender_Act:
 10355                           	callstack 0
 10356                           
 10357 ;; *************** function ___flge *****************
 10358 ;; Defined at:
 10359 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;  ff1             4   25[COMRAM] void 
 10362 ;;  ff2             4   29[COMRAM] void 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;		None
 10365 ;; Return value:  Size  Location     Type
 10366 ;;		None               void
 10367 ;; Registers used:
 10368 ;;		wreg, status,2, status,0
 10369 ;; Tracked objects:
 10370 ;;		On entry : 0/0
 10371 ;;		On exit  : 0/0
 10372 ;;		Unchanged: 0/0
 10373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10374 ;;      Params:         8       0       0       0       0       0       0       0       0
 10375 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10376 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10377 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10378 ;;Total ram usage:       12 bytes
 10379 ;; Hardware stack levels used: 1
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_Encender_Act
 10384 ;;		_efgtoa
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388                           	psect	text53
 10389  002E06                     __ptext53:
 10390                           	callstack 0
 10391  002E06                     ___flge:
 10392                           	callstack 25
 10393  002E06  0E00               	movlw	0
 10394  002E08  141A               	andwf	___flge@ff1^0,w,c
 10395  002E0A  6E22               	movwf	??___flge^0,c
 10396  002E0C  0E00               	movlw	0
 10397  002E0E  141B               	andwf	(___flge@ff1+1)^0,w,c
 10398  002E10  6E23               	movwf	(??___flge+1)^0,c
 10399  002E12  0E80               	movlw	128
 10400  002E14  141C               	andwf	(___flge@ff1+2)^0,w,c
 10401  002E16  6E24               	movwf	(??___flge+2)^0,c
 10402  002E18  0E7F               	movlw	127
 10403  002E1A  141D               	andwf	(___flge@ff1+3)^0,w,c
 10404  002E1C  6E25               	movwf	(??___flge+3)^0,c
 10405  002E1E  5022               	movf	??___flge^0,w,c
 10406  002E20  1023               	iorwf	(??___flge+1)^0,w,c
 10407  002E22  1024               	iorwf	(??___flge+2)^0,w,c
 10408  002E24  1025               	iorwf	(??___flge+3)^0,w,c
 10409  002E26  A4D8               	btfss	status,2,c
 10410  002E28  EF18  F017         	goto	u3601
 10411  002E2C  EF1A  F017         	goto	u3600
 10412  002E30                     u3601:
 10413  002E30  EF22  F017         	goto	l3562
 10414  002E34                     u3600:
 10415  002E34  0E00               	movlw	0
 10416  002E36  6E1A               	movwf	___flge@ff1^0,c
 10417  002E38  0E00               	movlw	0
 10418  002E3A  6E1B               	movwf	(___flge@ff1+1)^0,c
 10419  002E3C  0E00               	movlw	0
 10420  002E3E  6E1C               	movwf	(___flge@ff1+2)^0,c
 10421  002E40  0E00               	movlw	0
 10422  002E42  6E1D               	movwf	(___flge@ff1+3)^0,c
 10423  002E44                     l3562:
 10424  002E44  0E00               	movlw	0
 10425  002E46  141E               	andwf	___flge@ff2^0,w,c
 10426  002E48  6E22               	movwf	??___flge^0,c
 10427  002E4A  0E00               	movlw	0
 10428  002E4C  141F               	andwf	(___flge@ff2+1)^0,w,c
 10429  002E4E  6E23               	movwf	(??___flge+1)^0,c
 10430  002E50  0E80               	movlw	128
 10431  002E52  1420               	andwf	(___flge@ff2+2)^0,w,c
 10432  002E54  6E24               	movwf	(??___flge+2)^0,c
 10433  002E56  0E7F               	movlw	127
 10434  002E58  1421               	andwf	(___flge@ff2+3)^0,w,c
 10435  002E5A  6E25               	movwf	(??___flge+3)^0,c
 10436  002E5C  5022               	movf	??___flge^0,w,c
 10437  002E5E  1023               	iorwf	(??___flge+1)^0,w,c
 10438  002E60  1024               	iorwf	(??___flge+2)^0,w,c
 10439  002E62  1025               	iorwf	(??___flge+3)^0,w,c
 10440  002E64  A4D8               	btfss	status,2,c
 10441  002E66  EF37  F017         	goto	u3611
 10442  002E6A  EF39  F017         	goto	u3610
 10443  002E6E                     u3611:
 10444  002E6E  EF41  F017         	goto	l3566
 10445  002E72                     u3610:
 10446  002E72  0E00               	movlw	0
 10447  002E74  6E1E               	movwf	___flge@ff2^0,c
 10448  002E76  0E00               	movlw	0
 10449  002E78  6E1F               	movwf	(___flge@ff2+1)^0,c
 10450  002E7A  0E00               	movlw	0
 10451  002E7C  6E20               	movwf	(___flge@ff2+2)^0,c
 10452  002E7E  0E00               	movlw	0
 10453  002E80  6E21               	movwf	(___flge@ff2+3)^0,c
 10454  002E82                     l3566:
 10455  002E82  AE1D               	btfss	(___flge@ff1+3)^0,7,c
 10456  002E84  EF46  F017         	goto	u3621
 10457  002E88  EF48  F017         	goto	u3620
 10458  002E8C                     u3621:
 10459  002E8C  EF51  F017         	goto	l3570
 10460  002E90                     u3620:
 10461  002E90  6C1A               	negf	___flge@ff1^0,c
 10462  002E92  1E1B               	comf	(___flge@ff1+1)^0,f,c
 10463  002E94  B0D8               	btfsc	status,0,c
 10464  002E96  2A1B               	incf	(___flge@ff1+1)^0,f,c
 10465  002E98  1E1C               	comf	(___flge@ff1+2)^0,f,c
 10466  002E9A  B0D8               	btfsc	status,0,c
 10467  002E9C  2A1C               	incf	(___flge@ff1+2)^0,f,c
 10468  002E9E  0E80               	movlw	128
 10469  002EA0  561D               	subfwb	(___flge@ff1+3)^0,f,c
 10470  002EA2                     l3570:
 10471  002EA2  AE21               	btfss	(___flge@ff2+3)^0,7,c
 10472  002EA4  EF56  F017         	goto	u3631
 10473  002EA8  EF58  F017         	goto	u3630
 10474  002EAC                     u3631:
 10475  002EAC  EF61  F017         	goto	l519
 10476  002EB0                     u3630:
 10477  002EB0  6C1E               	negf	___flge@ff2^0,c
 10478  002EB2  1E1F               	comf	(___flge@ff2+1)^0,f,c
 10479  002EB4  B0D8               	btfsc	status,0,c
 10480  002EB6  2A1F               	incf	(___flge@ff2+1)^0,f,c
 10481  002EB8  1E20               	comf	(___flge@ff2+2)^0,f,c
 10482  002EBA  B0D8               	btfsc	status,0,c
 10483  002EBC  2A20               	incf	(___flge@ff2+2)^0,f,c
 10484  002EBE  0E80               	movlw	128
 10485  002EC0  5621               	subfwb	(___flge@ff2+3)^0,f,c
 10486  002EC2                     l519:
 10487  002EC2  0E00               	movlw	0
 10488  002EC4  1A1A               	xorwf	___flge@ff1^0,f,c
 10489  002EC6  0E00               	movlw	0
 10490  002EC8  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
 10491  002ECA  0E00               	movlw	0
 10492  002ECC  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
 10493  002ECE  0E80               	movlw	128
 10494  002ED0  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
 10495  002ED2  0E00               	movlw	0
 10496  002ED4  1A1E               	xorwf	___flge@ff2^0,f,c
 10497  002ED6  0E00               	movlw	0
 10498  002ED8  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
 10499  002EDA  0E00               	movlw	0
 10500  002EDC  1A20               	xorwf	(___flge@ff2+2)^0,f,c
 10501  002EDE  0E80               	movlw	128
 10502  002EE0  1A21               	xorwf	(___flge@ff2+3)^0,f,c
 10503  002EE2  501E               	movf	___flge@ff2^0,w,c
 10504  002EE4  5C1A               	subwf	___flge@ff1^0,w,c
 10505  002EE6  501F               	movf	(___flge@ff2+1)^0,w,c
 10506  002EE8  581B               	subwfb	(___flge@ff1+1)^0,w,c
 10507  002EEA  5020               	movf	(___flge@ff2+2)^0,w,c
 10508  002EEC  581C               	subwfb	(___flge@ff1+2)^0,w,c
 10509  002EEE  5021               	movf	(___flge@ff2+3)^0,w,c
 10510  002EF0  581D               	subwfb	(___flge@ff1+3)^0,w,c
 10511  002EF2  B0D8               	btfsc	status,0,c
 10512  002EF4  EF7E  F017         	goto	u3641
 10513  002EF8  EF80  F017         	goto	u3640
 10514  002EFC                     u3641:
 10515  002EFC  EF83  F017         	goto	l3576
 10516  002F00                     u3640:
 10517  002F00  90D8               	bcf	status,0,c
 10518  002F02  EF84  F017         	goto	l524
 10519  002F06                     l3576:
 10520  002F06  80D8               	bsf	status,0,c
 10521  002F08                     l524:
 10522  002F08  0012               	return		;funcret
 10523  002F0A                     __end_of___flge:
 10524                           	callstack 0
 10525                           
 10526 ;; *************** function _ADC_Init *****************
 10527 ;; Defined at:
 10528 ;;		line 4 in file "adc_header.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;		None
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10542 ;;      Params:         0       0       0       0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10545 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10546 ;;Total ram usage:        0 bytes
 10547 ;; Hardware stack levels used: 1
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		_main
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text54
 10556  004052                     __ptext54:
 10557                           	callstack 0
 10558  004052                     _ADC_Init:
 10559                           	callstack 30
 10560  004052                     
 10561                           ;adc_header.c: 6:     TRISA = 0xFF;
 10562  004052  6892               	setf	146,c	;volatile
 10563  004054                     
 10564                           ;adc_header.c: 7:     ADCON1 = 0x0E;
 10565  004054  0E0E               	movlw	14
 10566  004056  6EC1               	movwf	193,c	;volatile
 10567                           
 10568                           ;adc_header.c: 8:     ADCON2 = 0x92;
 10569  004058  0E92               	movlw	146
 10570  00405A  6EC0               	movwf	192,c	;volatile
 10571                           
 10572                           ;adc_header.c: 9:     ADRESH=0;
 10573  00405C  0E00               	movlw	0
 10574  00405E  6EC4               	movwf	196,c	;volatile
 10575                           
 10576                           ;adc_header.c: 10:     ADRESL=0;
 10577  004060  0E00               	movlw	0
 10578  004062  6EC3               	movwf	195,c	;volatile
 10579  004064  0012               	return		;funcret
 10580  004066                     __end_of_ADC_Init:
 10581                           	callstack 0
 10582                           
 10583                           	psect	rparam
 10584  0000                     
 10585                           	psect	idloc
 10586                           
 10587                           ;Config register IDLOC0 @ 0x200000
 10588                           ;	unspecified, using default values
 10589  200000                     	org	2097152
 10590  200000  FF                 	db	255
 10591                           
 10592                           ;Config register IDLOC1 @ 0x200001
 10593                           ;	unspecified, using default values
 10594  200001                     	org	2097153
 10595  200001  FF                 	db	255
 10596                           
 10597                           ;Config register IDLOC2 @ 0x200002
 10598                           ;	unspecified, using default values
 10599  200002                     	org	2097154
 10600  200002  FF                 	db	255
 10601                           
 10602                           ;Config register IDLOC3 @ 0x200003
 10603                           ;	unspecified, using default values
 10604  200003                     	org	2097155
 10605  200003  FF                 	db	255
 10606                           
 10607                           ;Config register IDLOC4 @ 0x200004
 10608                           ;	unspecified, using default values
 10609  200004                     	org	2097156
 10610  200004  FF                 	db	255
 10611                           
 10612                           ;Config register IDLOC5 @ 0x200005
 10613                           ;	unspecified, using default values
 10614  200005                     	org	2097157
 10615  200005  FF                 	db	255
 10616                           
 10617                           ;Config register IDLOC6 @ 0x200006
 10618                           ;	unspecified, using default values
 10619  200006                     	org	2097158
 10620  200006  FF                 	db	255
 10621                           
 10622                           ;Config register IDLOC7 @ 0x200007
 10623                           ;	unspecified, using default values
 10624  200007                     	org	2097159
 10625  200007  FF                 	db	255
 10626                           
 10627                           	psect	config
 10628                           
 10629                           ;Config register CONFIG1L @ 0x300000
 10630                           ;	PLL Prescaler Selection bits
 10631                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 10632                           ;	System Clock Postscaler Selection bits
 10633                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10634                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10635                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10636  300000                     	org	3145728
 10637  300000  00                 	db	0
 10638                           
 10639                           ;Config register CONFIG1H @ 0x300001
 10640                           ;	Oscillator Selection bits
 10641                           ;	FOSC = HS, HS oscillator (HS)
 10642                           ;	Fail-Safe Clock Monitor Enable bit
 10643                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10644                           ;	Internal/External Oscillator Switchover bit
 10645                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10646  300001                     	org	3145729
 10647  300001  0C                 	db	12
 10648                           
 10649                           ;Config register CONFIG2L @ 0x300002
 10650                           ;	Power-up Timer Enable bit
 10651                           ;	PWRT = OFF, PWRT disabled
 10652                           ;	Brown-out Reset Enable bits
 10653                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10654                           ;	Brown-out Reset Voltage bits
 10655                           ;	BORV = 3, Minimum setting 2.05V
 10656                           ;	USB Voltage Regulator Enable bit
 10657                           ;	VREGEN = OFF, USB voltage regulator disabled
 10658  300002                     	org	3145730
 10659  300002  19                 	db	25
 10660                           
 10661                           ;Config register CONFIG2H @ 0x300003
 10662                           ;	Watchdog Timer Enable bit
 10663                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10664                           ;	Watchdog Timer Postscale Select bits
 10665                           ;	WDTPS = 32768, 1:32768
 10666  300003                     	org	3145731
 10667  300003  1E                 	db	30
 10668                           
 10669                           ; Padding undefined space
 10670  300004                     	org	3145732
 10671  300004  FF                 	db	255
 10672                           
 10673                           ;Config register CONFIG3H @ 0x300005
 10674                           ;	CCP2 MUX bit
 10675                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10676                           ;	PORTB A/D Enable bit
 10677                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10678                           ;	Low-Power Timer 1 Oscillator Enable bit
 10679                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10680                           ;	MCLR Pin Enable bit
 10681                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10682  300005                     	org	3145733
 10683  300005  83                 	db	131
 10684                           
 10685                           ;Config register CONFIG4L @ 0x300006
 10686                           ;	Stack Full/Underflow Reset Enable bit
 10687                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10688                           ;	Single-Supply ICSP Enable bit
 10689                           ;	LVP = OFF, Single-Supply ICSP disabled
 10690                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10691                           ;	ICPRT = OFF, ICPORT disabled
 10692                           ;	Extended Instruction Set Enable bit
 10693                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10694                           ;	Background Debugger Enable bit
 10695                           ;	DEBUG = 0x1, unprogrammed default
 10696  300006                     	org	3145734
 10697  300006  81                 	db	129
 10698                           
 10699                           ; Padding undefined space
 10700  300007                     	org	3145735
 10701  300007  FF                 	db	255
 10702                           
 10703                           ;Config register CONFIG5L @ 0x300008
 10704                           ;	Code Protection bit
 10705                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10706                           ;	Code Protection bit
 10707                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10708                           ;	Code Protection bit
 10709                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10710                           ;	Code Protection bit
 10711                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10712  300008                     	org	3145736
 10713  300008  0F                 	db	15
 10714                           
 10715                           ;Config register CONFIG5H @ 0x300009
 10716                           ;	Boot Block Code Protection bit
 10717                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10718                           ;	Data EEPROM Code Protection bit
 10719                           ;	CPD = OFF, Data EEPROM is not code-protected
 10720  300009                     	org	3145737
 10721  300009  C0                 	db	192
 10722                           
 10723                           ;Config register CONFIG6L @ 0x30000A
 10724                           ;	Write Protection bit
 10725                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10726                           ;	Write Protection bit
 10727                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10728                           ;	Write Protection bit
 10729                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10730                           ;	Write Protection bit
 10731                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10732  30000A                     	org	3145738
 10733  30000A  0F                 	db	15
 10734                           
 10735                           ;Config register CONFIG6H @ 0x30000B
 10736                           ;	Configuration Register Write Protection bit
 10737                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10738                           ;	Boot Block Write Protection bit
 10739                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10740                           ;	Data EEPROM Write Protection bit
 10741                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10742  30000B                     	org	3145739
 10743  30000B  E0                 	db	224
 10744                           
 10745                           ;Config register CONFIG7L @ 0x30000C
 10746                           ;	Table Read Protection bit
 10747                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10748                           ;	Table Read Protection bit
 10749                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10750                           ;	Table Read Protection bit
 10751                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10752                           ;	Table Read Protection bit
 10753                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10754  30000C                     	org	3145740
 10755  30000C  0F                 	db	15
 10756                           
 10757                           ;Config register CONFIG7H @ 0x30000D
 10758                           ;	Boot Block Table Read Protection bit
 10759                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10760  30000D                     	org	3145741
 10761  30000D  40                 	db	64
 10762                           tosu	equ	0xFFF
 10763                           tosh	equ	0xFFE
 10764                           tosl	equ	0xFFD
 10765                           stkptr	equ	0xFFC
 10766                           pclatu	equ	0xFFB
 10767                           pclath	equ	0xFFA
 10768                           pcl	equ	0xFF9
 10769                           tblptru	equ	0xFF8
 10770                           tblptrh	equ	0xFF7
 10771                           tblptrl	equ	0xFF6
 10772                           tablat	equ	0xFF5
 10773                           prodh	equ	0xFF4
 10774                           prodl	equ	0xFF3
 10775                           indf0	equ	0xFEF
 10776                           postinc0	equ	0xFEE
 10777                           postdec0	equ	0xFED
 10778                           preinc0	equ	0xFEC
 10779                           plusw0	equ	0xFEB
 10780                           fsr0h	equ	0xFEA
 10781                           fsr0l	equ	0xFE9
 10782                           wreg	equ	0xFE8
 10783                           indf1	equ	0xFE7
 10784                           postinc1	equ	0xFE6
 10785                           postdec1	equ	0xFE5
 10786                           preinc1	equ	0xFE4
 10787                           plusw1	equ	0xFE3
 10788                           fsr1h	equ	0xFE2
 10789                           fsr1l	equ	0xFE1
 10790                           bsr	equ	0xFE0
 10791                           indf2	equ	0xFDF
 10792                           postinc2	equ	0xFDE
 10793                           postdec2	equ	0xFDD
 10794                           preinc2	equ	0xFDC
 10795                           plusw2	equ	0xFDB
 10796                           fsr2h	equ	0xFDA
 10797                           fsr2l	equ	0xFD9
 10798                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    0
    Data        83
    BSS         107
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     93     153
    BANK1           256      0     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_5(CODE[4]), STR_4(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> Mostrar_Temperatura@temperatura(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1352$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1352$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[2]), Mostrar_Temperatura@temperatura(BANK0[4]), STR_1(CODE[13]), Reloj_Calendario@Date(BANK0[17]), 
		 -> Reloj_Calendario@Time(BANK0[15]), 


Critical Paths under _main in COMRAM

    _main->_Mostrar_Temperatura
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    _atoi->_isspace
    _LCD_Clear->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _I2C_Init->___lldiv
    _Establecer_Hora->_Encender_Act
    _Reloj_Calendario->_LCD_Goto
    _Reloj_Calendario->_LCD_Print
    _Reloj_Calendario->___awdiv
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _Obtener_Temperatura->___fldiv
    ___fldiv->___flmul
    _Encender_Act->_Obtener_Temperatura
    ___flge->___flmul

Critical Paths under _main in BANK0

    _main->_Mostrar_Temperatura
    _Mostrar_Temperatura->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   51732
                                             89 BANK0      4     4      0
                           _ADC_Init
                    _Establecer_Hora
                           _I2C_Init
                    _Imprimir_Cadena
                          _LCD_Begin
                          _LCD_Clear
                _Mostrar_Temperatura
 ---------------------------------------------------------------------------------
 (1) _Mostrar_Temperatura                                  5     5      0   39098
                                             94 COMRAM     1     1      0
                                             85 BANK0      4     4      0
                       _Encender_Act
                           _LCD_Goto
                          _LCD_Print
                _Obtener_Temperatura
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   30764
                                             64 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   30407
                                             92 COMRAM     2     2      0
                                             58 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   30035
                                             82 COMRAM    10     4      6
                                             50 BANK0      8     8      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              62    55      7   24880
                                             70 COMRAM    12     5      7
                                              0 BANK0     50    50      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              6     4      2     920
                                              6 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             50 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1080
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     176
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            1     1      0     176
                                              4 COMRAM     1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (1) _Imprimir_Cadena                                      7     3      4     394
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Establecer_Hora                                      1     1      0   11383
                                             64 COMRAM     1     1      0
                       _Encender_Act
                            _I2C_Ack
                         _I2C_NO_Ack
                        _I2C_ReStart
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                _Obtener_Temperatura
                   _Reloj_Calendario
 ---------------------------------------------------------------------------------
 (2) _Reloj_Calendario                                     0     0      0    4340
                      _BCD_a_Decimal
                           _LCD_Goto
                          _LCD_Print
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    1512
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1516
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Print                                            6     4      2     602
                                              2 COMRAM     6     4      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Goto                                             4     3      1     666
                                              4 COMRAM     4     3      1
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _LCD_Cmd                                              2     2      0     176
                                              2 COMRAM     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BCD_a_Decimal                                        2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Obtener_Temperatura                                 10     6      4    5557
                                             50 COMRAM    10     6      4
                           _ADC_Read
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2808
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             8     6      2     121
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_ReStart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_NO_Ack                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Encender_Act                                         4     0      4    1464
                                             60 COMRAM     4     0      4
                _Obtener_Temperatura (ARG)
                             ___flge
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1246
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Establecer_Hora
     _Encender_Act
       _Obtener_Temperatura (ARG)
         _ADC_Read
         ___fldiv
           ___flmul (ARG)
         ___flmul
         ___xxtofl
       ___flge (ARG)
         ___flmul (ARG)
     _I2C_Ack
     _I2C_NO_Ack
     _I2C_ReStart
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _Obtener_Temperatura
     _Reloj_Calendario
       _BCD_a_Decimal
       _LCD_Goto
         _LCD_Cmd
           _LCD_Write_Nibble
       _LCD_Print
         _LCD_Write_Nibble
       ___awdiv
       ___awmod
   _I2C_Init
     ___lldiv
   _Imprimir_Cadena
   _LCD_Begin
     _LCD_Cmd
   _LCD_Clear
     _LCD_Cmd
   _Mostrar_Temperatura
     _Encender_Act
     _LCD_Goto
     _LCD_Print
     _Obtener_Temperatura
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
           _isdigit
           _isupper
           _strncmp
           _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      83       7       51.2%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     5D      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRhlhll       C      0       0      25        0.0%
BITBIGSFRllh         9      0       0      28        0.0%
BITBIGSFRhhl         9      0       0      21        0.0%
BITBIGSFRhlhlhl      8      0       0      23        0.0%
BITBIGSFRhll         8      0       0      26        0.0%
BITBIGSFRhlhlhh      7      0       0      22        0.0%
BITBIGSFRlh          5      0       0      27        0.0%
BITBIGSFRhlhlhl      1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      30        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Mar 08 18:09:50 2022

                  ___fldiv@aexp 0032                    ___fldiv@bexp 0031                               _i 00ED  
       Mostrar_Temperatura@temp 00B5                    ___fldiv@sign 002A                 _Imprimir_Cadena 3D24  
                   _SSPSTATbits 000FC7                              l22 407A                              l31 409A  
                            l40 4042                              l25 4088                              l34 4068  
                            l43 4050                              l19 3C22                              l28 408C  
                            l52 3FEA                              l61 4024                              l37 4076  
                            l46 402C                              l55 3FF8                              l49 403A  
                            l82 4064                              l58 4014                              l85 3936  
                            l88 3962                              _GO 007E11                              _RS 07C0  
                  ___awdiv@sign 0006             ___wmul@multiplicand 0003                             l200 400E  
                           l210 28D2                             l221 3778                             l213 39FC  
                           l230 3D70                             l151 3A8E                             l226 3D30  
                           l218 361A                             l235 34B0                             l236 34B4  
                           l237 34B8                             l157 3DB8                             l181 40A2  
                           l166 3AF8                             l254 3FC0                             l175 356A  
                           l281 38B6                             l513 3822                             l178 31B0  
                           l524 2F08                             l519 2EC2                             l551 2E04  
                           l288 38C6                             l528 3EF8                             l485 3404  
                           l912 2A86                             l808 1810                             l824 3E44  
                           l841 2310                             l809 17FE                             l850 23F8  
                           l498 36CA                             l923 2A1E                             l836 24EC  
                           l916 29C2                             l932 3CD0                             l909 292A  
                           l838 234C                             l782 1626                             l847 2392  
                           l791 18F6                             l783 1614                             l872 2152  
                           l784 15DA                             l849 240A                             l875 1FE4  
                           l868 1DEE                             l885 2114                             l877 205C  
                           l973 32C2                             l878 204A                             l799 1740  
                           l976 3304                             l978 3340                             l994 1436  
                           _RB2 007C0A                             _RB3 007C0B                             _RB4 007C0C  
                           _RB5 007C0D             _Obtener_Temperatura 36CC                             _day 00EE  
               __end_of_I2C_Ack 4052                             _pad 327C                    ___awmod@sign 0006  
                           wreg 000FE8                    ___flmul@aexp 0012                    ___flmul@bexp 0013  
                  ___flmul@sign 000D                    ___flmul@temp 0018                    ___flmul@prod 0014  
               __end_of_LCD_Cmd 3DBA                    ___fltol@exp1 000A               ??_Establecer_Hora 0041  
                          l1010 0BE6                            l1102 3006                            l1200 30DC  
                          l1210 3DF6                            l1125 2BD4                            l1213 3DFE  
                          l1134 26FE                            l1038 1026                            l1144 3F30  
                          l1152 3D22                            l1128 2BDC                            l3000 1518  
                          l1080 1D28                            l1137 2642                            l3010 1544  
                          l3002 152A                            l1091 3BB8                            l3100 177A  
                          l3020 1558                            l3012 1548                            l3004 1538  
                          l1092 3BC0                            l1173 327A                            l1181 3E88  
                          l1085 1C72                            l3110 17AA                            l3102 1784  
                          l3030 156C                            l3022 155C                            l3014 154C  
                          l3006 153C                            l1190 3C7E                            l1158 3EC0  
                          l3200 21A0                            l3120 17D2                            l3112 17AE  
                          l3104 1792                            l3040 15A6                            l3032 1570  
                          l3024 1560                            l3016 1550                            l3008 1540  
                          l1184 40A4                            l4000 12C4                            l3210 21C6  
                          l3202 21A2                            l3130 182C                            l3122 17E0  
                          l3114 17BE                            l3106 1794                            l3050 15F8  
                          l3042 15C2                            l3034 1574                            l3026 1564  
                          l3018 1554                            l4010 12F6                            l4002 12CC  
                          l3300 245E                            l3220 2206                            l3212 21D4  
                          l3204 21AA                            l3140 1896                            l3132 183A  
                          l3124 17F6                            l3108 17A2                            l3116 17C0  
                          l3060 1644                            l3052 1606                            l3044 15D2  
                          l3028 1568                            l3036 1578                            l1196 3F66  
                          l4012 12FC                            l4020 134C                            l4004 12DA  
                          l4100 3080                            l3310 24C8                            l3302 2462  
                          l3230 2246                            l3222 2208                            l3214 21D6  
                          l3206 21BA                            l4110 3D78                            l3150 18D0  
                          l3142 18B6                            l3134 1874                            l3070 1684  
                          l3118 17CE                            l3054 1608                            l3046 15E8  
                          l3038 157C                            l4030 139C                            l4022 135E  
                          l4014 1322                            l4006 12E2                            l4102 3092  
                          l3312 24CC                            l3304 247C                            l3240 2276  
                          l3232 224E                            l3216 21E6                            l3224 2210  
                          l3208 21C0                            l3400 1F3E                            l4112 3D86  
                          l3152 18D6                            l3144 18BA                            l3128 1820  
                          l3136 1876                            l3080 16AE                            l3072 1690  
                          l3064 1658                            l3056 1612                            l3048 15F4  
                          l3160 3E46                            l4040 13C0                            l4032 13A4  
                          l4024 1378                            l4016 133E                            l4008 12EA  
                          l4104 30BA                            l4200 1D16                            l4120 191C  
                          l4210 395A                            l3314 24DA                            l3306 2492  
                          l3250 22B4                            l3242 2276                            l3234 2252  
                          l3226 2220                            l3218 21F6                            l3410 1FD4  
                          l3402 1F68                            l3330 1D44                            l4114 3D96  
                          l3154 18E4                            l3146 18C8                            l3138 1886  
                          l3090 1720                            l3074 1694                            l3066 1668  
                          l3058 1634                            l3082 16B4                            l3162 3E52  
                          l3170 3F3E                            l4050 1416                            l4042 13EC  
                          l4034 13B4                            l4026 137E                            l4018 1346  
                          l4130 196C                            l4122 192A                            l4300 408A  
                          l3316 24E0                            l3308 24AC                            l3260 2300  
                          l3252 22C4                            l3228 2236                            l3420 2014  
                          l3412 1FE2                            l3404 1F9E                            l3340 1D7C  
                          l3332 1D46                            l4116 3DA8                            l4108 3D74  
                          l4220 3AAE                            l3500 33F4                            l3156 18E6  
                          l3148 18CE                            l3084 16DA                            l3092 1730  
                          l3076 16A2                            l3068 1676                            l3164 3E64  
                          l3172 3F42                            l4044 13F8                            l4036 13BA  
                          l4028 1390                            l4132 197A                            l4124 193C  
                          l4302 4066                            l4310 3FE6                            l4206 38C8  
                          l3318 24E2                            l3270 234A                            l3262 230E  
                          l3254 22D4                            l3246 228A                            l3238 2266  
                          l3190 2160                            l3430 2086                            l3422 2042  
                          l3414 1FF4                            l3406 1FAC                            l3350 1DA8  
                          l3342 1D8C                            l3334 1D56                            l3326 1D2A  
                          l4222 3ABA                            l4214 3A92                            l4230 34BA  
                          l3502 33FC                            l3510 362E                            l3182 3F9C  
                          l4070 2B06                            l4062 2AA0                            l3094 1756  
                          l3086 170E                            l3078 16A4                            l3166 3E68  
                          l3174 3F5A                            l4046 1400                            l4150 1AA8  
                          l4142 1A06                            l4134 199E                            l4126 1940  
                          l4118 18F8                            l4304 403C                            l4312 4010  
                          l4208 3944                            l3280 2390                            l3272 235C  
                          l3264 231A                            l3256 22DC                            l3248 22A4  
                          l3192 216E                            l3440 20FC                            l3432 20B0  
                          l3416 2002                            l3408 1FCA                            l3360 1DFE  
                          l3352 1DB8                            l3344 1D92                            l3336 1D66  
                          l3328 1D36                            l4240 3FFC                            l4216 3A96  
                          l4224 3AC6                            l4232 34BE                            l3520 3662  
                          l3512 3636                            l4320 273E                            l3184 3FB8  
                          l4080 2BA6                            l4072 2B3A                            l4064 2ABC  
                          l4056 2A88                            l3096 1766                            l3088 1710  
                          l3600 2D66                            l3168 3F32                            l4048 1410  
                          l4160 1B20                            l4152 1AB8                            l4136 19D8  
                          l4128 1964                            l4144 1A44                            l4400 3C92  
                          l4306 4026                            l4314 4022                            l3290 23F0  
                          l3274 2372                            l3282 23A2                            l3266 2338  
                          l3258 22EC                            l3194 2170                            l3442 2118  
                          l3450 213E                            l3426 206C                            l3434 20B4  
                          l3418 2006                            l3370 1E38                            l3362 1E0E  
                          l3354 1DC8                            l3346 1D98                            l3338 1D76  
                          l4250 293A                            l4218 3AA2                            l4234 34C6  
                          l3530 369E                            l3522 366A                            l3514 363A  
                          l3506 361C                            l4330 27C0                            l4322 2758  
                          l4410 3824                            l4082 2BB8                            l4066 2AF6  
                          l4058 2A9C                            l3610 2D90                            l3602 2D6A  
                          l3178 3E8A                            l4090 3032                            l4162 1B50  
                          l4154 1AEA                            l4146 1A66                            l4138 19F8  
                          l4402 3C9A                            l4308 3FE4                            l3284 23B0  
                          l3276 2378                            l3268 233A                            l3196 2180  
                          l3188 2154                            l3452 2142                            l3444 2128  
                          l3436 20CE                            l3428 2078                            l3380 1E8A  
                          l3372 1E4E                            l3356 1DD8                            l3348 1DA6  
                          l4260 2978                            l4252 2950                            l4244 28D6  
                          l4236 352C                            l3532 36A4                            l3524 3672  
                          l3516 3648                            l3508 3620                            l4340 2842  
                          l4332 27DA                            l4324 2772                            l4500 39A2  
                          l4420 386C                            l4412 3834                            l4068 2AFE  
                          l3620 2DB8                            l3612 2D9A                            l3604 2D78  
                          l4172 1BD0                            l4156 1AFC                            l4148 1A76  
                          l4404 3CA2                            l3294 241A                            l3286 23B4  
                          l3278 2382                            l3198 2190                            l3446 2136  
                          l3438 20E2                            l3390 1ED0                            l3382 1E98  
                          l3374 1E5A                            l3366 1E22                            l3358 1DDE  
                          l4270 2A00                            l4262 29AA                            l4246 28E6  
                          l4238 352E                            l3470 3360                            l3462 3342  
                          l3526 3680                            l3534 36AA                            l3518 3650  
                          l4350 2896                            l4342 285C                            l4334 27F4  
                          l4326 278C                            l4318 2700                            l4510 39BE  
                          l4502 39A6                            l4430 38B0                            l4422 3876  
                          l4414 384A                            l4078 2B70                            l3550 37F6  
                          l3542 377A                            l3622 2DC4                            l3614 2DA4  
                          l3710 26B6                            l3702 25F6                            l4094 303E  
                          l4174 1C0E                            l4182 1C86                            l4158 1B12  
                          l4166 1B7C                            l4406 3CBE                            l3560 2E34  
                          l3296 2426                            l3288 23C2                            l3448 2138  
                          l3392 1EEA                            l3384 1EA4                            l3376 1E72  
                          l3368 1E2E                            l4280 2A56                            l4272 2A0E  
                          l4264 29AC                            l4256 2964                            l4248 28F4  
                          l3480 3394                            l3472 336E                            l3464 3346  
                          l3536 36BA                            l3528 3696                            l4360 28B2  
                          l4352 28A2                            l4344 2876                            l4336 280E  
                          l4328 27A6                            l4520 39D6                            l4512 39C2  
                          l4504 39AA                            l4424 3894                            l4416 3852  
                          l4440 3BCC                            l4432 3BC2                            l3552 381A  
                          l3544 37A8                            l3456 3E00                            l3624 2DD4  
                          l3712 26DE                            l3704 2632                            l3640 32BA  
                          l3632 327C                            l4096 304C                            l4088 3008  
                          l4184 1CAA                            l4192 1CD8                            l4176 1C42  
                          l4168 1BAA                            l4600 2C20                            l3570 2EA2  
                          l3562 2E44                            l3298 2434                            l3394 1EFA  
                          l3386 1EB4                            l3378 1E7E                            l4282 2A66  
                          l4274 2A2C                            l4266 29B8                            l4258 296C  
                          l3490 33CE                            l3482 339C                            l3474 3376  
                          l3466 3354                            l3538 36C2                            l4370 28C6  
                          l4362 28B6                            l4354 28A6                            l4346 2880  
                          l4338 2828                            l4522 39EE                            l4514 39CA  
                          l4506 39B2                            l4426 38A4                            l4418 385E  
                          l4442 3BD4                            l4434 3BC6                            l4450 30DE  
                          l3730 3D1C                            l3722 3CD2                            l3554 3820  
                          l3546 37B8                            l3458 3E10                            l3626 2DE4  
                          l3714 26EE                            l3706 2666                            l3650 3328  
                          l3642 32CE                            l3634 328C                            l4098 3064  
                          l4194 1CE6                            l4186 1CB8                            l4290 3B60  
                          l4530 3596                            l4610 2C5A                            l4602 2C20  
                          l3572 2EB0                            l3564 2E72                            l3396 1F16  
                          l3388 1EC0                            l4284 2A74                            l4276 2A2E  
                          l4268 29F4                            l4380 36E8                            l3740 3A7E  
                          l3492 33D6                            l3484 33A4                            l3476 337A  
                          l3468 335C                            l4372 28CA                            l4364 28BA  
                          l4356 28AA                            l4348 288C                            l4516 39CE  
                          l4508 39B6                            l4428 38A6                            l4444 3BD8  
                          l4436 3BC8                            l4460 3132                            l4452 30FA  
                          l3724 3CD6                            l3548 37E6                            l3580 3EC2  
                          l3628 2DF4                            l3660 2F90                            l3708 26A2  
                          l3644 32E2                            l3636 32A0                            l3900 0E44  
                          l3804 09C6                            l4188 1CCC                            l4292 3B68  
                          l4540 35E8                            l4532 35BC                            l4524 356C  
                          l4620 2C9E                            l4612 2C6E                            l4604 2C2E  
                          l4446 4052                            l3574 2F00                            l3566 2E82  
                          l3558 2E06                            l4390 3438                            l3398 1F22  
                          l4286 2A76                            l4278 2A32                            l4382 3710  
                          l3742 3A80                            l3734 3A00                            l3494 33D8  
                          l3486 33B2                            l3478 3382                            l4374 28CE  
                          l4366 28BE                            l4358 28AE                            l4518 39D2  
                          l4438 3BCA                            l4470 3182                            l4462 3146  
                          l4454 310A                            l3718 3EFA                            l3726 3CEA  
                          l3582 3ED8                            l3590 2D16                            l3662 2F9C  
                          l3654 2F0A                            l2950 31E0                            l3646 32E6  
                          l3638 32AE                            l3910 0F02                            l3902 0E78  
                          l3830 0B46                            l3822 0A7E                            l3806 09F2  
                          l3750 082A                            l4198 1CF2                            l4294 3B76  
                          l4550 360C                            l4542 35FC                            l4534 35C6  
                          l4526 3580                            l4622 2CAC                            l4614 2C72  
                          l4606 2C32                            ?_pad 0011                            l4448 4054  
                          l3576 2F06                            l3568 2E90                            l4392 346A  
                          l4384 3768                            l4376 36CC                            l3744 3A82  
                          l3736 3A0C                            l3496 33DE                            l3488 33B8  
                          l4368 28C2                            l4480 3964                            l4552 3D24  
                          l4472 3188                            l4464 314C                            l4456 3110  
                          l3728 3D18                            l3584 3EE8                            l2960 1444  
                          l3672 2FFE                            l3656 2F2A                            l2952 31FE  
                          l2944 31B2                            l3648 3314                            l3680 3DBA  
                          l3920 0FD6                            l3912 0F12                            l3904 0EAA  
                          l3840 0BA6                            l3832 0B4E                            l3824 0AB2  
                          l3808 0A10                            l3816 0A2E                            l3760 087E  
                          l3752 0834                            l4296 3B9C                            l4544 3600  
                          l4536 35D2                            l4528 358A                            l4624 2CC6  
                          l4616 2C8C                            l4608 2C40                            l4394 3476  
                          l4298 4078                            l4378 36D4                            l3746 3A84  
                          l3738 3A7C                            l3498 33E4                            l4490 3986  
                          l4482 3968                            l4554 3D3E                            l4474 319C  
                          l4466 3160                            l4458 3124                            l2970 1484  
                          l2962 1452                            l3594 2D2A                            l3658 2F68  
                          l3666 2FA8                            l3690 24EE                            l2954 3234  
                          l2946 31C4                            l3930 101E                            l3922 0FEA  
                          l3914 0F46                            l3906 0EC0                            l3842 0BB8  
                          l3826 0AB8                            l3834 0B80                            l3818 0A48  
                          l3770 08C2                            l3762 0888                            l3754 0844  
                          l4546 3604                            l4538 35DC                            l4626 2CDA  
                          l4618 2C9A                            l4570 2BF6                            l4396 34A8  
                          l4388 3406                            l3748 3A86                            l4492 398A  
                          l4484 396E                            l4556 3D4E                            l4476 31AA  
                          l4468 316E                            l2980 14B6                            l2972 1486  
                          l2964 1454                            l3596 2D54                            l3588 2D00  
                          l3668 2FBA                            l3692 250E                            l2948 31D6  
                          l3676 3C24                            l3684 3DBA                            l3940 10DA  
                          l3932 1042                            l3916 0F9C                            l3924 0FEE  
                          l3908 0EF2                            l3860 0C68                            l3844 0BC0  
                          l3836 0B90                            l3828 0B12                            l3772 08CE  
                          l3780 08E4                            l3764 0890                            l3756 0852  
                          l4548 3608                            l4628 2CDE                            l4580 2C02  
                          l4572 2BFA                            l4494 3992                            l4486 3978  
                          l4558 3D52                            l4478 409C                            l4670 2B24  
                          l2990 14DE                            l2982 14B8                            l2966 1464  
                          l2974 148E                            l2958 1438                            l3598 2D56  
                          l3694 2564                            l3678 3C34                            l3686 3DE8  
                          l3950 1120                            l3942 10E8                            l3934 10A6  
                          l3926 0FFE                            l3918 0FA2                            l3870 0CA0  
                          l3862 0C70                            l3854 0C04                            l3846 0BDA  
                          l3838 0B94                            l3790 0954                            l3774 08D6  
                          l3766 08A2                            l3758 085A                            l4398 3C80  
                          l4590 2C14                            l4582 2C06                            l4574 2BFC  
                          l4672 3ADA                            l4496 3996                            l4488 397E  
                          l2992 14EE                            l2984 14BE                            l2976 149E  
                          l2968 1474                            l3696 2578                            l3960 114A  
                          l3952 1124                            l3936 10B6                            l3944 10F0  
                          l3928 1012                            l3880 0CEA                            l3872 0CAE  
                          l3856 0C16                            l3864 0C74                            l3848 0BF2  
                          l3792 096E                            l3776 08DA                            l3768 08B0  
                          l4592 2C16                            l4584 2C0E                            l4576 2BFE  
                          l4568 2BDE               ?_LCD_Write_Nibble 0001                            l4498 399E  
                          l2994 14FE                            l2986 14CC                            l2978 14A4  
                          l3698 2586                            l3970 117E                            l3962 1150  
                          l3954 112A                            l3946 1102                            l3938 10C8  
                          l3890 0D30                            l3882 0CFC                            l3874 0CB2  
                          l3866 0C7C                            l3858 0C32                            l3794 0978  
                          l3786 090A                            l3778 08DE                            l4594 2C18  
                          l4586 2C10                            l4578 2C00                            l2996 1500  
                          l2988 14CE                            l3956 1136                            l3948 1110  
                          l3964 1156                            l3972 1184                            l3980 121C  
                          l3892 0D94                            l3876 0CC4                            l3884 0D04  
                          l3868 0C8E                            l3788 0936                            l4596 2C1A  
                          l4588 2C12                            l2998 1508                            l3990 1286  
                          l3982 123A                            l3974 11DC                            l3966 1168  
                          l3958 1146                            l3894 0DEC                            l3886 0D0C  
                          l3878 0CD2                            l3798 09A0                            l4598 2C1C  
                          l3992 128A                            l3984 1256                            l3976 1210  
                          l3968 117A                            l3896 0E20                            l3888 0D1C  
                          l3994 129A                            l3986 1268                            l3978 1218  
                          l3898 0E26                            l3996 12AC                            l3988 1276  
                          l3998 12B4                            _ADON 007E10                            STR_1 0801  
                          STR_2 080E                            STR_3 0826                            STR_4 0813  
                          STR_5 081B                            STR_8 0817                            STR_9 081F  
                          u3000 3F5A                            u3001 3F56                            u3010 3EBA  
                          u3011 3EB4                            u3100 2276                            u3020 3EBC  
                          u3101 2272                            u3110 22EC                            u3030 216E  
                          u3111 22E8                            u3031 216A                            u3200 2406  
                          u3120 230E                            u3040 2180                            u4000 3D18  
                          u3201 2402                            u3121 230A                            u3041 217C  
                          u4001 3D14                            u3210 241A                            u3130 2338  
                          u3050 2190                            u3211 2416                            u3131 2334  
                          u3051 218C                            u3220 2434                            u3140 235C  
                          u3060 21D4                            u3300 1DB8                            u4100 0A7A  
                          u4020 0852                            u3221 2430                            u3141 2358  
                          u3061 21D0                            u3301 1DB4                            u4101 0A76  
                          u4021 084E                            u3230 247C                            u3150 2372  
                          u3070 21E6                            u3310 1DC8                            u4110 0B0E  
                          u4030 08A2                            u3231 2478                            u3151 236E  
                          u3071 21E2                            u3311 1DC4                            u4015 3A0A  
                          u4111 0B0A                            u4031 089E                            u5000 3438  
                          u3240 24AC                            u3160 2390                            u3080 21F6  
                          u3400 206C                            u3320 1DFE                            u2600 1452  
                          u4200 0C8E                            u4120 0B80                            u4040 08B0  
                          u5001 3434                            u3241 24A8                            u3161 238C  
                          u3081 21F2                            u3401 2068                            u3321 1DFA  
                          u4017 3A0C                            u2601 144E                            u4201 0C8A  
                          u4121 0B7C                            u4041 08AC                            u5010 346A  
                          u3250 24DA                            u3170 23B0                            u3090 2236  
                          u3410 2086                            u3330 1E0E                            u2610 1464  
                          u4210 0CA0                            u4130 0BA6                            u4050 08C2  
                          u5011 3466                            u3251 24D6                            u3171 23AC  
                          u3091 2232                            u3411 2082                            u3331 1E0A  
                          u2611 1460                            u4211 0C9C                            u4131 0BA2  
                          u4051 08BE                            u5020 34A8                            u3180 23C2  
                          u3420 20CE                            u3340 1F88                            u3260 1D44  
                          u3500 33F4                            u2700 15BE                            u2620 1474  
                          u4300 0F9C                            u4220 0CAE                            u4140 0BB8  
                          u4060 090A                            u5100 2CC6                            u5021 34A4  
                          u3181 23BE                            u3421 20CA                            u3261 1D40  
                          u3501 33F0                            u2701 15B8                            u2621 1470  
                          u4301 0F98                            u4221 0CAA                            u4141 0BB4  
                          u4061 0906                            u5101 2CC2                            u3190 23F0  
                          u3430 20FC                            u3350 1FE2                            u3270 1D56  
                          u3510 362E                            u5030 384A                            u2710 15C0  
                          u2630 14B6                            u4310 0FEA                            u4230 0CC4  
                          u4150 0BDA                            u4070 0936                            u3191 23EC  
                          u3431 20F8                            u3351 1FDE                            u3271 1D52  
                          u3511 362A                            u5031 3846                            u2631 14B2  
                          u4311 0FE6                            u4231 0CC0                            u4151 0BD6  
                          u4071 0932                            u3600 2E34                            u3440 2136  
                          u3360 2002                            u3280 1D66                            u3520 3648  
                          u5040 386C                            u2800 16DA                            u2720 15E8  
                          u2640 14CC                            u2560 31C4                            u4400 123A  
                          u4320 1012                            u4240 0CD2                            u4160 0C00  
                          u4080 09C6                            u3601 2E30                            u3441 2132  
                          u3361 1FFE                            u3345 1F7E                            u3281 1D62  
                          u3521 3644                            u5041 3868                            u2801 16D6  
                          u2721 15E4                            u2641 14C8                            u2561 31C0  
                          u4401 1236                            u4321 100E                            u4241 0CCE  
                          u4161 0BFC                            u4081 09C2                            u3610 2E72  
                          u3370 2014                            u3290 1DA6                            u3450 3354  
                          u3530 3662                            u5050 3894                            u2810 1720  
                          u2730 1606                            u2650 14DE                            u2570 31D6  
                          u4410 1256                            u4330 10B6                            u4250 0CFC  
                          u4170 0C16                            u4090 09F2                            u3611 2E6E  
                          u3371 2010                            u3291 1DA2                            u3451 3350  
                          u3531 365E                            u5051 3890                            u2811 171C  
                          u2731 1602                            u2651 14DA                            u2571 31D2  
                          u4411 1252                            u4331 10B2                            u4251 0CF8  
                          u4171 0C12                            u4091 09EE                            u3620 2E90  
                          u3380 2042                            u3460 336E                            u3540 3680  
                          u4500 2ABC                            u2900 180C                            u2820 1756  
                          u2740 1626                            u2660 14EE                            u3700 2DB4  
                          u2580 31FE                            u4420 1268                            u4340 10C8  
                          u4260 0E44                            u4180 0C32                            u3621 2E8C  
                          u3381 203E                            u3461 336A                            u3541 367C  
                          u4501 2AB8                            u2901 1808                            u2821 1752  
                          u2741 1622                            u2661 14EA                            u3701 2DB0  
                          u2581 31FA                            u4421 1264                            u4341 10C4  
                          u4261 0E40                            u4181 0C2E                            u5117 2C7E  
                          u3630 2EB0                            u3390 2058                            u3470 3394  
                          u3550 3696                            u5070 3D3E                            u4510 2AF2  
                          u2910 1820                            u2830 1766                            u2750 1634  
                          u2670 152A                            u3710 2DD4                            u2590 3234  
                          u4430 1276                            u4350 10DA                            u4270 0EAA  
                          u4190 0C68                            u3631 2EAC                            u3391 2054  
                          u3471 3390                            u3551 3692                            u5071 3D3A  
                          u5207 317A                            u4511 2AEE                            u2911 181C  
                          u2831 1762                            u2751 1630                            u2671 1526  
                          u3711 2DD0                            u2591 3230                            u4431 1272  
                          u4351 10D6                            u4271 0EA6                            u4191 0C64  
                          u5127 2CEA                            u3640 2F00                            u4600 3DA8  
                          u3480 33B2                            u3560 36BA                            u5080 3D70  
                          u4520 2BA6                            u2920 183A                            u2840 1792  
                          u2760 1644                            u2680 1538                            u3720 2DE4  
                          u3800 2FBA                            u4440 12AC                            u4360 10E8  
                          u4280 0EF2                            u3641 2EFC                            u4601 3DA4  
                          u3481 33AE                            u3561 36B6                            u5065 3BFA  
                          u5081 3D6C                            u5217 318E                            u4521 2BA2  
                          u2921 1836                            u2841 178E                            u2761 1640  
                          u2681 1534                            u3721 2DE0                            u3801 2FB6  
                          u4441 12A8                            u4361 10E4                            u4281 0EEE  
                          u5137 3612                            u3490 33CE                            u4530 2BB8  
                          u3570 37A8                            u3650 3ED8                            u2930 1874  
                          u2850 17A2                            u2770 1676                            u2690 15A6  
                          u3730 328C                            u4450 12DA                            u4370 1102  
                          u4290 0F02                            u4610 191C                            u5090 2C5A  
                          u3491 33CA                            u5227 31A2                            u5147 3100  
                          u4531 2BB4                            u3571 37A4                            u3651 3ED4  
                          u2931 1870                            u2851 179E                            u2771 1672  
                          u2691 15A2                            u3731 3288                            u4451 12D6  
                          u4371 10FE                            u4291 0EFE                            u4611 1918  
                          u5091 2C56                            u3580 37E6                            u2940 1886  
                          u2860 17BE                            u2780 1684                            u3660 2D16  
                          u3820 2FF4                            u3740 32AE                            u4460 135E  
                          u4380 1110                            u4540 3032                            u4700 1CAA  
                          u4620 1964                            u5237 39F4                            u5157 3116  
                          u3581 37E2                            u2941 1882                            u2861 17BA  
                          u2781 1680                            u3661 2D12                            u3821 2FEE  
                          u3741 32AA                            u4461 135A                            u4381 110C  
                          u4541 302E                            u4701 1CA6                            u4621 1960  
                          u4710 38F2                            u3590 381A                            u2950 1896  
                          u2870 17CE                            u2790 16A2                            u3670 2D4A  
                          u3830 2FF6                            u3910 25F2                            u3750 3304  
                          u4470 1378                            u4390 1168                            u4550 3064  
                          u4630 199E                            u4711 38EA                            u5247 3DAE  
                          u5167 312A                            u3591 3816                            u2951 1892  
                          u2871 17CA                            u2791 169E                            u3815 2FCC  
                          u3911 25EE                            u3751 3300                            u4471 1374  
                          u4391 1164                            u4551 3060                            u4631 199A  
                          u4800 355A                            u2960 18B6                            u2880 17E0  
                          u3680 2D78                            u3920 2616                            u3760 3314  
                          u3840 3C6C                            u4480 1390                            u4560 3080  
                          u4640 1A44                            u5257 3A88                            u5177 313E  
                          u2961 18B2                            u2881 17DC                            u3681 2D74  
                          u3905 259A                            u3761 3310                            u4481 138C  
                          u4561 307C                            u4641 1A40                            u4810 356A  
                          u2970 18C8                            u2890 17F6                            u3690 2D8C  
                          u3770 2F4A                            u3930 2632                            u3906 25A4  
                          u3850 3C7E                            u4490 13EC                            u4570 3092  
                          u4650 1A76                            u4811 3566                            u5187 3152  
                          u2971 18C4                            u2891 17F2                            u3691 2D88  
                          u3675 2D40                            u3931 262E                            u3907 25B4  
                          u3851 3C7A                            u4491 13E8                            u4571 308E  
                          u4651 1A72                            u4740 391A                            u4900 2A66  
                          u4820 28E6                            u2980 18E4                            u3780 2F68  
                          u3940 2686                            u3860 3DE8                            u4580 30BA  
                          u4660 1AB8                            u4741 3912                            u4901 2A62  
                          u4821 28E2                            u5197 3166                            u2981 18E0  
                          u3781 2F64                            u3925 260C                            u3861 3DE4  
                          u4581 30B6                            u4661 1AB4                            u4734 3902  
                          u4910 2A74                            u4830 28F4                            u4590 3D96  
                          u3790 2F90                            u3950 26A2                            u3870 2536  
                          u2990 3E88                            u4670 1AFC                            u4735 38FE  
                          u4911 2A70                            u4831 28F0                            u4591 3D92  
                          u4807 3550                            u3791 2F8C                            u3775 2F40  
                          u3951 269E                            u2991 3E84                            u3847 3C62  
                          u4671 1AF8                            u4728 38F4                            u4840 2950  
                          u3960 26DE                            u3880 2564                            u4680 1BAA  
                          u4920 3BB8                            u4841 294C                            u3961 26DA  
                          u3945 267C                            u3881 2560                            u4681 1BA6  
                          u4921 3BB4                            u4930 4088                            u4770 3944  
                          u4850 29A6                            u3970 3F2A                            u3890 2586  
                          u4690 1C0E                            u4931 4084                            u4771 3940  
                          u4851 29A2                            u3971 3F24                            u3891 2582  
                          u3875 252C                            u4691 1C0A                            u4940 409A  
                          u4764 392A                            u4860 29F0                            u4780 34F2  
                          u3980 3F2C                            u4941 4096                            u4765 3926  
                          u4861 29EC                            u4950 4076                            u4758 391C  
                          u4870 2A0E                            u4790 3528                            u3990 3CEA  
                          u4951 4072                            u4871 2A0A                            u3991 3CE6  
                          u4960 4050                            u4880 2A1E                            u4961 404C  
                          u4881 2A1A                            u4970 403A                            u4890 2A2C  
                          u4971 4036                            u4891 2A28                            u4787 34E8  
                          u4980 3FF8                            u4981 3FF4                            u4797 351E  
                          u4990 4022                            u4991 401E              ??_LCD_Write_Nibble 0001  
                          _dbuf 0100                            _atoi 2A88                            _main 2BDE  
                          _prec 00E9                __end_of_I2C_Init 3C24                __end_of_I2C_Read 4026  
                          _nout 00E5                            _year 00F0                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9            ?_Obtener_Temperatura 0033  
              __end_of_I2C_Stop 4078                __end_of_ADC_Init 4066                __end_of_ADC_Read 3964  
                 ___fpclassifyf 2F0A                            prodh 000FF4                            prodl 000FF3  
                          start 0000                 ___fldiv@new_exp 002B                     LCD_Goto@col 0008  
                   LCD_Goto@row 0005                    ___param_bank 000000                           ??_pad 0017  
              __end_of_LCD_Goto 3AFA                   ___fltol@sign1 0009                           ?_atoi 0008  
               __end_of___fladd 18F8                           ?_main 0001                 __end_of___fldiv 24EE  
               __end_of___awdiv 3406                 __end_of___flneg 3EFA                           STR_12 0823  
                         STR_14 0823                 __end_of___awmod 36CC                 __end_of___flmul 2154  
               __end_of___flsub 3E46                 __end_of___fltol 2E06                Encender_Act@temp 003D  
               __end_of___lldiv 38C8                 ___awdiv@divisor 0003                 ___awdiv@counter 0005  
                  vfpfcnvrt@fmt 0055                           _SPBRG 000FAF                           _TRISA 000F92  
                         _TRISB 000F93                           _TXREG 000FAD                           _flags 00EB  
          __end_of_Encender_Act 34BA                           _fputc 31B2                           _fputs 3E46  
               __end_of_isdigit 3F32                           _hours 00F3             _Mostrar_Temperatura 356C  
                         _month 00EF                           atoi@n 0010                           pad@fp 0011  
                         atoi@s 0008                           _width 00E7                           _putch 40A4  
               __end_of_isspace 3D24               __end_of_I2C_Start 408A               __end_of_I2C_Write 3FFA  
               __end_of_isupper 3EC2                           tablat 000FF5                           status 000FD8  
         ??_Obtener_Temperatura 0037                 __end_of_sprintf 3CD2                  ?___fpclassifyf 0001  
               __end_of_tolower 3E00                 __end_of_strncmp 30DE         __end_of_Imprimir_Cadena 3D72  
               __initialization 3AFA            Reloj_Calendario@Date 00BD            Reloj_Calendario@Time 00CE  
                  __end_of_atoi 2BDE                    __end_of_main 2D00            ?_Mostrar_Temperatura 0001  
                     ??_I2C_Ack 0001                          ??_atoi 000A                          ??_main 00B9  
             __end_of_LCD_Begin 31B2               __end_of_LCD_Clear 40A4                   __activetblptr 000002  
                     ??_LCD_Cmd 0003               __end_of_LCD_Print 356C                    ??_I2C_NO_Ack 0001  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        ?_fputc 0001                          ?_fputs 000A                          _ADRESH 000FC4  
                        _ADRESL 000FC3                ___awdiv@dividend 0001                          ?_putch 0001  
                        _SSPADD 000FC8                          _SSPBUF 000FC9                __end_of___xxtofl 2A88  
              Imprimir_Cadena@a 0001                Imprimir_Cadena@b 0003                Imprimir_Cadena@i 0006  
                  vfprintf@cfmt 005D                          ___flge 2E06                          ___fleq 377A  
         ??_Mostrar_Temperatura 005F                       ??___fladd 0009                          ___wmul 3F9C  
                     ??___fldiv 0022                       ??___awdiv 0005              __end_of_I2C_NO_Ack 403C  
                     ??___flneg 0005                       ??___awmod 0005                       ??___flmul 0009  
                     ??___flsub 0022                       ??___fltol 0005                       ??___lldiv 0009  
                        _efgtoa 082A                 ADC_Read@channel 0001                          _floorf 24EE  
               ADC_Read@digital 0007                          clear_0 3B40                          clear_1 3B50  
              ___awdiv@quotient 0007                 ___awmod@divisor 0003                          isa$std 000001  
               ___awmod@counter 0005                          pad@buf 0013                          _strcpy 3C24  
                        _strlen 3F32                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                       ??_isdigit 0003  
                     ?_I2C_Init 000E                       ?_I2C_Read 0001                       ?_I2C_Stop 0001  
               ___fpclassifyf@e 0009                       ?_ADC_Init 0001                 ___fpclassifyf@u 000B  
                     ?_ADC_Read 0001                 ___fpclassifyf@x 0001                    __mediumconst 0000  
                     ??_isspace 0003                          tblptrh 000FF7                       ??_isupper 0003  
                        tblptrl 000FF6                          tblptru 000FF8                          putch@c 0001  
              __end_of_vfprintf 3BC2                       ??_sprintf 005F                       ??_tolower 0009  
                     ??_strncmp 0007                      ___flge@ff1 001A                      ___flge@ff2 001E  
               ??___fpclassifyf 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                      ___fleq@ff1 0001                      ___fleq@ff2 0005  
                    __accesstop 0060         __end_of__initialization 3B56                       ?_LCD_Goto 0005  
                    ___flneg@f1 0001                   ___rparam_used 000001                      ___fltol@f1 0001  
              ?_Imprimir_Cadena 0001                  __pcstackCOMRAM 0001                    __pidataBANK0 3FC2  
                  __pidataBANK1 3F68                   __end_of_fputc 327C                   __end_of_fputs 3E8A  
                LCD_Cmd@Command 0004                   __end_of_putch 40A6                 _Establecer_Hora 3964  
            I2C_Init@frecuencia 000E                      ??_I2C_Init 0012                      ??_I2C_Read 0001  
                    ??_I2C_Stop 0001                      ??_ADC_Init 0001                      ??_ADC_Read 0003  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00DD                      __pbssBANK1 0100         Obtener_Temperatura@temp 0039  
                    ??_LCD_Goto 0006                         ?___flge 001A                         ?___fleq 0001  
                       ?___wmul 0001                    _Encender_Act 3406                         ?_efgtoa 0047  
                       ?_floorf 0033                         _I2C_Ack 403C                   _BCD_a_Decimal 3FFA  
                 ??_I2C_ReStart 0001                         ?_strcpy 0001                         ?_strlen 0001  
                       _LCD_Cmd 3D72                       ?___xxtofl 0001                         _SSPCON2 000FC5  
                     _I2C_Start 4078                       _I2C_Write 3FE2                         __Hparam 0000  
                       __Lparam 0000         __end_of_Establecer_Hora 39FE                         ___fladd 1438  
                       ___fldiv 2154                         ___awdiv 3342                         ___flneg 3EC2  
                       ___awmod 361C                         ___flmul 1D2A                         ___flsub 3E00  
                       ___fltol 2D00                         ___lldiv 3824                       ?_vfprintf 009A  
                ?_BCD_a_Decimal 0001                    __psmallconst 0800                         __pcinit 3AFA  
                       __ramtop 0800                         __ptext0 2BDE                         __ptext1 356C  
                       __ptext2 3C80                         __ptext3 3B60                         __ptext4 18F8  
                       __ptext5 3008                         __ptext6 082A                         __ptext7 3DBA  
                       __ptext8 3E8A                         __ptext9 3C24                         _isdigit 3EFA  
                    ??___xxtofl 0005                ___awmod@dividend 0001                         _minutes 00F2  
                       _seconds 00F1                         _isspace 3CD2                         _isupper 3E8A  
           __end_of_I2C_ReStart 409C                         efgtoa@c 004D                         efgtoa@d 0072  
                       efgtoa@e 008A                         efgtoa@f 0049                         efgtoa@g 0086  
                       efgtoa@h 007C                         efgtoa@i 0084                         efgtoa@l 0080  
                       efgtoa@m 006C                         efgtoa@n 008C                         efgtoa@p 0076  
                       efgtoa@t 0066                         efgtoa@u 008E                         efgtoa@w 0078  
                     _LCD_Begin 30DE                       _LCD_Clear 409C                         atoi@neg 000E  
   __end_of_Obtener_Temperatura 377A                       _LCD_Print 34BA                         _sprintf 3C80  
                       _tolower 3DBA                         _strncmp 3008            end_of_initialization 3B56  
                       floorf@e 0041                         floorf@m 003D                         floorf@u 0043  
                       floorf@x 0033                         fputc@fp 0003                   __Lmediumconst 0000  
                       fputs@fp 000C                _Reloj_Calendario 2700                      ?_I2C_Start 0001  
                    ?_I2C_Write 0001                 ___lldiv@divisor 0005                 ___lldiv@counter 000D  
             __end_of_vfpfcnvrt 1D2A                      efgtoa@mode 007B                      efgtoa@sign 0074  
                     _RCSTAbits 000FAB                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_vfprintf 005D               LCD_Write_Nibble@n 0002                         strcpy@d 0009  
                       strlen@a 0003                         strcpy@s 0007                         strlen@s 0001  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISBbits 000F93  
                     _TRISCbits 000F94                       _TRISDbits 000F95                      ?_LCD_Begin 0001  
                    ?_LCD_Clear 0001                     ___fldiv@grs 002D                     ___fldiv@rem 0026  
                    ?_LCD_Print 0003                     ___flmul@grs 000E     __end_of_Mostrar_Temperatura 361C  
                     _TXSTAbits 000FAC                 ??_BCD_a_Decimal 0001                ?_Establecer_Hora 0001  
              _LCD_Write_Nibble 39FE                      LCD_Print@i 0008                  __end_of___flge 2F0A  
                __end_of___fleq 3824                     vfpfcnvrt@ap 0057                     vfpfcnvrt@ct 0096  
                   vfpfcnvrt@fp 0053                  __end_of___wmul 3FC2                     _BAUDCONbits 000FB8  
                __end_of_efgtoa 1438                     _I2C_ReStart 408A                  __end_of_floorf 2700  
                 __pbitbssBANK0 07C0                      floorf@F526 00DD                  __end_of_strcpy 3C80  
                __end_of_strlen 3F68             start_initialization 3AFA                     __end_of_pad 3342  
         __end_of___fpclassifyf 3008                     ??_I2C_Start 0001                     ??_I2C_Write 0001  
                   vfprintf@fmt 009C                        ??___flge 0022                        ??___fleq 0009  
                      ??___wmul 0005    Obtener_Temperatura@value_adc 0037                        ??_efgtoa 004E  
                   __pdataBANK0 00BD                     __pdataBANK1 0150                        ??_floorf 0037  
                      ?_I2C_Ack 0001                        ??_strcpy 0005                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LCD_Cmd 0001  
                     ___fldiv@a 001E                       ___fldiv@b 001A                       ___flmul@a 0005  
                     ___flmul@b 0001                       ___flsub@a 001E                       ___flsub@b 001A  
                 __pcstackBANK0 0060                     ??_LCD_Begin 0005                     ??_LCD_Clear 0005  
                   ??_LCD_Print 0005                     _efgtoa$1494 0062                     _efgtoa$1486 0060  
                   _efgtoa$1495 0064                        ?___fladd 0001                        ?___fldiv 001A  
                      ?___awdiv 0001                        ?___flneg 0001                        ?___awmod 0001  
                      ?___flmul 0001                        ?___flsub 001A                        ?___fltol 0001  
                      ?___lldiv 0001                LCD_Print@LCD_Str 0003                       _buffer_TX 0150  
      __end_of_Reloj_Calendario 28D4                     __smallconst 0800                        ?_isdigit 0001  
                      _I2C_Init 3BC2                        _I2C_Read 4010                        _I2C_Stop 4066  
                      _ADC_Init 4052                        _ADC_Read 38C8                        ?_isspace 0001  
                      ?_isupper 0001                        ?_sprintf 00A0                        ?_tolower 0007  
                      ?_strncmp 0001                        _LCD_Goto 3A90                  ___wmul@product 0005  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _PIR1bits 000F9E  
                     _vfpfcnvrt 18F8                      _ADCON0bits 000FC2               ___wmul@multiplier 0001  
             ??_Imprimir_Cadena 0005                      _I2C_NO_Ack 4026                    _isspace$1573 0007  
                    vfpfcnvrt@c 0099                      vfpfcnvrt@f 0092        __end_of_LCD_Write_Nibble 3A90  
                     copy_data0 3B0E                       copy_data1 3B2E  Mostrar_Temperatura@temperatura 00F4  
                      __Hrparam 0000                      vfprintf@ap 009E                        __Lrparam 0000  
                    vfprintf@fp 009A                   I2C_Write@data 0001             BCD_a_Decimal@numero 0002  
                    ?_vfpfcnvrt 0053                    ?_I2C_ReStart 0001              ___fpclassifyf@F465 00E1  
                    sprintf@fmt 00A2                        ___xxtofl 28D4                        __ptext10 327C  
                      __ptext11 3F32                        __ptext20 3EC2                        __ptext12 3E46  
                      __ptext21 377A                        __ptext13 31B2                        __ptext30 3824  
                      __ptext22 2A88                        __ptext14 40A4                        __ptext31 3964  
                      __ptext23 3CD2                        __ptext15 24EE                        __ptext40 36CC  
                      __ptext32 2700                        __ptext24 3EFA                        __ptext16 2F0A  
                      __ptext41 28D4                        __ptext33 361C                        __ptext25 3F9C  
                      __ptext17 2D00                        __ptext50 4026                        __ptext42 1D2A  
                      __ptext34 3342                        __ptext26 409C                        __ptext18 3E00  
                      __ptext51 403C                        __ptext43 2154                        __ptext35 34BA  
                      __ptext27 30DE                        __ptext19 1438                        __ptext52 3406  
                      __ptext44 38C8                        __ptext36 3A90                        __ptext28 3D24  
                      __ptext53 2E06                        __ptext45 3FE2                        __ptext37 3D72  
                      __ptext29 3BC2                        __ptext54 4052                        __ptext46 4066  
                      __ptext38 39FE                        __ptext47 4078                        __ptext39 3FFA  
                      __ptext48 4010                        __ptext49 408A                      strcpy@dest 0001  
                      efgtoa@fp 0047                        efgtoa@ne 006A                        efgtoa@pp 0068  
                      efgtoa@ou 006E                        isa$xinst 000000                   ?_Encender_Act 003D  
         __end_of_BCD_a_Decimal 4010                        _vfprintf 3B60                        main@cont 00BB  
                   ?_I2C_NO_Ack 0001                        isdigit@c 0001                       sprintf@ap 00A8  
                      isspace@c 0001                ___lldiv@dividend 0001                       strcpy@src 0003  
                      isupper@c 0001                       strncmp@_l 0001                       strncmp@_r 0003  
                    _OSCCONbits 000FD3                  ??_Encender_Act 0041                     efgtoa@nmode 007A  
                   ??_vfpfcnvrt 0059                        sprintf@f 00AA                        tolower@c 0007  
                      sprintf@s 00A0               ?_Reloj_Calendario 0001                ___lldiv@quotient 0009  
                      strncmp@l 0008                        strncmp@n 0005                        strncmp@r 000A  
            ??_Reloj_Calendario 0009                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                 ___fladd@signs 000D                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
